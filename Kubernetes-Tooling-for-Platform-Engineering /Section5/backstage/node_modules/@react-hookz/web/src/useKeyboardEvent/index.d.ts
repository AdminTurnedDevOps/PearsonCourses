import { type DependencyList, type RefObject } from 'react';
export type KeyboardEventPredicate = (event: KeyboardEvent) => boolean;
export type KeyboardEventFilter = null | string | boolean | KeyboardEventPredicate;
export type KeyboardEventHandler<T extends EventTarget> = (this: T, event: KeyboardEvent) => void;
export type UseKeyboardEventOptions<T extends EventTarget> = {
    event?: 'keydown' | 'keypress' | 'keyup';
    target?: RefObject<T> | T | null;
    eventOptions?: boolean | AddEventListenerOptions;
};
export declare function useKeyboardEvent<T extends EventTarget>(keyOrPredicate: KeyboardEventFilter, callback: KeyboardEventHandler<T>, deps?: DependencyList, options?: UseKeyboardEventOptions<T>): void;
