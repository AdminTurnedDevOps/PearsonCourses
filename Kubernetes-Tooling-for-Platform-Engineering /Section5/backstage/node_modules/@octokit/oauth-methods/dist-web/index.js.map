{
  "version": 3,
  "sources": ["../dist-src/version.js", "../dist-src/get-web-flow-authorization-url.js", "../dist-src/utils.js", "../dist-src/exchange-web-flow-code.js", "../dist-src/create-device-code.js", "../dist-src/exchange-device-code.js", "../dist-src/check-token.js", "../dist-src/refresh-token.js", "../dist-src/scope-token.js", "../dist-src/reset-token.js", "../dist-src/delete-token.js", "../dist-src/delete-authorization.js"],
  "sourcesContent": ["const VERSION = \"2.0.6\";\nexport {\n  VERSION\n};\n", "import { oauthAuthorizationUrl } from \"@octokit/oauth-authorization-url\";\nimport { request as defaultRequest } from \"@octokit/request\";\nimport { requestToOAuthBaseUrl } from \"./utils\";\nfunction getWebFlowAuthorizationUrl({\n  request = defaultRequest,\n  ...options\n}) {\n  const baseUrl = requestToOAuthBaseUrl(request);\n  return oauthAuthorizationUrl({\n    ...options,\n    baseUrl\n  });\n}\nexport {\n  getWebFlowAuthorizationUrl\n};\n", "import { RequestError } from \"@octokit/request-error\";\nfunction requestToOAuthBaseUrl(request) {\n  const endpointDefaults = request.endpoint.DEFAULTS;\n  return /^https:\\/\\/(api\\.)?github\\.com$/.test(endpointDefaults.baseUrl) ? \"https://github.com\" : endpointDefaults.baseUrl.replace(\"/api/v3\", \"\");\n}\nasync function oauthRequest(request, route, parameters) {\n  const withOAuthParameters = {\n    baseUrl: requestToOAuthBaseUrl(request),\n    headers: {\n      accept: \"application/json\"\n    },\n    ...parameters\n  };\n  const response = await request(route, withOAuthParameters);\n  if (\"error\" in response.data) {\n    const error = new RequestError(\n      `${response.data.error_description} (${response.data.error}, ${response.data.error_uri})`,\n      400,\n      {\n        request: request.endpoint.merge(\n          route,\n          withOAuthParameters\n        ),\n        headers: response.headers\n      }\n    );\n    error.response = response;\n    throw error;\n  }\n  return response;\n}\nexport {\n  oauthRequest,\n  requestToOAuthBaseUrl\n};\n", "import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nasync function exchangeWebFlowCode(options) {\n  const request = options.request || /* istanbul ignore next: we always pass a custom request in tests */\n  defaultRequest;\n  const response = await oauthRequest(\n    request,\n    \"POST /login/oauth/access_token\",\n    {\n      client_id: options.clientId,\n      client_secret: options.clientSecret,\n      code: options.code,\n      redirect_uri: options.redirectUrl\n    }\n  );\n  const authentication = {\n    clientType: options.clientType,\n    clientId: options.clientId,\n    clientSecret: options.clientSecret,\n    token: response.data.access_token,\n    scopes: response.data.scope.split(/\\s+/).filter(Boolean)\n  };\n  if (options.clientType === \"github-app\") {\n    if (\"refresh_token\" in response.data) {\n      const apiTimeInMs = new Date(response.headers.date).getTime();\n      authentication.refreshToken = response.data.refresh_token, authentication.expiresAt = toTimestamp(\n        apiTimeInMs,\n        response.data.expires_in\n      ), authentication.refreshTokenExpiresAt = toTimestamp(\n        apiTimeInMs,\n        response.data.refresh_token_expires_in\n      );\n    }\n    delete authentication.scopes;\n  }\n  return { ...response, authentication };\n}\nfunction toTimestamp(apiTimeInMs, expirationInSeconds) {\n  return new Date(apiTimeInMs + expirationInSeconds * 1e3).toISOString();\n}\nexport {\n  exchangeWebFlowCode\n};\n", "import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nasync function createDeviceCode(options) {\n  const request = options.request || /* istanbul ignore next: we always pass a custom request in tests */\n  defaultRequest;\n  const parameters = {\n    client_id: options.clientId\n  };\n  if (\"scopes\" in options && Array.isArray(options.scopes)) {\n    parameters.scope = options.scopes.join(\" \");\n  }\n  return oauthRequest(request, \"POST /login/device/code\", parameters);\n}\nexport {\n  createDeviceCode\n};\n", "import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nasync function exchangeDeviceCode(options) {\n  const request = options.request || /* istanbul ignore next: we always pass a custom request in tests */\n  defaultRequest;\n  const response = await oauthRequest(\n    request,\n    \"POST /login/oauth/access_token\",\n    {\n      client_id: options.clientId,\n      device_code: options.code,\n      grant_type: \"urn:ietf:params:oauth:grant-type:device_code\"\n    }\n  );\n  const authentication = {\n    clientType: options.clientType,\n    clientId: options.clientId,\n    token: response.data.access_token,\n    scopes: response.data.scope.split(/\\s+/).filter(Boolean)\n  };\n  if (\"clientSecret\" in options) {\n    authentication.clientSecret = options.clientSecret;\n  }\n  if (options.clientType === \"github-app\") {\n    if (\"refresh_token\" in response.data) {\n      const apiTimeInMs = new Date(response.headers.date).getTime();\n      authentication.refreshToken = response.data.refresh_token, authentication.expiresAt = toTimestamp(\n        apiTimeInMs,\n        response.data.expires_in\n      ), authentication.refreshTokenExpiresAt = toTimestamp(\n        apiTimeInMs,\n        response.data.refresh_token_expires_in\n      );\n    }\n    delete authentication.scopes;\n  }\n  return { ...response, authentication };\n}\nfunction toTimestamp(apiTimeInMs, expirationInSeconds) {\n  return new Date(apiTimeInMs + expirationInSeconds * 1e3).toISOString();\n}\nexport {\n  exchangeDeviceCode\n};\n", "import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nasync function checkToken(options) {\n  const request = options.request || /* istanbul ignore next: we always pass a custom request in tests */\n  defaultRequest;\n  const response = await request(\"POST /applications/{client_id}/token\", {\n    headers: {\n      authorization: `basic ${btoa(\n        `${options.clientId}:${options.clientSecret}`\n      )}`\n    },\n    client_id: options.clientId,\n    access_token: options.token\n  });\n  const authentication = {\n    clientType: options.clientType,\n    clientId: options.clientId,\n    clientSecret: options.clientSecret,\n    token: options.token,\n    scopes: response.data.scopes\n  };\n  if (response.data.expires_at)\n    authentication.expiresAt = response.data.expires_at;\n  if (options.clientType === \"github-app\") {\n    delete authentication.scopes;\n  }\n  return { ...response, authentication };\n}\nexport {\n  checkToken\n};\n", "import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nasync function refreshToken(options) {\n  const request = options.request || /* istanbul ignore next: we always pass a custom request in tests */\n  defaultRequest;\n  const response = await oauthRequest(\n    request,\n    \"POST /login/oauth/access_token\",\n    {\n      client_id: options.clientId,\n      client_secret: options.clientSecret,\n      grant_type: \"refresh_token\",\n      refresh_token: options.refreshToken\n    }\n  );\n  const apiTimeInMs = new Date(response.headers.date).getTime();\n  const authentication = {\n    clientType: \"github-app\",\n    clientId: options.clientId,\n    clientSecret: options.clientSecret,\n    token: response.data.access_token,\n    refreshToken: response.data.refresh_token,\n    expiresAt: toTimestamp(apiTimeInMs, response.data.expires_in),\n    refreshTokenExpiresAt: toTimestamp(\n      apiTimeInMs,\n      response.data.refresh_token_expires_in\n    )\n  };\n  return { ...response, authentication };\n}\nfunction toTimestamp(apiTimeInMs, expirationInSeconds) {\n  return new Date(apiTimeInMs + expirationInSeconds * 1e3).toISOString();\n}\nexport {\n  refreshToken\n};\n", "import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nasync function scopeToken(options) {\n  const {\n    request: optionsRequest,\n    clientType,\n    clientId,\n    clientSecret,\n    token,\n    ...requestOptions\n  } = options;\n  const request = optionsRequest || /* istanbul ignore next: we always pass a custom request in tests */\n  defaultRequest;\n  const response = await request(\n    \"POST /applications/{client_id}/token/scoped\",\n    {\n      headers: {\n        authorization: `basic ${btoa(`${clientId}:${clientSecret}`)}`\n      },\n      client_id: clientId,\n      access_token: token,\n      ...requestOptions\n    }\n  );\n  const authentication = Object.assign(\n    {\n      clientType,\n      clientId,\n      clientSecret,\n      token: response.data.token\n    },\n    response.data.expires_at ? { expiresAt: response.data.expires_at } : {}\n  );\n  return { ...response, authentication };\n}\nexport {\n  scopeToken\n};\n", "import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nasync function resetToken(options) {\n  const request = options.request || /* istanbul ignore next: we always pass a custom request in tests */\n  defaultRequest;\n  const auth = btoa(`${options.clientId}:${options.clientSecret}`);\n  const response = await request(\n    \"PATCH /applications/{client_id}/token\",\n    {\n      headers: {\n        authorization: `basic ${auth}`\n      },\n      client_id: options.clientId,\n      access_token: options.token\n    }\n  );\n  const authentication = {\n    clientType: options.clientType,\n    clientId: options.clientId,\n    clientSecret: options.clientSecret,\n    token: response.data.token,\n    scopes: response.data.scopes\n  };\n  if (response.data.expires_at)\n    authentication.expiresAt = response.data.expires_at;\n  if (options.clientType === \"github-app\") {\n    delete authentication.scopes;\n  }\n  return { ...response, authentication };\n}\nexport {\n  resetToken\n};\n", "import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nasync function deleteToken(options) {\n  const request = options.request || /* istanbul ignore next: we always pass a custom request in tests */\n  defaultRequest;\n  const auth = btoa(`${options.clientId}:${options.clientSecret}`);\n  return request(\n    \"DELETE /applications/{client_id}/token\",\n    {\n      headers: {\n        authorization: `basic ${auth}`\n      },\n      client_id: options.clientId,\n      access_token: options.token\n    }\n  );\n}\nexport {\n  deleteToken\n};\n", "import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nasync function deleteAuthorization(options) {\n  const request = options.request || /* istanbul ignore next: we always pass a custom request in tests */\n  defaultRequest;\n  const auth = btoa(`${options.clientId}:${options.clientSecret}`);\n  return request(\n    \"DELETE /applications/{client_id}/grant\",\n    {\n      headers: {\n        authorization: `basic ${auth}`\n      },\n      client_id: options.clientId,\n      access_token: options.token\n    }\n  );\n}\nexport {\n  deleteAuthorization\n};\n"],
  "mappings": "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",
  "names": ["defaultRequest", "defaultRequest", "defaultRequest", "defaultRequest", "defaultRequest", "defaultRequest", "toTimestamp", "defaultRequest", "defaultRequest", "defaultRequest", "toTimestamp", "defaultRequest", "btoa", "defaultRequest", "btoa", "defaultRequest", "btoa", "defaultRequest", "btoa"]
}
