{"version":3,"file":"index.js","sources":["../dist-src/get-token.js","../dist-src/index.js"],"sourcesContent":["import jsonwebtoken from \"jsonwebtoken\";\nexport async function getToken({ privateKey, payload, }) {\n    return jsonwebtoken.sign(payload, privateKey, {\n        algorithm: \"RS256\",\n    });\n}\n","import { getToken } from \"./get-token\";\nexport async function githubAppJwt({ id, privateKey, now = Math.floor(Date.now() / 1000), }) {\n    // When creating a JSON Web Token, it sets the \"issued at time\" (iat) to 30s\n    // in the past as we have seen people running situations where the GitHub API\n    // claimed the iat would be in future. It turned out the clocks on the\n    // different machine were not in sync.\n    const nowWithSafetyMargin = now - 30;\n    const expiration = nowWithSafetyMargin + 60 * 10; // JWT expiration time (10 minute maximum)\n    const payload = {\n        iat: nowWithSafetyMargin,\n        exp: expiration,\n        iss: id,\n    };\n    const token = await getToken({\n        privateKey,\n        payload,\n    });\n    return {\n        appId: id,\n        expiration,\n        token,\n    };\n}\n"],"names":["getToken","privateKey","payload","jsonwebtoken","sign","algorithm","githubAppJwt","id","now","Math","floor","Date","nowWithSafetyMargin","expiration","iat","exp","iss","token","appId"],"mappings":";;;;;;;;AACO,eAAeA,QAAQ,CAAC;EAAEC,UAAU;EAAEC;AAAS,CAAC,EAAE;EACrD,OAAOC,YAAY,CAACC,IAAI,CAACF,OAAO,EAAED,UAAU,EAAE;IAC1CI,SAAS,EAAE;GACd,CAAC;AACN;;ACJO,eAAeC,YAAY,CAAC;EAAEC,EAAE;EAAEN,UAAU;EAAEO,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACH,GAAG,EAAE,GAAG,IAAI;AAAG,CAAC,EAAE;;;;;EAKzF,MAAMI,mBAAmB,GAAGJ,GAAG,GAAG,EAAE;EACpC,MAAMK,UAAU,GAAGD,mBAAmB,GAAG,EAAE,GAAG,EAAE,CAAC;EACjD,MAAMV,OAAO,GAAG;IACZY,GAAG,EAAEF,mBAAmB;IACxBG,GAAG,EAAEF,UAAU;IACfG,GAAG,EAAET;GACR;EACD,MAAMU,KAAK,GAAG,MAAMjB,QAAQ,CAAC;IACzBC,UAAU;IACVC;GACH,CAAC;EACF,OAAO;IACHgB,KAAK,EAAEX,EAAE;IACTM,UAAU;IACVI;GACH;AACL;;;;"}