import SwaggerElement from "../elements/Swagger.mjs";
import SwaggerVersionElement from "../elements/SwaggerVersion.mjs";
import InfoElement from "../elements/Info.mjs";
import ContactElement from "../elements/Contact.mjs";
import LicenseElement from "../elements/License.mjs";
import PathsElement from "../elements/Paths.mjs";
import PathItemElement from "../elements/PathItem.mjs";
import OperationElement from "../elements/Operation.mjs";
import ExternalDocumentationElement from "../elements/ExternalDocumentation.mjs";
import ParameterElement from "../elements/Parameter.mjs";
import ItemsElement from "../elements/Items.mjs";
import ResponsesElement from "../elements/Responses.mjs";
import ResponseElement from "../elements/Response.mjs";
import HeadersElement from "../elements/Headers.mjs";
import ExampleElement from "../elements/Example.mjs";
import HeaderElement from "../elements/Header.mjs";
import TagElement from "../elements/Tag.mjs";
import ReferenceElement from "../elements/Reference.mjs";
import SchemaElement from "../elements/Schema.mjs";
import XmlElement from "../elements/Xml.mjs";
import DefinitionsElement from "../elements/Definitions.mjs";
import ParametersDefinitionsElement from "../elements/ParametersDefinitions.mjs";
import ResponsesDefinitionsElement from "../elements/ResponsesDefinitions.mjs";
import SecurityDefinitionsElement from "../elements/SecurityDefinitions.mjs";
import SecuritySchemeElement from "../elements/SecurityScheme.mjs";
import ScopesElement from "../elements/Scopes.mjs";
import SecurityRequirementElement from "../elements/SecurityRequirement.mjs";
import { createRefractor } from "./index.mjs"; // register refractors specific to element types
SwaggerElement.refract = createRefractor(['visitors', 'document', 'objects', 'Swagger', '$visitor']);
SwaggerVersionElement.refract = createRefractor(['visitors', 'document', 'objects', 'SwaggerVersion', '$visitor']);
InfoElement.refract = createRefractor(['visitors', 'document', 'objects', 'Info', '$visitor']);
ContactElement.refract = createRefractor(['visitors', 'document', 'objects', 'Contact', '$visitor']);
LicenseElement.refract = createRefractor(['visitors', 'document', 'objects', 'License', '$visitor']);
PathsElement.refract = createRefractor(['visitors', 'document', 'objects', 'Paths', '$visitor']);
PathItemElement.refract = createRefractor(['visitors', 'document', 'objects', 'PathItem', '$visitor']);
OperationElement.refract = createRefractor(['visitors', 'document', 'objects', 'Operation', '$visitor']);
ExternalDocumentationElement.refract = createRefractor(['visitors', 'document', 'objects', 'ExternalDocumentation', '$visitor']);
ParameterElement.refract = createRefractor(['visitors', 'document', 'objects', 'Parameter', '$visitor']);
ItemsElement.refract = createRefractor(['visitors', 'document', 'objects', 'Items', '$visitor']);
ResponsesElement.refract = createRefractor(['visitors', 'document', 'objects', 'Responses', '$visitor']);
ResponseElement.refract = createRefractor(['visitors', 'document', 'objects', 'Response', '$visitor']);
HeadersElement.refract = createRefractor(['visitors', 'document', 'objects', 'Headers', '$visitor']);
ExampleElement.refract = createRefractor(['visitors', 'document', 'objects', 'Example', '$visitor']);
HeaderElement.refract = createRefractor(['visitors', 'document', 'objects', 'Header', '$visitor']);
TagElement.refract = createRefractor(['visitors', 'document', 'objects', 'Tag', '$visitor']);
ReferenceElement.refract = createRefractor(['visitors', 'document', 'objects', 'Reference', '$visitor']);
SchemaElement.refract = createRefractor(['visitors', 'document', 'objects', 'Schema', '$visitor']);
XmlElement.refract = createRefractor(['visitors', 'document', 'objects', 'XML', '$visitor']);
DefinitionsElement.refract = createRefractor(['visitors', 'document', 'objects', 'Definitions', '$visitor']);
ParametersDefinitionsElement.refract = createRefractor(['visitors', 'document', 'objects', 'ParametersDefinitions', '$visitor']);
ResponsesDefinitionsElement.refract = createRefractor(['visitors', 'document', 'objects', 'ResponsesDefinitions', '$visitor']);
SecurityDefinitionsElement.refract = createRefractor(['visitors', 'document', 'objects', 'SecurityDefinitions', '$visitor']);
SecuritySchemeElement.refract = createRefractor(['visitors', 'document', 'objects', 'SecurityScheme', '$visitor']);
ScopesElement.refract = createRefractor(['visitors', 'document', 'objects', 'Scopes', '$visitor']);
SecurityRequirementElement.refract = createRefractor(['visitors', 'document', 'objects', 'SecurityRequirement', '$visitor']);
export { SwaggerElement, SwaggerVersionElement, InfoElement, ContactElement, LicenseElement, PathsElement, PathItemElement, OperationElement, ExternalDocumentationElement, ParameterElement, ItemsElement, ResponsesElement, ResponseElement, HeadersElement, ExampleElement, HeaderElement, TagElement, ReferenceElement, SchemaElement, XmlElement, DefinitionsElement, ParametersDefinitionsElement, ResponsesDefinitionsElement, SecurityDefinitionsElement, SecuritySchemeElement, ScopesElement, SecurityRequirementElement };