import { ApiDOMErrorOptions } from '@swagger-api/apidom-error';
import { ApiDOMStructuredError } from '@swagger-api/apidom-error';
import { Element as Element_2 } from '@swagger-api/apidom-core';

/**
 * @public
 */
export declare class CompilationJsonPointerError extends JsonPointerError {
    readonly tokens: string[];
    constructor(message?: string, structuredOptions?: CompilationJsonPointerErrorOptions);
}

/**
 * @public
 */
export declare interface CompilationJsonPointerErrorOptions extends ApiDOMErrorOptions {
    readonly tokens: string[];
}

/**
 * @public
 */
export declare const compile: (tokens: string[]) => string;

/**
 * @public
 */
declare const escape_2: (str: string) => string;
export { escape_2 as escape }

/**
 * Evaluates JSON Pointer against ApiDOM fragment.
 * @public
 */
export declare const evaluate: <T extends Element_2>(pointer: string, element: T) => Element_2;

/**
 * @public
 */
export declare class EvaluationJsonPointerError<T extends Element_2> extends JsonPointerError {
    readonly pointer: string;
    readonly tokens?: string[];
    readonly failedToken?: string;
    readonly failedTokenPosition?: number;
    readonly element: T;
    constructor(message?: string, structuredOptions?: EvaluationJsonPointerErrorOptions<T>);
}

/**
 * @public
 */
export declare interface EvaluationJsonPointerErrorOptions<T extends Element_2> extends ApiDOMErrorOptions {
    readonly pointer: string;
    readonly tokens?: string[];
    readonly failedToken?: string;
    readonly failedTokenPosition?: number;
    readonly element: T;
}

/**
 * @public
 */
export declare class InvalidJsonPointerError extends JsonPointerError {
    readonly pointer: string;
    constructor(message?: string, structuredOptions?: InvalidJsonPointerErrorOptions);
}

/**
 * @public
 */
export declare interface InvalidJsonPointerErrorOptions extends ApiDOMErrorOptions {
    readonly pointer: string;
}

/**
 * @public
 */
export declare class JsonPointerError extends ApiDOMStructuredError {
}

/**
 * @public
 */
export declare const parse: (pointer: string) => string[];

/**
 * @public
 */
declare const unescape_2: (str: string) => string;
export { unescape_2 as unescape }

/**
 * @public
 */
export declare const uriToPointer: (uri: string) => string;

export { }
