/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function compress(a: number, b: number, c: number, d: number): void;
export function decompress(a: number, b: number, c: number): void;
export function __wbg_brotlistreamresult_free(a: number): void;
export function __wbg_get_brotlistreamresult_code(a: number): number;
export function __wbg_set_brotlistreamresult_code(a: number, b: number): void;
export function __wbg_get_brotlistreamresult_buf(a: number, b: number): void;
export function __wbg_set_brotlistreamresult_buf(a: number, b: number, c: number): void;
export function __wbg_get_brotlistreamresult_input_offset(a: number): number;
export function __wbg_set_brotlistreamresult_input_offset(a: number, b: number): void;
export function __wbg_compressstream_free(a: number): void;
export function compressstream_new(a: number, b: number): number;
export function compressstream_compress(a: number, b: number, c: number, d: number, e: number): void;
export function compressstream_total_out(a: number): number;
export function __wbg_decompressstream_free(a: number): void;
export function decompressstream_new(): number;
export function decompressstream_decompress(a: number, b: number, c: number, d: number, e: number): void;
export function decompressstream_total_out(a: number): number;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number): void;
