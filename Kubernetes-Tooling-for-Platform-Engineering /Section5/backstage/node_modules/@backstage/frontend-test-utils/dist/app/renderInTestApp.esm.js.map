{"version":3,"file":"renderInTestApp.esm.js","sources":["../../src/app/renderInTestApp.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { Link, MemoryRouter } from 'react-router-dom';\nimport {\n  createSpecializedApp,\n  FrontendFeature,\n} from '@backstage/frontend-app-api';\nimport { RenderResult, render } from '@testing-library/react';\nimport { ConfigReader } from '@backstage/config';\nimport { JsonObject } from '@backstage/types';\nimport {\n  createExtension,\n  ExtensionDefinition,\n  coreExtensionData,\n  RouteRef,\n  useRouteRef,\n  IconComponent,\n  RouterBlueprint,\n  NavItemBlueprint,\n  createFrontendPlugin,\n} from '@backstage/frontend-plugin-api';\nimport appPlugin from '@backstage/plugin-app';\n\n/**\n * Options to customize the behavior of the test app.\n * @public\n */\nexport type TestAppOptions = {\n  /**\n   * An object of paths to mount route ref on, with the key being the path and the value\n   * being the RouteRef that the path will be bound to. This allows the route refs to be\n   * used by `useRouteRef` in the rendered elements.\n   *\n   * @example\n   * ```ts\n   * renderInTestApp(<MyComponent />, {\n   *   mountedRoutes: {\n   *     '/my-path': myRouteRef,\n   *   }\n   * })\n   * // ...\n   * const link = useRouteRef(myRouteRef)\n   * ```\n   */\n  mountedRoutes?: { [path: string]: RouteRef };\n\n  /**\n   * Additional configuration passed to the app when rendering elements inside it.\n   */\n  config?: JsonObject;\n\n  /**\n   * Additional extensions to add to the test app.\n   */\n  extensions?: ExtensionDefinition<any>[];\n\n  /**\n   * Additional features to add to the test app.\n   */\n  features?: FrontendFeature[];\n};\n\nconst NavItem = (props: {\n  routeRef: RouteRef<undefined>;\n  title: string;\n  icon: IconComponent;\n}) => {\n  const { routeRef, title, icon: Icon } = props;\n  const link = useRouteRef(routeRef);\n  if (!link) {\n    return null;\n  }\n  return (\n    <li>\n      <Link to={link()}>\n        <Icon /> {title}\n      </Link>\n    </li>\n  );\n};\n\nconst appPluginOverride = appPlugin.withOverrides({\n  extensions: [\n    appPlugin.getExtension('sign-in-page:app').override({\n      disabled: true,\n    }),\n    appPlugin.getExtension('app/nav').override({\n      output: [coreExtensionData.reactElement],\n      factory(_originalFactory, { inputs }) {\n        return [\n          coreExtensionData.reactElement(\n            <nav>\n              <ul>\n                {inputs.items.map((item, index) => {\n                  const { icon, title, routeRef } = item.get(\n                    NavItemBlueprint.dataRefs.target,\n                  );\n\n                  return (\n                    <NavItem\n                      key={index}\n                      icon={icon}\n                      title={title}\n                      routeRef={routeRef}\n                    />\n                  );\n                })}\n              </ul>\n            </nav>,\n          ),\n        ];\n      },\n    }),\n  ],\n});\n\n/**\n * @public\n * Renders the given element in a test app, for use in unit tests.\n */\nexport function renderInTestApp(\n  element: JSX.Element,\n  options?: TestAppOptions,\n): RenderResult {\n  const extensions: Array<ExtensionDefinition> = [\n    createExtension({\n      attachTo: { id: 'app/routes', input: 'routes' },\n      output: [coreExtensionData.reactElement, coreExtensionData.routePath],\n      factory: () => {\n        return [\n          coreExtensionData.reactElement(element),\n          coreExtensionData.routePath('/'),\n        ];\n      },\n    }),\n    RouterBlueprint.make({\n      params: {\n        Component: ({ children }) => <MemoryRouter>{children}</MemoryRouter>,\n      },\n    }),\n  ];\n\n  if (options?.mountedRoutes) {\n    for (const [path, routeRef] of Object.entries(options.mountedRoutes)) {\n      // TODO(Rugvip): add support for external route refs\n      extensions.push(\n        createExtension({\n          kind: 'test-route',\n          name: path,\n          attachTo: { id: 'app/root', input: 'elements' },\n          output: [\n            coreExtensionData.reactElement,\n            coreExtensionData.routePath,\n            coreExtensionData.routeRef,\n          ],\n          factory: () => [\n            coreExtensionData.reactElement(<React.Fragment />),\n            coreExtensionData.routePath(path),\n            coreExtensionData.routeRef(routeRef),\n          ],\n        }),\n      );\n    }\n  }\n\n  if (options?.extensions) {\n    extensions.push(...options.extensions);\n  }\n\n  const features: FrontendFeature[] = [\n    createFrontendPlugin({\n      id: 'test',\n      extensions,\n    }),\n    appPluginOverride,\n  ];\n\n  if (options?.features) {\n    features.push(...options.features);\n  }\n\n  const app = createSpecializedApp({\n    features,\n    config: ConfigReader.fromConfigs([\n      { context: 'render-config', data: options?.config ?? {} },\n    ]),\n  });\n\n  return render(app.createRoot());\n}\n"],"names":[],"mappings":"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"}