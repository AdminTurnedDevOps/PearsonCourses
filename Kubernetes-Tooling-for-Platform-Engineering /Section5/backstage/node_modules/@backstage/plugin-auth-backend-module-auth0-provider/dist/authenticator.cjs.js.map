{"version":3,"file":"authenticator.cjs.js","sources":["../src/authenticator.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport express from 'express';\nimport {\n  createOAuthAuthenticator,\n  PassportOAuthAuthenticatorHelper,\n  PassportOAuthDoneCallback,\n  PassportProfile,\n} from '@backstage/plugin-auth-node';\nimport { Auth0Strategy } from './strategy';\n\n/** @public */\nexport const auth0Authenticator = createOAuthAuthenticator({\n  defaultProfileTransform:\n    PassportOAuthAuthenticatorHelper.defaultProfileTransform,\n  initialize({ callbackUrl, config }) {\n    const clientID = config.getString('clientId');\n    const clientSecret = config.getString('clientSecret');\n    const domain = config.getString('domain');\n    const audience = config.getOptionalString('audience');\n    const connection = config.getOptionalString('connection');\n    const connectionScope = config.getOptionalString('connectionScope');\n    const callbackURL = config.getOptionalString('callbackUrl') ?? callbackUrl;\n    // Due to passport-auth0 forcing options.state = true,\n    // passport-oauth2 requires express-session to be installed\n    // so that the 'state' parameter of the oauth2 flow can be stored.\n    // This implementation of StateStore matches the NullStore found within\n    // passport-oauth2, which is the StateStore implementation used when options.state = false,\n    // allowing us to avoid using express-session in order to integrate with auth0.\n    const store = {\n      store(_req: express.Request, cb: any) {\n        cb(null, null);\n      },\n      verify(_req: express.Request, _state: string, cb: any) {\n        cb(null, true);\n      },\n    };\n\n    const helper = PassportOAuthAuthenticatorHelper.from(\n      new Auth0Strategy(\n        {\n          clientID,\n          clientSecret,\n          callbackURL,\n          domain,\n          store,\n          // We need passReqToCallback set to false to get params, but there's\n          // no matching type signature for that, so instead behold this beauty\n          passReqToCallback: false as true,\n        },\n        (\n          accessToken: string,\n          refreshToken: string,\n          params: any,\n          fullProfile: PassportProfile,\n          done: PassportOAuthDoneCallback,\n        ) => {\n          done(\n            undefined,\n            {\n              fullProfile,\n              accessToken,\n              params,\n            },\n            {\n              refreshToken,\n            },\n          );\n        },\n      ),\n    );\n    return { helper, audience, connection, connectionScope };\n  },\n\n  async start(\n    input,\n    { helper, audience, connection, connectionScope: connection_scope },\n  ) {\n    return helper.start(input, {\n      accessType: 'offline',\n      prompt: 'consent',\n      ...(audience ? { audience } : {}),\n      ...(connection ? { connection } : {}),\n      ...(connection_scope ? { connection_scope } : {}),\n    });\n  },\n\n  async authenticate(\n    input,\n    { helper, audience, connection, connectionScope: connection_scope },\n  ) {\n    return helper.authenticate(input, {\n      ...(audience ? { audience } : {}),\n      ...(connection ? { connection } : {}),\n      ...(connection_scope ? { connection_scope } : {}),\n    });\n  },\n\n  async refresh(input, { helper }) {\n    return helper.refresh(input);\n  },\n});\n"],"names":["createOAuthAuthenticator","PassportOAuthAuthenticatorHelper","Auth0Strategy"],"mappings":";;;;;AA0BO,MAAM,qBAAqBA,uCAAyB,CAAA;AAAA,EACzD,yBACEC,+CAAiC,CAAA,uBAAA;AAAA,EACnC,UAAW,CAAA,EAAE,WAAa,EAAA,MAAA,EAAU,EAAA;AAClC,IAAM,MAAA,QAAA,GAAW,MAAO,CAAA,SAAA,CAAU,UAAU,CAAA;AAC5C,IAAM,MAAA,YAAA,GAAe,MAAO,CAAA,SAAA,CAAU,cAAc,CAAA;AACpD,IAAM,MAAA,MAAA,GAAS,MAAO,CAAA,SAAA,CAAU,QAAQ,CAAA;AACxC,IAAM,MAAA,QAAA,GAAW,MAAO,CAAA,iBAAA,CAAkB,UAAU,CAAA;AACpD,IAAM,MAAA,UAAA,GAAa,MAAO,CAAA,iBAAA,CAAkB,YAAY,CAAA;AACxD,IAAM,MAAA,eAAA,GAAkB,MAAO,CAAA,iBAAA,CAAkB,iBAAiB,CAAA;AAClE,IAAA,MAAM,WAAc,GAAA,MAAA,CAAO,iBAAkB,CAAA,aAAa,CAAK,IAAA,WAAA;AAO/D,IAAA,MAAM,KAAQ,GAAA;AAAA,MACZ,KAAA,CAAM,MAAuB,EAAS,EAAA;AACpC,QAAA,EAAA,CAAG,MAAM,IAAI,CAAA;AAAA,OACf;AAAA,MACA,MAAA,CAAO,IAAuB,EAAA,MAAA,EAAgB,EAAS,EAAA;AACrD,QAAA,EAAA,CAAG,MAAM,IAAI,CAAA;AAAA;AACf,KACF;AAEA,IAAA,MAAM,SAASA,+CAAiC,CAAA,IAAA;AAAA,MAC9C,IAAIC,sBAAA;AAAA,QACF;AAAA,UACE,QAAA;AAAA,UACA,YAAA;AAAA,UACA,WAAA;AAAA,UACA,MAAA;AAAA,UACA,KAAA;AAAA;AAAA;AAAA,UAGA,iBAAmB,EAAA;AAAA,SACrB;AAAA,QACA,CACE,WAAA,EACA,YACA,EAAA,MAAA,EACA,aACA,IACG,KAAA;AACH,UAAA,IAAA;AAAA,YACE,KAAA,CAAA;AAAA,YACA;AAAA,cACE,WAAA;AAAA,cACA,WAAA;AAAA,cACA;AAAA,aACF;AAAA,YACA;AAAA,cACE;AAAA;AACF,WACF;AAAA;AACF;AACF,KACF;AACA,IAAA,OAAO,EAAE,MAAA,EAAQ,QAAU,EAAA,UAAA,EAAY,eAAgB,EAAA;AAAA,GACzD;AAAA,EAEA,MAAM,MACJ,KACA,EAAA,EAAE,QAAQ,QAAU,EAAA,UAAA,EAAY,eAAiB,EAAA,gBAAA,EACjD,EAAA;AACA,IAAO,OAAA,MAAA,CAAO,MAAM,KAAO,EAAA;AAAA,MACzB,UAAY,EAAA,SAAA;AAAA,MACZ,MAAQ,EAAA,SAAA;AAAA,MACR,GAAI,QAAA,GAAW,EAAE,QAAA,KAAa,EAAC;AAAA,MAC/B,GAAI,UAAA,GAAa,EAAE,UAAA,KAAe,EAAC;AAAA,MACnC,GAAI,gBAAA,GAAmB,EAAE,gBAAA,KAAqB;AAAC,KAChD,CAAA;AAAA,GACH;AAAA,EAEA,MAAM,aACJ,KACA,EAAA,EAAE,QAAQ,QAAU,EAAA,UAAA,EAAY,eAAiB,EAAA,gBAAA,EACjD,EAAA;AACA,IAAO,OAAA,MAAA,CAAO,aAAa,KAAO,EAAA;AAAA,MAChC,GAAI,QAAA,GAAW,EAAE,QAAA,KAAa,EAAC;AAAA,MAC/B,GAAI,UAAA,GAAa,EAAE,UAAA,KAAe,EAAC;AAAA,MACnC,GAAI,gBAAA,GAAmB,EAAE,gBAAA,KAAqB;AAAC,KAChD,CAAA;AAAA,GACH;AAAA,EAEA,MAAM,OAAA,CAAQ,KAAO,EAAA,EAAE,QAAU,EAAA;AAC/B,IAAO,OAAA,MAAA,CAAO,QAAQ,KAAK,CAAA;AAAA;AAE/B,CAAC;;;;"}