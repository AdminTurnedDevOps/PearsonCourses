{"version":3,"file":"createApp.esm.js","sources":["../src/createApp.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { JSX, ReactNode } from 'react';\nimport { ConfigApi } from '@backstage/frontend-plugin-api';\nimport { stringifyError } from '@backstage/errors';\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport { defaultConfigLoaderSync } from '../../core-app-api/src/app/defaultConfigLoader';\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport { overrideBaseUrlConfigs } from '../../core-app-api/src/app/overrideBaseUrlConfigs';\nimport { getAvailableFeatures } from './discovery';\nimport { ConfigReader } from '@backstage/config';\nimport appPlugin from '@backstage/plugin-app';\nimport {\n  CreateAppRouteBinder,\n  FrontendFeature,\n  createSpecializedApp,\n} from '@backstage/frontend-app-api';\n\n/**\n * A source of dynamically loaded frontend features.\n *\n * @public\n */\nexport interface CreateAppFeatureLoader {\n  /**\n   * Returns name of this loader. suitable for showing to users.\n   */\n  getLoaderName(): string;\n\n  /**\n   * Loads a number of features dynamically.\n   */\n  load(options: { config: ConfigApi }): Promise<{\n    features: FrontendFeature[];\n  }>;\n}\n\n/**\n * Options for {@link createApp}.\n *\n * @public\n */\nexport interface CreateAppOptions {\n  features?: (FrontendFeature | CreateAppFeatureLoader)[];\n  configLoader?: () => Promise<{ config: ConfigApi }>;\n  bindRoutes?(context: { bind: CreateAppRouteBinder }): void;\n  /**\n   * The component to render while loading the app (waiting for config, features, etc)\n   *\n   * Is the text \"Loading...\" by default.\n   * If set to \"null\" then no loading fallback component is rendered.   *\n   */\n  loadingComponent?: ReactNode;\n}\n\n/**\n * Creates a new Backstage frontend app instance. See https://backstage.io/docs/frontend-system/building-apps/index\n *\n * @public\n */\nexport function createApp(options?: CreateAppOptions): {\n  createRoot(): JSX.Element;\n} {\n  let suspenseFallback = options?.loadingComponent;\n  if (suspenseFallback === undefined) {\n    suspenseFallback = 'Loading...';\n  }\n\n  async function appLoader() {\n    const config =\n      (await options?.configLoader?.().then(c => c.config)) ??\n      ConfigReader.fromConfigs(\n        overrideBaseUrlConfigs(defaultConfigLoaderSync()),\n      );\n\n    const discoveredFeatures = getAvailableFeatures(config);\n\n    const providedFeatures: FrontendFeature[] = [];\n    for (const entry of options?.features ?? []) {\n      if ('load' in entry) {\n        try {\n          const result = await entry.load({ config });\n          providedFeatures.push(...result.features);\n        } catch (e) {\n          throw new Error(\n            `Failed to read frontend features from loader '${entry.getLoaderName()}', ${stringifyError(\n              e,\n            )}`,\n          );\n        }\n      } else {\n        providedFeatures.push(entry);\n      }\n    }\n\n    const app = createSpecializedApp({\n      config,\n      features: [appPlugin, ...discoveredFeatures, ...providedFeatures],\n      bindRoutes: options?.bindRoutes,\n    }).createRoot();\n\n    return { default: () => app };\n  }\n\n  return {\n    createRoot() {\n      const LazyApp = React.lazy(appLoader);\n      return (\n        <React.Suspense fallback={suspenseFallback}>\n          <LazyApp />\n        </React.Suspense>\n      );\n    },\n  };\n}\n"],"names":[],"mappings":";;;;;;;;;AA0EO,SAAS,UAAU,OAExB,EAAA;AACA,EAAA,IAAI,mBAAmB,OAAS,EAAA,gBAAA;AAChC,EAAA,IAAI,qBAAqB,KAAW,CAAA,EAAA;AAClC,IAAmB,gBAAA,GAAA,YAAA;AAAA;AAGrB,EAAA,eAAe,SAAY,GAAA;AACzB,IAAM,MAAA,MAAA,GACH,MAAM,OAAA,EAAS,YAAe,IAAA,CAAE,KAAK,CAAK,CAAA,KAAA,CAAA,CAAE,MAAM,CAAA,IACnD,YAAa,CAAA,WAAA;AAAA,MACX,sBAAA,CAAuB,yBAAyB;AAAA,KAClD;AAEF,IAAM,MAAA,kBAAA,GAAqB,qBAAqB,MAAM,CAAA;AAEtD,IAAA,MAAM,mBAAsC,EAAC;AAC7C,IAAA,KAAA,MAAW,KAAS,IAAA,OAAA,EAAS,QAAY,IAAA,EAAI,EAAA;AAC3C,MAAA,IAAI,UAAU,KAAO,EAAA;AACnB,QAAI,IAAA;AACF,UAAA,MAAM,SAAS,MAAM,KAAA,CAAM,IAAK,CAAA,EAAE,QAAQ,CAAA;AAC1C,UAAiB,gBAAA,CAAA,IAAA,CAAK,GAAG,MAAA,CAAO,QAAQ,CAAA;AAAA,iBACjC,CAAG,EAAA;AACV,UAAA,MAAM,IAAI,KAAA;AAAA,YACR,CAAiD,8CAAA,EAAA,KAAA,CAAM,aAAc,EAAC,CAAM,GAAA,EAAA,cAAA;AAAA,cAC1E;AAAA,aACD,CAAA;AAAA,WACH;AAAA;AACF,OACK,MAAA;AACL,QAAA,gBAAA,CAAiB,KAAK,KAAK,CAAA;AAAA;AAC7B;AAGF,IAAA,MAAM,MAAM,oBAAqB,CAAA;AAAA,MAC/B,MAAA;AAAA,MACA,UAAU,CAAC,SAAA,EAAW,GAAG,kBAAA,EAAoB,GAAG,gBAAgB,CAAA;AAAA,MAChE,YAAY,OAAS,EAAA;AAAA,KACtB,EAAE,UAAW,EAAA;AAEd,IAAO,OAAA,EAAE,OAAS,EAAA,MAAM,GAAI,EAAA;AAAA;AAG9B,EAAO,OAAA;AAAA,IACL,UAAa,GAAA;AACX,MAAM,MAAA,OAAA,GAAU,KAAM,CAAA,IAAA,CAAK,SAAS,CAAA;AACpC,MACE,uBAAA,KAAA,CAAA,aAAA,CAAC,MAAM,QAAN,EAAA,EAAe,UAAU,gBACxB,EAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,aAAQ,CACX,CAAA;AAAA;AAEJ,GACF;AACF;;;;"}