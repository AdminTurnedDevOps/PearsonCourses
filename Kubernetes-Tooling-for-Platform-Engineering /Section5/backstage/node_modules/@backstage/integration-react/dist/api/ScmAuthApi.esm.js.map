{"version":3,"file":"ScmAuthApi.esm.js","sources":["../../src/api/ScmAuthApi.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ApiRef,\n  createApiRef,\n  AuthRequestOptions,\n} from '@backstage/core-plugin-api';\n\n/**\n * The options that control a {@link ScmAuthApi.getCredentials} call.\n *\n * @public\n */\nexport interface ScmAuthTokenOptions extends AuthRequestOptions {\n  /**\n   * The URL of the SCM resource to be accessed.\n   *\n   * @example https://github.com/backstage/backstage\n   */\n  url: string;\n\n  /**\n   * Whether to request additional access scope.\n   *\n   * Read access to user, organization, and repositories is always included.\n   */\n  additionalScope?: {\n    /**\n     * Requests access to be able to write repository content, including\n     * the ability to create things like issues and pull requests.\n     */\n    repoWrite?: boolean;\n    /**\n     * Allow an arbitrary list of scopes provided from the user\n     * to request from the provider.\n     */\n    customScopes?: {\n      github?: string[];\n      azure?: string[];\n      bitbucket?: string[];\n      gitlab?: string[];\n    };\n  };\n}\n\n/**\n * The response from a {@link ScmAuthApi.getCredentials} call.\n *\n * @public\n */\nexport interface ScmAuthTokenResponse {\n  /**\n   * An authorization token that can be used to authenticate requests.\n   */\n  token: string;\n\n  /**\n   * The set of HTTP headers that are needed to authenticate requests.\n   */\n  headers: { [name: string]: string };\n}\n\n/**\n * ScmAuthApi provides methods for authenticating towards source code management services.\n *\n * As opposed to using the GitHub, GitLab and other auth APIs\n * directly, this API allows for more generic access to SCM services.\n *\n * @public\n */\nexport interface ScmAuthApi {\n  /**\n   * Requests credentials for accessing an SCM resource.\n   */\n  getCredentials(options: ScmAuthTokenOptions): Promise<ScmAuthTokenResponse>;\n}\n\n/**\n * The ApiRef for the ScmAuthApi.\n *\n * @public\n */\nexport const scmAuthApiRef: ApiRef<ScmAuthApi> = createApiRef({\n  id: 'core.scmauth',\n});\n"],"names":[],"mappings":";;AAgGO,MAAM,gBAAoC,YAAa,CAAA;AAAA,EAC5D,EAAI,EAAA;AACN,CAAC;;;;"}