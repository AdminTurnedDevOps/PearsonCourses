{"version":3,"file":"MaxDepthFilter.esm.js","sources":["../../../src/components/CatalogGraphPage/MaxDepthFilter.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\n\nexport type Props = {\n  value: number;\n  onChange: (value: number) => void;\n};\n\n/** @public */\nexport type MaxDepthFilterClassKey = 'formControl';\n\nconst useStyles = makeStyles(\n  {\n    formControl: {\n      width: '100%',\n      maxWidth: 300,\n    },\n  },\n  { name: 'PluginCatalogGraphMaxDepthFilter' },\n);\n\nexport const MaxDepthFilter = ({ value, onChange }: Props) => {\n  const classes = useStyles();\n  const onChangeRef = useRef(onChange);\n  const [currentValue, setCurrentValue] = useState(value);\n\n  // Keep a fresh reference to the latest callback\n  useEffect(() => {\n    onChangeRef.current = onChange;\n  }, [onChange]);\n\n  // If the value changes externally, update ourselves\n  useEffect(() => {\n    setCurrentValue(value);\n  }, [value]);\n\n  // When the entered text changes, update ourselves and communicate externally\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValueNumeric = Number(event.target.value);\n      const newValue =\n        Number.isFinite(newValueNumeric) && newValueNumeric > 0\n          ? newValueNumeric\n          : Number.POSITIVE_INFINITY;\n      setCurrentValue(newValue);\n      onChangeRef.current(newValue);\n    },\n    [],\n  );\n\n  const reset = useCallback(() => {\n    setCurrentValue(Number.POSITIVE_INFINITY);\n    onChangeRef.current(Number.POSITIVE_INFINITY);\n  }, [onChangeRef]);\n\n  return (\n    <Box pb={1} pt={1}>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <Typography variant=\"button\">Max Depth</Typography>\n        <OutlinedInput\n          type=\"number\"\n          placeholder=\"âˆž Infinite\"\n          value={Number.isFinite(currentValue) ? String(currentValue) : ''}\n          onChange={handleChange}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"clear max depth\"\n                onClick={reset}\n                edge=\"end\"\n              >\n                <ClearIcon />\n              </IconButton>\n            </InputAdornment>\n          }\n          inputProps={{\n            'aria-label': 'maxp',\n          }}\n          labelWidth={0}\n        />\n      </FormControl>\n    </Box>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;;AAiCA,MAAM,SAAY,GAAA,UAAA;AAAA,EAChB;AAAA,IACE,WAAa,EAAA;AAAA,MACX,KAAO,EAAA,MAAA;AAAA,MACP,QAAU,EAAA;AAAA;AACZ,GACF;AAAA,EACA,EAAE,MAAM,kCAAmC;AAC7C,CAAA;AAEO,MAAM,cAAiB,GAAA,CAAC,EAAE,KAAA,EAAO,UAAsB,KAAA;AAC5D,EAAA,MAAM,UAAU,SAAU,EAAA;AAC1B,EAAM,MAAA,WAAA,GAAc,OAAO,QAAQ,CAAA;AACnC,EAAA,MAAM,CAAC,YAAA,EAAc,eAAe,CAAA,GAAI,SAAS,KAAK,CAAA;AAGtD,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,WAAA,CAAY,OAAU,GAAA,QAAA;AAAA,GACxB,EAAG,CAAC,QAAQ,CAAC,CAAA;AAGb,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,eAAA,CAAgB,KAAK,CAAA;AAAA,GACvB,EAAG,CAAC,KAAK,CAAC,CAAA;AAGV,EAAA,MAAM,YAAe,GAAA,WAAA;AAAA,IACnB,CAAC,KAA+C,KAAA;AAC9C,MAAA,MAAM,eAAkB,GAAA,MAAA,CAAO,KAAM,CAAA,MAAA,CAAO,KAAK,CAAA;AACjD,MAAM,MAAA,QAAA,GACJ,OAAO,QAAS,CAAA,eAAe,KAAK,eAAkB,GAAA,CAAA,GAClD,kBACA,MAAO,CAAA,iBAAA;AACb,MAAA,eAAA,CAAgB,QAAQ,CAAA;AACxB,MAAA,WAAA,CAAY,QAAQ,QAAQ,CAAA;AAAA,KAC9B;AAAA,IACA;AAAC,GACH;AAEA,EAAM,MAAA,KAAA,GAAQ,YAAY,MAAM;AAC9B,IAAA,eAAA,CAAgB,OAAO,iBAAiB,CAAA;AACxC,IAAY,WAAA,CAAA,OAAA,CAAQ,OAAO,iBAAiB,CAAA;AAAA,GAC9C,EAAG,CAAC,WAAW,CAAC,CAAA;AAEhB,EAAA,2CACG,GAAI,EAAA,EAAA,EAAA,EAAI,GAAG,EAAI,EAAA,CAAA,EAAA,sCACb,WAAY,EAAA,EAAA,OAAA,EAAQ,UAAW,EAAA,SAAA,EAAW,QAAQ,WACjD,EAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,cAAW,OAAQ,EAAA,QAAA,EAAA,EAAS,WAAS,CACtC,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,aAAA;AAAA,IAAA;AAAA,MACC,IAAK,EAAA,QAAA;AAAA,MACL,WAAY,EAAA,iBAAA;AAAA,MACZ,OAAO,MAAO,CAAA,QAAA,CAAS,YAAY,CAAI,GAAA,MAAA,CAAO,YAAY,CAAI,GAAA,EAAA;AAAA,MAC9D,QAAU,EAAA,YAAA;AAAA,MACV,YACE,kBAAA,KAAA,CAAA,aAAA,CAAC,cAAe,EAAA,EAAA,QAAA,EAAS,KACvB,EAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,QAAC,UAAA;AAAA,QAAA;AAAA,UACC,YAAW,EAAA,iBAAA;AAAA,UACX,OAAS,EAAA,KAAA;AAAA,UACT,IAAK,EAAA;AAAA,SAAA;AAAA,4CAEJ,SAAU,EAAA,IAAA;AAAA,OAEf,CAAA;AAAA,MAEF,UAAY,EAAA;AAAA,QACV,YAAc,EAAA;AAAA,OAChB;AAAA,MACA,UAAY,EAAA;AAAA;AAAA,GAEhB,CACF,CAAA;AAEJ;;;;"}