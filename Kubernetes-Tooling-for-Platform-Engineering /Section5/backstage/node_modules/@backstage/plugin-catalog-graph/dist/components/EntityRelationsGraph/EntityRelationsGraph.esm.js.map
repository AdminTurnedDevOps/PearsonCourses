{"version":3,"file":"EntityRelationsGraph.esm.js","sources":["../../../src/components/EntityRelationsGraph/EntityRelationsGraph.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CompoundEntityRef,\n  Entity,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport {\n  DependencyGraph,\n  DependencyGraphTypes,\n} from '@backstage/core-components';\nimport { errorApiRef, useApi } from '@backstage/core-plugin-api';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport React, { MouseEvent, useEffect, useMemo } from 'react';\nimport { DefaultRenderLabel } from './DefaultRenderLabel';\nimport { DefaultRenderNode } from './DefaultRenderNode';\nimport { ALL_RELATION_PAIRS, RelationPairs } from './relations';\nimport { Direction, EntityEdge, EntityNode } from './types';\nimport { useEntityRelationNodesAndEdges } from './useEntityRelationNodesAndEdges';\n\n/** @public */\nexport type EntityRelationsGraphClassKey = 'progress' | 'container' | 'graph';\n\nconst useStyles = makeStyles(\n  theme => ({\n    progress: {\n      position: 'absolute',\n      left: '50%',\n      top: '50%',\n      marginLeft: '-20px',\n      marginTop: '-20px',\n    },\n    container: {\n      position: 'relative',\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    graph: {\n      width: '100%',\n      flex: 1,\n      // Right now there is no good way to style edges between nodes, we have to\n      // fall back to these hacks:\n      '& path[marker-end]': {\n        transition: 'filter 0.1s ease-in-out',\n      },\n      '& path[marker-end]:hover': {\n        filter: `drop-shadow(2px 2px 4px ${theme.palette.primary.dark});`,\n      },\n      '& g[data-testid=label]': {\n        transition: 'transform 0s',\n      },\n    },\n  }),\n  { name: 'PluginCatalogGraphEntityRelationsGraph' },\n);\n\n/**\n * @public\n */\nexport type EntityRelationsGraphProps = {\n  rootEntityNames: CompoundEntityRef | CompoundEntityRef[];\n  maxDepth?: number;\n  unidirectional?: boolean;\n  mergeRelations?: boolean;\n  kinds?: string[];\n  relations?: string[];\n  entityFilter?: (entity: Entity) => boolean;\n  direction?: Direction;\n  onNodeClick?: (value: EntityNode, event: MouseEvent<unknown>) => void;\n  relationPairs?: RelationPairs;\n  className?: string;\n  zoom?: 'enabled' | 'disabled' | 'enable-on-click';\n  renderNode?: DependencyGraphTypes.RenderNodeFunction<EntityNode>;\n  renderLabel?: DependencyGraphTypes.RenderLabelFunction<EntityEdge>;\n  curve?: 'curveStepBefore' | 'curveMonotoneX';\n  showArrowHeads?: boolean;\n};\n\n/**\n * Core building block for custom entity relations diagrams.\n *\n * @public\n */\nexport const EntityRelationsGraph = (props: EntityRelationsGraphProps) => {\n  const {\n    rootEntityNames,\n    maxDepth = 2,\n    unidirectional = true,\n    mergeRelations = true,\n    kinds,\n    relations,\n    entityFilter,\n    direction = Direction.LEFT_RIGHT,\n    onNodeClick,\n    relationPairs = ALL_RELATION_PAIRS,\n    className,\n    zoom = 'enabled',\n    renderNode,\n    renderLabel,\n    curve,\n    showArrowHeads,\n  } = props;\n\n  const theme = useTheme();\n  const classes = useStyles();\n  const rootEntityRefs = useMemo(\n    () =>\n      (Array.isArray(rootEntityNames)\n        ? rootEntityNames\n        : [rootEntityNames]\n      ).map(e => stringifyEntityRef(e)),\n    [rootEntityNames],\n  );\n  const errorApi = useApi(errorApiRef);\n  const { loading, error, nodes, edges } = useEntityRelationNodesAndEdges({\n    rootEntityRefs,\n    maxDepth,\n    unidirectional,\n    mergeRelations,\n    kinds,\n    relations,\n    entityFilter,\n    onNodeClick,\n    relationPairs,\n  });\n\n  useEffect(() => {\n    if (error) {\n      errorApi.post(error);\n    }\n  }, [errorApi, error]);\n\n  return (\n    <div className={classNames(classes.container, className)}>\n      {loading && <CircularProgress className={classes.progress} />}\n      {nodes && edges && (\n        <DependencyGraph\n          nodes={nodes}\n          edges={edges}\n          renderNode={renderNode || DefaultRenderNode}\n          renderLabel={renderLabel || DefaultRenderLabel}\n          direction={direction}\n          className={classes.graph}\n          paddingX={theme.spacing(4)}\n          paddingY={theme.spacing(4)}\n          labelPosition={DependencyGraphTypes.LabelPosition.RIGHT}\n          labelOffset={theme.spacing(1)}\n          zoom={zoom}\n          curve={curve}\n          showArrowHeads={showArrowHeads}\n        />\n      )}\n    </div>\n  );\n};\n"],"names":[],"mappings":"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"}