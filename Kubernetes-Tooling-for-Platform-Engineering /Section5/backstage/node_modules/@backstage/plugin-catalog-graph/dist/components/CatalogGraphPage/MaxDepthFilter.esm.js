import Box from '@material-ui/core/Box';
import FormControl from '@material-ui/core/FormControl';
import IconButton from '@material-ui/core/IconButton';
import InputAdornment from '@material-ui/core/InputAdornment';
import OutlinedInput from '@material-ui/core/OutlinedInput';
import Typography from '@material-ui/core/Typography';
import { makeStyles } from '@material-ui/core/styles';
import ClearIcon from '@material-ui/icons/Clear';
import React, { useRef, useState, useEffect, useCallback } from 'react';

const useStyles = makeStyles(
  {
    formControl: {
      width: "100%",
      maxWidth: 300
    }
  },
  { name: "PluginCatalogGraphMaxDepthFilter" }
);
const MaxDepthFilter = ({ value, onChange }) => {
  const classes = useStyles();
  const onChangeRef = useRef(onChange);
  const [currentValue, setCurrentValue] = useState(value);
  useEffect(() => {
    onChangeRef.current = onChange;
  }, [onChange]);
  useEffect(() => {
    setCurrentValue(value);
  }, [value]);
  const handleChange = useCallback(
    (event) => {
      const newValueNumeric = Number(event.target.value);
      const newValue = Number.isFinite(newValueNumeric) && newValueNumeric > 0 ? newValueNumeric : Number.POSITIVE_INFINITY;
      setCurrentValue(newValue);
      onChangeRef.current(newValue);
    },
    []
  );
  const reset = useCallback(() => {
    setCurrentValue(Number.POSITIVE_INFINITY);
    onChangeRef.current(Number.POSITIVE_INFINITY);
  }, [onChangeRef]);
  return /* @__PURE__ */ React.createElement(Box, { pb: 1, pt: 1 }, /* @__PURE__ */ React.createElement(FormControl, { variant: "outlined", className: classes.formControl }, /* @__PURE__ */ React.createElement(Typography, { variant: "button" }, "Max Depth"), /* @__PURE__ */ React.createElement(
    OutlinedInput,
    {
      type: "number",
      placeholder: "\u221E Infinite",
      value: Number.isFinite(currentValue) ? String(currentValue) : "",
      onChange: handleChange,
      endAdornment: /* @__PURE__ */ React.createElement(InputAdornment, { position: "end" }, /* @__PURE__ */ React.createElement(
        IconButton,
        {
          "aria-label": "clear max depth",
          onClick: reset,
          edge: "end"
        },
        /* @__PURE__ */ React.createElement(ClearIcon, null)
      )),
      inputProps: {
        "aria-label": "maxp"
      },
      labelWidth: 0
    }
  )));
};

export { MaxDepthFilter };
//# sourceMappingURL=MaxDepthFilter.esm.js.map
