{"version":3,"file":"relations.esm.js","sources":["../../../src/components/EntityRelationsGraph/relations.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  RELATION_API_CONSUMED_BY,\n  RELATION_API_PROVIDED_BY,\n  RELATION_CHILD_OF,\n  RELATION_CONSUMES_API,\n  RELATION_DEPENDENCY_OF,\n  RELATION_DEPENDS_ON,\n  RELATION_HAS_MEMBER,\n  RELATION_HAS_PART,\n  RELATION_MEMBER_OF,\n  RELATION_OWNED_BY,\n  RELATION_OWNER_OF,\n  RELATION_PARENT_OF,\n  RELATION_PART_OF,\n  RELATION_PROVIDES_API,\n} from '@backstage/catalog-model';\n\n/**\n * A pair of two relations that describe the opposite of each other. The first\n * relation is considered as the primary relation.\n *\n * @public\n */\nexport type RelationPairs = [string, string][];\n\n// TODO: This file only contains the pairs for the built-in relations.\n//  How to implement this when custom relations are used? Right now you can pass\n//  the relations everywhere.\n//  Another option is to move this into @backstage/catalog-model\n\n/**\n * A list of pairs of entity relations, used to define which relations are\n * merged together and which the primary relation is.\n *\n * @public\n */\nexport const ALL_RELATION_PAIRS: RelationPairs = [\n  [RELATION_OWNER_OF, RELATION_OWNED_BY],\n  [RELATION_CONSUMES_API, RELATION_API_CONSUMED_BY],\n  [RELATION_API_PROVIDED_BY, RELATION_PROVIDES_API],\n  [RELATION_HAS_PART, RELATION_PART_OF],\n  [RELATION_PARENT_OF, RELATION_CHILD_OF],\n  [RELATION_HAS_MEMBER, RELATION_MEMBER_OF],\n  [RELATION_DEPENDS_ON, RELATION_DEPENDENCY_OF],\n];\n"],"names":[],"mappings":";;AAmDO,MAAM,kBAAoC,GAAA;AAAA,EAC/C,CAAC,mBAAmB,iBAAiB,CAAA;AAAA,EACrC,CAAC,uBAAuB,wBAAwB,CAAA;AAAA,EAChD,CAAC,0BAA0B,qBAAqB,CAAA;AAAA,EAChD,CAAC,mBAAmB,gBAAgB,CAAA;AAAA,EACpC,CAAC,oBAAoB,iBAAiB,CAAA;AAAA,EACtC,CAAC,qBAAqB,kBAAkB,CAAA;AAAA,EACxC,CAAC,qBAAqB,sBAAsB;AAC9C;;;;"}