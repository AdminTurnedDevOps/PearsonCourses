{"version":3,"file":"useEntityStore.esm.js","sources":["../../../src/components/EntityRelationsGraph/useEntityStore.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Entity, stringifyEntityRef } from '@backstage/catalog-model';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport { Dispatch, useCallback, useRef, useState } from 'react';\nimport useAsyncFn from 'react-use/esm/useAsyncFn';\n\n// TODO: This is a good use case for a graphql API, once it is available in the\n// future.\n\n/**\n * Ensures that a set of requested entities is loaded.\n */\nexport function useEntityStore(): {\n  entities: { [ref: string]: Entity };\n  loading: boolean;\n  error?: Error;\n  requestEntities: Dispatch<string[]>;\n} {\n  const catalogClient = useApi(catalogApiRef);\n  const state = useRef({\n    requestedEntities: new Set<string>(),\n    outstandingEntities: new Map<string, Promise<Entity | undefined>>(),\n    cachedEntities: new Map<string, Entity>(),\n  });\n  const [entities, setEntities] = useState<{\n    [ref: string]: Entity;\n  }>({});\n\n  const updateEntities = useCallback(() => {\n    const { cachedEntities, requestedEntities } = state.current;\n    const filteredEntities: { [ref: string]: Entity } = {};\n    requestedEntities.forEach(entityRef => {\n      const entity = cachedEntities.get(entityRef);\n\n      if (entity) {\n        filteredEntities[entityRef] = entity;\n      }\n    });\n    setEntities(filteredEntities);\n  }, [state, setEntities]);\n\n  const [asyncState, fetch] = useAsyncFn(async () => {\n    const { requestedEntities, cachedEntities } = state.current;\n    const entityRefs: string[] = Array.from(requestedEntities).filter(\n      entityRef => !cachedEntities.has(entityRef),\n    );\n    if (entityRefs.length === 0) {\n      updateEntities();\n      return;\n    }\n\n    const { items } = await catalogClient.getEntitiesByRefs({ entityRefs });\n    items.forEach(ent => {\n      if (ent) {\n        const entityRef = stringifyEntityRef(ent);\n        cachedEntities.set(entityRef, ent);\n      }\n    });\n\n    updateEntities();\n  }, [state, updateEntities]);\n  const { loading, error } = asyncState;\n\n  const requestEntities = useCallback(\n    (entityRefs: string[]) => {\n      const n = new Set(entityRefs);\n      const { requestedEntities } = state.current;\n\n      if (\n        n.size !== requestedEntities.size ||\n        Array.from(n).some(e => !requestedEntities.has(e))\n      ) {\n        state.current.requestedEntities = n;\n        fetch();\n        updateEntities();\n      }\n    },\n    [state, fetch, updateEntities],\n  );\n\n  return {\n    entities,\n    loading,\n    error,\n    requestEntities,\n  };\n}\n"],"names":[],"mappings":";;;;;;AA2BO,SAAS,cAKd,GAAA;AACA,EAAM,MAAA,aAAA,GAAgB,OAAO,aAAa,CAAA;AAC1C,EAAA,MAAM,QAAQ,MAAO,CAAA;AAAA,IACnB,iBAAA,sBAAuB,GAAY,EAAA;AAAA,IACnC,mBAAA,sBAAyB,GAAyC,EAAA;AAAA,IAClE,cAAA,sBAAoB,GAAoB;AAAA,GACzC,CAAA;AACD,EAAA,MAAM,CAAC,QAAU,EAAA,WAAW,CAAI,GAAA,QAAA,CAE7B,EAAE,CAAA;AAEL,EAAM,MAAA,cAAA,GAAiB,YAAY,MAAM;AACvC,IAAA,MAAM,EAAE,cAAA,EAAgB,iBAAkB,EAAA,GAAI,KAAM,CAAA,OAAA;AACpD,IAAA,MAAM,mBAA8C,EAAC;AACrD,IAAA,iBAAA,CAAkB,QAAQ,CAAa,SAAA,KAAA;AACrC,MAAM,MAAA,MAAA,GAAS,cAAe,CAAA,GAAA,CAAI,SAAS,CAAA;AAE3C,MAAA,IAAI,MAAQ,EAAA;AACV,QAAA,gBAAA,CAAiB,SAAS,CAAI,GAAA,MAAA;AAAA;AAChC,KACD,CAAA;AACD,IAAA,WAAA,CAAY,gBAAgB,CAAA;AAAA,GAC3B,EAAA,CAAC,KAAO,EAAA,WAAW,CAAC,CAAA;AAEvB,EAAA,MAAM,CAAC,UAAA,EAAY,KAAK,CAAA,GAAI,WAAW,YAAY;AACjD,IAAA,MAAM,EAAE,iBAAA,EAAmB,cAAe,EAAA,GAAI,KAAM,CAAA,OAAA;AACpD,IAAA,MAAM,UAAuB,GAAA,KAAA,CAAM,IAAK,CAAA,iBAAiB,CAAE,CAAA,MAAA;AAAA,MACzD,CAAa,SAAA,KAAA,CAAC,cAAe,CAAA,GAAA,CAAI,SAAS;AAAA,KAC5C;AACA,IAAI,IAAA,UAAA,CAAW,WAAW,CAAG,EAAA;AAC3B,MAAe,cAAA,EAAA;AACf,MAAA;AAAA;AAGF,IAAM,MAAA,EAAE,OAAU,GAAA,MAAM,cAAc,iBAAkB,CAAA,EAAE,YAAY,CAAA;AACtE,IAAA,KAAA,CAAM,QAAQ,CAAO,GAAA,KAAA;AACnB,MAAA,IAAI,GAAK,EAAA;AACP,QAAM,MAAA,SAAA,GAAY,mBAAmB,GAAG,CAAA;AACxC,QAAe,cAAA,CAAA,GAAA,CAAI,WAAW,GAAG,CAAA;AAAA;AACnC,KACD,CAAA;AAED,IAAe,cAAA,EAAA;AAAA,GACd,EAAA,CAAC,KAAO,EAAA,cAAc,CAAC,CAAA;AAC1B,EAAM,MAAA,EAAE,OAAS,EAAA,KAAA,EAAU,GAAA,UAAA;AAE3B,EAAA,MAAM,eAAkB,GAAA,WAAA;AAAA,IACtB,CAAC,UAAyB,KAAA;AACxB,MAAM,MAAA,CAAA,GAAI,IAAI,GAAA,CAAI,UAAU,CAAA;AAC5B,MAAM,MAAA,EAAE,iBAAkB,EAAA,GAAI,KAAM,CAAA,OAAA;AAEpC,MAAA,IACE,CAAE,CAAA,IAAA,KAAS,iBAAkB,CAAA,IAAA,IAC7B,MAAM,IAAK,CAAA,CAAC,CAAE,CAAA,IAAA,CAAK,OAAK,CAAC,iBAAA,CAAkB,GAAI,CAAA,CAAC,CAAC,CACjD,EAAA;AACA,QAAA,KAAA,CAAM,QAAQ,iBAAoB,GAAA,CAAA;AAClC,QAAM,KAAA,EAAA;AACN,QAAe,cAAA,EAAA;AAAA;AACjB,KACF;AAAA,IACA,CAAC,KAAO,EAAA,KAAA,EAAO,cAAc;AAAA,GAC/B;AAEA,EAAO,OAAA;AAAA,IACL,QAAA;AAAA,IACA,OAAA;AAAA,IACA,KAAA;AAAA,IACA;AAAA,GACF;AACF;;;;"}