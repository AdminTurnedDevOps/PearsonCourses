{"version":3,"file":"SelectedRelationsFilter.esm.js","sources":["../../../src/components/CatalogGraphPage/SelectedRelationsFilter.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport React, { useCallback, useMemo } from 'react';\nimport { RelationPairs } from '../EntityRelationsGraph';\n\n/** @public */\nexport type SelectedRelationsFilterClassKey = 'formControl';\n\nconst useStyles = makeStyles(\n  {\n    formControl: {\n      maxWidth: 300,\n    },\n  },\n  { name: 'PluginCatalogGraphSelectedRelationsFilter' },\n);\n\nexport type Props = {\n  relationPairs: RelationPairs;\n  value: string[] | undefined;\n  onChange: (value: string[] | undefined) => void;\n};\n\nexport const SelectedRelationsFilter = ({\n  relationPairs,\n  value,\n  onChange,\n}: Props) => {\n  const classes = useStyles();\n  const relations = useMemo(() => relationPairs.flat(), [relationPairs]);\n\n  const handleChange = useCallback(\n    (_: unknown, v: string[]) => {\n      onChange(relations.every(r => v.includes(r)) ? undefined : v);\n    },\n    [relations, onChange],\n  );\n\n  const handleEmpty = useCallback(() => {\n    onChange(value?.length ? value : undefined);\n  }, [value, onChange]);\n\n  return (\n    <Box pb={1} pt={1}>\n      <Typography variant=\"button\">Relations</Typography>\n      <Autocomplete\n        className={classes.formControl}\n        multiple\n        limitTags={4}\n        disableCloseOnSelect\n        aria-label=\"Relations\"\n        options={relations}\n        value={value ?? relations}\n        onChange={handleChange}\n        onBlur={handleEmpty}\n        renderOption={(option, { selected }) => (\n          <FormControlLabel\n            control={\n              <Checkbox\n                icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n                checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n                checked={selected}\n              />\n            }\n            label={option}\n          />\n        )}\n        size=\"small\"\n        popupIcon={<ExpandMoreIcon data-testid=\"selected-relations-expand\" />}\n        renderInput={params => <TextField {...params} variant=\"outlined\" />}\n      />\n    </Box>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;;;;AA+BA,MAAM,SAAY,GAAA,UAAA;AAAA,EAChB;AAAA,IACE,WAAa,EAAA;AAAA,MACX,QAAU,EAAA;AAAA;AACZ,GACF;AAAA,EACA,EAAE,MAAM,2CAA4C;AACtD,CAAA;AAQO,MAAM,0BAA0B,CAAC;AAAA,EACtC,aAAA;AAAA,EACA,KAAA;AAAA,EACA;AACF,CAAa,KAAA;AACX,EAAA,MAAM,UAAU,SAAU,EAAA;AAC1B,EAAM,MAAA,SAAA,GAAY,QAAQ,MAAM,aAAA,CAAc,MAAQ,EAAA,CAAC,aAAa,CAAC,CAAA;AAErE,EAAA,MAAM,YAAe,GAAA,WAAA;AAAA,IACnB,CAAC,GAAY,CAAgB,KAAA;AAC3B,MAAS,QAAA,CAAA,SAAA,CAAU,MAAM,CAAK,CAAA,KAAA,CAAA,CAAE,SAAS,CAAC,CAAC,CAAI,GAAA,KAAA,CAAA,GAAY,CAAC,CAAA;AAAA,KAC9D;AAAA,IACA,CAAC,WAAW,QAAQ;AAAA,GACtB;AAEA,EAAM,MAAA,WAAA,GAAc,YAAY,MAAM;AACpC,IAAS,QAAA,CAAA,KAAA,EAAO,MAAS,GAAA,KAAA,GAAQ,KAAS,CAAA,CAAA;AAAA,GACzC,EAAA,CAAC,KAAO,EAAA,QAAQ,CAAC,CAAA;AAEpB,EACE,uBAAA,KAAA,CAAA,aAAA,CAAC,GAAI,EAAA,EAAA,EAAA,EAAI,CAAG,EAAA,EAAA,EAAI,CACd,EAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,UAAW,EAAA,EAAA,OAAA,EAAQ,QAAS,EAAA,EAAA,WAAS,CACtC,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,YAAA;AAAA,IAAA;AAAA,MACC,WAAW,OAAQ,CAAA,WAAA;AAAA,MACnB,QAAQ,EAAA,IAAA;AAAA,MACR,SAAW,EAAA,CAAA;AAAA,MACX,oBAAoB,EAAA,IAAA;AAAA,MACpB,YAAW,EAAA,WAAA;AAAA,MACX,OAAS,EAAA,SAAA;AAAA,MACT,OAAO,KAAS,IAAA,SAAA;AAAA,MAChB,QAAU,EAAA,YAAA;AAAA,MACV,MAAQ,EAAA,WAAA;AAAA,MACR,YAAc,EAAA,CAAC,MAAQ,EAAA,EAAE,UACvB,qBAAA,KAAA,CAAA,aAAA;AAAA,QAAC,gBAAA;AAAA,QAAA;AAAA,UACC,OACE,kBAAA,KAAA,CAAA,aAAA;AAAA,YAAC,QAAA;AAAA,YAAA;AAAA,cACC,IAAM,kBAAA,KAAA,CAAA,aAAA,CAAC,wBAAyB,EAAA,EAAA,QAAA,EAAS,OAAQ,EAAA,CAAA;AAAA,cACjD,WAAa,kBAAA,KAAA,CAAA,aAAA,CAAC,YAAa,EAAA,EAAA,QAAA,EAAS,OAAQ,EAAA,CAAA;AAAA,cAC5C,OAAS,EAAA;AAAA;AAAA,WACX;AAAA,UAEF,KAAO,EAAA;AAAA;AAAA,OACT;AAAA,MAEF,IAAK,EAAA,OAAA;AAAA,MACL,SAAW,kBAAA,KAAA,CAAA,aAAA,CAAC,cAAe,EAAA,EAAA,aAAA,EAAY,2BAA4B,EAAA,CAAA;AAAA,MACnE,aAAa,CAAU,MAAA,qBAAA,KAAA,CAAA,aAAA,CAAC,aAAW,GAAG,MAAA,EAAQ,SAAQ,UAAW,EAAA;AAAA;AAAA,GAErE,CAAA;AAEJ;;;;"}