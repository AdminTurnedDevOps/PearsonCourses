{"version":3,"file":"index.cjs.js","sources":["../../src/cluster-locator/index.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CatalogApi } from '@backstage/catalog-client';\nimport { Config } from '@backstage/config';\nimport { Duration } from 'luxon';\nimport { ClusterDetails, KubernetesClustersSupplier } from '../types/types';\nimport { AuthenticationStrategy } from '../auth/types';\nimport { ConfigClusterLocator } from './ConfigClusterLocator';\nimport { GkeClusterLocator } from './GkeClusterLocator';\nimport { CatalogClusterLocator } from './CatalogClusterLocator';\nimport { LocalKubectlProxyClusterLocator } from './LocalKubectlProxyLocator';\nimport {\n  AuthService,\n  BackstageCredentials,\n  LoggerService,\n} from '@backstage/backend-plugin-api';\n\nclass CombinedClustersSupplier implements KubernetesClustersSupplier {\n  constructor(\n    readonly clusterSuppliers: KubernetesClustersSupplier[],\n    readonly logger: LoggerService,\n  ) {}\n\n  async getClusters(options: {\n    credentials: BackstageCredentials;\n  }): Promise<ClusterDetails[]> {\n    const clusters = await Promise.all(\n      this.clusterSuppliers.map(supplier => supplier.getClusters(options)),\n    )\n      .then(res => {\n        return res.flat();\n      })\n      .catch(e => {\n        throw e;\n      });\n    return this.warnDuplicates(clusters);\n  }\n\n  private warnDuplicates(clusters: ClusterDetails[]): ClusterDetails[] {\n    const clusterNames = new Set<string>();\n    const duplicatedNames = new Set<string>();\n    for (const clusterName of clusters.map(c => c.name)) {\n      if (clusterNames.has(clusterName)) {\n        duplicatedNames.add(clusterName);\n      } else {\n        clusterNames.add(clusterName);\n      }\n    }\n    for (const clusterName of duplicatedNames) {\n      this.logger.warn(`Duplicate cluster name '${clusterName}'`);\n    }\n    return clusters;\n  }\n}\n\nexport const getCombinedClusterSupplier = (\n  rootConfig: Config,\n  catalogClient: CatalogApi,\n  authStrategy: AuthenticationStrategy,\n  logger: LoggerService,\n  refreshInterval: Duration | undefined = undefined,\n  auth: AuthService,\n): KubernetesClustersSupplier => {\n  const clusterSuppliers = rootConfig\n    .getConfigArray('kubernetes.clusterLocatorMethods')\n    .map(clusterLocatorMethod => {\n      const type = clusterLocatorMethod.getString('type');\n      switch (type) {\n        case 'catalog':\n          return CatalogClusterLocator.fromConfig(catalogClient, auth);\n        case 'localKubectlProxy':\n          return new LocalKubectlProxyClusterLocator();\n        case 'config':\n          return ConfigClusterLocator.fromConfig(\n            clusterLocatorMethod,\n            authStrategy,\n          );\n        case 'gke':\n          return GkeClusterLocator.fromConfig(\n            clusterLocatorMethod,\n            refreshInterval,\n          );\n        default:\n          throw new Error(\n            `Unsupported kubernetes.clusterLocatorMethods: \"${type}\"`,\n          );\n      }\n    });\n\n  return new CombinedClustersSupplier(clusterSuppliers, logger);\n};\n"],"names":["CatalogClusterLocator","LocalKubectlProxyClusterLocator","ConfigClusterLocator","GkeClusterLocator"],"mappings":";;;;;;;AA+BA,MAAM,wBAA+D,CAAA;AAAA,EACnE,WAAA,CACW,kBACA,MACT,EAAA;AAFS,IAAA,IAAA,CAAA,gBAAA,GAAA,gBAAA;AACA,IAAA,IAAA,CAAA,MAAA,GAAA,MAAA;AAAA;AACR,EAEH,MAAM,YAAY,OAEY,EAAA;AAC5B,IAAM,MAAA,QAAA,GAAW,MAAM,OAAQ,CAAA,GAAA;AAAA,MAC7B,KAAK,gBAAiB,CAAA,GAAA,CAAI,cAAY,QAAS,CAAA,WAAA,CAAY,OAAO,CAAC;AAAA,KACrE,CACG,KAAK,CAAO,GAAA,KAAA;AACX,MAAA,OAAO,IAAI,IAAK,EAAA;AAAA,KACjB,CACA,CAAA,KAAA,CAAM,CAAK,CAAA,KAAA;AACV,MAAM,MAAA,CAAA;AAAA,KACP,CAAA;AACH,IAAO,OAAA,IAAA,CAAK,eAAe,QAAQ,CAAA;AAAA;AACrC,EAEQ,eAAe,QAA8C,EAAA;AACnE,IAAM,MAAA,YAAA,uBAAmB,GAAY,EAAA;AACrC,IAAM,MAAA,eAAA,uBAAsB,GAAY,EAAA;AACxC,IAAA,KAAA,MAAW,eAAe,QAAS,CAAA,GAAA,CAAI,CAAK,CAAA,KAAA,CAAA,CAAE,IAAI,CAAG,EAAA;AACnD,MAAI,IAAA,YAAA,CAAa,GAAI,CAAA,WAAW,CAAG,EAAA;AACjC,QAAA,eAAA,CAAgB,IAAI,WAAW,CAAA;AAAA,OAC1B,MAAA;AACL,QAAA,YAAA,CAAa,IAAI,WAAW,CAAA;AAAA;AAC9B;AAEF,IAAA,KAAA,MAAW,eAAe,eAAiB,EAAA;AACzC,MAAA,IAAA,CAAK,MAAO,CAAA,IAAA,CAAK,CAA2B,wBAAA,EAAA,WAAW,CAAG,CAAA,CAAA,CAAA;AAAA;AAE5D,IAAO,OAAA,QAAA;AAAA;AAEX;AAEa,MAAA,0BAAA,GAA6B,CACxC,UACA,EAAA,aAAA,EACA,cACA,MACA,EAAA,eAAA,GAAwC,QACxC,IAC+B,KAAA;AAC/B,EAAA,MAAM,mBAAmB,UACtB,CAAA,cAAA,CAAe,kCAAkC,CAAA,CACjD,IAAI,CAAwB,oBAAA,KAAA;AAC3B,IAAM,MAAA,IAAA,GAAO,oBAAqB,CAAA,SAAA,CAAU,MAAM,CAAA;AAClD,IAAA,QAAQ,IAAM;AAAA,MACZ,KAAK,SAAA;AACH,QAAO,OAAAA,2CAAA,CAAsB,UAAW,CAAA,aAAA,EAAe,IAAI,CAAA;AAAA,MAC7D,KAAK,mBAAA;AACH,QAAA,OAAO,IAAIC,wDAAgC,EAAA;AAAA,MAC7C,KAAK,QAAA;AACH,QAAA,OAAOC,yCAAqB,CAAA,UAAA;AAAA,UAC1B,oBAAA;AAAA,UACA;AAAA,SACF;AAAA,MACF,KAAK,KAAA;AACH,QAAA,OAAOC,mCAAkB,CAAA,UAAA;AAAA,UACvB,oBAAA;AAAA,UACA;AAAA,SACF;AAAA,MACF;AACE,QAAA,MAAM,IAAI,KAAA;AAAA,UACR,kDAAkD,IAAI,CAAA,CAAA;AAAA,SACxD;AAAA;AACJ,GACD,CAAA;AAEH,EAAO,OAAA,IAAI,wBAAyB,CAAA,gBAAA,EAAkB,MAAM,CAAA;AAC9D;;;;"}