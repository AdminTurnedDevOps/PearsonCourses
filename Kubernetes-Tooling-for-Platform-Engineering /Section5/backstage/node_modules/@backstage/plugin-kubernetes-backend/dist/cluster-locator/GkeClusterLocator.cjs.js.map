{"version":3,"file":"GkeClusterLocator.cjs.js","sources":["../../src/cluster-locator/GkeClusterLocator.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ANNOTATION_KUBERNETES_AUTH_PROVIDER } from '@backstage/plugin-kubernetes-common';\nimport { Config } from '@backstage/config';\nimport { ForwardedError } from '@backstage/errors';\nimport * as container from '@google-cloud/container';\nimport { Duration } from 'luxon';\nimport { runPeriodically } from '../service/runPeriodically';\nimport { ClusterDetails, KubernetesClustersSupplier } from '../types/types';\nimport packageinfo from '../../package.json';\n\ninterface MatchResourceLabelEntry {\n  key: string;\n  value: string;\n}\n\ntype GkeClusterLocatorOptions = {\n  projectId: string;\n  authProvider: string;\n  region?: string;\n  skipTLSVerify?: boolean;\n  skipMetricsLookup?: boolean;\n  exposeDashboard?: boolean;\n  matchingResourceLabels?: MatchResourceLabelEntry[];\n};\n\nexport class GkeClusterLocator implements KubernetesClustersSupplier {\n  constructor(\n    private readonly options: GkeClusterLocatorOptions,\n    private readonly client: container.v1.ClusterManagerClient,\n    private clusterDetails: ClusterDetails[] | undefined = undefined,\n    private hasClusterDetails: boolean = false,\n  ) {}\n\n  static fromConfigWithClient(\n    config: Config,\n    client: container.v1.ClusterManagerClient,\n    refreshInterval?: Duration,\n  ): GkeClusterLocator {\n    const matchingResourceLabels: MatchResourceLabelEntry[] =\n      config.getOptionalConfigArray('matchingResourceLabels')?.map(mrl => {\n        return { key: mrl.getString('key'), value: mrl.getString('value') };\n      }) ?? [];\n\n    const storeAuthProviderString =\n      config.getOptionalString('authProvider') === 'googleServiceAccount'\n        ? 'googleServiceAccount'\n        : 'google';\n\n    const options = {\n      projectId: config.getString('projectId'),\n      authProvider: storeAuthProviderString,\n      region: config.getOptionalString('region') ?? '-',\n      skipTLSVerify: config.getOptionalBoolean('skipTLSVerify') ?? false,\n      skipMetricsLookup:\n        config.getOptionalBoolean('skipMetricsLookup') ?? false,\n      exposeDashboard: config.getOptionalBoolean('exposeDashboard') ?? false,\n      matchingResourceLabels,\n    };\n    const gkeClusterLocator = new GkeClusterLocator(options, client);\n    if (refreshInterval) {\n      runPeriodically(\n        () => gkeClusterLocator.refreshClusters(),\n        refreshInterval.toMillis(),\n      );\n    }\n    return gkeClusterLocator;\n  }\n\n  // Added an `x-goog-api-client` header to API requests made by the GKE cluster locator to clearly identify API requests from this plugin.\n  static fromConfig(\n    config: Config,\n    refreshInterval: Duration | undefined = undefined,\n  ): GkeClusterLocator {\n    return GkeClusterLocator.fromConfigWithClient(\n      config,\n      new container.v1.ClusterManagerClient({\n        libName: `backstage/kubernetes-backend.GkeClusterLocator`,\n        libVersion: packageinfo.version,\n      }),\n      refreshInterval,\n    );\n  }\n\n  async getClusters(): Promise<ClusterDetails[]> {\n    if (!this.hasClusterDetails) {\n      // refresh at least once when first called, when retries are disabled and in tests\n      await this.refreshClusters();\n    }\n    return this.clusterDetails ?? [];\n  }\n\n  // TODO pass caData into the object\n  async refreshClusters(): Promise<void> {\n    const {\n      projectId,\n      region,\n      authProvider,\n      skipTLSVerify,\n      skipMetricsLookup,\n      exposeDashboard,\n      matchingResourceLabels,\n    } = this.options;\n    const request = {\n      parent: `projects/${projectId}/locations/${region}`,\n    };\n\n    try {\n      const [response] = await this.client.listClusters(request);\n      this.clusterDetails = (response.clusters ?? [])\n        .filter(r => {\n          return matchingResourceLabels?.every(mrl => {\n            if (!r.resourceLabels) {\n              return false;\n            }\n            return r.resourceLabels[mrl.key] === mrl.value;\n          });\n        })\n        .map(r => ({\n          // TODO filter out clusters which don't have name or endpoint\n          name: r.name ?? 'unknown',\n          url: `https://${r.endpoint ?? ''}`,\n          authMetadata: { [ANNOTATION_KUBERNETES_AUTH_PROVIDER]: authProvider },\n          skipTLSVerify,\n          skipMetricsLookup,\n          ...(exposeDashboard\n            ? {\n                dashboardApp: 'gke',\n                dashboardParameters: {\n                  projectId,\n                  region,\n                  clusterName: r.name,\n                },\n              }\n            : {}),\n        }));\n      this.hasClusterDetails = true;\n    } catch (e) {\n      throw new ForwardedError(\n        `There was an error retrieving clusters from GKE for projectId=${projectId} region=${region}`,\n        e,\n      );\n    }\n  }\n}\n"],"names":["runPeriodically","container","packageinfo","ANNOTATION_KUBERNETES_AUTH_PROVIDER","ForwardedError"],"mappings":"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"}