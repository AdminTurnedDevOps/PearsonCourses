{"version":3,"file":"ServiceAccountStrategy.cjs.js","sources":["../../src/auth/ServiceAccountStrategy.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AuthMetadata,\n  AuthenticationStrategy,\n  ClusterDetails,\n  KubernetesCredential,\n} from '@backstage/plugin-kubernetes-node';\nimport { KubeConfig, User } from '@kubernetes/client-node';\nimport fs from 'fs-extra';\n\n/**\n *\n * @public\n */\nexport class ServiceAccountStrategy implements AuthenticationStrategy {\n  public async getCredential(\n    clusterDetails: ClusterDetails,\n  ): Promise<KubernetesCredential> {\n    const token = clusterDetails.authMetadata.serviceAccountToken;\n    if (token) {\n      return { type: 'bearer token', token };\n    }\n    const kc = new KubeConfig();\n    kc.loadFromCluster();\n    // loadFromCluster is guaranteed to populate the user\n    const user = kc.getCurrentUser() as User;\n\n    return {\n      type: 'bearer token',\n      token: fs.readFileSync(user.authProvider.config.tokenFile).toString(),\n    };\n  }\n\n  public validateCluster(): Error[] {\n    return [];\n  }\n\n  public presentAuthMetadata(_authMetadata: AuthMetadata): AuthMetadata {\n    return {};\n  }\n}\n"],"names":["KubeConfig","fs"],"mappings":";;;;;;;;;AA6BO,MAAM,sBAAyD,CAAA;AAAA,EACpE,MAAa,cACX,cAC+B,EAAA;AAC/B,IAAM,MAAA,KAAA,GAAQ,eAAe,YAAa,CAAA,mBAAA;AAC1C,IAAA,IAAI,KAAO,EAAA;AACT,MAAO,OAAA,EAAE,IAAM,EAAA,cAAA,EAAgB,KAAM,EAAA;AAAA;AAEvC,IAAM,MAAA,EAAA,GAAK,IAAIA,qBAAW,EAAA;AAC1B,IAAA,EAAA,CAAG,eAAgB,EAAA;AAEnB,IAAM,MAAA,IAAA,GAAO,GAAG,cAAe,EAAA;AAE/B,IAAO,OAAA;AAAA,MACL,IAAM,EAAA,cAAA;AAAA,MACN,KAAA,EAAOC,oBAAG,YAAa,CAAA,IAAA,CAAK,aAAa,MAAO,CAAA,SAAS,EAAE,QAAS;AAAA,KACtE;AAAA;AACF,EAEO,eAA2B,GAAA;AAChC,IAAA,OAAO,EAAC;AAAA;AACV,EAEO,oBAAoB,aAA2C,EAAA;AACpE,IAAA,OAAO,EAAC;AAAA;AAEZ;;;;"}