{"version":3,"file":"response.esm.js","sources":["../../src/util/response.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FetchResponse } from '@backstage/plugin-kubernetes-common';\nimport { GroupedResponses } from '../types';\n\n/** @public */\nexport const groupResponses = (\n  fetchResponse: FetchResponse[],\n): GroupedResponses => {\n  // TODO this could probably be a lodash groupBy\n  return fetchResponse.reduce(\n    (prev, next) => {\n      switch (next.type) {\n        case 'deployments':\n          prev.deployments.push(...next.resources);\n          break;\n        case 'pods':\n          prev.pods.push(...next.resources);\n          break;\n        case 'replicasets':\n          prev.replicaSets.push(...next.resources);\n          break;\n        case 'services':\n          prev.services.push(...next.resources);\n          break;\n        case 'configmaps':\n          prev.configMaps.push(...next.resources);\n          break;\n        case 'horizontalpodautoscalers':\n          prev.horizontalPodAutoscalers.push(...next.resources);\n          break;\n        case 'ingresses':\n          prev.ingresses.push(...next.resources);\n          break;\n        case 'jobs':\n          prev.jobs.push(...next.resources);\n          break;\n        case 'cronjobs':\n          prev.cronJobs.push(...next.resources);\n          break;\n        case 'customresources':\n          prev.customResources.push(...next.resources);\n          break;\n        case 'statefulsets':\n          prev.statefulsets.push(...next.resources);\n          break;\n        case 'daemonsets':\n          prev.daemonSets.push(...next.resources);\n          break;\n        default:\n      }\n      return prev;\n    },\n    {\n      pods: [],\n      replicaSets: [],\n      deployments: [],\n      services: [],\n      configMaps: [],\n      horizontalPodAutoscalers: [],\n      ingresses: [],\n      jobs: [],\n      cronJobs: [],\n      customResources: [],\n      statefulsets: [],\n      daemonSets: [],\n    } as GroupedResponses,\n  );\n};\n"],"names":[],"mappings":"AAoBa,MAAA,cAAA,GAAiB,CAC5B,aACqB,KAAA;AAErB,EAAA,OAAO,aAAc,CAAA,MAAA;AAAA,IACnB,CAAC,MAAM,IAAS,KAAA;AACd,MAAA,QAAQ,KAAK,IAAM;AAAA,QACjB,KAAK,aAAA;AACH,UAAA,IAAA,CAAK,WAAY,CAAA,IAAA,CAAK,GAAG,IAAA,CAAK,SAAS,CAAA;AACvC,UAAA;AAAA,QACF,KAAK,MAAA;AACH,UAAA,IAAA,CAAK,IAAK,CAAA,IAAA,CAAK,GAAG,IAAA,CAAK,SAAS,CAAA;AAChC,UAAA;AAAA,QACF,KAAK,aAAA;AACH,UAAA,IAAA,CAAK,WAAY,CAAA,IAAA,CAAK,GAAG,IAAA,CAAK,SAAS,CAAA;AACvC,UAAA;AAAA,QACF,KAAK,UAAA;AACH,UAAA,IAAA,CAAK,QAAS,CAAA,IAAA,CAAK,GAAG,IAAA,CAAK,SAAS,CAAA;AACpC,UAAA;AAAA,QACF,KAAK,YAAA;AACH,UAAA,IAAA,CAAK,UAAW,CAAA,IAAA,CAAK,GAAG,IAAA,CAAK,SAAS,CAAA;AACtC,UAAA;AAAA,QACF,KAAK,0BAAA;AACH,UAAA,IAAA,CAAK,wBAAyB,CAAA,IAAA,CAAK,GAAG,IAAA,CAAK,SAAS,CAAA;AACpD,UAAA;AAAA,QACF,KAAK,WAAA;AACH,UAAA,IAAA,CAAK,SAAU,CAAA,IAAA,CAAK,GAAG,IAAA,CAAK,SAAS,CAAA;AACrC,UAAA;AAAA,QACF,KAAK,MAAA;AACH,UAAA,IAAA,CAAK,IAAK,CAAA,IAAA,CAAK,GAAG,IAAA,CAAK,SAAS,CAAA;AAChC,UAAA;AAAA,QACF,KAAK,UAAA;AACH,UAAA,IAAA,CAAK,QAAS,CAAA,IAAA,CAAK,GAAG,IAAA,CAAK,SAAS,CAAA;AACpC,UAAA;AAAA,QACF,KAAK,iBAAA;AACH,UAAA,IAAA,CAAK,eAAgB,CAAA,IAAA,CAAK,GAAG,IAAA,CAAK,SAAS,CAAA;AAC3C,UAAA;AAAA,QACF,KAAK,cAAA;AACH,UAAA,IAAA,CAAK,YAAa,CAAA,IAAA,CAAK,GAAG,IAAA,CAAK,SAAS,CAAA;AACxC,UAAA;AAAA,QACF,KAAK,YAAA;AACH,UAAA,IAAA,CAAK,UAAW,CAAA,IAAA,CAAK,GAAG,IAAA,CAAK,SAAS,CAAA;AACtC,UAAA;AACF;AAEF,MAAO,OAAA,IAAA;AAAA,KACT;AAAA,IACA;AAAA,MACE,MAAM,EAAC;AAAA,MACP,aAAa,EAAC;AAAA,MACd,aAAa,EAAC;AAAA,MACd,UAAU,EAAC;AAAA,MACX,YAAY,EAAC;AAAA,MACb,0BAA0B,EAAC;AAAA,MAC3B,WAAW,EAAC;AAAA,MACZ,MAAM,EAAC;AAAA,MACP,UAAU,EAAC;AAAA,MACX,iBAAiB,EAAC;AAAA,MAClB,cAAc,EAAC;AAAA,MACf,YAAY;AAAC;AACf,GACF;AACF;;;;"}