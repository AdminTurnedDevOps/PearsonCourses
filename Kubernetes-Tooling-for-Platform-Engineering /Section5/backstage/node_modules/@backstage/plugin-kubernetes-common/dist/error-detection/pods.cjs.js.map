{"version":3,"file":"pods.cjs.js","sources":["../../src/error-detection/pods.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pod, IContainerStatus, IContainer } from 'kubernetes-models/v1';\nimport { DetectedError, ErrorMapper, ProposedFix } from './types';\nimport { detectErrorsInObjects } from './common';\nimport lodash from 'lodash';\nimport { DateTime } from 'luxon';\n\nfunction isPodReadinessProbeUnready({\n  container,\n  containerStatus,\n}: ContainerSpecAndStatus): boolean {\n  if (\n    containerStatus.ready ||\n    containerStatus.state?.running?.startedAt === undefined ||\n    !container.readinessProbe\n  ) {\n    return false;\n  }\n  const startDateTime = DateTime.fromISO(\n    containerStatus.state?.running?.startedAt,\n  )\n    // Add initial delay\n    .plus({\n      seconds: container.readinessProbe?.initialDelaySeconds ?? 0,\n    })\n    // Add failure threshold\n    .plus({\n      seconds:\n        (container.readinessProbe?.periodSeconds ?? 0) *\n        (container.readinessProbe?.failureThreshold ?? 0),\n    });\n  return startDateTime < DateTime.now();\n}\n\ninterface ContainerSpecAndStatus {\n  container: IContainer;\n  containerStatus: IContainerStatus;\n}\n\nconst podToContainerSpecsAndStatuses = (pod: Pod): ContainerSpecAndStatus[] => {\n  const specs = lodash.groupBy(pod.spec?.containers ?? [], value => value.name);\n\n  const result: ContainerSpecAndStatus[] = [];\n\n  for (const cs of pod.status?.containerStatuses ?? []) {\n    const spec = specs[cs.name];\n    if (spec.length > 0) {\n      result.push({\n        container: spec[0],\n        containerStatus: cs,\n      });\n    }\n  }\n\n  return result;\n};\n\nconst readinessProbeProposedFixes = (pod: Pod): ProposedFix | undefined => {\n  const firstUnreadyContainerStatus = pod.status?.containerStatuses?.find(\n    cs => {\n      return cs.ready === false;\n    },\n  );\n\n  return {\n    errorType: 'ReadinessProbeFailed',\n    rootCauseExplanation: `The container ${firstUnreadyContainerStatus?.name} failed to start properly, but is not crashing`,\n    actions: [\n      'Ensure that the container starts correctly locally',\n      \"Check the container's logs looking for error during startup\",\n    ],\n    type: 'events',\n    podName: pod.metadata?.name ?? '',\n  };\n};\n\nconst restartingPodProposedFixes = (pod: Pod): ProposedFix | undefined => {\n  const lastTerminatedCs = (pod.status?.containerStatuses ?? []).find(\n    cs => cs.lastState?.terminated !== undefined,\n  );\n\n  const lastTerminated = lastTerminatedCs?.lastState?.terminated;\n\n  if (!lastTerminated) {\n    return undefined;\n  }\n\n  switch (lastTerminated?.reason) {\n    case 'Unknown':\n      return {\n        // TODO check this one, it's more likely a cluster issue\n        errorType: 'Unknown',\n        rootCauseExplanation: `This container has exited with a non-zero exit code (${lastTerminated.exitCode})`,\n        actions: ['Check the crash logs for stacktraces'],\n        container: lastTerminatedCs.name,\n        type: 'logs',\n      };\n    case 'Error':\n      return {\n        errorType: 'Error',\n        rootCauseExplanation: `This container has exited with a non-zero exit code (${lastTerminated.exitCode})`,\n        actions: ['Check the crash logs for stacktraces'],\n        container: lastTerminatedCs.name,\n        type: 'logs',\n      };\n    case 'OOMKilled':\n      return {\n        errorType: 'OOMKilled',\n        rootCauseExplanation: `The container \"${lastTerminatedCs.name}\" has crashed because it has tried to use more memory that it has been allocated`,\n        actions: [\n          `Increase the amount of memory assigned to the container`,\n          'Ensure the application is memory bounded and is not trying to consume too much memory',\n        ],\n        docsLink:\n          'https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/#exceed-a-container-s-memory-limit',\n        type: 'docs',\n      };\n    default:\n      return undefined;\n  }\n};\n\nconst waitingProposedFix = (pod: Pod): ProposedFix | undefined => {\n  const waitingCs = (pod.status?.containerStatuses ?? []).find(\n    cs => cs.state?.waiting !== undefined,\n  );\n\n  const waiting = (pod.status?.containerStatuses ?? [])\n    .map(cs => cs.state?.waiting)\n    .find(w => w?.reason !== undefined);\n\n  switch (waiting?.reason) {\n    case 'InvalidImageName':\n      return {\n        errorType: 'InvalidImageName',\n        rootCauseExplanation: 'The image in the pod is invalid',\n        actions: ['Ensure the image name is correct and valid image name'],\n        type: 'docs',\n        docsLink:\n          'https://docs.docker.com/engine/reference/commandline/tag/#extended-description',\n      };\n    case 'ImagePullBackOff':\n      return {\n        errorType: 'ImagePullBackOff',\n        rootCauseExplanation:\n          'The image either could not be found or Kubernetes does not have permission to pull it',\n        actions: [\n          'Ensure the image name is correct',\n          'Ensure Kubernetes has permission to pull this image',\n        ],\n        type: 'docs',\n        docsLink:\n          'https://kubernetes.io/docs/concepts/containers/images/#imagepullbackoff',\n      };\n    case 'CrashLoopBackOff':\n      return {\n        errorType: 'CrashLoopBackOff',\n        rootCauseExplanation: `The container ${waitingCs?.name} has crashed many times, it will be exponentially restarted until it stops crashing`,\n        actions: ['Check the crash logs for stacktraces'],\n        type: 'logs',\n        container: waitingCs?.name ?? 'unknown',\n      };\n    case 'CreateContainerConfigError':\n      return {\n        errorType: 'CreateContainerConfigError',\n        rootCauseExplanation:\n          'There is missing or mismatching configuration required to start the container',\n        actions: [\n          'Ensure ConfigMaps references in the Deployment manifest are correct and the keys exist',\n          'Ensure Secrets references in the Deployment manifest are correct and the keys exist',\n        ],\n        type: 'docs',\n        docsLink:\n          'https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/',\n      };\n    default:\n      return undefined;\n  }\n};\n\nconst podErrorMappers: ErrorMapper<Pod>[] = [\n  {\n    detectErrors: pod => {\n      return podToContainerSpecsAndStatuses(pod)\n        .filter(isPodReadinessProbeUnready)\n        .map(cs => ({\n          type: 'readiness-probe-taking-too-long',\n          message: `The container ${cs.container.name} failed to start properly, but is not crashing`,\n          severity: 4,\n          proposedFix: readinessProbeProposedFixes(pod),\n          sourceRef: {\n            name: pod.metadata?.name ?? 'unknown pod',\n            namespace: pod.metadata?.namespace ?? 'unknown namespace',\n            kind: 'Pod',\n            apiGroup: 'v1',\n          },\n          occurrenceCount: 1,\n        }));\n    },\n  },\n  {\n    detectErrors: pod => {\n      return (pod.status?.containerStatuses ?? [])\n        .filter(cs => cs.state?.waiting?.message !== undefined)\n        .map(cs => ({\n          type: 'container-waiting',\n          message: cs.state?.waiting?.message ?? 'container waiting',\n          severity: 4,\n          proposedFix: waitingProposedFix(pod),\n          sourceRef: {\n            name: pod.metadata?.name ?? 'unknown pod',\n            namespace: pod.metadata?.namespace ?? 'unknown namespace',\n            kind: 'Pod',\n            apiGroup: 'v1',\n          },\n          occurrenceCount: 1,\n        }));\n    },\n  },\n  {\n    detectErrors: pod => {\n      return (pod.status?.containerStatuses ?? [])\n        .filter(cs => cs.restartCount > 0)\n        .map(cs => ({\n          type: 'containers-restarting',\n          message: `container=${cs.name} restarted ${cs.restartCount} times`,\n          severity: 4,\n          proposedFix: restartingPodProposedFixes(pod),\n          sourceRef: {\n            name: pod.metadata?.name ?? 'unknown pod',\n            namespace: pod.metadata?.namespace ?? 'unknown namespace',\n            kind: 'Pod',\n            apiGroup: 'v1',\n          },\n          occurrenceCount: cs.restartCount,\n        }));\n    },\n  },\n];\n\nexport const detectErrorsInPods = (pods: Pod[]): DetectedError[] =>\n  detectErrorsInObjects(pods, podErrorMappers);\n"],"names":["DateTime","lodash","detectErrorsInObjects"],"mappings":";;;;;;;;;;AAsBA,SAAS,0BAA2B,CAAA;AAAA,EAClC,SAAA;AAAA,EACA;AACF,CAAoC,EAAA;AAClC,EACE,IAAA,eAAA,CAAgB,SAChB,eAAgB,CAAA,KAAA,EAAO,SAAS,SAAc,KAAA,KAAA,CAAA,IAC9C,CAAC,SAAA,CAAU,cACX,EAAA;AACA,IAAO,OAAA,KAAA;AAAA;AAET,EAAA,MAAM,gBAAgBA,cAAS,CAAA,OAAA;AAAA,IAC7B,eAAA,CAAgB,OAAO,OAAS,EAAA;AAAA,IAG/B,IAAK,CAAA;AAAA,IACJ,OAAA,EAAS,SAAU,CAAA,cAAA,EAAgB,mBAAuB,IAAA;AAAA,GAC3D,EAEA,IAAK,CAAA;AAAA,IACJ,UACG,SAAU,CAAA,cAAA,EAAgB,iBAAiB,CAC3C,KAAA,SAAA,CAAU,gBAAgB,gBAAoB,IAAA,CAAA;AAAA,GAClD,CAAA;AACH,EAAO,OAAA,aAAA,GAAgBA,eAAS,GAAI,EAAA;AACtC;AAOA,MAAM,8BAAA,GAAiC,CAAC,GAAuC,KAAA;AAC7E,EAAM,MAAA,KAAA,GAAQC,uBAAO,CAAA,OAAA,CAAQ,GAAI,CAAA,IAAA,EAAM,cAAc,EAAC,EAAG,CAAS,KAAA,KAAA,KAAA,CAAM,IAAI,CAAA;AAE5E,EAAA,MAAM,SAAmC,EAAC;AAE1C,EAAA,KAAA,MAAW,EAAM,IAAA,GAAA,CAAI,MAAQ,EAAA,iBAAA,IAAqB,EAAI,EAAA;AACpD,IAAM,MAAA,IAAA,GAAO,KAAM,CAAA,EAAA,CAAG,IAAI,CAAA;AAC1B,IAAI,IAAA,IAAA,CAAK,SAAS,CAAG,EAAA;AACnB,MAAA,MAAA,CAAO,IAAK,CAAA;AAAA,QACV,SAAA,EAAW,KAAK,CAAC,CAAA;AAAA,QACjB,eAAiB,EAAA;AAAA,OAClB,CAAA;AAAA;AACH;AAGF,EAAO,OAAA,MAAA;AACT,CAAA;AAEA,MAAM,2BAAA,GAA8B,CAAC,GAAsC,KAAA;AACzE,EAAM,MAAA,2BAAA,GAA8B,GAAI,CAAA,MAAA,EAAQ,iBAAmB,EAAA,IAAA;AAAA,IACjE,CAAM,EAAA,KAAA;AACJ,MAAA,OAAO,GAAG,KAAU,KAAA,KAAA;AAAA;AACtB,GACF;AAEA,EAAO,OAAA;AAAA,IACL,SAAW,EAAA,sBAAA;AAAA,IACX,oBAAA,EAAsB,CAAiB,cAAA,EAAA,2BAAA,EAA6B,IAAI,CAAA,8CAAA,CAAA;AAAA,IACxE,OAAS,EAAA;AAAA,MACP,oDAAA;AAAA,MACA;AAAA,KACF;AAAA,IACA,IAAM,EAAA,QAAA;AAAA,IACN,OAAA,EAAS,GAAI,CAAA,QAAA,EAAU,IAAQ,IAAA;AAAA,GACjC;AACF,CAAA;AAEA,MAAM,0BAAA,GAA6B,CAAC,GAAsC,KAAA;AACxE,EAAA,MAAM,gBAAoB,GAAA,CAAA,GAAA,CAAI,MAAQ,EAAA,iBAAA,IAAqB,EAAI,EAAA,IAAA;AAAA,IAC7D,CAAA,EAAA,KAAM,EAAG,CAAA,SAAA,EAAW,UAAe,KAAA,KAAA;AAAA,GACrC;AAEA,EAAM,MAAA,cAAA,GAAiB,kBAAkB,SAAW,EAAA,UAAA;AAEpD,EAAA,IAAI,CAAC,cAAgB,EAAA;AACnB,IAAO,OAAA,KAAA,CAAA;AAAA;AAGT,EAAA,QAAQ,gBAAgB,MAAQ;AAAA,IAC9B,KAAK,SAAA;AACH,MAAO,OAAA;AAAA;AAAA,QAEL,SAAW,EAAA,SAAA;AAAA,QACX,oBAAA,EAAsB,CAAwD,qDAAA,EAAA,cAAA,CAAe,QAAQ,CAAA,CAAA,CAAA;AAAA,QACrG,OAAA,EAAS,CAAC,sCAAsC,CAAA;AAAA,QAChD,WAAW,gBAAiB,CAAA,IAAA;AAAA,QAC5B,IAAM,EAAA;AAAA,OACR;AAAA,IACF,KAAK,OAAA;AACH,MAAO,OAAA;AAAA,QACL,SAAW,EAAA,OAAA;AAAA,QACX,oBAAA,EAAsB,CAAwD,qDAAA,EAAA,cAAA,CAAe,QAAQ,CAAA,CAAA,CAAA;AAAA,QACrG,OAAA,EAAS,CAAC,sCAAsC,CAAA;AAAA,QAChD,WAAW,gBAAiB,CAAA,IAAA;AAAA,QAC5B,IAAM,EAAA;AAAA,OACR;AAAA,IACF,KAAK,WAAA;AACH,MAAO,OAAA;AAAA,QACL,SAAW,EAAA,WAAA;AAAA,QACX,oBAAA,EAAsB,CAAkB,eAAA,EAAA,gBAAA,CAAiB,IAAI,CAAA,gFAAA,CAAA;AAAA,QAC7D,OAAS,EAAA;AAAA,UACP,CAAA,uDAAA,CAAA;AAAA,UACA;AAAA,SACF;AAAA,QACA,QACE,EAAA,oHAAA;AAAA,QACF,IAAM,EAAA;AAAA,OACR;AAAA,IACF;AACE,MAAO,OAAA,KAAA,CAAA;AAAA;AAEb,CAAA;AAEA,MAAM,kBAAA,GAAqB,CAAC,GAAsC,KAAA;AAChE,EAAA,MAAM,SAAa,GAAA,CAAA,GAAA,CAAI,MAAQ,EAAA,iBAAA,IAAqB,EAAI,EAAA,IAAA;AAAA,IACtD,CAAA,EAAA,KAAM,EAAG,CAAA,KAAA,EAAO,OAAY,KAAA,KAAA;AAAA,GAC9B;AAEA,EAAA,MAAM,WAAW,GAAI,CAAA,MAAA,EAAQ,iBAAqB,IAAA,IAC/C,GAAI,CAAA,CAAA,EAAA,KAAM,EAAG,CAAA,KAAA,EAAO,OAAO,CAC3B,CAAA,IAAA,CAAK,CAAK,CAAA,KAAA,CAAA,EAAG,WAAW,KAAS,CAAA,CAAA;AAEpC,EAAA,QAAQ,SAAS,MAAQ;AAAA,IACvB,KAAK,kBAAA;AACH,MAAO,OAAA;AAAA,QACL,SAAW,EAAA,kBAAA;AAAA,QACX,oBAAsB,EAAA,iCAAA;AAAA,QACtB,OAAA,EAAS,CAAC,uDAAuD,CAAA;AAAA,QACjE,IAAM,EAAA,MAAA;AAAA,QACN,QACE,EAAA;AAAA,OACJ;AAAA,IACF,KAAK,kBAAA;AACH,MAAO,OAAA;AAAA,QACL,SAAW,EAAA,kBAAA;AAAA,QACX,oBACE,EAAA,uFAAA;AAAA,QACF,OAAS,EAAA;AAAA,UACP,kCAAA;AAAA,UACA;AAAA,SACF;AAAA,QACA,IAAM,EAAA,MAAA;AAAA,QACN,QACE,EAAA;AAAA,OACJ;AAAA,IACF,KAAK,kBAAA;AACH,MAAO,OAAA;AAAA,QACL,SAAW,EAAA,kBAAA;AAAA,QACX,oBAAA,EAAsB,CAAiB,cAAA,EAAA,SAAA,EAAW,IAAI,CAAA,mFAAA,CAAA;AAAA,QACtD,OAAA,EAAS,CAAC,sCAAsC,CAAA;AAAA,QAChD,IAAM,EAAA,MAAA;AAAA,QACN,SAAA,EAAW,WAAW,IAAQ,IAAA;AAAA,OAChC;AAAA,IACF,KAAK,4BAAA;AACH,MAAO,OAAA;AAAA,QACL,SAAW,EAAA,4BAAA;AAAA,QACX,oBACE,EAAA,+EAAA;AAAA,QACF,OAAS,EAAA;AAAA,UACP,wFAAA;AAAA,UACA;AAAA,SACF;AAAA,QACA,IAAM,EAAA,MAAA;AAAA,QACN,QACE,EAAA;AAAA,OACJ;AAAA,IACF;AACE,MAAO,OAAA,KAAA,CAAA;AAAA;AAEb,CAAA;AAEA,MAAM,eAAsC,GAAA;AAAA,EAC1C;AAAA,IACE,cAAc,CAAO,GAAA,KAAA;AACnB,MAAA,OAAO,+BAA+B,GAAG,CAAA,CACtC,OAAO,0BAA0B,CAAA,CACjC,IAAI,CAAO,EAAA,MAAA;AAAA,QACV,IAAM,EAAA,iCAAA;AAAA,QACN,OAAS,EAAA,CAAA,cAAA,EAAiB,EAAG,CAAA,SAAA,CAAU,IAAI,CAAA,8CAAA,CAAA;AAAA,QAC3C,QAAU,EAAA,CAAA;AAAA,QACV,WAAA,EAAa,4BAA4B,GAAG,CAAA;AAAA,QAC5C,SAAW,EAAA;AAAA,UACT,IAAA,EAAM,GAAI,CAAA,QAAA,EAAU,IAAQ,IAAA,aAAA;AAAA,UAC5B,SAAA,EAAW,GAAI,CAAA,QAAA,EAAU,SAAa,IAAA,mBAAA;AAAA,UACtC,IAAM,EAAA,KAAA;AAAA,UACN,QAAU,EAAA;AAAA,SACZ;AAAA,QACA,eAAiB,EAAA;AAAA,OACjB,CAAA,CAAA;AAAA;AACN,GACF;AAAA,EACA;AAAA,IACE,cAAc,CAAO,GAAA,KAAA;AACnB,MAAA,OAAA,CAAQ,GAAI,CAAA,MAAA,EAAQ,iBAAqB,IAAA,IACtC,MAAO,CAAA,CAAA,EAAA,KAAM,EAAG,CAAA,KAAA,EAAO,OAAS,EAAA,OAAA,KAAY,KAAS,CAAA,CAAA,CACrD,IAAI,CAAO,EAAA,MAAA;AAAA,QACV,IAAM,EAAA,mBAAA;AAAA,QACN,OAAS,EAAA,EAAA,CAAG,KAAO,EAAA,OAAA,EAAS,OAAW,IAAA,mBAAA;AAAA,QACvC,QAAU,EAAA,CAAA;AAAA,QACV,WAAA,EAAa,mBAAmB,GAAG,CAAA;AAAA,QACnC,SAAW,EAAA;AAAA,UACT,IAAA,EAAM,GAAI,CAAA,QAAA,EAAU,IAAQ,IAAA,aAAA;AAAA,UAC5B,SAAA,EAAW,GAAI,CAAA,QAAA,EAAU,SAAa,IAAA,mBAAA;AAAA,UACtC,IAAM,EAAA,KAAA;AAAA,UACN,QAAU,EAAA;AAAA,SACZ;AAAA,QACA,eAAiB,EAAA;AAAA,OACjB,CAAA,CAAA;AAAA;AACN,GACF;AAAA,EACA;AAAA,IACE,cAAc,CAAO,GAAA,KAAA;AACnB,MAAA,OAAA,CAAQ,GAAI,CAAA,MAAA,EAAQ,iBAAqB,IAAA,EACtC,EAAA,MAAA,CAAO,CAAM,EAAA,KAAA,EAAA,CAAG,YAAe,GAAA,CAAC,CAChC,CAAA,GAAA,CAAI,CAAO,EAAA,MAAA;AAAA,QACV,IAAM,EAAA,uBAAA;AAAA,QACN,SAAS,CAAa,UAAA,EAAA,EAAA,CAAG,IAAI,CAAA,WAAA,EAAc,GAAG,YAAY,CAAA,MAAA,CAAA;AAAA,QAC1D,QAAU,EAAA,CAAA;AAAA,QACV,WAAA,EAAa,2BAA2B,GAAG,CAAA;AAAA,QAC3C,SAAW,EAAA;AAAA,UACT,IAAA,EAAM,GAAI,CAAA,QAAA,EAAU,IAAQ,IAAA,aAAA;AAAA,UAC5B,SAAA,EAAW,GAAI,CAAA,QAAA,EAAU,SAAa,IAAA,mBAAA;AAAA,UACtC,IAAM,EAAA,KAAA;AAAA,UACN,QAAU,EAAA;AAAA,SACZ;AAAA,QACA,iBAAiB,EAAG,CAAA;AAAA,OACpB,CAAA,CAAA;AAAA;AACN;AAEJ,CAAA;AAEO,MAAM,kBAAqB,GAAA,CAAC,IACjC,KAAAC,4BAAA,CAAsB,MAAM,eAAe;;;;"}