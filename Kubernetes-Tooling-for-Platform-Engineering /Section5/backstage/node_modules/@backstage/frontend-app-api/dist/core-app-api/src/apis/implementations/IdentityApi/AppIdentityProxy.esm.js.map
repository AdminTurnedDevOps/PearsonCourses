{"version":3,"file":"AppIdentityProxy.esm.js","sources":["../../../../../../../core-app-api/src/apis/implementations/IdentityApi/AppIdentityProxy.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  IdentityApi,\n  ProfileInfo,\n  BackstageUserIdentity,\n  ErrorApi,\n  DiscoveryApi,\n  FetchApi,\n} from '@backstage/core-plugin-api';\nimport { startCookieAuthRefresh } from './startCookieAuthRefresh';\n\nfunction mkError(thing: string) {\n  return new Error(\n    `Tried to access IdentityApi ${thing} before app was loaded`,\n  );\n}\n\nfunction logDeprecation(thing: string) {\n  // eslint-disable-next-line no-console\n  console.warn(\n    `WARNING: Call to ${thing} is deprecated and will break in the future`,\n  );\n}\n\n// We use this for a period of backwards compatibility. It is a hidden\n// compatibility that will allow old plugins to continue working for a limited time.\ntype CompatibilityIdentityApi = IdentityApi & {\n  getUserId?(): string;\n  getIdToken?(): Promise<string | undefined>;\n  getProfile?(): ProfileInfo;\n};\n\n/**\n * Implementation of the connection between the App-wide IdentityApi\n * and sign-in page.\n */\nexport class AppIdentityProxy implements IdentityApi {\n  private target?: CompatibilityIdentityApi;\n  private waitForTarget: Promise<CompatibilityIdentityApi>;\n  private resolveTarget: (api: CompatibilityIdentityApi) => void = () => {};\n  private signOutTargetUrl = '/';\n\n  #cookieAuthSignOut?: () => Promise<void>;\n\n  constructor() {\n    this.waitForTarget = new Promise<CompatibilityIdentityApi>(resolve => {\n      this.resolveTarget = resolve;\n    });\n  }\n\n  // This is called by the app manager once the sign-in page provides us with an implementation\n  setTarget(\n    identityApi: CompatibilityIdentityApi,\n    targetOptions: { signOutTargetUrl: string },\n  ) {\n    this.target = identityApi;\n    this.signOutTargetUrl = targetOptions.signOutTargetUrl;\n    this.resolveTarget(identityApi);\n  }\n\n  getUserId(): string {\n    if (!this.target) {\n      throw mkError('getUserId');\n    }\n    if (!this.target.getUserId) {\n      throw new Error('IdentityApi does not implement getUserId');\n    }\n    logDeprecation('getUserId');\n    return this.target.getUserId();\n  }\n\n  getProfile(): ProfileInfo {\n    if (!this.target) {\n      throw mkError('getProfile');\n    }\n    if (!this.target.getProfile) {\n      throw new Error('IdentityApi does not implement getProfile');\n    }\n    logDeprecation('getProfile');\n    return this.target.getProfile();\n  }\n\n  async getProfileInfo(): Promise<ProfileInfo> {\n    return this.waitForTarget.then(target => target.getProfileInfo());\n  }\n\n  async getBackstageIdentity(): Promise<BackstageUserIdentity> {\n    const identity = await this.waitForTarget.then(target =>\n      target.getBackstageIdentity(),\n    );\n    if (!identity.userEntityRef.match(/^.*:.*\\/.*$/)) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `WARNING: The App IdentityApi provided an invalid userEntityRef, '${identity.userEntityRef}'. ` +\n          `It must be a full Entity Reference of the form '<kind>:<namespace>/<name>'.`,\n      );\n    }\n\n    return identity;\n  }\n\n  async getCredentials(): Promise<{ token?: string | undefined }> {\n    return this.waitForTarget.then(target => target.getCredentials());\n  }\n\n  async getIdToken(): Promise<string | undefined> {\n    return this.waitForTarget.then(target => {\n      if (!target.getIdToken) {\n        throw new Error('IdentityApi does not implement getIdToken');\n      }\n      logDeprecation('getIdToken');\n      return target.getIdToken();\n    });\n  }\n\n  async signOut(): Promise<void> {\n    await this.waitForTarget.then(target => target.signOut());\n\n    await this.#cookieAuthSignOut?.();\n\n    window.location.href = this.signOutTargetUrl;\n  }\n\n  enableCookieAuth(ctx: {\n    errorApi: ErrorApi;\n    fetchApi: FetchApi;\n    discoveryApi: DiscoveryApi;\n  }) {\n    if (this.#cookieAuthSignOut) {\n      return;\n    }\n\n    const stopRefresh = startCookieAuthRefresh(ctx);\n\n    this.#cookieAuthSignOut = async () => {\n      stopRefresh();\n\n      // It is fine if we do NOT worry yet about deleting cookies for OTHER backends like techdocs\n      const appBaseUrl = await ctx.discoveryApi.getBaseUrl('app');\n      try {\n        await fetch(`${appBaseUrl}/.backstage/auth/v1/cookie`, {\n          method: 'DELETE',\n          credentials: 'include',\n        });\n      } catch {\n        // Ignore the error for those who use static serving of the frontend\n      }\n    };\n  }\n}\n"],"names":[],"mappings":"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"}