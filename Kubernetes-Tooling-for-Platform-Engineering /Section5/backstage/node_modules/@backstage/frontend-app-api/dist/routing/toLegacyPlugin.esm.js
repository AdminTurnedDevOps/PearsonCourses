import { getOrCreateGlobalSingleton } from '@backstage/version-bridge';

const legacyPluginStore = getOrCreateGlobalSingleton(
  "legacy-plugin-compatibility-store",
  () => /* @__PURE__ */ new WeakMap()
);
function toLegacyPlugin(plugin) {
  let legacy = legacyPluginStore.get(plugin);
  if (legacy) {
    return legacy;
  }
  const errorMsg = "Not implemented in legacy plugin compatibility layer";
  const notImplemented = () => {
    throw new Error(errorMsg);
  };
  legacy = {
    getId() {
      return plugin.id;
    },
    get routes() {
      return {};
    },
    get externalRoutes() {
      return {};
    },
    getApis: notImplemented,
    getFeatureFlags: notImplemented,
    provide: notImplemented
  };
  legacyPluginStore.set(plugin, legacy);
  return legacy;
}

export { toLegacyPlugin };
//# sourceMappingURL=toLegacyPlugin.esm.js.map
