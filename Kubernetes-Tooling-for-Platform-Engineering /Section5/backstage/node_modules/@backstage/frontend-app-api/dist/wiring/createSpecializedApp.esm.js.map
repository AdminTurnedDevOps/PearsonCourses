{"version":3,"file":"createSpecializedApp.esm.js","sources":["../../src/wiring/createSpecializedApp.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { JSX } from 'react';\nimport { ConfigReader } from '@backstage/config';\nimport {\n  ApiBlueprint,\n  AppTree,\n  AppTreeApi,\n  appTreeApiRef,\n  coreExtensionData,\n  RouteRef,\n  ExternalRouteRef,\n  SubRouteRef,\n  AnyRouteRefParams,\n  RouteFunc,\n  RouteResolutionApiResolveOptions,\n  RouteResolutionApi,\n  createApiFactory,\n  routeResolutionApiRef,\n} from '@backstage/frontend-plugin-api';\nimport {\n  AnyApiFactory,\n  ApiHolder,\n  ConfigApi,\n  configApiRef,\n  featureFlagsApiRef,\n  identityApiRef,\n} from '@backstage/core-plugin-api';\nimport { ApiFactoryRegistry, ApiResolver } from '@backstage/core-app-api';\nimport { OpaqueFrontendPlugin } from '@internal/frontend';\n\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport { resolveExtensionDefinition } from '../../../frontend-plugin-api/src/wiring/resolveExtensionDefinition';\n\nimport { extractRouteInfoFromAppNode } from '../routing/extractRouteInfoFromAppNode';\n\nimport { CreateAppRouteBinder } from '../routing';\nimport { RouteResolver } from '../routing/RouteResolver';\nimport { resolveRouteBindings } from '../routing/resolveRouteBindings';\nimport { collectRouteIds } from '../routing/collectRouteIds';\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport {\n  toInternalFrontendModule,\n  isInternalFrontendModule,\n} from '../../../frontend-plugin-api/src/wiring/createFrontendModule';\nimport { getBasePath } from '../routing/getBasePath';\nimport { Root } from '../extensions/Root';\nimport { resolveAppTree } from '../tree/resolveAppTree';\nimport { resolveAppNodeSpecs } from '../tree/resolveAppNodeSpecs';\nimport { readAppExtensionsConfig } from '../tree/readAppExtensionsConfig';\nimport { instantiateAppNodeTree } from '../tree/instantiateAppNodeTree';\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport { ApiRegistry } from '../../../core-app-api/src/apis/system/ApiRegistry';\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport { AppIdentityProxy } from '../../../core-app-api/src/apis/implementations/IdentityApi/AppIdentityProxy';\nimport { BackstageRouteObject } from '../routing/types';\nimport { FrontendFeature } from './types';\n\nfunction deduplicateFeatures(\n  allFeatures: FrontendFeature[],\n): FrontendFeature[] {\n  // Start by removing duplicates by reference\n  const features = Array.from(new Set(allFeatures));\n\n  // Plugins are deduplicated by ID, last one wins\n  const seenIds = new Set<string>();\n  return features\n    .reverse()\n    .filter(feature => {\n      if (!OpaqueFrontendPlugin.isType(feature)) {\n        return true;\n      }\n      if (seenIds.has(feature.id)) {\n        return false;\n      }\n      seenIds.add(feature.id);\n      return true;\n    })\n    .reverse();\n}\n\n// Helps delay callers from reaching out to the API before the app tree has been materialized\nclass AppTreeApiProxy implements AppTreeApi {\n  #safeToUse: boolean = false;\n\n  constructor(private readonly tree: AppTree) {}\n\n  getTree() {\n    if (!this.#safeToUse) {\n      throw new Error(\n        `You can't access the AppTreeApi during initialization of the app tree. Please move occurrences of this out of the initialization of the factory`,\n      );\n    }\n    return { tree: this.tree };\n  }\n\n  initialize() {\n    this.#safeToUse = true;\n  }\n}\n\n// Helps delay callers from reaching out to the API before the app tree has been materialized\nclass RouteResolutionApiProxy implements RouteResolutionApi {\n  #delegate: RouteResolutionApi | undefined;\n  #routeObjects: BackstageRouteObject[] | undefined;\n\n  constructor(\n    private readonly tree: AppTree,\n    private readonly routeBindings: Map<\n      ExternalRouteRef,\n      RouteRef | SubRouteRef\n    >,\n    private readonly basePath: string,\n  ) {}\n\n  resolve<TParams extends AnyRouteRefParams>(\n    anyRouteRef:\n      | RouteRef<TParams>\n      | SubRouteRef<TParams>\n      | ExternalRouteRef<TParams>,\n    options?: RouteResolutionApiResolveOptions,\n  ): RouteFunc<TParams> | undefined {\n    if (!this.#delegate) {\n      throw new Error(\n        `You can't access the RouteResolver during initialization of the app tree. Please move occurrences of this out of the initialization of the factory`,\n      );\n    }\n\n    return this.#delegate.resolve(anyRouteRef, options);\n  }\n\n  initialize() {\n    const routeInfo = extractRouteInfoFromAppNode(this.tree.root);\n\n    this.#delegate = new RouteResolver(\n      routeInfo.routePaths,\n      routeInfo.routeParents,\n      routeInfo.routeObjects,\n      this.routeBindings,\n      this.basePath,\n    );\n    this.#routeObjects = routeInfo.routeObjects;\n\n    return routeInfo;\n  }\n\n  getRouteObjects() {\n    return this.#routeObjects;\n  }\n}\n/**\n * Creates an empty app without any default features. This is a low-level API is\n * intended for use in tests or specialized setups. Typically wou want to use\n * `createApp` from `@backstage/frontend-defaults` instead.\n *\n * @public\n */\nexport function createSpecializedApp(options?: {\n  features?: FrontendFeature[];\n  config?: ConfigApi;\n  bindRoutes?(context: { bind: CreateAppRouteBinder }): void;\n}): { createRoot(): JSX.Element } {\n  const config = options?.config ?? new ConfigReader({}, 'empty-config');\n  const features = deduplicateFeatures(options?.features ?? []);\n\n  const tree = resolveAppTree(\n    'root',\n    resolveAppNodeSpecs({\n      features,\n      builtinExtensions: [\n        resolveExtensionDefinition(Root, { namespace: 'root' }),\n      ],\n      parameters: readAppExtensionsConfig(config),\n      forbidden: new Set(['root']),\n    }),\n  );\n\n  const factories = createApiFactories({ tree });\n  const appTreeApi = new AppTreeApiProxy(tree);\n  const routeResolutionApi = new RouteResolutionApiProxy(\n    tree,\n    resolveRouteBindings(\n      options?.bindRoutes,\n      config,\n      collectRouteIds(features),\n    ),\n    getBasePath(config),\n  );\n\n  const appIdentityProxy = new AppIdentityProxy();\n  const apiHolder = createApiHolder({\n    factories,\n    staticFactories: [\n      createApiFactory(appTreeApiRef, appTreeApi),\n      createApiFactory(configApiRef, config),\n      createApiFactory(routeResolutionApiRef, routeResolutionApi),\n      createApiFactory(identityApiRef, appIdentityProxy),\n    ],\n  });\n\n  const featureFlagApi = apiHolder.get(featureFlagsApiRef);\n  if (featureFlagApi) {\n    for (const feature of features) {\n      if (OpaqueFrontendPlugin.isType(feature)) {\n        OpaqueFrontendPlugin.toInternal(feature).featureFlags.forEach(flag =>\n          featureFlagApi.registerFlag({\n            name: flag.name,\n            pluginId: feature.id,\n          }),\n        );\n      }\n      if (isInternalFrontendModule(feature)) {\n        toInternalFrontendModule(feature).featureFlags.forEach(flag =>\n          featureFlagApi.registerFlag({\n            name: flag.name,\n            pluginId: feature.pluginId,\n          }),\n        );\n      }\n    }\n  }\n\n  // Now instantiate the entire tree, which will skip anything that's already been instantiated\n  instantiateAppNodeTree(tree.root, apiHolder);\n\n  routeResolutionApi.initialize();\n  appTreeApi.initialize();\n\n  const rootEl = tree.root.instance!.getData(coreExtensionData.reactElement);\n\n  const AppComponent = () => rootEl;\n\n  return {\n    createRoot() {\n      return <AppComponent />;\n    },\n  };\n}\n\nfunction createApiFactories(options: { tree: AppTree }): AnyApiFactory[] {\n  const emptyApiHolder = ApiRegistry.from([]);\n  const factories = new Array<AnyApiFactory>();\n\n  for (const apiNode of options.tree.root.edges.attachments.get('apis') ?? []) {\n    instantiateAppNodeTree(apiNode, emptyApiHolder);\n    const apiFactory = apiNode.instance?.getData(ApiBlueprint.dataRefs.factory);\n    if (!apiFactory) {\n      throw new Error(\n        `No API factory found in for extension ${apiNode.spec.id}`,\n      );\n    }\n    factories.push(apiFactory);\n  }\n\n  return factories;\n}\n\nfunction createApiHolder(options: {\n  factories: AnyApiFactory[];\n  staticFactories: AnyApiFactory[];\n}): ApiHolder {\n  const factoryRegistry = new ApiFactoryRegistry();\n\n  for (const factory of options.factories.slice().reverse()) {\n    factoryRegistry.register('default', factory);\n  }\n\n  for (const factory of options.staticFactories) {\n    factoryRegistry.register('static', factory);\n  }\n\n  ApiResolver.validateFactories(factoryRegistry, factoryRegistry.getAllApis());\n\n  return new ApiResolver(factoryRegistry);\n}\n"],"names":[],"mappings":"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"}