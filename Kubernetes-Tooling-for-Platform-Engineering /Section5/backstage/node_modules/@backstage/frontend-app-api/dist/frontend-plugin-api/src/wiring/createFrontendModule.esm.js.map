{"version":3,"file":"createFrontendModule.esm.js","sources":["../../../../../frontend-plugin-api/src/wiring/createFrontendModule.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OpaqueExtensionDefinition } from '@internal/frontend';\nimport { ExtensionDefinition } from './createExtension';\nimport {\n  Extension,\n  resolveExtensionDefinition,\n} from './resolveExtensionDefinition';\nimport { FeatureFlagConfig } from './types';\n\n/** @public */\nexport interface CreateFrontendModuleOptions<\n  TPluginId extends string,\n  TExtensions extends readonly ExtensionDefinition[],\n> {\n  pluginId: TPluginId;\n  extensions?: TExtensions;\n  featureFlags?: FeatureFlagConfig[];\n}\n\n/** @public */\nexport interface FrontendModule {\n  readonly $$type: '@backstage/FrontendModule';\n  readonly pluginId: string;\n}\n\n/** @internal */\nexport interface InternalFrontendModule extends FrontendModule {\n  readonly version: 'v1';\n  readonly extensions: Extension<unknown>[];\n  readonly featureFlags: FeatureFlagConfig[];\n}\n\n/** @public */\nexport function createFrontendModule<\n  TId extends string,\n  TExtensions extends readonly ExtensionDefinition[] = [],\n>(options: CreateFrontendModuleOptions<TId, TExtensions>): FrontendModule {\n  const { pluginId } = options;\n\n  const extensions = new Array<Extension<any>>();\n  const extensionDefinitionsById = new Map<\n    string,\n    typeof OpaqueExtensionDefinition.TInternal\n  >();\n\n  for (const def of options.extensions ?? []) {\n    const internal = OpaqueExtensionDefinition.toInternal(def);\n    const ext = resolveExtensionDefinition(def, { namespace: pluginId });\n    extensions.push(ext);\n    extensionDefinitionsById.set(ext.id, {\n      ...internal,\n      namespace: pluginId,\n    });\n  }\n\n  if (extensions.length !== extensionDefinitionsById.size) {\n    const extensionIds = extensions.map(e => e.id);\n    const duplicates = Array.from(\n      new Set(\n        extensionIds.filter((id, index) => extensionIds.indexOf(id) !== index),\n      ),\n    );\n    // TODO(Rugvip): This could provide some more information about the kind + name of the extensions\n    throw new Error(\n      `Plugin '${pluginId}' provided duplicate extensions: ${duplicates.join(\n        ', ',\n      )}`,\n    );\n  }\n\n  return {\n    $$type: '@backstage/FrontendModule',\n    version: 'v1',\n    pluginId,\n    featureFlags: options.featureFlags ?? [],\n    extensions,\n    toString() {\n      return `Module{pluginId=${pluginId}}`;\n    },\n  } as InternalFrontendModule;\n}\n\n/** @internal */\nexport function isInternalFrontendModule(opaque: {\n  $$type: string;\n}): opaque is InternalFrontendModule {\n  if (opaque.$$type === '@backstage/FrontendModule') {\n    // Make sure we throw if invalid\n    toInternalFrontendModule(opaque as FrontendModule);\n    return true;\n  }\n  return false;\n}\n\n/** @internal */\nexport function toInternalFrontendModule(\n  plugin: FrontendModule,\n): InternalFrontendModule {\n  const internal = plugin as InternalFrontendModule;\n  if (internal.$$type !== '@backstage/FrontendModule') {\n    throw new Error(`Invalid plugin instance, bad type '${internal.$$type}'`);\n  }\n  if (internal.version !== 'v1') {\n    throw new Error(\n      `Invalid plugin instance, bad version '${internal.version}'`,\n    );\n  }\n  return internal;\n}\n"],"names":[],"mappings":"AAkGO,SAAS,yBAAyB,MAEJ,EAAA;AACnC,EAAI,IAAA,MAAA,CAAO,WAAW,2BAA6B,EAAA;AAEjD,IAAA,wBAAA,CAAyB,MAAwB,CAAA;AACjD,IAAO,OAAA,IAAA;AAAA;AAET,EAAO,OAAA,KAAA;AACT;AAGO,SAAS,yBACd,MACwB,EAAA;AACxB,EAAA,MAAM,QAAW,GAAA,MAAA;AACjB,EAAI,IAAA,QAAA,CAAS,WAAW,2BAA6B,EAAA;AACnD,IAAA,MAAM,IAAI,KAAA,CAAM,CAAsC,mCAAA,EAAA,QAAA,CAAS,MAAM,CAAG,CAAA,CAAA,CAAA;AAAA;AAE1E,EAAI,IAAA,QAAA,CAAS,YAAY,IAAM,EAAA;AAC7B,IAAA,MAAM,IAAI,KAAA;AAAA,MACR,CAAA,sCAAA,EAAyC,SAAS,OAAO,CAAA,CAAA;AAAA,KAC3D;AAAA;AAEF,EAAO,OAAA,QAAA;AACT;;;;"}