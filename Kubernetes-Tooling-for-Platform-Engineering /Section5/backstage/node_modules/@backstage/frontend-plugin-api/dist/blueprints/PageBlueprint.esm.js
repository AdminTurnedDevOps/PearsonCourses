import { coreExtensionData } from '../wiring/coreExtensionData.esm.js';
import 'zod';
import 'zod-to-json-schema';
import { createExtensionBlueprint } from '../wiring/createExtensionBlueprint.esm.js';
import { ExtensionBoundary } from '../components/ExtensionBoundary.esm.js';

const PageBlueprint = createExtensionBlueprint({
  kind: "page",
  attachTo: { id: "app/routes", input: "routes" },
  output: [
    coreExtensionData.routePath,
    coreExtensionData.reactElement,
    coreExtensionData.routeRef.optional()
  ],
  config: {
    schema: {
      path: (z) => z.string().optional()
    }
  },
  *factory({
    defaultPath,
    loader,
    routeRef
  }, { config, node }) {
    yield coreExtensionData.routePath(config.path ?? defaultPath);
    yield coreExtensionData.reactElement(ExtensionBoundary.lazy(node, loader));
    if (routeRef) {
      yield coreExtensionData.routeRef(routeRef);
    }
  }
});

export { PageBlueprint };
//# sourceMappingURL=PageBlueprint.esm.js.map
