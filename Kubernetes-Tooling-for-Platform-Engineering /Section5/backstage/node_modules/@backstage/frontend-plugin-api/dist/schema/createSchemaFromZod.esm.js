import { z } from 'zod';
import zodToJsonSchema from 'zod-to-json-schema';

function createSchemaFromZod(schemaCreator) {
  const schema = schemaCreator(z);
  return {
    // TODO: Types allow z.array etc here but it will break stuff
    parse: (input) => {
      const result = schema.safeParse(input);
      if (result.success) {
        return result.data;
      }
      throw new Error(result.error.issues.map(formatIssue).join("; "));
    },
    // TODO: Verify why we are not compatible with the latest zodToJsonSchema.
    schema: zodToJsonSchema(schema)
  };
}
function formatIssue(issue) {
  if (issue.code === "invalid_union") {
    return formatIssue(issue.unionErrors[0].issues[0]);
  }
  let message = issue.message;
  if (message === "Required") {
    message = `Missing required value`;
  }
  if (issue.path.length) {
    message += ` at '${issue.path.join(".")}'`;
  }
  return message;
}

export { createSchemaFromZod };
//# sourceMappingURL=createSchemaFromZod.esm.js.map
