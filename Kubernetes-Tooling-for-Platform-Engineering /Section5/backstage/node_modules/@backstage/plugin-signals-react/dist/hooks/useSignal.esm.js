import { signalApiRef } from '../api/SignalApi.esm.js';
import { useApiHolder } from '@backstage/core-plugin-api';
import { useState, useEffect, useMemo } from 'react';

const useSignal = (channel) => {
  const apiHolder = useApiHolder();
  const signals = apiHolder.get(signalApiRef);
  const [lastSignal, setLastSignal] = useState(null);
  useEffect(() => {
    let unsub = null;
    if (signals) {
      const { unsubscribe } = signals.subscribe(
        channel,
        (msg) => {
          setLastSignal(msg);
        }
      );
      unsub = unsubscribe;
    }
    return () => {
      if (signals && unsub) {
        unsub();
      }
    };
  }, [signals, channel]);
  const isSignalsAvailable = useMemo(() => !!signals, [signals]);
  return { lastSignal, isSignalsAvailable };
};

export { useSignal };
//# sourceMappingURL=useSignal.esm.js.map
