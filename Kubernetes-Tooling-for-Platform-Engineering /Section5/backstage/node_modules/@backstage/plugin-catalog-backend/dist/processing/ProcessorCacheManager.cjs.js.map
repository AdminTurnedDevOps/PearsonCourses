{"version":3,"file":"ProcessorCacheManager.cjs.js","sources":["../../src/processing/ProcessorCacheManager.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonObject, JsonValue } from '@backstage/types';\nimport {\n  CatalogProcessor,\n  CatalogProcessorCache,\n} from '@backstage/plugin-catalog-node';\nimport { isObject } from './util';\n\nclass SingleProcessorSubCache implements CatalogProcessorCache {\n  private newState?: JsonObject;\n\n  constructor(private readonly existingState?: JsonObject) {}\n\n  async get<ItemType extends JsonValue>(\n    key: string,\n  ): Promise<ItemType | undefined> {\n    return this.existingState?.[key] as ItemType | undefined;\n  }\n\n  async set<ItemType extends JsonValue>(\n    key: string,\n    value: ItemType,\n  ): Promise<void> {\n    if (!this.newState) {\n      this.newState = {};\n    }\n\n    this.newState[key] = value;\n  }\n\n  collect(): JsonObject | undefined {\n    return this.newState ?? this.existingState;\n  }\n}\n\nclass SingleProcessorCache implements CatalogProcessorCache {\n  private newState?: JsonObject;\n  private subCaches: Map<string, SingleProcessorSubCache> = new Map();\n\n  constructor(private readonly existingState?: JsonObject) {}\n\n  async get<ItemType extends JsonValue>(\n    key: string,\n  ): Promise<ItemType | undefined> {\n    return this.existingState?.[key] as ItemType | undefined;\n  }\n\n  async set<ItemType extends JsonValue>(\n    key: string,\n    value: ItemType,\n  ): Promise<void> {\n    if (!this.newState) {\n      this.newState = {};\n    }\n\n    this.newState[key] = value;\n  }\n\n  withKey(key: string) {\n    const existingSubCache = this.subCaches.get(key);\n    if (existingSubCache) {\n      return existingSubCache;\n    }\n    const existing = this.existingState?.[key];\n    const subCache = new SingleProcessorSubCache(\n      isObject(existing) ? existing : undefined,\n    );\n    this.subCaches.set(key, subCache);\n    return subCache;\n  }\n\n  collect(): JsonObject | undefined {\n    let obj = this.newState ?? this.existingState;\n    for (const [key, subCache] of this.subCaches) {\n      const subCacheValue = subCache.collect();\n      if (subCacheValue) {\n        obj = { ...obj, [key]: subCacheValue };\n      }\n    }\n    return obj;\n  }\n}\n\nexport class ProcessorCacheManager {\n  private caches = new Map<string, SingleProcessorCache>();\n\n  constructor(private readonly existingState: JsonObject) {}\n\n  forProcessor(\n    processor: CatalogProcessor,\n    key?: string,\n  ): CatalogProcessorCache {\n    // constructor name will be deprecated in the future when we make `getProcessorName` required in the implementation\n    const name = processor.getProcessorName();\n    const cache = this.caches.get(name);\n    if (cache) {\n      return key ? cache.withKey(key) : cache;\n    }\n\n    const existing = this.existingState[name];\n\n    const newCache = new SingleProcessorCache(\n      isObject(existing) ? existing : undefined,\n    );\n    this.caches.set(name, newCache);\n    return key ? newCache.withKey(key) : newCache;\n  }\n\n  collect(): JsonObject {\n    const result: JsonObject = {};\n    for (const [key, value] of this.caches.entries()) {\n      result[key] = value.collect();\n    }\n\n    return result;\n  }\n}\n"],"names":["isObject"],"mappings":"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"}