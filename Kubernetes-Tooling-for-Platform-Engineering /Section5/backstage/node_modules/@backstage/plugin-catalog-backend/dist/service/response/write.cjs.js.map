{"version":3,"file":"write.cjs.js","sources":["../../../src/service/response/write.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Response } from 'express';\nimport { EntitiesResponseItems } from '../../catalog/types';\nimport { JsonValue } from '@backstage/types';\nimport { NotFoundError } from '@backstage/errors';\nimport { processEntitiesResponseItems } from './process';\n\nconst JSON_CONTENT_TYPE = 'application/json; charset=utf-8';\n\nexport function writeSingleEntityResponse(\n  res: Response,\n  response: EntitiesResponseItems,\n  notFoundMessage: string,\n) {\n  if (response.type === 'object') {\n    if (!response.entities[0]) {\n      throw new NotFoundError(notFoundMessage);\n    }\n\n    res.json(response.entities[0]);\n  } else {\n    if (!response.entities[0]) {\n      throw new NotFoundError(notFoundMessage);\n    }\n\n    res.setHeader('Content-Type', JSON_CONTENT_TYPE);\n    res.end(response.entities[0]);\n  }\n}\n\nexport async function writeEntitiesResponse(options: {\n  res: Response;\n  items: EntitiesResponseItems;\n  responseWrapper?: (entities: JsonValue) => JsonValue;\n  alwaysUseObjectMode?: boolean;\n}) {\n  const { res, responseWrapper, alwaysUseObjectMode } = options;\n  const items = alwaysUseObjectMode\n    ? processEntitiesResponseItems(options.items, e => e)\n    : options.items;\n\n  if (items.type === 'object') {\n    res.json(\n      responseWrapper ? responseWrapper?.(items.entities) : items.entities,\n    );\n    return;\n  }\n\n  res.setHeader('Content-Type', JSON_CONTENT_TYPE);\n\n  // responseWrapper allows the caller to render the entities within an object\n  let trailing = '';\n  if (responseWrapper) {\n    const marker = `__MARKER_${Math.random().toString(36).slice(2, 10)}__`;\n    const wrapped = JSON.stringify(responseWrapper(marker));\n    const parts = wrapped.split(`\"${marker}\"`);\n    if (parts.length !== 2) {\n      throw new Error(\n        `Entity items response was incorrectly wrapped into ${parts.length} different parts`,\n      );\n    }\n    res.write(parts[0], 'utf8');\n    trailing = parts[1];\n  }\n\n  let first = true;\n  for (const entity of items.entities) {\n    const prefix = first ? '[' : ',';\n    first = false;\n\n    if (await writeResponseData(res, prefix + entity)) {\n      return;\n    }\n  }\n  res.end(`${first ? '[' : ''}]${trailing}`);\n}\n\n/**\n * Writes a data to the response and waits if the response buffer needs draining.\n *\n * @internal\n * @returns true if the response was closed while waiting for the buffer to drain\n */\nexport async function writeResponseData(res: Response, data: string | Buffer) {\n  const ok = res.write(data, 'utf8');\n  if (!ok) {\n    if (res.closed) {\n      return true;\n    }\n    const closed = await new Promise<boolean>(resolve => {\n      function onContinue() {\n        res.off('drain', onContinue);\n        res.off('close', onClose);\n        resolve(false);\n      }\n      function onClose() {\n        res.off('drain', onContinue);\n        res.off('close', onClose);\n        resolve(true);\n      }\n      res.on('drain', onContinue);\n      res.on('close', onClose);\n    });\n    return closed;\n  }\n  return false;\n}\n"],"names":["NotFoundError","processEntitiesResponseItems"],"mappings":"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"}