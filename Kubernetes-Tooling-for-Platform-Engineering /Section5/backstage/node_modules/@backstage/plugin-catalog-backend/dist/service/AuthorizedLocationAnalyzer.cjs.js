'use strict';

var errors = require('@backstage/errors');
var alpha = require('@backstage/plugin-catalog-common/alpha');
var pluginPermissionCommon = require('@backstage/plugin-permission-common');

class AuthorizedLocationAnalyzer {
  constructor(service, permissionApi) {
    this.service = service;
    this.permissionApi = permissionApi;
  }
  async analyzeLocation(request, credentials) {
    const authorizeDecision = (await this.permissionApi.authorize(
      [
        {
          permission: alpha.catalogLocationAnalyzePermission
        }
      ],
      { credentials }
    ))[0];
    if (authorizeDecision.result !== pluginPermissionCommon.AuthorizeResult.ALLOW) {
      throw new errors.NotAllowedError();
    }
    return this.service.analyzeLocation(request, credentials);
  }
}

exports.AuthorizedLocationAnalyzer = AuthorizedLocationAnalyzer;
//# sourceMappingURL=AuthorizedLocationAnalyzer.cjs.js.map
