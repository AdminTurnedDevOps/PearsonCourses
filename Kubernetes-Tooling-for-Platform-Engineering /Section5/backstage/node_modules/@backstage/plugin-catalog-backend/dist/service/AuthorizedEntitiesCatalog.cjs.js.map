{"version":3,"file":"AuthorizedEntitiesCatalog.cjs.js","sources":["../../src/service/AuthorizedEntitiesCatalog.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NotAllowedError } from '@backstage/errors';\nimport {\n  catalogEntityDeletePermission,\n  catalogEntityReadPermission,\n} from '@backstage/plugin-catalog-common/alpha';\nimport { Entity, stringifyEntityRef } from '@backstage/catalog-model';\nimport { AuthorizeResult } from '@backstage/plugin-permission-common';\nimport { ConditionTransformer } from '@backstage/plugin-permission-node';\nimport {\n  Cursor,\n  EntitiesBatchRequest,\n  EntitiesBatchResponse,\n  EntitiesCatalog,\n  EntitiesRequest,\n  EntitiesResponse,\n  EntityAncestryResponse,\n  EntityFacetsRequest,\n  EntityFacetsResponse,\n  QueryEntitiesRequest,\n  QueryEntitiesResponse,\n} from '../catalog/types';\nimport { basicEntityFilter } from './request';\nimport { isQueryEntitiesCursorRequest } from './util';\nimport { EntityFilter } from '@backstage/plugin-catalog-node';\nimport {\n  BackstageCredentials,\n  PermissionsService,\n} from '@backstage/backend-plugin-api';\n\nexport class AuthorizedEntitiesCatalog implements EntitiesCatalog {\n  constructor(\n    private readonly entitiesCatalog: EntitiesCatalog,\n    private readonly permissionApi: PermissionsService,\n    private readonly transformConditions: ConditionTransformer<EntityFilter>,\n  ) {}\n\n  async entities(request: EntitiesRequest): Promise<EntitiesResponse> {\n    const authorizeDecision = (\n      await this.permissionApi.authorizeConditional(\n        [{ permission: catalogEntityReadPermission }],\n        { credentials: request.credentials },\n      )\n    )[0];\n\n    if (authorizeDecision.result === AuthorizeResult.DENY) {\n      return {\n        entities: { type: 'object', entities: [] },\n        pageInfo: { hasNextPage: false },\n      };\n    }\n\n    if (authorizeDecision.result === AuthorizeResult.CONDITIONAL) {\n      const permissionFilter: EntityFilter = this.transformConditions(\n        authorizeDecision.conditions,\n      );\n      return this.entitiesCatalog.entities({\n        ...request,\n        filter: request?.filter\n          ? { allOf: [permissionFilter, request.filter] }\n          : permissionFilter,\n      });\n    }\n\n    return this.entitiesCatalog.entities(request);\n  }\n\n  async entitiesBatch(\n    request: EntitiesBatchRequest,\n  ): Promise<EntitiesBatchResponse> {\n    const authorizeDecision = (\n      await this.permissionApi.authorizeConditional(\n        [{ permission: catalogEntityReadPermission }],\n        { credentials: request.credentials },\n      )\n    )[0];\n\n    if (authorizeDecision.result === AuthorizeResult.DENY) {\n      return {\n        items: {\n          type: 'object',\n          entities: new Array(request.entityRefs.length).fill(null),\n        },\n      };\n    }\n\n    if (authorizeDecision.result === AuthorizeResult.CONDITIONAL) {\n      const permissionFilter: EntityFilter = this.transformConditions(\n        authorizeDecision.conditions,\n      );\n      return this.entitiesCatalog.entitiesBatch({\n        ...request,\n        filter: request?.filter\n          ? { allOf: [permissionFilter, request.filter] }\n          : permissionFilter,\n      });\n    }\n\n    return this.entitiesCatalog.entitiesBatch(request);\n  }\n\n  async queryEntities(\n    request: QueryEntitiesRequest,\n  ): Promise<QueryEntitiesResponse> {\n    const authorizeDecision = (\n      await this.permissionApi.authorizeConditional(\n        [{ permission: catalogEntityReadPermission }],\n        { credentials: request.credentials },\n      )\n    )[0];\n\n    if (authorizeDecision.result === AuthorizeResult.DENY) {\n      return {\n        items: { type: 'object', entities: [] },\n        pageInfo: {},\n        totalItems: 0,\n      };\n    }\n\n    if (authorizeDecision.result === AuthorizeResult.CONDITIONAL) {\n      const permissionFilter: EntityFilter = this.transformConditions(\n        authorizeDecision.conditions,\n      );\n\n      let permissionedRequest: QueryEntitiesRequest;\n      let requestFilter: EntityFilter | undefined;\n\n      if (isQueryEntitiesCursorRequest(request)) {\n        requestFilter = request.cursor.filter;\n\n        permissionedRequest = {\n          ...request,\n          cursor: {\n            ...request.cursor,\n            filter: request.cursor.filter\n              ? { allOf: [permissionFilter, request.cursor.filter] }\n              : permissionFilter,\n          },\n        };\n      } else {\n        permissionedRequest = {\n          ...request,\n          filter: request.filter\n            ? { allOf: [permissionFilter, request.filter] }\n            : permissionFilter,\n        };\n        requestFilter = request.filter;\n      }\n\n      const response = await this.entitiesCatalog.queryEntities(\n        permissionedRequest,\n      );\n\n      const prevCursor: Cursor | undefined = response.pageInfo.prevCursor && {\n        ...response.pageInfo.prevCursor,\n        filter: requestFilter,\n      };\n\n      const nextCursor: Cursor | undefined = response.pageInfo.nextCursor && {\n        ...response.pageInfo.nextCursor,\n        filter: requestFilter,\n      };\n\n      return {\n        ...response,\n        pageInfo: {\n          prevCursor,\n          nextCursor,\n        },\n      };\n    }\n\n    return this.entitiesCatalog.queryEntities(request);\n  }\n\n  async removeEntityByUid(\n    uid: string,\n    options: { credentials: BackstageCredentials },\n  ): Promise<void> {\n    const authorizeResponse = (\n      await this.permissionApi.authorizeConditional(\n        [{ permission: catalogEntityDeletePermission }],\n        { credentials: options.credentials },\n      )\n    )[0];\n    if (authorizeResponse.result === AuthorizeResult.DENY) {\n      throw new NotAllowedError();\n    }\n    if (authorizeResponse.result === AuthorizeResult.CONDITIONAL) {\n      const permissionFilter: EntityFilter = this.transformConditions(\n        authorizeResponse.conditions,\n      );\n      const { entities } = await this.entitiesCatalog.entities({\n        credentials: options.credentials,\n        filter: {\n          allOf: [permissionFilter, basicEntityFilter({ 'metadata.uid': uid })],\n        },\n      });\n      if (entities.entities.length === 0) {\n        throw new NotAllowedError();\n      }\n    }\n    return this.entitiesCatalog.removeEntityByUid(uid, {\n      credentials: options.credentials,\n    });\n  }\n\n  async entityAncestry(\n    entityRef: string,\n    options: { credentials: BackstageCredentials },\n  ): Promise<EntityAncestryResponse> {\n    const rootEntityAuthorizeResponse = (\n      await this.permissionApi.authorize(\n        [{ permission: catalogEntityReadPermission, resourceRef: entityRef }],\n        { credentials: options.credentials },\n      )\n    )[0];\n    if (rootEntityAuthorizeResponse.result === AuthorizeResult.DENY) {\n      throw new NotAllowedError();\n    }\n\n    const ancestryResult = await this.entitiesCatalog.entityAncestry(\n      entityRef,\n      { credentials: options.credentials },\n    );\n    const authorizeResponse = await this.permissionApi.authorize(\n      ancestryResult.items.map(item => ({\n        permission: catalogEntityReadPermission,\n        resourceRef: stringifyEntityRef(item.entity),\n      })),\n      { credentials: options.credentials },\n    );\n    const unauthorizedAncestryItems = ancestryResult.items.filter(\n      (_, index) => authorizeResponse[index].result === AuthorizeResult.DENY,\n    );\n    if (unauthorizedAncestryItems.length === 0) {\n      return ancestryResult;\n    }\n    const rootUnauthorizedEntityRefs = unauthorizedAncestryItems.map(\n      ancestryItem => stringifyEntityRef(ancestryItem.entity),\n    );\n    const allUnauthorizedEntityRefs = new Set(\n      rootUnauthorizedEntityRefs.flatMap(rootEntityRef =>\n        this.findParents(\n          rootEntityRef,\n          ancestryResult.items,\n          new Set(rootUnauthorizedEntityRefs),\n        ),\n      ),\n    );\n    return {\n      rootEntityRef: ancestryResult.rootEntityRef,\n      items: ancestryResult.items.filter(\n        ancestryItem =>\n          !allUnauthorizedEntityRefs.has(\n            stringifyEntityRef(ancestryItem.entity),\n          ),\n      ),\n    };\n  }\n\n  async facets(request: EntityFacetsRequest): Promise<EntityFacetsResponse> {\n    const authorizeDecision = (\n      await this.permissionApi.authorizeConditional(\n        [{ permission: catalogEntityReadPermission }],\n        { credentials: request.credentials },\n      )\n    )[0];\n\n    if (authorizeDecision.result === AuthorizeResult.DENY) {\n      return {\n        facets: Object.fromEntries(request.facets.map(f => [f, []])),\n      };\n    }\n\n    if (authorizeDecision.result === AuthorizeResult.CONDITIONAL) {\n      const permissionFilter: EntityFilter = this.transformConditions(\n        authorizeDecision.conditions,\n      );\n      return this.entitiesCatalog.facets({\n        ...request,\n        filter: request?.filter\n          ? { allOf: [permissionFilter, request.filter] }\n          : permissionFilter,\n      });\n    }\n\n    return this.entitiesCatalog.facets(request);\n  }\n\n  private findParents(\n    entityRef: string,\n    allAncestryItems: { entity: Entity; parentEntityRefs: string[] }[],\n    seenEntityRefs: Set<string>,\n  ): string[] {\n    const entity = allAncestryItems.find(\n      ancestryItem => stringifyEntityRef(ancestryItem.entity) === entityRef,\n    );\n    if (!entity) return [];\n\n    const newSeenEntityRefs = new Set(seenEntityRefs);\n    entity.parentEntityRefs.forEach(parentRef =>\n      newSeenEntityRefs.add(parentRef),\n    );\n\n    return [\n      entityRef,\n      ...entity.parentEntityRefs.flatMap(parentRef =>\n        seenEntityRefs.has(parentRef)\n          ? []\n          : this.findParents(parentRef, allAncestryItems, newSeenEntityRefs),\n      ),\n    ];\n  }\n}\n"],"names":["catalogEntityReadPermission","AuthorizeResult","isQueryEntitiesCursorRequest","catalogEntityDeletePermission","NotAllowedError","basicEntityFilter","stringifyEntityRef"],"mappings":"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"}