{"version":3,"file":"parseEntityOrderParams.cjs.js","sources":["../../../src/service/request/parseEntityOrderParams.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InputError } from '@backstage/errors';\nimport { EntityOrder } from '../../catalog/types';\nimport { parseStringsParam } from './common';\n\nexport function parseEntityOrderParams(\n  params: Record<string, unknown>,\n): EntityOrder[] | undefined {\n  return parseStringsParam(params.order, 'order')?.map(item => {\n    const match = item.match(/^(asc|desc):(.+)$/);\n    if (!match) {\n      throw new InputError(\n        `Invalid order parameter \"${item}\", expected \"<asc or desc>:<field name>\"`,\n      );\n    }\n\n    return {\n      order: match[1] as 'asc' | 'desc',\n      field: match[2],\n    };\n  });\n}\n"],"names":["parseStringsParam","InputError"],"mappings":";;;;;AAoBO,SAAS,uBACd,MAC2B,EAAA;AAC3B,EAAA,OAAOA,yBAAkB,MAAO,CAAA,KAAA,EAAO,OAAO,CAAA,EAAG,IAAI,CAAQ,IAAA,KAAA;AAC3D,IAAM,MAAA,KAAA,GAAQ,IAAK,CAAA,KAAA,CAAM,mBAAmB,CAAA;AAC5C,IAAA,IAAI,CAAC,KAAO,EAAA;AACV,MAAA,MAAM,IAAIC,iBAAA;AAAA,QACR,4BAA4B,IAAI,CAAA,wCAAA;AAAA,OAClC;AAAA;AAGF,IAAO,OAAA;AAAA,MACL,KAAA,EAAO,MAAM,CAAC,CAAA;AAAA,MACd,KAAA,EAAO,MAAM,CAAC;AAAA,KAChB;AAAA,GACD,CAAA;AACH;;;;"}