'use strict';

var errors = require('@backstage/errors');

function parseEntityPaginationParams({
  limit,
  offset,
  after
}) {
  if (offset === void 0 && limit === void 0 && after === void 0) {
    return void 0;
  }
  if (offset !== void 0 && offset < 0) {
    throw new errors.InputError(`Invalid offset, must be zero or greater`);
  }
  if (limit !== void 0 && limit <= 0) {
    throw new errors.InputError(`Invalid limit, must be greater than zero`);
  }
  if (after !== void 0 && !after) {
    throw new errors.InputError(`Invalid after, must not be empty`);
  }
  return {
    ...offset !== void 0 ? { offset } : {},
    ...limit !== void 0 ? { limit } : {},
    ...after !== void 0 ? { after } : {}
  };
}

exports.parseEntityPaginationParams = parseEntityPaginationParams;
//# sourceMappingURL=parseEntityPaginationParams.cjs.js.map
