'use strict';

var write = require('./write.cjs.js');

function createEntityArrayJsonStream(res) {
  const prettyPrint = process.env.NODE_ENV === "development";
  let firstSend = true;
  let completed = false;
  return {
    async send(response) {
      if (firstSend) {
        res.setHeader("Content-Type", "application/json; charset=utf-8");
        res.status(200);
        res.flushHeaders();
      }
      if (response.type === "raw") {
        for (const item of response.entities) {
          const prefix = firstSend ? "[" : ",";
          firstSend = false;
          if (await write.writeResponseData(res, prefix + item)) {
            return true;
          }
        }
        return false;
      }
      let data;
      if (prettyPrint) {
        data = JSON.stringify(response.entities, null, 2);
        data = firstSend ? data.slice(0, -2) : `,
${data.slice(2, -2)}`;
      } else {
        data = JSON.stringify(response.entities);
        data = firstSend ? data.slice(0, -1) : `,${data.slice(1, -1)}`;
      }
      firstSend = false;
      return write.writeResponseData(res, data);
    },
    complete() {
      if (firstSend) {
        res.json([]);
      } else {
        res.end(prettyPrint ? "\n]" : "]", "utf8");
      }
      completed = true;
    },
    close() {
      if (!completed) {
        res.end();
      }
    }
  };
}

exports.createEntityArrayJsonStream = createEntityArrayJsonStream;
//# sourceMappingURL=createEntityArrayJsonStream.cjs.js.map
