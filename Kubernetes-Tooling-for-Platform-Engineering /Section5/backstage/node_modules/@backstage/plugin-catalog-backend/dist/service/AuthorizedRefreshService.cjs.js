'use strict';

var errors = require('@backstage/errors');
var alpha = require('@backstage/plugin-catalog-common/alpha');
var pluginPermissionCommon = require('@backstage/plugin-permission-common');

class AuthorizedRefreshService {
  constructor(service, permissionApi) {
    this.service = service;
    this.permissionApi = permissionApi;
  }
  async refresh(options) {
    const authorizeDecision = (await this.permissionApi.authorize(
      [
        {
          permission: alpha.catalogEntityRefreshPermission,
          resourceRef: options.entityRef
        }
      ],
      { credentials: options.credentials }
    ))[0];
    if (authorizeDecision.result !== pluginPermissionCommon.AuthorizeResult.ALLOW) {
      throw new errors.NotAllowedError();
    }
    await this.service.refresh(options);
  }
}

exports.AuthorizedRefreshService = AuthorizedRefreshService;
//# sourceMappingURL=AuthorizedRefreshService.cjs.js.map
