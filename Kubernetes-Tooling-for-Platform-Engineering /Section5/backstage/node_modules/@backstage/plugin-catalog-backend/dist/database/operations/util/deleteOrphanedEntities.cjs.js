'use strict';

var uniq = require('lodash/uniq');
var markForStitching = require('../stitcher/markForStitching.cjs.js');

function _interopDefaultCompat (e) { return e && typeof e === 'object' && 'default' in e ? e : { default: e }; }

var uniq__default = /*#__PURE__*/_interopDefaultCompat(uniq);

async function deleteOrphanedEntities(options) {
  const { knex, strategy } = options;
  let total = 0;
  for (let i = 0; i < 100; ++i) {
    const candidates = await knex.with(
      "orphans",
      ["entity_id", "entity_ref"],
      (orphans) => orphans.from("refresh_state").select("refresh_state.entity_id", "refresh_state.entity_ref").leftOuterJoin(
        "refresh_state_references",
        "refresh_state_references.target_entity_ref",
        "refresh_state.entity_ref"
      ).whereNull("refresh_state_references.target_entity_ref")
    ).select({
      entityId: "orphans.entity_id",
      relationSourceId: "refresh_state.entity_id"
    }).from("orphans").leftOuterJoin(
      "relations",
      "relations.target_entity_ref",
      "orphans.entity_ref"
    ).leftOuterJoin(
      "refresh_state",
      "refresh_state.entity_ref",
      "relations.source_entity_ref"
    );
    if (!candidates.length) {
      break;
    }
    const orphanIds = uniq__default.default(candidates.map((r) => r.entityId));
    const orphanRelationIds = uniq__default.default(
      candidates.map((r) => r.relationSourceId).filter(Boolean)
    );
    total += orphanIds.length;
    await knex.table("refresh_state").delete().whereIn("entity_id", orphanIds);
    await markForStitching.markForStitching({
      knex,
      strategy,
      entityIds: orphanRelationIds
    });
  }
  return total;
}

exports.deleteOrphanedEntities = deleteOrphanedEntities;
//# sourceMappingURL=deleteOrphanedEntities.cjs.js.map
