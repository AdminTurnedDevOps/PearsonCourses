'use strict';

var integration = require('@backstage/integration');
var parseGitUrl = require('git-url-parse');
var lodash = require('lodash');

function _interopDefaultCompat (e) { return e && typeof e === 'object' && 'default' in e ? e : { default: e }; }

var parseGitUrl__default = /*#__PURE__*/_interopDefaultCompat(parseGitUrl);

const GITHUB_ACTIONS_ANNOTATION = "github.com/project-slug";
const GITLAB_ACTIONS_ANNOTATION = "gitlab.com/project-slug";
const AZURE_ACTIONS_ANNOTATION = "dev.azure.com/project-repo";
class AnnotateScmSlugEntityProcessor {
  constructor(opts) {
    this.opts = opts;
  }
  getProcessorName() {
    return "AnnotateScmSlugEntityProcessor";
  }
  static fromConfig(config, options) {
    return new AnnotateScmSlugEntityProcessor({
      scmIntegrationRegistry: integration.ScmIntegrations.fromConfig(config),
      kinds: options?.kinds
    });
  }
  async preProcessEntity(entity, location) {
    const applicableKinds = (this.opts.kinds ?? ["Component"]).map(
      (k) => k.toLocaleLowerCase("en-US")
    );
    if (!applicableKinds.includes(entity.kind.toLocaleLowerCase("en-US")) || location.type !== "url") {
      return entity;
    }
    const scmIntegration = this.opts.scmIntegrationRegistry.byUrl(
      location.target
    );
    if (!scmIntegration) {
      return entity;
    }
    let annotation;
    switch (scmIntegration.type) {
      case "github":
        annotation = GITHUB_ACTIONS_ANNOTATION;
        break;
      case "gitlab":
        annotation = GITLAB_ACTIONS_ANNOTATION;
        break;
      case "azure":
        annotation = AZURE_ACTIONS_ANNOTATION;
        break;
      default:
        return entity;
    }
    let projectSlug = entity.metadata.annotations?.[annotation];
    if (!projectSlug) {
      const gitUrl = parseGitUrl__default.default(location.target);
      projectSlug = `${gitUrl.owner}/${gitUrl.name}`;
    }
    return lodash.merge(
      {
        metadata: {
          annotations: lodash.pickBy(
            {
              [annotation]: projectSlug
            },
            lodash.identity
          )
        }
      },
      entity
    );
  }
}

exports.AnnotateScmSlugEntityProcessor = AnnotateScmSlugEntityProcessor;
//# sourceMappingURL=AnnotateScmSlugEntityProcessor.cjs.js.map
