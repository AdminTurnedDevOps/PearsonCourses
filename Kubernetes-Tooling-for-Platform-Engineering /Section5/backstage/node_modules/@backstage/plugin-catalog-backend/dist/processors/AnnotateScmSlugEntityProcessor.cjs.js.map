{"version":3,"file":"AnnotateScmSlugEntityProcessor.cjs.js","sources":["../../src/processors/AnnotateScmSlugEntityProcessor.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { Config } from '@backstage/config';\nimport {\n  ScmIntegrationRegistry,\n  ScmIntegrations,\n} from '@backstage/integration';\nimport parseGitUrl from 'git-url-parse';\nimport { identity, merge, pickBy } from 'lodash';\nimport { LocationSpec } from '@backstage/plugin-catalog-common';\nimport { CatalogProcessor } from '@backstage/plugin-catalog-node';\n\nconst GITHUB_ACTIONS_ANNOTATION = 'github.com/project-slug';\nconst GITLAB_ACTIONS_ANNOTATION = 'gitlab.com/project-slug';\nconst AZURE_ACTIONS_ANNOTATION = 'dev.azure.com/project-repo';\n\n/** @public */\nexport class AnnotateScmSlugEntityProcessor implements CatalogProcessor {\n  constructor(\n    private readonly opts: {\n      scmIntegrationRegistry: ScmIntegrationRegistry;\n      kinds?: string[];\n    },\n  ) {}\n\n  getProcessorName(): string {\n    return 'AnnotateScmSlugEntityProcessor';\n  }\n\n  static fromConfig(\n    config: Config,\n    options?: { kinds?: string[] },\n  ): AnnotateScmSlugEntityProcessor {\n    return new AnnotateScmSlugEntityProcessor({\n      scmIntegrationRegistry: ScmIntegrations.fromConfig(config),\n      kinds: options?.kinds,\n    });\n  }\n\n  async preProcessEntity(\n    entity: Entity,\n    location: LocationSpec,\n  ): Promise<Entity> {\n    const applicableKinds = (this.opts.kinds ?? ['Component']).map(k =>\n      k.toLocaleLowerCase('en-US'),\n    );\n    if (\n      !applicableKinds.includes(entity.kind.toLocaleLowerCase('en-US')) ||\n      location.type !== 'url'\n    ) {\n      return entity;\n    }\n\n    const scmIntegration = this.opts.scmIntegrationRegistry.byUrl(\n      location.target,\n    );\n\n    if (!scmIntegration) {\n      return entity;\n    }\n\n    let annotation;\n    switch (scmIntegration.type) {\n      case 'github':\n        annotation = GITHUB_ACTIONS_ANNOTATION;\n        break;\n      case 'gitlab':\n        annotation = GITLAB_ACTIONS_ANNOTATION;\n        break;\n      case 'azure':\n        annotation = AZURE_ACTIONS_ANNOTATION;\n        break;\n      default:\n        return entity;\n    }\n\n    let projectSlug = entity.metadata.annotations?.[annotation];\n    if (!projectSlug) {\n      const gitUrl = parseGitUrl(location.target);\n      projectSlug = `${gitUrl.owner}/${gitUrl.name}`;\n    }\n\n    return merge(\n      {\n        metadata: {\n          annotations: pickBy(\n            {\n              [annotation]: projectSlug,\n            },\n            identity,\n          ),\n        },\n      },\n      entity,\n    );\n  }\n}\n"],"names":["ScmIntegrations","parseGitUrl","merge","pickBy","identity"],"mappings":";;;;;;;;;;AA2BA,MAAM,yBAA4B,GAAA,yBAAA;AAClC,MAAM,yBAA4B,GAAA,yBAAA;AAClC,MAAM,wBAA2B,GAAA,4BAAA;AAG1B,MAAM,8BAA2D,CAAA;AAAA,EACtE,YACmB,IAIjB,EAAA;AAJiB,IAAA,IAAA,CAAA,IAAA,GAAA,IAAA;AAAA;AAIhB,EAEH,gBAA2B,GAAA;AACzB,IAAO,OAAA,gCAAA;AAAA;AACT,EAEA,OAAO,UACL,CAAA,MAAA,EACA,OACgC,EAAA;AAChC,IAAA,OAAO,IAAI,8BAA+B,CAAA;AAAA,MACxC,sBAAA,EAAwBA,2BAAgB,CAAA,UAAA,CAAW,MAAM,CAAA;AAAA,MACzD,OAAO,OAAS,EAAA;AAAA,KACjB,CAAA;AAAA;AACH,EAEA,MAAM,gBACJ,CAAA,MAAA,EACA,QACiB,EAAA;AACjB,IAAA,MAAM,mBAAmB,IAAK,CAAA,IAAA,CAAK,KAAS,IAAA,CAAC,WAAW,CAAG,EAAA,GAAA;AAAA,MAAI,CAAA,CAAA,KAC7D,CAAE,CAAA,iBAAA,CAAkB,OAAO;AAAA,KAC7B;AACA,IACE,IAAA,CAAC,eAAgB,CAAA,QAAA,CAAS,MAAO,CAAA,IAAA,CAAK,iBAAkB,CAAA,OAAO,CAAC,CAAA,IAChE,QAAS,CAAA,IAAA,KAAS,KAClB,EAAA;AACA,MAAO,OAAA,MAAA;AAAA;AAGT,IAAM,MAAA,cAAA,GAAiB,IAAK,CAAA,IAAA,CAAK,sBAAuB,CAAA,KAAA;AAAA,MACtD,QAAS,CAAA;AAAA,KACX;AAEA,IAAA,IAAI,CAAC,cAAgB,EAAA;AACnB,MAAO,OAAA,MAAA;AAAA;AAGT,IAAI,IAAA,UAAA;AACJ,IAAA,QAAQ,eAAe,IAAM;AAAA,MAC3B,KAAK,QAAA;AACH,QAAa,UAAA,GAAA,yBAAA;AACb,QAAA;AAAA,MACF,KAAK,QAAA;AACH,QAAa,UAAA,GAAA,yBAAA;AACb,QAAA;AAAA,MACF,KAAK,OAAA;AACH,QAAa,UAAA,GAAA,wBAAA;AACb,QAAA;AAAA,MACF;AACE,QAAO,OAAA,MAAA;AAAA;AAGX,IAAA,IAAI,WAAc,GAAA,MAAA,CAAO,QAAS,CAAA,WAAA,GAAc,UAAU,CAAA;AAC1D,IAAA,IAAI,CAAC,WAAa,EAAA;AAChB,MAAM,MAAA,MAAA,GAASC,4BAAY,CAAA,QAAA,CAAS,MAAM,CAAA;AAC1C,MAAA,WAAA,GAAc,CAAG,EAAA,MAAA,CAAO,KAAK,CAAA,CAAA,EAAI,OAAO,IAAI,CAAA,CAAA;AAAA;AAG9C,IAAO,OAAAC,YAAA;AAAA,MACL;AAAA,QACE,QAAU,EAAA;AAAA,UACR,WAAa,EAAAC,aAAA;AAAA,YACX;AAAA,cACE,CAAC,UAAU,GAAG;AAAA,aAChB;AAAA,YACAC;AAAA;AACF;AACF,OACF;AAAA,MACA;AAAA,KACF;AAAA;AAEJ;;;;"}