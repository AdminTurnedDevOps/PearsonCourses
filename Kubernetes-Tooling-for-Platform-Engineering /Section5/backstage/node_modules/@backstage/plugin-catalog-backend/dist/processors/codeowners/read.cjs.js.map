{"version":3,"file":"read.cjs.js","sources":["../../../src/processors/codeowners/read.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NotFoundError } from '@backstage/errors';\nimport { ScmIntegration } from '@backstage/integration';\nimport 'core-js/features/promise'; // NOTE: This can be removed when ES2021 is implemented\nimport { resolveCodeOwner } from './resolve';\nimport { scmCodeOwnersPaths } from './scm';\nimport { UrlReaderService } from '@backstage/backend-plugin-api';\n\nexport async function readCodeOwners(\n  reader: UrlReaderService,\n  sourceUrl: string,\n  codeownersPaths: string[],\n): Promise<string | undefined> {\n  const readOwnerLocation = async (path: string): Promise<string> => {\n    const url = `${sourceUrl}${path}`;\n    const data = await reader.readUrl(url);\n    const buffer = await data.buffer();\n    return buffer.toString();\n  };\n\n  const candidates = codeownersPaths.map(readOwnerLocation);\n\n  return Promise.any(candidates).catch((aggregateError: AggregateError) => {\n    const hardError = aggregateError.errors.find(\n      error => !(error instanceof NotFoundError),\n    );\n\n    if (hardError) {\n      throw hardError;\n    }\n\n    return undefined;\n  });\n}\n\nexport async function findCodeOwnerByTarget(\n  reader: UrlReaderService,\n  targetUrl: string,\n  scmIntegration: ScmIntegration,\n): Promise<string | undefined> {\n  const codeownersPaths = scmCodeOwnersPaths[scmIntegration?.type ?? ''];\n\n  const sourceUrl = scmIntegration?.resolveUrl({\n    url: '/',\n    base: targetUrl,\n  });\n\n  if (!sourceUrl || !codeownersPaths) {\n    return undefined;\n  }\n\n  const contents = await readCodeOwners(reader, sourceUrl, codeownersPaths);\n\n  if (!contents) {\n    return undefined;\n  }\n\n  const owner = resolveCodeOwner(contents, targetUrl);\n\n  return owner;\n}\n"],"names":["NotFoundError","scmCodeOwnersPaths","resolveCodeOwner"],"mappings":";;;;;;;AAuBsB,eAAA,cAAA,CACpB,MACA,EAAA,SAAA,EACA,eAC6B,EAAA;AAC7B,EAAM,MAAA,iBAAA,GAAoB,OAAO,IAAkC,KAAA;AACjE,IAAA,MAAM,GAAM,GAAA,CAAA,EAAG,SAAS,CAAA,EAAG,IAAI,CAAA,CAAA;AAC/B,IAAA,MAAM,IAAO,GAAA,MAAM,MAAO,CAAA,OAAA,CAAQ,GAAG,CAAA;AACrC,IAAM,MAAA,MAAA,GAAS,MAAM,IAAA,CAAK,MAAO,EAAA;AACjC,IAAA,OAAO,OAAO,QAAS,EAAA;AAAA,GACzB;AAEA,EAAM,MAAA,UAAA,GAAa,eAAgB,CAAA,GAAA,CAAI,iBAAiB,CAAA;AAExD,EAAA,OAAO,QAAQ,GAAI,CAAA,UAAU,CAAE,CAAA,KAAA,CAAM,CAAC,cAAmC,KAAA;AACvE,IAAM,MAAA,SAAA,GAAY,eAAe,MAAO,CAAA,IAAA;AAAA,MACtC,CAAA,KAAA,KAAS,EAAE,KAAiB,YAAAA,oBAAA;AAAA,KAC9B;AAEA,IAAA,IAAI,SAAW,EAAA;AACb,MAAM,MAAA,SAAA;AAAA;AAGR,IAAO,OAAA,KAAA,CAAA;AAAA,GACR,CAAA;AACH;AAEsB,eAAA,qBAAA,CACpB,MACA,EAAA,SAAA,EACA,cAC6B,EAAA;AAC7B,EAAA,MAAM,eAAkB,GAAAC,sBAAA,CAAmB,cAAgB,EAAA,IAAA,IAAQ,EAAE,CAAA;AAErE,EAAM,MAAA,SAAA,GAAY,gBAAgB,UAAW,CAAA;AAAA,IAC3C,GAAK,EAAA,GAAA;AAAA,IACL,IAAM,EAAA;AAAA,GACP,CAAA;AAED,EAAI,IAAA,CAAC,SAAa,IAAA,CAAC,eAAiB,EAAA;AAClC,IAAO,OAAA,KAAA,CAAA;AAAA;AAGT,EAAA,MAAM,QAAW,GAAA,MAAM,cAAe,CAAA,MAAA,EAAQ,WAAW,eAAe,CAAA;AAExE,EAAA,IAAI,CAAC,QAAU,EAAA;AACb,IAAO,OAAA,KAAA,CAAA;AAAA;AAGT,EAAM,MAAA,KAAA,GAAQC,wBAAiB,CAAA,QAAA,EAAU,SAAS,CAAA;AAElD,EAAO,OAAA,KAAA;AACT;;;;;"}