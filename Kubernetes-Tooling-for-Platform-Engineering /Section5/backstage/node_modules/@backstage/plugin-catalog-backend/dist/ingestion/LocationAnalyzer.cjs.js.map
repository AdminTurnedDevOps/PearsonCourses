{"version":3,"file":"LocationAnalyzer.cjs.js","sources":["../../src/ingestion/LocationAnalyzer.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport parseGitUrl from 'git-url-parse';\nimport { Entity } from '@backstage/catalog-model';\nimport { ScmIntegrationRegistry } from '@backstage/integration';\nimport {\n  AnalyzeLocationRequest,\n  AnalyzeLocationResponse,\n} from '@backstage/plugin-catalog-common';\nimport {\n  LocationAnalyzer,\n  ScmLocationAnalyzer,\n} from '@backstage/plugin-catalog-node';\nimport { LoggerService } from '@backstage/backend-plugin-api';\n\nexport class RepoLocationAnalyzer implements LocationAnalyzer {\n  private readonly logger: LoggerService;\n  private readonly scmIntegrations: ScmIntegrationRegistry;\n  private readonly analyzers: ScmLocationAnalyzer[];\n\n  constructor(\n    logger: LoggerService,\n    scmIntegrations: ScmIntegrationRegistry,\n    analyzers: ScmLocationAnalyzer[],\n  ) {\n    this.logger = logger;\n    this.scmIntegrations = scmIntegrations;\n    this.analyzers = analyzers;\n  }\n  async analyzeLocation(\n    request: AnalyzeLocationRequest,\n  ): Promise<AnalyzeLocationResponse> {\n    const integration = this.scmIntegrations.byUrl(request.location.target);\n    const { owner, name } = parseGitUrl(request.location.target);\n\n    let annotationPrefix;\n    switch (integration?.type) {\n      case 'azure':\n        annotationPrefix = 'dev.azure.com';\n        break;\n      case 'bitbucket':\n        annotationPrefix = 'bitbucket.org';\n        break;\n      case 'github':\n        annotationPrefix = 'github.com';\n        break;\n      case 'gitlab':\n        annotationPrefix = 'gitlab.com';\n        break;\n      default:\n        break;\n    }\n\n    const analyzer = this.analyzers.find(a =>\n      a.supports(request.location.target),\n    );\n    if (analyzer) {\n      const analyzerResult = await analyzer.analyze({\n        url: request.location.target,\n      });\n      if (analyzerResult.existing.length > 0) {\n        this.logger.debug(\n          `entity for ${request.location.target} already exists.`,\n        );\n        return {\n          existingEntityFiles: analyzerResult.existing,\n          generateEntities: [],\n        };\n      }\n    }\n\n    const entity: Entity = {\n      apiVersion: 'backstage.io/v1alpha1',\n      kind: 'Component',\n      metadata: {\n        name: name,\n      },\n      spec: { type: 'other', lifecycle: 'unknown' },\n    };\n\n    if (annotationPrefix) {\n      entity.metadata.annotations = {\n        [`${annotationPrefix}/project-slug`]: `${owner}/${name}`,\n      };\n    }\n\n    this.logger.debug(`entity created for ${request.location.target}`);\n    return {\n      existingEntityFiles: [],\n      generateEntities: [{ entity, fields: [] }],\n    };\n  }\n}\n"],"names":["parseGitUrl"],"mappings":";;;;;;;;AA6BO,MAAM,oBAAiD,CAAA;AAAA,EAC3C,MAAA;AAAA,EACA,eAAA;AAAA,EACA,SAAA;AAAA,EAEjB,WAAA,CACE,MACA,EAAA,eAAA,EACA,SACA,EAAA;AACA,IAAA,IAAA,CAAK,MAAS,GAAA,MAAA;AACd,IAAA,IAAA,CAAK,eAAkB,GAAA,eAAA;AACvB,IAAA,IAAA,CAAK,SAAY,GAAA,SAAA;AAAA;AACnB,EACA,MAAM,gBACJ,OACkC,EAAA;AAClC,IAAA,MAAM,cAAc,IAAK,CAAA,eAAA,CAAgB,KAAM,CAAA,OAAA,CAAQ,SAAS,MAAM,CAAA;AACtE,IAAA,MAAM,EAAE,KAAO,EAAA,IAAA,KAASA,4BAAY,CAAA,OAAA,CAAQ,SAAS,MAAM,CAAA;AAE3D,IAAI,IAAA,gBAAA;AACJ,IAAA,QAAQ,aAAa,IAAM;AAAA,MACzB,KAAK,OAAA;AACH,QAAmB,gBAAA,GAAA,eAAA;AACnB,QAAA;AAAA,MACF,KAAK,WAAA;AACH,QAAmB,gBAAA,GAAA,eAAA;AACnB,QAAA;AAAA,MACF,KAAK,QAAA;AACH,QAAmB,gBAAA,GAAA,YAAA;AACnB,QAAA;AAAA,MACF,KAAK,QAAA;AACH,QAAmB,gBAAA,GAAA,YAAA;AACnB,QAAA;AAEA;AAGJ,IAAM,MAAA,QAAA,GAAW,KAAK,SAAU,CAAA,IAAA;AAAA,MAAK,CACnC,CAAA,KAAA,CAAA,CAAE,QAAS,CAAA,OAAA,CAAQ,SAAS,MAAM;AAAA,KACpC;AACA,IAAA,IAAI,QAAU,EAAA;AACZ,MAAM,MAAA,cAAA,GAAiB,MAAM,QAAA,CAAS,OAAQ,CAAA;AAAA,QAC5C,GAAA,EAAK,QAAQ,QAAS,CAAA;AAAA,OACvB,CAAA;AACD,MAAI,IAAA,cAAA,CAAe,QAAS,CAAA,MAAA,GAAS,CAAG,EAAA;AACtC,QAAA,IAAA,CAAK,MAAO,CAAA,KAAA;AAAA,UACV,CAAA,WAAA,EAAc,OAAQ,CAAA,QAAA,CAAS,MAAM,CAAA,gBAAA;AAAA,SACvC;AACA,QAAO,OAAA;AAAA,UACL,qBAAqB,cAAe,CAAA,QAAA;AAAA,UACpC,kBAAkB;AAAC,SACrB;AAAA;AACF;AAGF,IAAA,MAAM,MAAiB,GAAA;AAAA,MACrB,UAAY,EAAA,uBAAA;AAAA,MACZ,IAAM,EAAA,WAAA;AAAA,MACN,QAAU,EAAA;AAAA,QACR;AAAA,OACF;AAAA,MACA,IAAM,EAAA,EAAE,IAAM,EAAA,OAAA,EAAS,WAAW,SAAU;AAAA,KAC9C;AAEA,IAAA,IAAI,gBAAkB,EAAA;AACpB,MAAA,MAAA,CAAO,SAAS,WAAc,GAAA;AAAA,QAC5B,CAAC,GAAG,gBAAgB,CAAA,aAAA,CAAe,GAAG,CAAG,EAAA,KAAK,IAAI,IAAI,CAAA;AAAA,OACxD;AAAA;AAGF,IAAA,IAAA,CAAK,OAAO,KAAM,CAAA,CAAA,mBAAA,EAAsB,OAAQ,CAAA,QAAA,CAAS,MAAM,CAAE,CAAA,CAAA;AACjE,IAAO,OAAA;AAAA,MACL,qBAAqB,EAAC;AAAA,MACtB,kBAAkB,CAAC,EAAE,QAAQ,MAAQ,EAAA,IAAI;AAAA,KAC3C;AAAA;AAEJ;;;;"}