{"version":3,"file":"hasAnnotation.cjs.js","sources":["../../../src/permissions/rules/hasAnnotation.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RESOURCE_TYPE_CATALOG_ENTITY } from '@backstage/plugin-catalog-common/alpha';\nimport { z } from 'zod';\nimport { createCatalogPermissionRule } from './util';\n\n/**\n * A catalog {@link @backstage/plugin-permission-node#PermissionRule} which\n * filters for the presence of an annotation on a given entity.\n *\n * If a value is given, it filters for the annotation value, too.\n *\n * @alpha\n */\nexport const hasAnnotation = createCatalogPermissionRule({\n  name: 'HAS_ANNOTATION',\n  description: 'Allow entities with the specified annotation',\n  resourceType: RESOURCE_TYPE_CATALOG_ENTITY,\n  paramsSchema: z.object({\n    annotation: z.string().describe('Name of the annotation to match on'),\n    value: z\n      .string()\n      .optional()\n      .describe('Value of the annotation to match on'),\n  }),\n  apply: (resource, { annotation, value }) =>\n    !!resource.metadata.annotations?.hasOwnProperty(annotation) &&\n    (value === undefined\n      ? true\n      : resource.metadata.annotations?.[annotation] === value),\n  toQuery: ({ annotation, value }) =>\n    value === undefined\n      ? {\n          key: `metadata.annotations.${annotation}`,\n        }\n      : {\n          key: `metadata.annotations.${annotation}`,\n          values: [value],\n        },\n});\n"],"names":["createCatalogPermissionRule","RESOURCE_TYPE_CATALOG_ENTITY","z"],"mappings":";;;;;;AA4BO,MAAM,gBAAgBA,gCAA4B,CAAA;AAAA,EACvD,IAAM,EAAA,gBAAA;AAAA,EACN,WAAa,EAAA,8CAAA;AAAA,EACb,YAAc,EAAAC,kCAAA;AAAA,EACd,YAAA,EAAcC,MAAE,MAAO,CAAA;AAAA,IACrB,UAAY,EAAAA,KAAA,CAAE,MAAO,EAAA,CAAE,SAAS,oCAAoC,CAAA;AAAA,IACpE,OAAOA,KACJ,CAAA,MAAA,GACA,QAAS,EAAA,CACT,SAAS,qCAAqC;AAAA,GAClD,CAAA;AAAA,EACD,KAAA,EAAO,CAAC,QAAU,EAAA,EAAE,YAAY,KAAM,EAAA,KACpC,CAAC,CAAC,QAAS,CAAA,QAAA,CAAS,aAAa,cAAe,CAAA,UAAU,MACzD,KAAU,KAAA,KAAA,CAAA,GACP,OACA,QAAS,CAAA,QAAA,CAAS,WAAc,GAAA,UAAU,CAAM,KAAA,KAAA,CAAA;AAAA,EACtD,SAAS,CAAC,EAAE,YAAY,KAAM,EAAA,KAC5B,UAAU,KACN,CAAA,GAAA;AAAA,IACE,GAAA,EAAK,wBAAwB,UAAU,CAAA;AAAA,GAEzC,GAAA;AAAA,IACE,GAAA,EAAK,wBAAwB,UAAU,CAAA,CAAA;AAAA,IACvC,MAAA,EAAQ,CAAC,KAAK;AAAA;AAExB,CAAC;;;;"}