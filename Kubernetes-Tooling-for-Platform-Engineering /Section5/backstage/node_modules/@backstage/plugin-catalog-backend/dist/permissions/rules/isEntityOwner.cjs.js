'use strict';

var catalogModel = require('@backstage/catalog-model');
var alpha = require('@backstage/plugin-catalog-common/alpha');
var zod = require('zod');
var util = require('./util.cjs.js');

const isEntityOwner = util.createCatalogPermissionRule({
  name: "IS_ENTITY_OWNER",
  description: "Allow entities owned by a specified claim",
  resourceType: alpha.RESOURCE_TYPE_CATALOG_ENTITY,
  paramsSchema: zod.z.object({
    claims: zod.z.array(zod.z.string()).describe(
      `List of claims to match at least one on within ${catalogModel.RELATION_OWNED_BY}`
    )
  }),
  apply: (resource, { claims }) => {
    if (!resource.relations) {
      return false;
    }
    return resource.relations.filter((relation) => relation.type === catalogModel.RELATION_OWNED_BY).some((relation) => claims.includes(relation.targetRef));
  },
  toQuery: ({ claims }) => ({
    key: "relations.ownedBy",
    values: claims
  })
});

exports.isEntityOwner = isEntityOwner;
//# sourceMappingURL=isEntityOwner.cjs.js.map
