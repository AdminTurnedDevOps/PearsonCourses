'use strict';

var fs = require('fs-extra');
var path = require('path');

function _interopDefaultCompat (e) { return e && typeof e === 'object' && 'default' in e ? e : { default: e }; }

var fs__default = /*#__PURE__*/_interopDefaultCompat(fs);

async function injectConfigIntoStatic(options) {
  const { staticDir, logger, appConfigs } = options;
  const files = await fs__default.default.readdir(staticDir);
  const jsFiles = files.filter((file) => file.endsWith(".js"));
  const escapedData = JSON.stringify(appConfigs).replace(/("|'|\\)/g, "\\$1");
  const injected = `/*__APP_INJECTED_CONFIG_MARKER__*/"${escapedData}"/*__INJECTED_END__*/`;
  for (const jsFile of jsFiles) {
    const path$1 = path.resolve(staticDir, jsFile);
    const content = await fs__default.default.readFile(path$1, "utf8");
    if (content.includes("__APP_INJECTED_RUNTIME_CONFIG__")) {
      logger.info(`Injecting env config into ${jsFile}`);
      const newContent = content.replaceAll(
        '"__APP_INJECTED_RUNTIME_CONFIG__"',
        injected
      );
      await fs__default.default.writeFile(path$1, newContent, "utf8");
      return path$1;
    } else if (content.includes("__APP_INJECTED_CONFIG_MARKER__")) {
      logger.info(`Replacing injected env config in ${jsFile}`);
      const newContent = content.replaceAll(
        /\/\*__APP_INJECTED_CONFIG_MARKER__\*\/.*?\/\*__INJECTED_END__\*\//g,
        injected
      );
      await fs__default.default.writeFile(path$1, newContent, "utf8");
      return path$1;
    }
  }
  logger.info("Env config not injected");
  return void 0;
}

exports.injectConfigIntoStatic = injectConfigIntoStatic;
//# sourceMappingURL=injectConfigIntoStatic.cjs.js.map
