'use strict';

var catalogModel = require('@backstage/catalog-model');
var pluginCatalogNode = require('@backstage/plugin-catalog-node');
var pluginScaffolderCommon = require('@backstage/plugin-scaffolder-common');

class ScaffolderEntitiesProcessor {
  getProcessorName() {
    return "ScaffolderEntitiesProcessor";
  }
  validators = [pluginScaffolderCommon.templateEntityV1beta3Validator];
  async validateEntityKind(entity) {
    for (const validator of this.validators) {
      if (await validator.check(entity)) {
        return true;
      }
    }
    return false;
  }
  async postProcessEntity(entity, _location, emit) {
    const selfRef = catalogModel.getCompoundEntityRef(entity);
    if (entity.apiVersion === "scaffolder.backstage.io/v1beta3" && entity.kind === "Template") {
      const template = entity;
      const target = template.spec.owner;
      if (target) {
        const targetRef = catalogModel.parseEntityRef(target, {
          defaultKind: "Group",
          defaultNamespace: selfRef.namespace
        });
        emit(
          pluginCatalogNode.processingResult.relation({
            source: selfRef,
            type: catalogModel.RELATION_OWNED_BY,
            target: {
              kind: targetRef.kind,
              namespace: targetRef.namespace,
              name: targetRef.name
            }
          })
        );
        emit(
          pluginCatalogNode.processingResult.relation({
            source: {
              kind: targetRef.kind,
              namespace: targetRef.namespace,
              name: targetRef.name
            },
            type: catalogModel.RELATION_OWNER_OF,
            target: selfRef
          })
        );
      }
    }
    return entity;
  }
}

exports.ScaffolderEntitiesProcessor = ScaffolderEntitiesProcessor;
//# sourceMappingURL=ScaffolderEntitiesProcessor.cjs.js.map
