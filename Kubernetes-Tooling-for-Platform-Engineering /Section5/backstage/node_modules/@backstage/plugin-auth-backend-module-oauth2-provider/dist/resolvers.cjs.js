'use strict';

var pluginAuthNode = require('@backstage/plugin-auth-node');

exports.oauth2SignInResolvers = void 0;
((oauth2SignInResolvers2) => {
  oauth2SignInResolvers2.usernameMatchingUserEntityName = pluginAuthNode.createSignInResolverFactory({
    create() {
      return async (info, ctx) => {
        const { result } = info;
        const id = result.fullProfile.username;
        if (!id) {
          throw new Error(`Oauth2 user profile does not contain a username`);
        }
        return ctx.signInWithCatalogUser({ entityRef: { name: id } });
      };
    }
  });
})(exports.oauth2SignInResolvers || (exports.oauth2SignInResolvers = {}));
//# sourceMappingURL=resolvers.cjs.js.map
