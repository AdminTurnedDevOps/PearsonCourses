import React from 'react';
import CssBaseline from '@material-ui/core/CssBaseline';
import { createGenerateClassName, StylesProvider, ThemeProvider } from '@material-ui/core/styles';
import { StyledEngineProvider, ThemeProvider as ThemeProvider$1 } from '@mui/material/styles';
import { unstable_ClassNameGenerator } from '@mui/material/className';

unstable_ClassNameGenerator.configure((componentName) => {
  return `v5-${componentName}`;
});
const generateV4ClassName = createGenerateClassName({
  productionPrefix: "jss4-"
});
function UnifiedThemeProvider(props) {
  const { children, theme, noCssBaseline = false } = props;
  const v4Theme = theme.getTheme("v4");
  const v5Theme = theme.getTheme("v5");
  let cssBaseline = void 0;
  if (!noCssBaseline) {
    cssBaseline = /* @__PURE__ */ React.createElement(CssBaseline, null);
  }
  let result = /* @__PURE__ */ React.createElement(React.Fragment, null, cssBaseline, children);
  if (v4Theme) {
    result = /* @__PURE__ */ React.createElement(StylesProvider, { generateClassName: generateV4ClassName }, /* @__PURE__ */ React.createElement(ThemeProvider, { theme: v4Theme }, result));
  }
  if (v5Theme) {
    result = /* @__PURE__ */ React.createElement(StyledEngineProvider, { injectFirst: true }, /* @__PURE__ */ React.createElement(ThemeProvider$1, { theme: v5Theme }, result));
  }
  return result;
}

export { UnifiedThemeProvider };
//# sourceMappingURL=UnifiedThemeProvider.esm.js.map
