'use strict';

var pluginAuthNode = require('@backstage/plugin-auth-node');

exports.cloudflareAccessSignInResolvers = void 0;
((cloudflareAccessSignInResolvers2) => {
  cloudflareAccessSignInResolvers2.emailMatchingUserEntityProfileEmail = pluginAuthNode.createSignInResolverFactory({
    create() {
      return async (info, ctx) => {
        const { profile } = info;
        if (!profile.email) {
          throw new Error(
            "Login failed, user profile does not contain an email"
          );
        }
        return ctx.signInWithCatalogUser({
          filter: {
            "spec.profile.email": profile.email
          }
        });
      };
    }
  });
})(exports.cloudflareAccessSignInResolvers || (exports.cloudflareAccessSignInResolvers = {}));
//# sourceMappingURL=resolvers.cjs.js.map
