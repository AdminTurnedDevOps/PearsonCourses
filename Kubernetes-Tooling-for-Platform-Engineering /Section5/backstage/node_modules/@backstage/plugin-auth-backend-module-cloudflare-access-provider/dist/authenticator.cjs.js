'use strict';

var pluginAuthNode = require('@backstage/plugin-auth-node');
var helpers = require('./helpers.cjs.js');

function createCloudflareAccessAuthenticator(options) {
  return pluginAuthNode.createProxyAuthenticator({
    async defaultProfileTransform(result) {
      return {
        profile: {
          email: result.claims.email,
          displayName: result.cfIdentity.name
        }
      };
    },
    initialize({ config }) {
      return {
        helper: helpers.AuthHelper.fromConfig(config, { cache: options?.cache })
      };
    },
    async authenticate({ req }, { helper }) {
      const result = await helper.authenticate(req);
      return {
        result,
        providerInfo: result
      };
    }
  });
}

exports.createCloudflareAccessAuthenticator = createCloudflareAccessAuthenticator;
//# sourceMappingURL=authenticator.cjs.js.map
