'use strict';

var pluginAuthNode = require('@backstage/plugin-auth-node');

exports.oktaSignInResolvers = void 0;
((oktaSignInResolvers2) => {
  oktaSignInResolvers2.emailMatchingUserEntityAnnotation = pluginAuthNode.createSignInResolverFactory({
    create() {
      return async (info, ctx) => {
        const { profile } = info;
        if (!profile.email) {
          throw new Error("Okta profile contained no email");
        }
        return ctx.signInWithCatalogUser({
          annotations: {
            "okta.com/email": profile.email
          }
        });
      };
    }
  });
})(exports.oktaSignInResolvers || (exports.oktaSignInResolvers = {}));
//# sourceMappingURL=resolvers.cjs.js.map
