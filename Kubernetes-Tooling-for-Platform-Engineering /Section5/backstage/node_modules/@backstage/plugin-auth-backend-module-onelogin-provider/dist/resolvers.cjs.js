'use strict';

var pluginAuthNode = require('@backstage/plugin-auth-node');

exports.oneLoginSignInResolvers = void 0;
((oneLoginSignInResolvers2) => {
  oneLoginSignInResolvers2.usernameMatchingUserEntityName = pluginAuthNode.createSignInResolverFactory({
    create() {
      return async (info, ctx) => {
        const { result } = info;
        const id = result.fullProfile.username;
        if (!id) {
          throw new Error(`OneLogin user profile does not contain a username`);
        }
        return ctx.signInWithCatalogUser({ entityRef: { name: id } });
      };
    }
  });
})(exports.oneLoginSignInResolvers || (exports.oneLoginSignInResolvers = {}));
//# sourceMappingURL=resolvers.cjs.js.map
