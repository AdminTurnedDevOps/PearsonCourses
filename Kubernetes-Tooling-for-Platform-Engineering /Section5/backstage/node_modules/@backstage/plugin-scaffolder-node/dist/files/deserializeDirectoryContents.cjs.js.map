{"version":3,"file":"deserializeDirectoryContents.cjs.js","sources":["../../src/files/deserializeDirectoryContents.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs-extra';\nimport { dirname } from 'path';\nimport { resolveSafeChildPath } from '@backstage/backend-plugin-api';\nimport { SerializedFile } from './types';\n\n/**\n * Deserializes a list of serialized files into the target directory.\n *\n * This method uses `resolveSafeChildPath` to make sure that files are\n * not written outside of the target directory.\n *\n * @public\n */\nexport async function deserializeDirectoryContents(\n  targetPath: string,\n  files: SerializedFile[],\n): Promise<void> {\n  for (const file of files) {\n    const filePath = resolveSafeChildPath(targetPath, file.path);\n    await fs.ensureDir(dirname(filePath));\n    await fs.writeFile(filePath, file.content); // Ignore file mode\n  }\n}\n"],"names":["resolveSafeChildPath","fs","dirname"],"mappings":";;;;;;;;;;AA6BsB,eAAA,4BAAA,CACpB,YACA,KACe,EAAA;AACf,EAAA,KAAA,MAAW,QAAQ,KAAO,EAAA;AACxB,IAAA,MAAM,QAAW,GAAAA,qCAAA,CAAqB,UAAY,EAAA,IAAA,CAAK,IAAI,CAAA;AAC3D,IAAA,MAAMC,mBAAG,CAAA,SAAA,CAAUC,YAAQ,CAAA,QAAQ,CAAC,CAAA;AACpC,IAAA,MAAMD,mBAAG,CAAA,SAAA,CAAU,QAAU,EAAA,IAAA,CAAK,OAAO,CAAA;AAAA;AAE7C;;;;"}