{"version":3,"file":"gitlab.examples.cjs.js","sources":["../../src/actions/gitlab.examples.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description:\n      'Initializes a git repository with the content in the workspace, and publishes it to GitLab with the default configuration.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitlab',\n          name: 'Publish to GitLab',\n          input: {\n            repoUrl: 'gitlab.com?repo=project_name&owner=group_name',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Add a description.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitlab',\n          name: 'Publish to GitLab',\n          input: {\n            repoUrl: 'gitlab.com?repo=project_name&owner=group_name',\n            description: 'Initialize a git repository',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initializes a GitLab repository with an initial commit message, if not set defaults to `initial commit`.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitlab',\n          name: 'Publish to GitLab',\n          input: {\n            repoUrl: 'gitlab.com?repo=project_name&owner=group_name',\n            description: 'Initialize a git repository',\n            gitCommitMessage: 'Started a project.',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Initializes a GitLab repository with aditional settings.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitlab',\n          name: 'Publish to GitLab',\n          input: {\n            repoUrl: 'gitlab.com?repo=project_name&owner=group_name',\n            settings: {\n              ci_config_path: '.gitlab-ci.yml',\n              visibility: 'public',\n            },\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initializes a GitLab repository with fast forward merge and always squash settings.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitlab',\n          name: 'Publish to GitLab',\n          input: {\n            repoUrl: 'gitlab.com?repo=project_name&owner=group_name',\n            settings: {\n              merge_method: 'ff',\n              squash_option: 'always',\n            },\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Initializes a GitLab repository with branch settings.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitlab',\n          name: 'Publish to GitLab',\n          input: {\n            repoUrl: 'gitlab.com?repo=project_name&owner=group_name',\n            branches: [\n              {\n                name: 'dev',\n                create: true,\n                protect: true,\n                ref: 'master',\n              },\n              {\n                name: 'master',\n                protect: true,\n              },\n            ],\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Initializes a GitLab repository with environment variables.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitlab',\n          name: 'Publish to GitLab',\n          input: {\n            repoUrl: 'gitlab.com?repo=project_name&owner=group_name',\n            projectVariables: [\n              {\n                key: 'key1',\n                value: 'value1',\n                protected: true,\n                masked: false,\n              },\n              {\n                key: 'key2',\n                value: 'value2',\n                protected: true,\n                masked: false,\n              },\n            ],\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initializes a GitLab repository with pipeline must succeed and allow merge on skipped pipeline settings.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitlab',\n          name: 'Publish to GitLab',\n          input: {\n            repoUrl: 'gitlab.com?repo=project_name&owner=group_name',\n            settings: {\n              only_allow_merge_if_pipeline_succeeds: true,\n              allow_merge_on_skipped_pipeline: true,\n            },\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initializes a GitLab repository with setting to require all threads (discussions) on merge request to be resolved before merging.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitlab',\n          name: 'Publish to GitLab',\n          input: {\n            repoUrl: 'gitlab.com?repo=project_name&owner=group_name',\n            settings: {\n              only_allow_merge_if_all_discussions_are_resolved: true,\n            },\n          },\n        },\n      ],\n    }),\n  },\n];\n"],"names":["yaml"],"mappings":";;;;;;;;AAmBO,MAAM,QAA8B,GAAA;AAAA,EACzC;AAAA,IACE,WACE,EAAA,4HAAA;AAAA,IACF,OAAA,EAASA,sBAAK,SAAU,CAAA;AAAA,MACtB,KAAO,EAAA;AAAA,QACL;AAAA,UACE,EAAI,EAAA,SAAA;AAAA,UACJ,MAAQ,EAAA,gBAAA;AAAA,UACR,IAAM,EAAA,mBAAA;AAAA,UACN,KAAO,EAAA;AAAA,YACL,OAAS,EAAA;AAAA;AACX;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAa,EAAA,oBAAA;AAAA,IACb,OAAA,EAASA,sBAAK,SAAU,CAAA;AAAA,MACtB,KAAO,EAAA;AAAA,QACL;AAAA,UACE,EAAI,EAAA,SAAA;AAAA,UACJ,MAAQ,EAAA,gBAAA;AAAA,UACR,IAAM,EAAA,mBAAA;AAAA,UACN,KAAO,EAAA;AAAA,YACL,OAAS,EAAA,+CAAA;AAAA,YACT,WAAa,EAAA;AAAA;AACf;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WACE,EAAA,0GAAA;AAAA,IACF,OAAA,EAASA,sBAAK,SAAU,CAAA;AAAA,MACtB,KAAO,EAAA;AAAA,QACL;AAAA,UACE,EAAI,EAAA,SAAA;AAAA,UACJ,MAAQ,EAAA,gBAAA;AAAA,UACR,IAAM,EAAA,mBAAA;AAAA,UACN,KAAO,EAAA;AAAA,YACL,OAAS,EAAA,+CAAA;AAAA,YACT,WAAa,EAAA,6BAAA;AAAA,YACb,gBAAkB,EAAA;AAAA;AACpB;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAa,EAAA,0DAAA;AAAA,IACb,OAAA,EAASA,sBAAK,SAAU,CAAA;AAAA,MACtB,KAAO,EAAA;AAAA,QACL;AAAA,UACE,EAAI,EAAA,SAAA;AAAA,UACJ,MAAQ,EAAA,gBAAA;AAAA,UACR,IAAM,EAAA,mBAAA;AAAA,UACN,KAAO,EAAA;AAAA,YACL,OAAS,EAAA,+CAAA;AAAA,YACT,QAAU,EAAA;AAAA,cACR,cAAgB,EAAA,gBAAA;AAAA,cAChB,UAAY,EAAA;AAAA;AACd;AACF;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WACE,EAAA,qFAAA;AAAA,IACF,OAAA,EAASA,sBAAK,SAAU,CAAA;AAAA,MACtB,KAAO,EAAA;AAAA,QACL;AAAA,UACE,EAAI,EAAA,SAAA;AAAA,UACJ,MAAQ,EAAA,gBAAA;AAAA,UACR,IAAM,EAAA,mBAAA;AAAA,UACN,KAAO,EAAA;AAAA,YACL,OAAS,EAAA,+CAAA;AAAA,YACT,QAAU,EAAA;AAAA,cACR,YAAc,EAAA,IAAA;AAAA,cACd,aAAe,EAAA;AAAA;AACjB;AACF;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAa,EAAA,uDAAA;AAAA,IACb,OAAA,EAASA,sBAAK,SAAU,CAAA;AAAA,MACtB,KAAO,EAAA;AAAA,QACL;AAAA,UACE,EAAI,EAAA,SAAA;AAAA,UACJ,MAAQ,EAAA,gBAAA;AAAA,UACR,IAAM,EAAA,mBAAA;AAAA,UACN,KAAO,EAAA;AAAA,YACL,OAAS,EAAA,+CAAA;AAAA,YACT,QAAU,EAAA;AAAA,cACR;AAAA,gBACE,IAAM,EAAA,KAAA;AAAA,gBACN,MAAQ,EAAA,IAAA;AAAA,gBACR,OAAS,EAAA,IAAA;AAAA,gBACT,GAAK,EAAA;AAAA,eACP;AAAA,cACA;AAAA,gBACE,IAAM,EAAA,QAAA;AAAA,gBACN,OAAS,EAAA;AAAA;AACX;AACF;AACF;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAa,EAAA,6DAAA;AAAA,IACb,OAAA,EAASA,sBAAK,SAAU,CAAA;AAAA,MACtB,KAAO,EAAA;AAAA,QACL;AAAA,UACE,EAAI,EAAA,SAAA;AAAA,UACJ,MAAQ,EAAA,gBAAA;AAAA,UACR,IAAM,EAAA,mBAAA;AAAA,UACN,KAAO,EAAA;AAAA,YACL,OAAS,EAAA,+CAAA;AAAA,YACT,gBAAkB,EAAA;AAAA,cAChB;AAAA,gBACE,GAAK,EAAA,MAAA;AAAA,gBACL,KAAO,EAAA,QAAA;AAAA,gBACP,SAAW,EAAA,IAAA;AAAA,gBACX,MAAQ,EAAA;AAAA,eACV;AAAA,cACA;AAAA,gBACE,GAAK,EAAA,MAAA;AAAA,gBACL,KAAO,EAAA,QAAA;AAAA,gBACP,SAAW,EAAA,IAAA;AAAA,gBACX,MAAQ,EAAA;AAAA;AACV;AACF;AACF;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WACE,EAAA,0GAAA;AAAA,IACF,OAAA,EAASA,sBAAK,SAAU,CAAA;AAAA,MACtB,KAAO,EAAA;AAAA,QACL;AAAA,UACE,EAAI,EAAA,SAAA;AAAA,UACJ,MAAQ,EAAA,gBAAA;AAAA,UACR,IAAM,EAAA,mBAAA;AAAA,UACN,KAAO,EAAA;AAAA,YACL,OAAS,EAAA,+CAAA;AAAA,YACT,QAAU,EAAA;AAAA,cACR,qCAAuC,EAAA,IAAA;AAAA,cACvC,+BAAiC,EAAA;AAAA;AACnC;AACF;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WACE,EAAA,mIAAA;AAAA,IACF,OAAA,EAASA,sBAAK,SAAU,CAAA;AAAA,MACtB,KAAO,EAAA;AAAA,QACL;AAAA,UACE,EAAI,EAAA,SAAA;AAAA,UACJ,MAAQ,EAAA,gBAAA;AAAA,UACR,IAAM,EAAA,mBAAA;AAAA,UACN,KAAO,EAAA;AAAA,YACL,OAAS,EAAA,+CAAA;AAAA,YACT,QAAU,EAAA;AAAA,cACR,gDAAkD,EAAA;AAAA;AACpD;AACF;AACF;AACF,KACD;AAAA;AAEL;;;;"}