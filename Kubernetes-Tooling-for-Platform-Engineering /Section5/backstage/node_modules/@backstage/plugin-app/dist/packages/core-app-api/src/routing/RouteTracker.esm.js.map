{"version":3,"file":"RouteTracker.esm.js","sources":["../../../../../../../packages/core-app-api/src/routing/RouteTracker.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect } from 'react';\nimport { matchRoutes, useLocation } from 'react-router-dom';\nimport {\n  useAnalytics,\n  AnalyticsContext,\n  RouteRef,\n  AnalyticsEventAttributes,\n  BackstagePlugin,\n} from '@backstage/core-plugin-api';\nimport { BackstageRouteObject } from './types';\n\n/**\n * Returns an extension context given the current pathname and a list of\n * Backstage route objects.\n */\nconst getExtensionContext = (\n  pathname: string,\n  routes: BackstageRouteObject[],\n) => {\n  try {\n    // Find matching routes for the given path name.\n    const matches = matchRoutes(routes, { pathname });\n\n    // Of the matching routes, get the last (e.g. most specific) instance of\n    // the BackstageRouteObject that contains a routeRef. Filtering by routeRef\n    // ensures subRouteRefs are aligned to their parent routes' context.\n    const routeMatch = matches\n      ?.filter(match => match?.route.routeRefs?.size > 0)\n      .pop();\n    const routeObject = routeMatch?.route;\n\n    // If there is no route object, then allow inheritance of default context.\n    if (!routeObject) {\n      return undefined;\n    }\n\n    // If the matched route is the root route (no path), and the pathname is\n    // not the path of the homepage, then inherit from the default context.\n    if (routeObject.path === '' && pathname !== '/') {\n      return undefined;\n    }\n\n    // If there is a single route ref, use it.\n    let routeRef: RouteRef | undefined;\n    if (routeObject.routeRefs.size === 1) {\n      routeRef = routeObject.routeRefs.values().next().value;\n    }\n\n    // If there is a single plugin, use it.\n    let plugin: BackstagePlugin | undefined;\n    if (routeObject.plugins.size === 1) {\n      plugin = routeObject.plugins.values().next().value;\n    }\n\n    const params = Object.entries(\n      routeMatch?.params || {},\n    ).reduce<AnalyticsEventAttributes>((acc, [key, value]) => {\n      if (value !== undefined && key !== '*') {\n        acc[key] = value;\n      }\n      return acc;\n    }, {});\n\n    return {\n      extension: 'App',\n      pluginId: plugin?.getId() || 'root',\n      ...(routeRef ? { routeRef: (routeRef as { id?: string }).id } : {}),\n      _routeNodeType: routeObject.element as string,\n      params,\n    };\n  } catch {\n    return undefined;\n  }\n};\n\n/**\n * Performs the actual event capture on render.\n */\nconst TrackNavigation = ({\n  pathname,\n  search,\n  hash,\n  attributes,\n}: {\n  pathname: string;\n  search: string;\n  hash: string;\n  attributes?: AnalyticsEventAttributes;\n}) => {\n  const analytics = useAnalytics();\n  useEffect(() => {\n    analytics.captureEvent('navigate', `${pathname}${search}${hash}`, {\n      attributes,\n    });\n  }, [analytics, pathname, search, hash, attributes]);\n\n  return null;\n};\n\n/**\n * Logs a \"navigate\" event with appropriate plugin-level analytics context\n * attributes each time the user navigates to a page.\n */\nexport const RouteTracker = ({\n  routeObjects,\n}: {\n  routeObjects: BackstageRouteObject[];\n}) => {\n  const { pathname, search, hash } = useLocation();\n\n  const { params, ...attributes } = getExtensionContext(\n    pathname,\n    routeObjects,\n  ) || { params: {} };\n\n  return (\n    <AnalyticsContext attributes={attributes}>\n      <TrackNavigation\n        pathname={pathname}\n        search={search}\n        hash={hash}\n        attributes={params}\n      />\n    </AnalyticsContext>\n  );\n};\n"],"names":[],"mappings":"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"}