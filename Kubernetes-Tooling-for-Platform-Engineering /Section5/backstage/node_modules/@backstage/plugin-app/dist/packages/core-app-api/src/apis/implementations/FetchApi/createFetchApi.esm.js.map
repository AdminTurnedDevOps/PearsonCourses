{"version":3,"file":"createFetchApi.esm.js","sources":["../../../../../../../../../packages/core-app-api/src/apis/implementations/FetchApi/createFetchApi.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FetchApi } from '@backstage/core-plugin-api';\nimport { FetchMiddleware } from './types';\n\n/**\n * Builds a fetch API, based on the builtin fetch wrapped by a set of optional\n * middleware implementations that add behaviors.\n *\n * @remarks\n *\n * The middleware are applied in reverse order, i.e. the last one will be\n * \"closest\" to the base implementation. Passing in `[M1, M2, M3]` effectively\n * leads to `M1(M2(M3(baseImplementation)))`.\n *\n * @public\n */\nexport function createFetchApi(options: {\n  baseImplementation?: typeof fetch | undefined;\n  middleware?: FetchMiddleware | FetchMiddleware[] | undefined;\n}): FetchApi {\n  let result = options.baseImplementation || global.fetch;\n\n  const middleware = [options.middleware ?? []].flat().reverse();\n  for (const m of middleware) {\n    result = m.apply(result);\n  }\n\n  return {\n    fetch: result,\n  };\n}\n"],"names":[],"mappings":"AA+BO,SAAS,eAAe,OAGlB,EAAA;AACX,EAAI,IAAA,MAAA,GAAS,OAAQ,CAAA,kBAAA,IAAsB,MAAO,CAAA,KAAA;AAElD,EAAM,MAAA,UAAA,GAAa,CAAC,OAAQ,CAAA,UAAA,IAAc,EAAE,CAAA,CAAE,IAAK,EAAA,CAAE,OAAQ,EAAA;AAC7D,EAAA,KAAA,MAAW,KAAK,UAAY,EAAA;AAC1B,IAAS,MAAA,GAAA,CAAA,CAAE,MAAM,MAAM,CAAA;AAAA;AAGzB,EAAO,OAAA;AAAA,IACL,KAAO,EAAA;AAAA,GACT;AACF;;;;"}