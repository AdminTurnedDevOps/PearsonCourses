{"version":3,"file":"WebStorage.esm.js","sources":["../../../../../../../../../packages/core-app-api/src/apis/implementations/StorageApi/WebStorage.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  StorageApi,\n  StorageValueSnapshot,\n  ErrorApi,\n} from '@backstage/core-plugin-api';\nimport { JsonValue, Observable } from '@backstage/types';\nimport ObservableImpl from 'zen-observable';\n\nexport const buckets = new Map<string, WebStorage>();\n\n/**\n * An implementation of the storage API, that uses the browser's local storage.\n *\n * @public\n */\nexport class WebStorage implements StorageApi {\n  constructor(\n    private readonly namespace: string,\n    private readonly errorApi: ErrorApi,\n  ) {}\n\n  private static hasSubscribed = false;\n\n  static create(options: {\n    errorApi: ErrorApi;\n    namespace?: string;\n  }): WebStorage {\n    return new WebStorage(options.namespace ?? '', options.errorApi);\n  }\n\n  private static addStorageEventListener() {\n    window.addEventListener('storage', event => {\n      for (const [bucketPath, webStorage] of buckets.entries()) {\n        if (event.key?.startsWith(bucketPath)) {\n          webStorage.handleStorageChange(event.key);\n        }\n      }\n    });\n  }\n\n  get<T>(key: string): T | undefined {\n    return this.snapshot(key).value as T | undefined;\n  }\n\n  snapshot<T extends JsonValue>(key: string): StorageValueSnapshot<T> {\n    let value = undefined;\n    let presence: 'present' | 'absent' = 'absent';\n    try {\n      const item = localStorage.getItem(this.getKeyName(key));\n      if (item) {\n        value = JSON.parse(item, (_key, val) => {\n          if (typeof val === 'object' && val !== null) {\n            Object.freeze(val);\n          }\n          return val;\n        });\n        presence = 'present';\n      }\n    } catch (e) {\n      this.errorApi.post(\n        new Error(`Error when parsing JSON config from storage for: ${key}`),\n      );\n    }\n    return { key, value, presence };\n  }\n\n  forBucket(name: string): WebStorage {\n    const bucketPath = `${this.namespace}/${name}`;\n    if (!buckets.has(bucketPath)) {\n      buckets.set(bucketPath, new WebStorage(bucketPath, this.errorApi));\n    }\n    return buckets.get(bucketPath)!;\n  }\n\n  async set<T>(key: string, data: T): Promise<void> {\n    localStorage.setItem(this.getKeyName(key), JSON.stringify(data));\n    this.notifyChanges(key);\n  }\n\n  async remove(key: string): Promise<void> {\n    localStorage.removeItem(this.getKeyName(key));\n    this.notifyChanges(key);\n  }\n\n  observe$<T extends JsonValue>(\n    key: string,\n  ): Observable<StorageValueSnapshot<T>> {\n    if (!WebStorage.hasSubscribed) {\n      WebStorage.addStorageEventListener();\n      WebStorage.hasSubscribed = true;\n    }\n    return this.observable.filter(({ key: messageKey }) => messageKey === key);\n  }\n\n  private handleStorageChange(eventKey: StorageEvent['key']) {\n    if (!eventKey?.startsWith(this.namespace)) {\n      return;\n    }\n    // Grab the part of this key that is local to this bucket\n    const trimmedKey = eventKey?.slice(`${this.namespace}/`.length);\n\n    // If the key still contains a slash, it means it's a sub-bucket\n    if (!trimmedKey.includes('/')) {\n      this.notifyChanges(decodeURIComponent(trimmedKey));\n    }\n  }\n\n  private getKeyName(key: string) {\n    return `${this.namespace}/${encodeURIComponent(key)}`;\n  }\n\n  private notifyChanges(key: string) {\n    const snapshot = this.snapshot(key);\n    for (const subscription of this.subscribers) {\n      subscription.next(snapshot);\n    }\n  }\n\n  private subscribers = new Set<\n    ZenObservable.SubscriptionObserver<StorageValueSnapshot<JsonValue>>\n  >();\n\n  private readonly observable = new ObservableImpl<\n    StorageValueSnapshot<JsonValue>\n  >(subscriber => {\n    this.subscribers.add(subscriber);\n    return () => {\n      this.subscribers.delete(subscriber);\n    };\n  });\n}\n"],"names":[],"mappings":"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"}