{"version":3,"file":"DefaultAuthConnector.esm.js","sources":["../../../../../../../../packages/core-app-api/src/lib/AuthConnector/DefaultAuthConnector.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  AuthProviderInfo,\n  ConfigApi,\n  DiscoveryApi,\n  OAuthRequestApi,\n  OAuthRequester,\n} from '@backstage/core-plugin-api';\nimport { showLoginPopup } from '../loginPopup';\nimport { AuthConnector, CreateSessionOptions, PopupOptions } from './types';\n\nlet warned = false;\n\ntype Options<AuthSession> = {\n  /**\n   * DiscoveryApi instance used to locate the auth backend endpoint.\n   */\n  discoveryApi: DiscoveryApi;\n  /**\n   * Environment hint passed on to auth backend, for example 'production' or 'development'\n   */\n  environment: string;\n  /**\n   * Information about the auth provider to be shown to the user.\n   * The ID Must match the backend auth plugin configuration, for example 'google'.\n   */\n  provider: AuthProviderInfo;\n  /**\n   * API used to instantiate an auth requester.\n   */\n  oauthRequestApi: OAuthRequestApi;\n  /**\n   * Function used to join together a set of scopes, defaults to joining with a space character.\n   */\n  joinScopes?: (scopes: Set<string>) => string;\n  /**\n   * Function used to transform an auth response into the session type.\n   */\n  sessionTransform?(response: any): AuthSession | Promise<AuthSession>;\n  /**\n   * ConfigApi instance used to configure authentication flow of pop-up or redirect.\n   */\n  configApi?: ConfigApi;\n  /**\n   * Options used to configure auth popup\n   */\n  popupOptions?: PopupOptions;\n};\n\nfunction defaultJoinScopes(scopes: Set<string>) {\n  return [...scopes].join(' ');\n}\n\n/**\n * DefaultAuthConnector is the default auth connector in Backstage. It talks to the\n * backend auth plugin through the standardized API, and requests user permission\n * via the OAuthRequestApi.\n */\nexport class DefaultAuthConnector<AuthSession>\n  implements AuthConnector<AuthSession>\n{\n  private readonly discoveryApi: DiscoveryApi;\n  private readonly environment: string;\n  private readonly provider: AuthProviderInfo;\n  private readonly joinScopesFunc: (scopes: Set<string>) => string;\n  private readonly authRequester: OAuthRequester<AuthSession>;\n  private readonly sessionTransform: (response: any) => Promise<AuthSession>;\n  private readonly enableExperimentalRedirectFlow: boolean;\n  private readonly popupOptions: PopupOptions | undefined;\n  constructor(options: Options<AuthSession>) {\n    const {\n      configApi,\n      discoveryApi,\n      environment,\n      provider,\n      joinScopes = defaultJoinScopes,\n      oauthRequestApi,\n      sessionTransform = id => id,\n      popupOptions,\n    } = options;\n\n    if (!warned && !configApi) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'DEPRECATION WARNING: Authentication providers require a configApi instance to configure the authentication flow. Please provide one to the authentication provider constructor.',\n      );\n      warned = true;\n    }\n\n    this.enableExperimentalRedirectFlow = configApi\n      ? configApi.getOptionalBoolean('enableExperimentalRedirectFlow') ?? false\n      : false;\n\n    this.authRequester = oauthRequestApi.createAuthRequester({\n      provider,\n      onAuthRequest: async scopes => {\n        if (!this.enableExperimentalRedirectFlow) {\n          return this.showPopup(scopes);\n        }\n        return this.executeRedirect(scopes);\n      },\n    });\n\n    this.discoveryApi = discoveryApi;\n    this.environment = environment;\n    this.provider = provider;\n    this.joinScopesFunc = joinScopes;\n    this.sessionTransform = sessionTransform;\n    this.popupOptions = popupOptions;\n  }\n\n  async createSession(options: CreateSessionOptions): Promise<AuthSession> {\n    if (options.instantPopup) {\n      if (this.enableExperimentalRedirectFlow) {\n        return this.executeRedirect(options.scopes);\n      }\n      return this.showPopup(options.scopes);\n    }\n    return this.authRequester(options.scopes);\n  }\n\n  async refreshSession(scopes?: Set<string>): Promise<any> {\n    const res = await fetch(\n      await this.buildUrl('/refresh', {\n        optional: true,\n        ...(scopes && { scope: this.joinScopesFunc(scopes) }),\n      }),\n      {\n        headers: {\n          'x-requested-with': 'XMLHttpRequest',\n        },\n        credentials: 'include',\n      },\n    ).catch(error => {\n      throw new Error(`Auth refresh request failed, ${error}`);\n    });\n\n    if (!res.ok) {\n      const error: any = new Error(\n        `Auth refresh request failed, ${res.statusText}`,\n      );\n      error.status = res.status;\n      throw error;\n    }\n\n    const authInfo = await res.json();\n\n    if (authInfo.error) {\n      const error = new Error(authInfo.error.message);\n      if (authInfo.error.name) {\n        error.name = authInfo.error.name;\n      }\n      throw error;\n    }\n    return await this.sessionTransform(authInfo);\n  }\n\n  async removeSession(): Promise<void> {\n    const res = await fetch(await this.buildUrl('/logout'), {\n      method: 'POST',\n      headers: {\n        'x-requested-with': 'XMLHttpRequest',\n      },\n      credentials: 'include',\n    }).catch(error => {\n      throw new Error(`Logout request failed, ${error}`);\n    });\n\n    if (!res.ok) {\n      const error: any = new Error(`Logout request failed, ${res.statusText}`);\n      error.status = res.status;\n      throw error;\n    }\n  }\n\n  private async showPopup(scopes: Set<string>): Promise<AuthSession> {\n    const scope = this.joinScopesFunc(scopes);\n    const popupUrl = await this.buildUrl('/start', {\n      scope,\n      origin: window.location.origin,\n      flow: 'popup',\n    });\n\n    const width = this.popupOptions?.size?.fullscreen\n      ? window.screen.width\n      : this.popupOptions?.size?.width || 450;\n\n    const height = this.popupOptions?.size?.fullscreen\n      ? window.screen.height\n      : this.popupOptions?.size?.height || 730;\n\n    const payload = await showLoginPopup({\n      url: popupUrl,\n      name: `${this.provider.title} Login`,\n      origin: new URL(popupUrl).origin,\n      width,\n      height,\n    });\n\n    return await this.sessionTransform(payload);\n  }\n\n  private async executeRedirect(scopes: Set<string>): Promise<AuthSession> {\n    const scope = this.joinScopesFunc(scopes);\n    // redirect to auth api\n    window.location.href = await this.buildUrl('/start', {\n      scope,\n      origin: window.location.origin,\n      redirectUrl: window.location.href,\n      flow: 'redirect',\n    });\n    // return a promise that never resolves\n    return new Promise(() => {});\n  }\n\n  private async buildUrl(\n    path: string,\n    query?: { [key: string]: string | boolean | undefined },\n  ): Promise<string> {\n    const baseUrl = await this.discoveryApi.getBaseUrl('auth');\n    const queryString = this.buildQueryString({\n      ...query,\n      env: this.environment,\n    });\n\n    return `${baseUrl}/${this.provider.id}${path}${queryString}`;\n  }\n\n  private buildQueryString(query?: {\n    [key: string]: string | boolean | undefined;\n  }): string {\n    if (!query) {\n      return '';\n    }\n\n    const queryString = Object.entries<string | boolean | undefined>(query)\n      .map(([key, value]) => {\n        if (typeof value === 'string') {\n          return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n        } else if (value) {\n          return encodeURIComponent(key);\n        }\n        return undefined;\n      })\n      .filter(Boolean)\n      .join('&');\n\n    if (!queryString) {\n      return '';\n    }\n    return `?${queryString}`;\n  }\n}\n"],"names":[],"mappings":"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"}