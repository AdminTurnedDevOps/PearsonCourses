{"version":3,"file":"AppThemeSelector.esm.js","sources":["../../../../../../../../../packages/core-app-api/src/apis/implementations/AppThemeApi/AppThemeSelector.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppThemeApi, AppTheme } from '@backstage/core-plugin-api';\nimport { Observable } from '@backstage/types';\nimport { BehaviorSubject } from '../../../lib/subjects';\n\nconst STORAGE_KEY = 'theme';\n\n/**\n * Exposes the themes installed in the app, and permits switching the currently\n * active theme.\n *\n * @public\n */\nexport class AppThemeSelector implements AppThemeApi {\n  static createWithStorage(themes: AppTheme[]) {\n    const selector = new AppThemeSelector(themes);\n\n    if (!window.localStorage) {\n      return selector;\n    }\n\n    const initialThemeId =\n      window.localStorage.getItem(STORAGE_KEY) ?? undefined;\n\n    selector.setActiveThemeId(initialThemeId);\n\n    selector.activeThemeId$().subscribe(themeId => {\n      if (themeId) {\n        window.localStorage.setItem(STORAGE_KEY, themeId);\n      } else {\n        window.localStorage.removeItem(STORAGE_KEY);\n      }\n    });\n\n    window.addEventListener('storage', event => {\n      if (event.key === STORAGE_KEY) {\n        const themeId = localStorage.getItem(STORAGE_KEY) ?? undefined;\n        selector.setActiveThemeId(themeId);\n      }\n    });\n\n    return selector;\n  }\n\n  private activeThemeId: string | undefined;\n  private readonly subject = new BehaviorSubject<string | undefined>(undefined);\n\n  constructor(private readonly themes: AppTheme[]) {}\n\n  getInstalledThemes(): AppTheme[] {\n    return this.themes.slice();\n  }\n\n  activeThemeId$(): Observable<string | undefined> {\n    return this.subject;\n  }\n\n  getActiveThemeId(): string | undefined {\n    return this.activeThemeId;\n  }\n\n  setActiveThemeId(themeId?: string): void {\n    this.activeThemeId = themeId;\n    this.subject.next(themeId);\n  }\n}\n"],"names":[],"mappings":";;AAoBA,MAAM,WAAc,GAAA,OAAA;AAQb,MAAM,gBAAwC,CAAA;AAAA,EAkCnD,YAA6B,MAAoB,EAAA;AAApB,IAAA,IAAA,CAAA,MAAA,GAAA,MAAA;AAAA;AAAqB,EAjClD,OAAO,kBAAkB,MAAoB,EAAA;AAC3C,IAAM,MAAA,QAAA,GAAW,IAAI,gBAAA,CAAiB,MAAM,CAAA;AAE5C,IAAI,IAAA,CAAC,OAAO,YAAc,EAAA;AACxB,MAAO,OAAA,QAAA;AAAA;AAGT,IAAA,MAAM,cACJ,GAAA,MAAA,CAAO,YAAa,CAAA,OAAA,CAAQ,WAAW,CAAK,IAAA,KAAA,CAAA;AAE9C,IAAA,QAAA,CAAS,iBAAiB,cAAc,CAAA;AAExC,IAAS,QAAA,CAAA,cAAA,EAAiB,CAAA,SAAA,CAAU,CAAW,OAAA,KAAA;AAC7C,MAAA,IAAI,OAAS,EAAA;AACX,QAAO,MAAA,CAAA,YAAA,CAAa,OAAQ,CAAA,WAAA,EAAa,OAAO,CAAA;AAAA,OAC3C,MAAA;AACL,QAAO,MAAA,CAAA,YAAA,CAAa,WAAW,WAAW,CAAA;AAAA;AAC5C,KACD,CAAA;AAED,IAAO,MAAA,CAAA,gBAAA,CAAiB,WAAW,CAAS,KAAA,KAAA;AAC1C,MAAI,IAAA,KAAA,CAAM,QAAQ,WAAa,EAAA;AAC7B,QAAA,MAAM,OAAU,GAAA,YAAA,CAAa,OAAQ,CAAA,WAAW,CAAK,IAAA,KAAA,CAAA;AACrD,QAAA,QAAA,CAAS,iBAAiB,OAAO,CAAA;AAAA;AACnC,KACD,CAAA;AAED,IAAO,OAAA,QAAA;AAAA;AACT,EAEQ,aAAA;AAAA,EACS,OAAA,GAAU,IAAI,eAAA,CAAoC,KAAS,CAAA,CAAA;AAAA,EAI5E,kBAAiC,GAAA;AAC/B,IAAO,OAAA,IAAA,CAAK,OAAO,KAAM,EAAA;AAAA;AAC3B,EAEA,cAAiD,GAAA;AAC/C,IAAA,OAAO,IAAK,CAAA,OAAA;AAAA;AACd,EAEA,gBAAuC,GAAA;AACrC,IAAA,OAAO,IAAK,CAAA,aAAA;AAAA;AACd,EAEA,iBAAiB,OAAwB,EAAA;AACvC,IAAA,IAAA,CAAK,aAAgB,GAAA,OAAA;AACrB,IAAK,IAAA,CAAA,OAAA,CAAQ,KAAK,OAAO,CAAA;AAAA;AAE7B;;;;"}