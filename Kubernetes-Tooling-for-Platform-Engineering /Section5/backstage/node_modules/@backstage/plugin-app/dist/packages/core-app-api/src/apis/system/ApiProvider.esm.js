import React, { useContext } from 'react';
import PropTypes from 'prop-types';
import { ApiAggregator } from './ApiAggregator.esm.js';
import { createVersionedContext, createVersionedValueMap } from '@backstage/version-bridge';

const ApiContext = createVersionedContext("api-context");
const ApiProvider = (props) => {
  const { apis, children } = props;
  const parentHolder = useContext(ApiContext)?.atVersion(1);
  const holder = parentHolder ? new ApiAggregator(apis, parentHolder) : apis;
  return /* @__PURE__ */ React.createElement(
    ApiContext.Provider,
    {
      value: createVersionedValueMap({ 1: holder }),
      children
    }
  );
};
ApiProvider.propTypes = {
  apis: PropTypes.shape({ get: PropTypes.func.isRequired }).isRequired,
  children: PropTypes.node
};

export { ApiProvider };
//# sourceMappingURL=ApiProvider.esm.js.map
