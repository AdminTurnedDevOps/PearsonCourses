{"version":3,"file":"ErrorApiForwarder.esm.js","sources":["../../../../../../../../../packages/core-app-api/src/apis/implementations/ErrorApi/ErrorApiForwarder.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ErrorApi,\n  ErrorApiError,\n  ErrorApiErrorContext,\n} from '@backstage/core-plugin-api';\nimport { Observable } from '@backstage/types';\nimport { PublishSubject } from '../../../lib/subjects';\n\n/**\n * Base implementation for the ErrorApi that simply forwards errors to consumers.\n *\n * @public\n */\nexport class ErrorApiForwarder implements ErrorApi {\n  private readonly subject = new PublishSubject<{\n    error: Error;\n    context?: ErrorApiErrorContext;\n  }>();\n\n  post(error: ErrorApiError, context?: ErrorApiErrorContext) {\n    this.subject.next({ error, context });\n  }\n\n  error$(): Observable<{ error: Error; context?: ErrorApiErrorContext }> {\n    return this.subject;\n  }\n}\n"],"names":[],"mappings":";;AA6BO,MAAM,iBAAsC,CAAA;AAAA,EAChC,OAAA,GAAU,IAAI,cAG5B,EAAA;AAAA,EAEH,IAAA,CAAK,OAAsB,OAAgC,EAAA;AACzD,IAAA,IAAA,CAAK,OAAQ,CAAA,IAAA,CAAK,EAAE,KAAA,EAAO,SAAS,CAAA;AAAA;AACtC,EAEA,MAAuE,GAAA;AACrE,IAAA,OAAO,IAAK,CAAA,OAAA;AAAA;AAEhB;;;;"}