{"version":3,"file":"defaultApis.esm.js","sources":["../src/defaultApis.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport {\n  AlertApiForwarder,\n  NoOpAnalyticsApi,\n  ErrorApiForwarder,\n  ErrorAlerter,\n  GoogleAuth,\n  GithubAuth,\n  OktaAuth,\n  GitlabAuth,\n  MicrosoftAuth,\n  BitbucketAuth,\n  BitbucketServerAuth,\n  OAuthRequestManager,\n  WebStorage,\n  UrlPatternDiscovery,\n  OneLoginAuth,\n  UnhandledErrorForwarder,\n  AtlassianAuth,\n  createFetchApi,\n  FetchMiddlewares,\n  VMwareCloudAuth,\n} from '../../../packages/core-app-api/src/apis/implementations';\n\nimport {\n  createApiFactory,\n  alertApiRef,\n  analyticsApiRef,\n  errorApiRef,\n  discoveryApiRef,\n  fetchApiRef,\n  identityApiRef,\n  oauthRequestApiRef,\n  googleAuthApiRef,\n  githubAuthApiRef,\n  oktaAuthApiRef,\n  gitlabAuthApiRef,\n  microsoftAuthApiRef,\n  storageApiRef,\n  configApiRef,\n  oneloginAuthApiRef,\n  bitbucketAuthApiRef,\n  bitbucketServerAuthApiRef,\n  atlassianAuthApiRef,\n  vmwareCloudAuthApiRef,\n} from '@backstage/core-plugin-api';\nimport { ApiBlueprint } from '@backstage/frontend-plugin-api';\nimport {\n  ScmAuth,\n  ScmIntegrationsApi,\n  scmIntegrationsApiRef,\n} from '@backstage/integration-react';\nimport {\n  permissionApiRef,\n  IdentityPermissionApi,\n} from '@backstage/plugin-permission-react';\n\nexport const apis = [\n  ApiBlueprint.make({\n    name: 'discovery',\n    params: {\n      factory: createApiFactory({\n        api: discoveryApiRef,\n        deps: { configApi: configApiRef },\n        factory: ({ configApi }) =>\n          UrlPatternDiscovery.compile(\n            `${configApi.getString('backend.baseUrl')}/api/{{ pluginId }}`,\n          ),\n      }),\n    },\n  }),\n  ApiBlueprint.make({\n    name: 'alert',\n    params: {\n      factory: createApiFactory({\n        api: alertApiRef,\n        deps: {},\n        factory: () => new AlertApiForwarder(),\n      }),\n    },\n  }),\n  ApiBlueprint.make({\n    name: 'analytics',\n    params: {\n      factory: createApiFactory({\n        api: analyticsApiRef,\n        deps: {},\n        factory: () => new NoOpAnalyticsApi(),\n      }),\n    },\n  }),\n  ApiBlueprint.make({\n    name: 'error',\n    params: {\n      factory: createApiFactory({\n        api: errorApiRef,\n        deps: { alertApi: alertApiRef },\n        factory: ({ alertApi }) => {\n          const errorApi = new ErrorAlerter(alertApi, new ErrorApiForwarder());\n          UnhandledErrorForwarder.forward(errorApi, { hidden: false });\n          return errorApi;\n        },\n      }),\n    },\n  }),\n  ApiBlueprint.make({\n    name: 'storage',\n    params: {\n      factory: createApiFactory({\n        api: storageApiRef,\n        deps: { errorApi: errorApiRef },\n        factory: ({ errorApi }) => WebStorage.create({ errorApi }),\n      }),\n    },\n  }),\n  ApiBlueprint.make({\n    name: 'fetch',\n    params: {\n      factory: createApiFactory({\n        api: fetchApiRef,\n        deps: {\n          configApi: configApiRef,\n          identityApi: identityApiRef,\n          discoveryApi: discoveryApiRef,\n        },\n        factory: ({ configApi, identityApi, discoveryApi }) => {\n          return createFetchApi({\n            middleware: [\n              FetchMiddlewares.resolvePluginProtocol({\n                discoveryApi,\n              }),\n              FetchMiddlewares.injectIdentityAuth({\n                identityApi,\n                config: configApi,\n              }),\n            ],\n          });\n        },\n      }),\n    },\n  }),\n  ApiBlueprint.make({\n    name: 'oauth-request',\n    params: {\n      factory: createApiFactory({\n        api: oauthRequestApiRef,\n        deps: {},\n        factory: () => new OAuthRequestManager(),\n      }),\n    },\n  }),\n  ApiBlueprint.make({\n    name: 'google-auth',\n    params: {\n      factory: createApiFactory({\n        api: googleAuthApiRef,\n        deps: {\n          discoveryApi: discoveryApiRef,\n          oauthRequestApi: oauthRequestApiRef,\n          configApi: configApiRef,\n        },\n        factory: ({ discoveryApi, oauthRequestApi, configApi }) =>\n          GoogleAuth.create({\n            configApi,\n            discoveryApi,\n            oauthRequestApi,\n            environment: configApi.getOptionalString('auth.environment'),\n          }),\n      }),\n    },\n  }),\n  ApiBlueprint.make({\n    name: 'microsoft-auth',\n    params: {\n      factory: createApiFactory({\n        api: microsoftAuthApiRef,\n        deps: {\n          discoveryApi: discoveryApiRef,\n          oauthRequestApi: oauthRequestApiRef,\n          configApi: configApiRef,\n        },\n        factory: ({ discoveryApi, oauthRequestApi, configApi }) =>\n          MicrosoftAuth.create({\n            configApi,\n            discoveryApi,\n            oauthRequestApi,\n            environment: configApi.getOptionalString('auth.environment'),\n          }),\n      }),\n    },\n  }),\n  ApiBlueprint.make({\n    name: 'github-auth',\n    params: {\n      factory: createApiFactory({\n        api: githubAuthApiRef,\n        deps: {\n          discoveryApi: discoveryApiRef,\n          oauthRequestApi: oauthRequestApiRef,\n          configApi: configApiRef,\n        },\n        factory: ({ discoveryApi, oauthRequestApi, configApi }) =>\n          GithubAuth.create({\n            configApi,\n            discoveryApi,\n            oauthRequestApi,\n            defaultScopes: ['read:user'],\n            environment: configApi.getOptionalString('auth.environment'),\n          }),\n      }),\n    },\n  }),\n  ApiBlueprint.make({\n    name: 'okta-auth',\n    params: {\n      factory: createApiFactory({\n        api: oktaAuthApiRef,\n        deps: {\n          discoveryApi: discoveryApiRef,\n          oauthRequestApi: oauthRequestApiRef,\n          configApi: configApiRef,\n        },\n        factory: ({ discoveryApi, oauthRequestApi, configApi }) =>\n          OktaAuth.create({\n            configApi,\n            discoveryApi,\n            oauthRequestApi,\n            environment: configApi.getOptionalString('auth.environment'),\n          }),\n      }),\n    },\n  }),\n  ApiBlueprint.make({\n    name: 'gitlab-auth',\n    params: {\n      factory: createApiFactory({\n        api: gitlabAuthApiRef,\n        deps: {\n          discoveryApi: discoveryApiRef,\n          oauthRequestApi: oauthRequestApiRef,\n          configApi: configApiRef,\n        },\n        factory: ({ discoveryApi, oauthRequestApi, configApi }) =>\n          GitlabAuth.create({\n            configApi,\n            discoveryApi,\n            oauthRequestApi,\n            environment: configApi.getOptionalString('auth.environment'),\n          }),\n      }),\n    },\n  }),\n  ApiBlueprint.make({\n    name: 'onelogin-auth',\n    params: {\n      factory: createApiFactory({\n        api: oneloginAuthApiRef,\n        deps: {\n          discoveryApi: discoveryApiRef,\n          oauthRequestApi: oauthRequestApiRef,\n          configApi: configApiRef,\n        },\n        factory: ({ discoveryApi, oauthRequestApi, configApi }) =>\n          OneLoginAuth.create({\n            configApi,\n            discoveryApi,\n            oauthRequestApi,\n            environment: configApi.getOptionalString('auth.environment'),\n          }),\n      }),\n    },\n  }),\n  ApiBlueprint.make({\n    name: 'bitbucket-auth',\n    params: {\n      factory: createApiFactory({\n        api: bitbucketAuthApiRef,\n        deps: {\n          discoveryApi: discoveryApiRef,\n          oauthRequestApi: oauthRequestApiRef,\n          configApi: configApiRef,\n        },\n        factory: ({ discoveryApi, oauthRequestApi, configApi }) =>\n          BitbucketAuth.create({\n            configApi,\n            discoveryApi,\n            oauthRequestApi,\n            defaultScopes: ['account'],\n            environment: configApi.getOptionalString('auth.environment'),\n          }),\n      }),\n    },\n  }),\n  ApiBlueprint.make({\n    name: 'bitbucket-server-auth',\n    params: {\n      factory: createApiFactory({\n        api: bitbucketServerAuthApiRef,\n        deps: {\n          discoveryApi: discoveryApiRef,\n          oauthRequestApi: oauthRequestApiRef,\n          configApi: configApiRef,\n        },\n        factory: ({ discoveryApi, oauthRequestApi, configApi }) =>\n          BitbucketServerAuth.create({\n            configApi,\n            discoveryApi,\n            oauthRequestApi,\n            defaultScopes: ['REPO_READ'],\n            environment: configApi.getOptionalString('auth.environment'),\n          }),\n      }),\n    },\n  }),\n  ApiBlueprint.make({\n    name: 'atlassian-auth',\n    params: {\n      factory: createApiFactory({\n        api: atlassianAuthApiRef,\n        deps: {\n          discoveryApi: discoveryApiRef,\n          oauthRequestApi: oauthRequestApiRef,\n          configApi: configApiRef,\n        },\n        factory: ({ discoveryApi, oauthRequestApi, configApi }) => {\n          return AtlassianAuth.create({\n            configApi,\n            discoveryApi,\n            oauthRequestApi,\n            environment: configApi.getOptionalString('auth.environment'),\n          });\n        },\n      }),\n    },\n  }),\n  ApiBlueprint.make({\n    name: 'vmware-cloud-auth',\n    params: {\n      factory: createApiFactory({\n        api: vmwareCloudAuthApiRef,\n        deps: {\n          discoveryApi: discoveryApiRef,\n          oauthRequestApi: oauthRequestApiRef,\n          configApi: configApiRef,\n        },\n        factory: ({ discoveryApi, oauthRequestApi, configApi }) => {\n          return VMwareCloudAuth.create({\n            configApi,\n            discoveryApi,\n            oauthRequestApi,\n            environment: configApi.getOptionalString('auth.environment'),\n          });\n        },\n      }),\n    },\n  }),\n  ApiBlueprint.make({\n    name: 'permission',\n    params: {\n      factory: createApiFactory({\n        api: permissionApiRef,\n        deps: {\n          discovery: discoveryApiRef,\n          identity: identityApiRef,\n          config: configApiRef,\n        },\n        factory: ({ config, discovery, identity }) =>\n          IdentityPermissionApi.create({ config, discovery, identity }),\n      }),\n    },\n  }),\n  ApiBlueprint.make({\n    name: 'scm-auth',\n    params: {\n      factory: ScmAuth.createDefaultApiFactory(),\n    },\n  }),\n  ApiBlueprint.make({\n    name: 'scm-integrations',\n    params: {\n      factory: createApiFactory({\n        api: scmIntegrationsApiRef,\n        deps: { configApi: configApiRef },\n        factory: ({ configApi }) => ScmIntegrationsApi.fromConfig(configApi),\n      }),\n    },\n  }),\n] as const;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEO,MAAM,IAAO,GAAA;AAAA,EAClB,aAAa,IAAK,CAAA;AAAA,IAChB,IAAM,EAAA,WAAA;AAAA,IACN,MAAQ,EAAA;AAAA,MACN,SAAS,gBAAiB,CAAA;AAAA,QACxB,GAAK,EAAA,eAAA;AAAA,QACL,IAAA,EAAM,EAAE,SAAA,EAAW,YAAa,EAAA;AAAA,QAChC,OAAS,EAAA,CAAC,EAAE,SAAA,OACV,mBAAoB,CAAA,OAAA;AAAA,UAClB,CAAG,EAAA,SAAA,CAAU,SAAU,CAAA,iBAAiB,CAAC,CAAA,mBAAA;AAAA;AAC3C,OACH;AAAA;AACH,GACD,CAAA;AAAA,EACD,aAAa,IAAK,CAAA;AAAA,IAChB,IAAM,EAAA,OAAA;AAAA,IACN,MAAQ,EAAA;AAAA,MACN,SAAS,gBAAiB,CAAA;AAAA,QACxB,GAAK,EAAA,WAAA;AAAA,QACL,MAAM,EAAC;AAAA,QACP,OAAA,EAAS,MAAM,IAAI,iBAAkB;AAAA,OACtC;AAAA;AACH,GACD,CAAA;AAAA,EACD,aAAa,IAAK,CAAA;AAAA,IAChB,IAAM,EAAA,WAAA;AAAA,IACN,MAAQ,EAAA;AAAA,MACN,SAAS,gBAAiB,CAAA;AAAA,QACxB,GAAK,EAAA,eAAA;AAAA,QACL,MAAM,EAAC;AAAA,QACP,OAAA,EAAS,MAAM,IAAI,gBAAiB;AAAA,OACrC;AAAA;AACH,GACD,CAAA;AAAA,EACD,aAAa,IAAK,CAAA;AAAA,IAChB,IAAM,EAAA,OAAA;AAAA,IACN,MAAQ,EAAA;AAAA,MACN,SAAS,gBAAiB,CAAA;AAAA,QACxB,GAAK,EAAA,WAAA;AAAA,QACL,IAAA,EAAM,EAAE,QAAA,EAAU,WAAY,EAAA;AAAA,QAC9B,OAAS,EAAA,CAAC,EAAE,QAAA,EAAe,KAAA;AACzB,UAAA,MAAM,WAAW,IAAI,YAAA,CAAa,QAAU,EAAA,IAAI,mBAAmB,CAAA;AACnE,UAAA,uBAAA,CAAwB,OAAQ,CAAA,QAAA,EAAU,EAAE,MAAA,EAAQ,OAAO,CAAA;AAC3D,UAAO,OAAA,QAAA;AAAA;AACT,OACD;AAAA;AACH,GACD,CAAA;AAAA,EACD,aAAa,IAAK,CAAA;AAAA,IAChB,IAAM,EAAA,SAAA;AAAA,IACN,MAAQ,EAAA;AAAA,MACN,SAAS,gBAAiB,CAAA;AAAA,QACxB,GAAK,EAAA,aAAA;AAAA,QACL,IAAA,EAAM,EAAE,QAAA,EAAU,WAAY,EAAA;AAAA,QAC9B,OAAA,EAAS,CAAC,EAAE,QAAA,OAAe,UAAW,CAAA,MAAA,CAAO,EAAE,QAAA,EAAU;AAAA,OAC1D;AAAA;AACH,GACD,CAAA;AAAA,EACD,aAAa,IAAK,CAAA;AAAA,IAChB,IAAM,EAAA,OAAA;AAAA,IACN,MAAQ,EAAA;AAAA,MACN,SAAS,gBAAiB,CAAA;AAAA,QACxB,GAAK,EAAA,WAAA;AAAA,QACL,IAAM,EAAA;AAAA,UACJ,SAAW,EAAA,YAAA;AAAA,UACX,WAAa,EAAA,cAAA;AAAA,UACb,YAAc,EAAA;AAAA,SAChB;AAAA,QACA,SAAS,CAAC,EAAE,SAAW,EAAA,WAAA,EAAa,cAAmB,KAAA;AACrD,UAAA,OAAO,cAAe,CAAA;AAAA,YACpB,UAAY,EAAA;AAAA,cACV,iBAAiB,qBAAsB,CAAA;AAAA,gBACrC;AAAA,eACD,CAAA;AAAA,cACD,iBAAiB,kBAAmB,CAAA;AAAA,gBAClC,WAAA;AAAA,gBACA,MAAQ,EAAA;AAAA,eACT;AAAA;AACH,WACD,CAAA;AAAA;AACH,OACD;AAAA;AACH,GACD,CAAA;AAAA,EACD,aAAa,IAAK,CAAA;AAAA,IAChB,IAAM,EAAA,eAAA;AAAA,IACN,MAAQ,EAAA;AAAA,MACN,SAAS,gBAAiB,CAAA;AAAA,QACxB,GAAK,EAAA,kBAAA;AAAA,QACL,MAAM,EAAC;AAAA,QACP,OAAA,EAAS,MAAM,IAAI,mBAAoB;AAAA,OACxC;AAAA;AACH,GACD,CAAA;AAAA,EACD,aAAa,IAAK,CAAA;AAAA,IAChB,IAAM,EAAA,aAAA;AAAA,IACN,MAAQ,EAAA;AAAA,MACN,SAAS,gBAAiB,CAAA;AAAA,QACxB,GAAK,EAAA,gBAAA;AAAA,QACL,IAAM,EAAA;AAAA,UACJ,YAAc,EAAA,eAAA;AAAA,UACd,eAAiB,EAAA,kBAAA;AAAA,UACjB,SAAW,EAAA;AAAA,SACb;AAAA,QACA,OAAA,EAAS,CAAC,EAAE,YAAA,EAAc,iBAAiB,SAAU,EAAA,KACnD,WAAW,MAAO,CAAA;AAAA,UAChB,SAAA;AAAA,UACA,YAAA;AAAA,UACA,eAAA;AAAA,UACA,WAAA,EAAa,SAAU,CAAA,iBAAA,CAAkB,kBAAkB;AAAA,SAC5D;AAAA,OACJ;AAAA;AACH,GACD,CAAA;AAAA,EACD,aAAa,IAAK,CAAA;AAAA,IAChB,IAAM,EAAA,gBAAA;AAAA,IACN,MAAQ,EAAA;AAAA,MACN,SAAS,gBAAiB,CAAA;AAAA,QACxB,GAAK,EAAA,mBAAA;AAAA,QACL,IAAM,EAAA;AAAA,UACJ,YAAc,EAAA,eAAA;AAAA,UACd,eAAiB,EAAA,kBAAA;AAAA,UACjB,SAAW,EAAA;AAAA,SACb;AAAA,QACA,OAAA,EAAS,CAAC,EAAE,YAAA,EAAc,iBAAiB,SAAU,EAAA,KACnD,cAAc,MAAO,CAAA;AAAA,UACnB,SAAA;AAAA,UACA,YAAA;AAAA,UACA,eAAA;AAAA,UACA,WAAA,EAAa,SAAU,CAAA,iBAAA,CAAkB,kBAAkB;AAAA,SAC5D;AAAA,OACJ;AAAA;AACH,GACD,CAAA;AAAA,EACD,aAAa,IAAK,CAAA;AAAA,IAChB,IAAM,EAAA,aAAA;AAAA,IACN,MAAQ,EAAA;AAAA,MACN,SAAS,gBAAiB,CAAA;AAAA,QACxB,GAAK,EAAA,gBAAA;AAAA,QACL,IAAM,EAAA;AAAA,UACJ,YAAc,EAAA,eAAA;AAAA,UACd,eAAiB,EAAA,kBAAA;AAAA,UACjB,SAAW,EAAA;AAAA,SACb;AAAA,QACA,OAAA,EAAS,CAAC,EAAE,YAAA,EAAc,iBAAiB,SAAU,EAAA,KACnD,WAAW,MAAO,CAAA;AAAA,UAChB,SAAA;AAAA,UACA,YAAA;AAAA,UACA,eAAA;AAAA,UACA,aAAA,EAAe,CAAC,WAAW,CAAA;AAAA,UAC3B,WAAA,EAAa,SAAU,CAAA,iBAAA,CAAkB,kBAAkB;AAAA,SAC5D;AAAA,OACJ;AAAA;AACH,GACD,CAAA;AAAA,EACD,aAAa,IAAK,CAAA;AAAA,IAChB,IAAM,EAAA,WAAA;AAAA,IACN,MAAQ,EAAA;AAAA,MACN,SAAS,gBAAiB,CAAA;AAAA,QACxB,GAAK,EAAA,cAAA;AAAA,QACL,IAAM,EAAA;AAAA,UACJ,YAAc,EAAA,eAAA;AAAA,UACd,eAAiB,EAAA,kBAAA;AAAA,UACjB,SAAW,EAAA;AAAA,SACb;AAAA,QACA,OAAA,EAAS,CAAC,EAAE,YAAA,EAAc,iBAAiB,SAAU,EAAA,KACnD,SAAS,MAAO,CAAA;AAAA,UACd,SAAA;AAAA,UACA,YAAA;AAAA,UACA,eAAA;AAAA,UACA,WAAA,EAAa,SAAU,CAAA,iBAAA,CAAkB,kBAAkB;AAAA,SAC5D;AAAA,OACJ;AAAA;AACH,GACD,CAAA;AAAA,EACD,aAAa,IAAK,CAAA;AAAA,IAChB,IAAM,EAAA,aAAA;AAAA,IACN,MAAQ,EAAA;AAAA,MACN,SAAS,gBAAiB,CAAA;AAAA,QACxB,GAAK,EAAA,gBAAA;AAAA,QACL,IAAM,EAAA;AAAA,UACJ,YAAc,EAAA,eAAA;AAAA,UACd,eAAiB,EAAA,kBAAA;AAAA,UACjB,SAAW,EAAA;AAAA,SACb;AAAA,QACA,OAAA,EAAS,CAAC,EAAE,YAAA,EAAc,iBAAiB,SAAU,EAAA,KACnD,WAAW,MAAO,CAAA;AAAA,UAChB,SAAA;AAAA,UACA,YAAA;AAAA,UACA,eAAA;AAAA,UACA,WAAA,EAAa,SAAU,CAAA,iBAAA,CAAkB,kBAAkB;AAAA,SAC5D;AAAA,OACJ;AAAA;AACH,GACD,CAAA;AAAA,EACD,aAAa,IAAK,CAAA;AAAA,IAChB,IAAM,EAAA,eAAA;AAAA,IACN,MAAQ,EAAA;AAAA,MACN,SAAS,gBAAiB,CAAA;AAAA,QACxB,GAAK,EAAA,kBAAA;AAAA,QACL,IAAM,EAAA;AAAA,UACJ,YAAc,EAAA,eAAA;AAAA,UACd,eAAiB,EAAA,kBAAA;AAAA,UACjB,SAAW,EAAA;AAAA,SACb;AAAA,QACA,OAAA,EAAS,CAAC,EAAE,YAAA,EAAc,iBAAiB,SAAU,EAAA,KACnD,aAAa,MAAO,CAAA;AAAA,UAClB,SAAA;AAAA,UACA,YAAA;AAAA,UACA,eAAA;AAAA,UACA,WAAA,EAAa,SAAU,CAAA,iBAAA,CAAkB,kBAAkB;AAAA,SAC5D;AAAA,OACJ;AAAA;AACH,GACD,CAAA;AAAA,EACD,aAAa,IAAK,CAAA;AAAA,IAChB,IAAM,EAAA,gBAAA;AAAA,IACN,MAAQ,EAAA;AAAA,MACN,SAAS,gBAAiB,CAAA;AAAA,QACxB,GAAK,EAAA,mBAAA;AAAA,QACL,IAAM,EAAA;AAAA,UACJ,YAAc,EAAA,eAAA;AAAA,UACd,eAAiB,EAAA,kBAAA;AAAA,UACjB,SAAW,EAAA;AAAA,SACb;AAAA,QACA,OAAA,EAAS,CAAC,EAAE,YAAA,EAAc,iBAAiB,SAAU,EAAA,KACnD,cAAc,MAAO,CAAA;AAAA,UACnB,SAAA;AAAA,UACA,YAAA;AAAA,UACA,eAAA;AAAA,UACA,aAAA,EAAe,CAAC,SAAS,CAAA;AAAA,UACzB,WAAA,EAAa,SAAU,CAAA,iBAAA,CAAkB,kBAAkB;AAAA,SAC5D;AAAA,OACJ;AAAA;AACH,GACD,CAAA;AAAA,EACD,aAAa,IAAK,CAAA;AAAA,IAChB,IAAM,EAAA,uBAAA;AAAA,IACN,MAAQ,EAAA;AAAA,MACN,SAAS,gBAAiB,CAAA;AAAA,QACxB,GAAK,EAAA,yBAAA;AAAA,QACL,IAAM,EAAA;AAAA,UACJ,YAAc,EAAA,eAAA;AAAA,UACd,eAAiB,EAAA,kBAAA;AAAA,UACjB,SAAW,EAAA;AAAA,SACb;AAAA,QACA,OAAA,EAAS,CAAC,EAAE,YAAA,EAAc,iBAAiB,SAAU,EAAA,KACnD,oBAAoB,MAAO,CAAA;AAAA,UACzB,SAAA;AAAA,UACA,YAAA;AAAA,UACA,eAAA;AAAA,UACA,aAAA,EAAe,CAAC,WAAW,CAAA;AAAA,UAC3B,WAAA,EAAa,SAAU,CAAA,iBAAA,CAAkB,kBAAkB;AAAA,SAC5D;AAAA,OACJ;AAAA;AACH,GACD,CAAA;AAAA,EACD,aAAa,IAAK,CAAA;AAAA,IAChB,IAAM,EAAA,gBAAA;AAAA,IACN,MAAQ,EAAA;AAAA,MACN,SAAS,gBAAiB,CAAA;AAAA,QACxB,GAAK,EAAA,mBAAA;AAAA,QACL,IAAM,EAAA;AAAA,UACJ,YAAc,EAAA,eAAA;AAAA,UACd,eAAiB,EAAA,kBAAA;AAAA,UACjB,SAAW,EAAA;AAAA,SACb;AAAA,QACA,SAAS,CAAC,EAAE,YAAc,EAAA,eAAA,EAAiB,WAAgB,KAAA;AACzD,UAAA,OAAO,cAAc,MAAO,CAAA;AAAA,YAC1B,SAAA;AAAA,YACA,YAAA;AAAA,YACA,eAAA;AAAA,YACA,WAAA,EAAa,SAAU,CAAA,iBAAA,CAAkB,kBAAkB;AAAA,WAC5D,CAAA;AAAA;AACH,OACD;AAAA;AACH,GACD,CAAA;AAAA,EACD,aAAa,IAAK,CAAA;AAAA,IAChB,IAAM,EAAA,mBAAA;AAAA,IACN,MAAQ,EAAA;AAAA,MACN,SAAS,gBAAiB,CAAA;AAAA,QACxB,GAAK,EAAA,qBAAA;AAAA,QACL,IAAM,EAAA;AAAA,UACJ,YAAc,EAAA,eAAA;AAAA,UACd,eAAiB,EAAA,kBAAA;AAAA,UACjB,SAAW,EAAA;AAAA,SACb;AAAA,QACA,SAAS,CAAC,EAAE,YAAc,EAAA,eAAA,EAAiB,WAAgB,KAAA;AACzD,UAAA,OAAO,gBAAgB,MAAO,CAAA;AAAA,YAC5B,SAAA;AAAA,YACA,YAAA;AAAA,YACA,eAAA;AAAA,YACA,WAAA,EAAa,SAAU,CAAA,iBAAA,CAAkB,kBAAkB;AAAA,WAC5D,CAAA;AAAA;AACH,OACD;AAAA;AACH,GACD,CAAA;AAAA,EACD,aAAa,IAAK,CAAA;AAAA,IAChB,IAAM,EAAA,YAAA;AAAA,IACN,MAAQ,EAAA;AAAA,MACN,SAAS,gBAAiB,CAAA;AAAA,QACxB,GAAK,EAAA,gBAAA;AAAA,QACL,IAAM,EAAA;AAAA,UACJ,SAAW,EAAA,eAAA;AAAA,UACX,QAAU,EAAA,cAAA;AAAA,UACV,MAAQ,EAAA;AAAA,SACV;AAAA,QACA,OAAS,EAAA,CAAC,EAAE,MAAA,EAAQ,SAAW,EAAA,QAAA,EAC7B,KAAA,qBAAA,CAAsB,MAAO,CAAA,EAAE,MAAQ,EAAA,SAAA,EAAW,UAAU;AAAA,OAC/D;AAAA;AACH,GACD,CAAA;AAAA,EACD,aAAa,IAAK,CAAA;AAAA,IAChB,IAAM,EAAA,UAAA;AAAA,IACN,MAAQ,EAAA;AAAA,MACN,OAAA,EAAS,QAAQ,uBAAwB;AAAA;AAC3C,GACD,CAAA;AAAA,EACD,aAAa,IAAK,CAAA;AAAA,IAChB,IAAM,EAAA,kBAAA;AAAA,IACN,MAAQ,EAAA;AAAA,MACN,SAAS,gBAAiB,CAAA;AAAA,QACxB,GAAK,EAAA,qBAAA;AAAA,QACL,IAAA,EAAM,EAAE,SAAA,EAAW,YAAa,EAAA;AAAA,QAChC,SAAS,CAAC,EAAE,WAAgB,KAAA,kBAAA,CAAmB,WAAW,SAAS;AAAA,OACpE;AAAA;AACH,GACD;AACH;;;;"}