import React from 'react';
import { createExtension, createExtensionInput, coreExtensionData, ExtensionBoundary } from '@backstage/frontend-plugin-api';
import { ApiProvider } from '../packages/core-app-api/src/apis/system/ApiProvider.esm.js';
import 'zen-observable';
import '@backstage/core-plugin-api';
import '../packages/core-app-api/src/apis/implementations/auth/saml/types.esm.js';
import '@backstage/config';
import '../packages/core-app-api/src/app/AppRouter.esm.js';
import 'react-use/esm/useAsync';
import '@backstage/core-plugin-api/alpha';
import '../packages/core-app-api/src/routing/FeatureFlagged.esm.js';
import '../packages/core-app-api/src/routing/RoutingProvider.esm.js';
import '../packages/core-app-api/src/app/AppContext.esm.js';
import { AppThemeProvider } from '../packages/core-app-api/src/app/AppThemeProvider.esm.js';
import 'react-router-dom';
import '../packages/core-app-api/src/app/InternalAppContext.esm.js';
import 'i18next';
import '../packages/core-app-api/src/routing/FlatRoutes.esm.js';

const App = createExtension({
  attachTo: { id: "root", input: "app" },
  inputs: {
    root: createExtensionInput([coreExtensionData.reactElement], {
      singleton: true
    })
  },
  output: [coreExtensionData.reactElement],
  factory: ({ node, apis, inputs }) => {
    return [
      coreExtensionData.reactElement(
        /* @__PURE__ */ React.createElement(ApiProvider, { apis }, /* @__PURE__ */ React.createElement(AppThemeProvider, null, /* @__PURE__ */ React.createElement(ExtensionBoundary, { node }, inputs.root.get(coreExtensionData.reactElement))))
      )
    ];
  }
});

export { App };
//# sourceMappingURL=App.esm.js.map
