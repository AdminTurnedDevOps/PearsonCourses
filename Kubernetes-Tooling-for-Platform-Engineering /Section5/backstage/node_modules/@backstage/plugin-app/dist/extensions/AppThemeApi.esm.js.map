{"version":3,"file":"AppThemeApi.esm.js","sources":["../../src/extensions/AppThemeApi.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport {\n  UnifiedThemeProvider,\n  themes as builtinThemes,\n} from '@backstage/theme';\nimport DarkIcon from '@material-ui/icons/Brightness2';\nimport LightIcon from '@material-ui/icons/WbSunny';\nimport {\n  createExtensionInput,\n  ThemeBlueprint,\n  ApiBlueprint,\n  createApiFactory,\n  appThemeApiRef,\n} from '@backstage/frontend-plugin-api';\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport { AppThemeSelector } from '../../../../packages/core-app-api/src/apis/implementations';\n\n/**\n * Contains the themes installed into the app.\n */\nexport const AppThemeApi = ApiBlueprint.makeWithOverrides({\n  name: 'app-theme',\n  inputs: {\n    themes: createExtensionInput([ThemeBlueprint.dataRefs.theme], {\n      replaces: [{ id: 'app', input: 'themes' }],\n    }),\n  },\n  factory: (originalFactory, { inputs }) => {\n    return originalFactory({\n      factory: createApiFactory(\n        appThemeApiRef,\n        AppThemeSelector.createWithStorage(\n          inputs.themes.map(i => i.get(ThemeBlueprint.dataRefs.theme)),\n        ),\n      ),\n    });\n  },\n});\n\nexport const LightTheme = ThemeBlueprint.make({\n  name: 'light',\n  params: {\n    theme: {\n      id: 'light',\n      title: 'Light Theme',\n      variant: 'light',\n      icon: <LightIcon />,\n      Provider: ({ children }) => (\n        <UnifiedThemeProvider theme={builtinThemes.light} children={children} />\n      ),\n    },\n  },\n});\n\nexport const DarkTheme = ThemeBlueprint.make({\n  name: 'dark',\n  params: {\n    theme: {\n      id: 'dark',\n      title: 'Dark Theme',\n      variant: 'dark',\n      icon: <DarkIcon />,\n      Provider: ({ children }) => (\n        <UnifiedThemeProvider theme={builtinThemes.dark} children={children} />\n      ),\n    },\n  },\n});\n"],"names":["builtinThemes"],"mappings":";;;;;;;;;;;AAoCa,MAAA,WAAA,GAAc,aAAa,iBAAkB,CAAA;AAAA,EACxD,IAAM,EAAA,WAAA;AAAA,EACN,MAAQ,EAAA;AAAA,IACN,QAAQ,oBAAqB,CAAA,CAAC,cAAe,CAAA,QAAA,CAAS,KAAK,CAAG,EAAA;AAAA,MAC5D,UAAU,CAAC,EAAE,IAAI,KAAO,EAAA,KAAA,EAAO,UAAU;AAAA,KAC1C;AAAA,GACH;AAAA,EACA,OAAS,EAAA,CAAC,eAAiB,EAAA,EAAE,QAAa,KAAA;AACxC,IAAA,OAAO,eAAgB,CAAA;AAAA,MACrB,OAAS,EAAA,gBAAA;AAAA,QACP,cAAA;AAAA,QACA,gBAAiB,CAAA,iBAAA;AAAA,UACf,MAAA,CAAO,OAAO,GAAI,CAAA,CAAA,CAAA,KAAK,EAAE,GAAI,CAAA,cAAA,CAAe,QAAS,CAAA,KAAK,CAAC;AAAA;AAC7D;AACF,KACD,CAAA;AAAA;AAEL,CAAC;AAEY,MAAA,UAAA,GAAa,eAAe,IAAK,CAAA;AAAA,EAC5C,IAAM,EAAA,OAAA;AAAA,EACN,MAAQ,EAAA;AAAA,IACN,KAAO,EAAA;AAAA,MACL,EAAI,EAAA,OAAA;AAAA,MACJ,KAAO,EAAA,aAAA;AAAA,MACP,OAAS,EAAA,OAAA;AAAA,MACT,IAAA,sCAAO,SAAU,EAAA,IAAA,CAAA;AAAA,MACjB,QAAA,EAAU,CAAC,EAAE,QAAS,EAAA,yCACnB,oBAAqB,EAAA,EAAA,KAAA,EAAOA,MAAc,CAAA,KAAA,EAAO,QAAoB,EAAA;AAAA;AAE1E;AAEJ,CAAC;AAEY,MAAA,SAAA,GAAY,eAAe,IAAK,CAAA;AAAA,EAC3C,IAAM,EAAA,MAAA;AAAA,EACN,MAAQ,EAAA;AAAA,IACN,KAAO,EAAA;AAAA,MACL,EAAI,EAAA,MAAA;AAAA,MACJ,KAAO,EAAA,YAAA;AAAA,MACP,OAAS,EAAA,MAAA;AAAA,MACT,IAAA,sCAAO,QAAS,EAAA,IAAA,CAAA;AAAA,MAChB,QAAA,EAAU,CAAC,EAAE,QAAS,EAAA,yCACnB,oBAAqB,EAAA,EAAA,KAAA,EAAOA,MAAc,CAAA,IAAA,EAAM,QAAoB,EAAA;AAAA;AAEzE;AAEJ,CAAC;;;;"}