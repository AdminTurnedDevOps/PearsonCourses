import React from 'react';
import { EntityCardBlueprint } from '@backstage/plugin-catalog-react/alpha';
import { compatWrapper } from '@backstage/core-compat-api';

const catalogAboutEntityCard = EntityCardBlueprint.make({
  name: "about",
  params: {
    loader: async () => import('../components/AboutCard/index.esm.js').then(
      (m) => compatWrapper(/* @__PURE__ */ React.createElement(m.AboutCard, { variant: "gridItem" }))
    )
  }
});
const catalogLinksEntityCard = EntityCardBlueprint.make({
  name: "links",
  params: {
    filter: "has:links",
    loader: async () => import('../components/EntityLinksCard/index.esm.js').then(
      (m) => compatWrapper(/* @__PURE__ */ React.createElement(m.EntityLinksCard, { variant: "gridItem" }))
    )
  }
});
const catalogLabelsEntityCard = EntityCardBlueprint.make({
  name: "labels",
  params: {
    filter: "has:labels",
    loader: async () => import('../components/EntityLabelsCard/index.esm.js').then(
      (m) => compatWrapper(/* @__PURE__ */ React.createElement(m.EntityLabelsCard, { variant: "gridItem" }))
    )
  }
});
const catalogDependsOnComponentsEntityCard = EntityCardBlueprint.make({
  name: "depends-on-components",
  params: {
    filter: "kind:component",
    loader: async () => import('../components/DependsOnComponentsCard/index.esm.js').then(
      (m) => compatWrapper(/* @__PURE__ */ React.createElement(m.DependsOnComponentsCard, { variant: "gridItem" }))
    )
  }
});
const catalogDependsOnResourcesEntityCard = EntityCardBlueprint.make({
  name: "depends-on-resources",
  params: {
    filter: "kind:component",
    loader: async () => import('../components/DependsOnResourcesCard/index.esm.js').then(
      (m) => compatWrapper(/* @__PURE__ */ React.createElement(m.DependsOnResourcesCard, { variant: "gridItem" }))
    )
  }
});
const catalogHasComponentsEntityCard = EntityCardBlueprint.make({
  name: "has-components",
  params: {
    filter: "kind:system",
    loader: async () => import('../components/HasComponentsCard/index.esm.js').then(
      (m) => compatWrapper(/* @__PURE__ */ React.createElement(m.HasComponentsCard, { variant: "gridItem" }))
    )
  }
});
const catalogHasResourcesEntityCard = EntityCardBlueprint.make({
  name: "has-resources",
  params: {
    filter: "kind:system",
    loader: async () => import('../components/HasResourcesCard/index.esm.js').then(
      (m) => compatWrapper(/* @__PURE__ */ React.createElement(m.HasResourcesCard, { variant: "gridItem" }))
    )
  }
});
const catalogHasSubcomponentsEntityCard = EntityCardBlueprint.make({
  name: "has-subcomponents",
  params: {
    filter: "kind:component",
    loader: async () => import('../components/HasSubcomponentsCard/index.esm.js').then(
      (m) => compatWrapper(/* @__PURE__ */ React.createElement(m.HasSubcomponentsCard, { variant: "gridItem" }))
    )
  }
});
const catalogHasSubdomainsEntityCard = EntityCardBlueprint.make({
  name: "has-subdomains",
  params: {
    filter: "kind:domain",
    loader: async () => import('../components/HasSubdomainsCard/index.esm.js').then(
      (m) => compatWrapper(/* @__PURE__ */ React.createElement(m.HasSubdomainsCard, { variant: "gridItem" }))
    )
  }
});
const catalogHasSystemsEntityCard = EntityCardBlueprint.make({
  name: "has-systems",
  params: {
    filter: "kind:domain",
    loader: async () => import('../components/HasSystemsCard/index.esm.js').then(
      (m) => compatWrapper(/* @__PURE__ */ React.createElement(m.HasSystemsCard, { variant: "gridItem" }))
    )
  }
});
var entityCards = [
  catalogAboutEntityCard,
  catalogLinksEntityCard,
  catalogLabelsEntityCard,
  catalogDependsOnComponentsEntityCard,
  catalogDependsOnResourcesEntityCard,
  catalogHasComponentsEntityCard,
  catalogHasResourcesEntityCard,
  catalogHasSubcomponentsEntityCard,
  catalogHasSubdomainsEntityCard,
  catalogHasSystemsEntityCard
];

export { catalogAboutEntityCard, catalogDependsOnComponentsEntityCard, catalogDependsOnResourcesEntityCard, catalogHasComponentsEntityCard, catalogHasResourcesEntityCard, catalogHasSubcomponentsEntityCard, catalogHasSubdomainsEntityCard, catalogHasSystemsEntityCard, catalogLabelsEntityCard, catalogLinksEntityCard, entityCards as default };
//# sourceMappingURL=entityCards.esm.js.map
