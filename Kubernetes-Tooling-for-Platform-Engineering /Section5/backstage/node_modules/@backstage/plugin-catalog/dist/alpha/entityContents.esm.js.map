{"version":3,"file":"entityContents.esm.js","sources":["../../src/alpha/entityContents.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport {\n  coreExtensionData,\n  createExtensionInput,\n} from '@backstage/frontend-plugin-api';\nimport { EntityContentBlueprint } from '@backstage/plugin-catalog-react/alpha';\n\nexport const catalogOverviewEntityContent =\n  EntityContentBlueprint.makeWithOverrides({\n    name: 'overview',\n    inputs: {\n      cards: createExtensionInput([\n        coreExtensionData.reactElement,\n        EntityContentBlueprint.dataRefs.filterFunction.optional(),\n        EntityContentBlueprint.dataRefs.filterExpression.optional(),\n      ]),\n    },\n    factory: (originalFactory, { inputs }) => {\n      return originalFactory({\n        defaultPath: '/',\n        defaultTitle: 'Overview',\n        loader: async () =>\n          import('./EntityOverviewPage').then(m => (\n            <m.EntityOverviewPage\n              cards={inputs.cards.map(c => ({\n                element: c.get(coreExtensionData.reactElement),\n                filterFunction: c.get(\n                  EntityContentBlueprint.dataRefs.filterFunction,\n                ),\n                filterExpression: c.get(\n                  EntityContentBlueprint.dataRefs.filterExpression,\n                ),\n              }))}\n            />\n          )),\n      });\n    },\n  });\n\nexport default [catalogOverviewEntityContent];\n"],"names":[],"mappings":";;;;AAuBa,MAAA,4BAAA,GACX,uBAAuB,iBAAkB,CAAA;AAAA,EACvC,IAAM,EAAA,UAAA;AAAA,EACN,MAAQ,EAAA;AAAA,IACN,OAAO,oBAAqB,CAAA;AAAA,MAC1B,iBAAkB,CAAA,YAAA;AAAA,MAClB,sBAAA,CAAuB,QAAS,CAAA,cAAA,CAAe,QAAS,EAAA;AAAA,MACxD,sBAAA,CAAuB,QAAS,CAAA,gBAAA,CAAiB,QAAS;AAAA,KAC3D;AAAA,GACH;AAAA,EACA,OAAS,EAAA,CAAC,eAAiB,EAAA,EAAE,QAAa,KAAA;AACxC,IAAA,OAAO,eAAgB,CAAA;AAAA,MACrB,WAAa,EAAA,GAAA;AAAA,MACb,YAAc,EAAA,UAAA;AAAA,MACd,QAAQ,YACN,OAAO,6BAAsB,CAAA,CAAE,KAAK,CAClC,CAAA,qBAAA,KAAA,CAAA,aAAA;AAAA,QAAC,CAAE,CAAA,kBAAA;AAAA,QAAF;AAAA,UACC,KAAO,EAAA,MAAA,CAAO,KAAM,CAAA,GAAA,CAAI,CAAM,CAAA,MAAA;AAAA,YAC5B,OAAS,EAAA,CAAA,CAAE,GAAI,CAAA,iBAAA,CAAkB,YAAY,CAAA;AAAA,YAC7C,gBAAgB,CAAE,CAAA,GAAA;AAAA,cAChB,uBAAuB,QAAS,CAAA;AAAA,aAClC;AAAA,YACA,kBAAkB,CAAE,CAAA,GAAA;AAAA,cAClB,uBAAuB,QAAS,CAAA;AAAA;AAClC,WACA,CAAA;AAAA;AAAA,OAEL;AAAA,KACJ,CAAA;AAAA;AAEL,CAAC;AAEH,qBAAe,CAAC,4BAA4B,CAAA;;;;"}