import { convertLegacyRouteRefs } from '@backstage/core-compat-api';
import { createFrontendPlugin } from '@backstage/frontend-plugin-api';
import { entityRouteRef } from '@backstage/plugin-catalog-react';
import { rootRouteRef, viewTechDocRouteRef, createComponentRouteRef, createFromTemplateRouteRef, unregisterRedirectRouteRef } from '../routes.esm.js';
import apis from './apis.esm.js';
import pages from './pages.esm.js';
import filters from './filters.esm.js';
import navItems from './navItems.esm.js';
import entityCards from './entityCards.esm.js';
import entityContents from './entityContents.esm.js';
import searchResultItems from './searchResultItems.esm.js';

var plugin = createFrontendPlugin({
  id: "catalog",
  routes: convertLegacyRouteRefs({
    catalogIndex: rootRouteRef,
    catalogEntity: entityRouteRef
  }),
  externalRoutes: convertLegacyRouteRefs({
    viewTechDoc: viewTechDocRouteRef,
    createComponent: createComponentRouteRef,
    createFromTemplate: createFromTemplateRouteRef,
    unregisterRedirect: unregisterRedirectRouteRef
  }),
  extensions: [
    ...apis,
    ...pages,
    ...filters,
    ...navItems,
    ...entityCards,
    ...entityContents,
    ...searchResultItems
  ]
});

export { plugin as default };
//# sourceMappingURL=plugin.esm.js.map
