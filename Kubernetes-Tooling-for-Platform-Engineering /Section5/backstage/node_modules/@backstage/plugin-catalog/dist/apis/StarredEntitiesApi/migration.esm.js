import { stringifyEntityRef } from '@backstage/catalog-model';
import { isArray, isString } from 'lodash';

async function performMigrationToTheNewBucket({
  storageApi
}) {
  const source = storageApi.forBucket("settings");
  const target = storageApi.forBucket("starredEntities");
  const oldStarredEntities = source.snapshot("starredEntities").value;
  if (!isArray(oldStarredEntities)) {
    return;
  }
  const targetEntities = new Set(
    target.snapshot("entityRefs").value ?? []
  );
  oldStarredEntities.filter(isString).map((old) => old.split(":")).filter((split) => split.length === 4 && split[0] === "entity").map(
    ([_, kind, namespace, name]) => stringifyEntityRef({ kind, namespace, name })
  ).forEach((e) => targetEntities.add(e));
  await target.set("entityRefs", Array.from(targetEntities));
  await source.remove("starredEntities");
}

export { performMigrationToTheNewBucket };
//# sourceMappingURL=migration.esm.js.map
