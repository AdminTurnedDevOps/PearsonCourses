{"version":3,"file":"AboutField.esm.js","sources":["../../../src/components/AboutCard/AboutField.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useElementFilter } from '@backstage/core-plugin-api';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\n\nconst useStyles = makeStyles(theme => ({\n  value: {\n    fontWeight: 'bold',\n    overflow: 'hidden',\n    lineHeight: '24px',\n    wordBreak: 'break-word',\n  },\n  label: {\n    color: theme.palette.text.secondary,\n    textTransform: 'uppercase',\n    fontSize: '10px',\n    fontWeight: 'bold',\n    letterSpacing: 0.5,\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n  },\n}));\n\n/**\n * Props for {@link AboutField}.\n *\n * @public\n */\nexport interface AboutFieldProps {\n  label: string;\n  value?: string;\n  gridSizes?: Record<string, number>;\n  children?: React.ReactNode;\n  className?: string;\n}\n\n/** @public */\nexport function AboutField(props: AboutFieldProps) {\n  const { label, value, gridSizes, children, className } = props;\n  const classes = useStyles();\n\n  const childElements = useElementFilter(children, c => c.getElements());\n\n  // Content is either children or a string prop `value`\n  const content =\n    childElements.length > 0 ? (\n      childElements\n    ) : (\n      <Typography variant=\"body2\" className={classes.value}>\n        {value || `unknown`}\n      </Typography>\n    );\n  return (\n    <Grid item {...gridSizes} className={className}>\n      <Typography variant=\"h2\" className={classes.label}>\n        {label}\n      </Typography>\n      {content}\n    </Grid>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAsBA,MAAM,SAAA,GAAY,WAAW,CAAU,KAAA,MAAA;AAAA,EACrC,KAAO,EAAA;AAAA,IACL,UAAY,EAAA,MAAA;AAAA,IACZ,QAAU,EAAA,QAAA;AAAA,IACV,UAAY,EAAA,MAAA;AAAA,IACZ,SAAW,EAAA;AAAA,GACb;AAAA,EACA,KAAO,EAAA;AAAA,IACL,KAAA,EAAO,KAAM,CAAA,OAAA,CAAQ,IAAK,CAAA,SAAA;AAAA,IAC1B,aAAe,EAAA,WAAA;AAAA,IACf,QAAU,EAAA,MAAA;AAAA,IACV,UAAY,EAAA,MAAA;AAAA,IACZ,aAAe,EAAA,GAAA;AAAA,IACf,QAAU,EAAA,QAAA;AAAA,IACV,UAAY,EAAA;AAAA;AAEhB,CAAE,CAAA,CAAA;AAgBK,SAAS,WAAW,KAAwB,EAAA;AACjD,EAAA,MAAM,EAAE,KAAO,EAAA,KAAA,EAAO,SAAW,EAAA,QAAA,EAAU,WAAc,GAAA,KAAA;AACzD,EAAA,MAAM,UAAU,SAAU,EAAA;AAE1B,EAAA,MAAM,gBAAgB,gBAAiB,CAAA,QAAA,EAAU,CAAK,CAAA,KAAA,CAAA,CAAE,aAAa,CAAA;AAGrE,EAAA,MAAM,OACJ,GAAA,aAAA,CAAc,MAAS,GAAA,CAAA,GACrB,aAEA,mBAAA,KAAA,CAAA,aAAA,CAAC,UAAW,EAAA,EAAA,OAAA,EAAQ,OAAQ,EAAA,SAAA,EAAW,OAAQ,CAAA,KAAA,EAAA,EAC5C,SAAS,CACZ,OAAA,CAAA,CAAA;AAEJ,EAAA,2CACG,IAAK,EAAA,EAAA,IAAA,EAAI,IAAE,EAAA,GAAG,WAAW,SACxB,EAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,UAAW,EAAA,EAAA,OAAA,EAAQ,MAAK,SAAW,EAAA,OAAA,CAAQ,KACzC,EAAA,EAAA,KACH,GACC,OACH,CAAA;AAEJ;;;;"}