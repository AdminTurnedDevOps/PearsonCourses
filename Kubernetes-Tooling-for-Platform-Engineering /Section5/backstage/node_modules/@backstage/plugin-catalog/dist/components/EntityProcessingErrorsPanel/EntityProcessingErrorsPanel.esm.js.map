{"version":3,"file":"EntityProcessingErrorsPanel.esm.js","sources":["../../../src/components/EntityProcessingErrorsPanel/EntityProcessingErrorsPanel.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlphaEntity, EntityStatusItem } from '@backstage/catalog-model/alpha';\nimport { Entity, stringifyEntityRef } from '@backstage/catalog-model';\nimport {\n  catalogApiRef,\n  EntityRefLink,\n  useEntity,\n} from '@backstage/plugin-catalog-react';\nimport Box from '@material-ui/core/Box';\nimport React from 'react';\nimport { ResponseErrorPanel } from '@backstage/core-components';\nimport {\n  CatalogApi,\n  ENTITY_STATUS_CATALOG_PROCESSING_TYPE,\n} from '@backstage/catalog-client';\nimport { useApi, ApiHolder } from '@backstage/core-plugin-api';\nimport useAsync from 'react-use/esm/useAsync';\nimport { SerializedError } from '@backstage/errors';\nimport { catalogTranslationRef } from '../../alpha/translation';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\n\nconst errorFilter = (i: EntityStatusItem) =>\n  i.error &&\n  i.level === 'error' &&\n  i.type === ENTITY_STATUS_CATALOG_PROCESSING_TYPE;\n\ninterface GetOwnAndAncestorsErrorsResponse {\n  items: {\n    errors: SerializedError[];\n    entity: Entity;\n  }[];\n}\n\nasync function getOwnAndAncestorsErrors(\n  entityRef: string,\n  catalogApi: CatalogApi,\n): Promise<GetOwnAndAncestorsErrorsResponse> {\n  const ancestors = await catalogApi.getEntityAncestors({ entityRef });\n  const items = ancestors.items\n    .map(item => {\n      const statuses = (item.entity as AlphaEntity).status?.items ?? [];\n      const errors = statuses\n        .filter(errorFilter)\n        .map(e => e.error)\n        .filter((e): e is SerializedError => Boolean(e));\n      return { errors: errors, entity: item.entity };\n    })\n    .filter(item => item.errors.length > 0);\n  return { items };\n}\n\n/**\n * Returns true if the given entity has any processing errors on it.\n *\n * @public\n */\nexport async function hasCatalogProcessingErrors(\n  entity: Entity,\n  context: { apis: ApiHolder },\n) {\n  const catalogApi = context.apis.get(catalogApiRef);\n  if (!catalogApi) {\n    throw new Error(`No implementation available for ${catalogApiRef}`);\n  }\n\n  const errors = await getOwnAndAncestorsErrors(\n    stringifyEntityRef(entity),\n    catalogApi,\n  );\n  return errors.items.length > 0;\n}\n\n/**\n * Displays a list of errors from the ancestors of the current entity.\n *\n * @public\n */\nexport function EntityProcessingErrorsPanel() {\n  const { entity } = useEntity();\n  const entityRef = stringifyEntityRef(entity);\n  const catalogApi = useApi(catalogApiRef);\n  const { loading, error, value } = useAsync(async () => {\n    return getOwnAndAncestorsErrors(entityRef, catalogApi);\n  }, [entityRef, catalogApi]);\n  const { t } = useTranslationRef(catalogTranslationRef);\n\n  if (error) {\n    return (\n      <Box mb={1}>\n        <ResponseErrorPanel error={error} />\n      </Box>\n    );\n  }\n\n  if (loading || !value) {\n    return null;\n  }\n\n  return (\n    <>\n      {value.items.map((ancestorError, index) => (\n        <Box key={index} mb={1}>\n          {stringifyEntityRef(entity) !==\n            stringifyEntityRef(ancestorError.entity) && (\n            <Box p={1}>\n              {t('entityProcessingErrorsDescription')}{' '}\n              <EntityRefLink entityRef={ancestorError.entity} />\n            </Box>\n          )}\n          {ancestorError.errors.map((e, i) => (\n            <ResponseErrorPanel key={i} error={e} />\n          ))}\n        </Box>\n      ))}\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAoCA,MAAM,WAAA,GAAc,CAAC,CACnB,KAAA,CAAA,CAAE,SACF,CAAE,CAAA,KAAA,KAAU,OACZ,IAAA,CAAA,CAAE,IAAS,KAAA,qCAAA;AASb,eAAe,wBAAA,CACb,WACA,UAC2C,EAAA;AAC3C,EAAA,MAAM,YAAY,MAAM,UAAA,CAAW,kBAAmB,CAAA,EAAE,WAAW,CAAA;AACnE,EAAA,MAAM,KAAQ,GAAA,SAAA,CAAU,KACrB,CAAA,GAAA,CAAI,CAAQ,IAAA,KAAA;AACX,IAAA,MAAM,QAAY,GAAA,IAAA,CAAK,MAAuB,CAAA,MAAA,EAAQ,SAAS,EAAC;AAChE,IAAA,MAAM,MAAS,GAAA,QAAA,CACZ,MAAO,CAAA,WAAW,EAClB,GAAI,CAAA,CAAA,CAAA,KAAK,CAAE,CAAA,KAAK,EAChB,MAAO,CAAA,CAAC,CAA4B,KAAA,OAAA,CAAQ,CAAC,CAAC,CAAA;AACjD,IAAA,OAAO,EAAE,MAAA,EAAgB,MAAQ,EAAA,IAAA,CAAK,MAAO,EAAA;AAAA,GAC9C,CACA,CAAA,MAAA,CAAO,UAAQ,IAAK,CAAA,MAAA,CAAO,SAAS,CAAC,CAAA;AACxC,EAAA,OAAO,EAAE,KAAM,EAAA;AACjB;AAOsB,eAAA,0BAAA,CACpB,QACA,OACA,EAAA;AACA,EAAA,MAAM,UAAa,GAAA,OAAA,CAAQ,IAAK,CAAA,GAAA,CAAI,aAAa,CAAA;AACjD,EAAA,IAAI,CAAC,UAAY,EAAA;AACf,IAAA,MAAM,IAAI,KAAA,CAAM,CAAmC,gCAAA,EAAA,aAAa,CAAE,CAAA,CAAA;AAAA;AAGpE,EAAA,MAAM,SAAS,MAAM,wBAAA;AAAA,IACnB,mBAAmB,MAAM,CAAA;AAAA,IACzB;AAAA,GACF;AACA,EAAO,OAAA,MAAA,CAAO,MAAM,MAAS,GAAA,CAAA;AAC/B;AAOO,SAAS,2BAA8B,GAAA;AAC5C,EAAM,MAAA,EAAE,MAAO,EAAA,GAAI,SAAU,EAAA;AAC7B,EAAM,MAAA,SAAA,GAAY,mBAAmB,MAAM,CAAA;AAC3C,EAAM,MAAA,UAAA,GAAa,OAAO,aAAa,CAAA;AACvC,EAAA,MAAM,EAAE,OAAS,EAAA,KAAA,EAAO,KAAM,EAAA,GAAI,SAAS,YAAY;AACrD,IAAO,OAAA,wBAAA,CAAyB,WAAW,UAAU,CAAA;AAAA,GACpD,EAAA,CAAC,SAAW,EAAA,UAAU,CAAC,CAAA;AAC1B,EAAA,MAAM,EAAE,CAAA,EAAM,GAAA,iBAAA,CAAkB,qBAAqB,CAAA;AAErD,EAAA,IAAI,KAAO,EAAA;AACT,IAAA,2CACG,GAAI,EAAA,EAAA,EAAA,EAAI,qBACN,KAAA,CAAA,aAAA,CAAA,kBAAA,EAAA,EAAmB,OAAc,CACpC,CAAA;AAAA;AAIJ,EAAI,IAAA,OAAA,IAAW,CAAC,KAAO,EAAA;AACrB,IAAO,OAAA,IAAA;AAAA;AAGT,EACE,uBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACG,MAAM,KAAM,CAAA,GAAA,CAAI,CAAC,aAAe,EAAA,KAAA,qBAC9B,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,EAAI,GAAK,EAAA,KAAA,EAAO,IAAI,CAClB,EAAA,EAAA,kBAAA,CAAmB,MAAM,CAAA,KACxB,kBAAmB,CAAA,aAAA,CAAc,MAAM,CACvC,oBAAA,KAAA,CAAA,aAAA,CAAC,GAAI,EAAA,EAAA,CAAA,EAAG,CACL,EAAA,EAAA,CAAA,CAAE,mCAAmC,CAAG,EAAA,GAAA,sCACxC,aAAc,EAAA,EAAA,SAAA,EAAW,cAAc,MAAQ,EAAA,CAClD,CAED,EAAA,aAAA,CAAc,MAAO,CAAA,GAAA,CAAI,CAAC,CAAG,EAAA,CAAA,qBAC3B,KAAA,CAAA,aAAA,CAAA,kBAAA,EAAA,EAAmB,GAAK,EAAA,CAAA,EAAG,OAAO,CAAG,EAAA,CACvC,CACH,CACD,CACH,CAAA;AAEJ;;;;"}