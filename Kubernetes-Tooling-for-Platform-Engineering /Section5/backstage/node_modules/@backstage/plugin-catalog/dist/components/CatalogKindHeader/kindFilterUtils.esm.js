import { useApi } from '@backstage/core-plugin-api';
import { catalogApiRef } from '@backstage/plugin-catalog-react';
import useAsync from 'react-use/esm/useAsync';

function useAllKinds() {
  const catalogApi = useApi(catalogApiRef);
  const {
    error,
    loading,
    value: allKinds
  } = useAsync(async () => {
    const { facets } = await catalogApi.getEntityFacets({ facets: ["kind"] });
    const kindFacets = (facets.kind ?? []).map((f) => f.value);
    return new Map(
      kindFacets.map((kind) => [kind.toLocaleLowerCase("en-US"), kind])
    );
  }, [catalogApi]);
  return { loading, error, allKinds: allKinds ?? /* @__PURE__ */ new Map() };
}
function filterKinds(allKinds, allowedKinds, forcedKinds) {
  let availableKinds = Array.from(allKinds.keys());
  if (allowedKinds) {
    availableKinds = allowedKinds.map((k) => k.toLocaleLowerCase("en-US")).filter((k) => allKinds.has(k));
  }
  const kindsMap = new Map(
    availableKinds.map((kind) => [kind, allKinds.get(kind) || kind])
  );
  if (forcedKinds && !kindsMap.has(forcedKinds)) {
    kindsMap.set(forcedKinds.toLocaleLowerCase("en-US"), forcedKinds);
  }
  return kindsMap;
}

export { filterKinds, useAllKinds };
//# sourceMappingURL=kindFilterUtils.esm.js.map
