import { useEntity } from '@backstage/plugin-catalog-react';
import LanguageIcon from '@material-ui/icons/Language';
import React from 'react';
import { EntityLinksEmptyState } from './EntityLinksEmptyState.esm.js';
import { LinksGridList } from './LinksGridList.esm.js';
import { useApp } from '@backstage/core-plugin-api';
import { InfoCard } from '@backstage/core-components';
import { useTranslationRef } from '@backstage/core-plugin-api/alpha';
import { catalogTranslationRef } from '../../alpha/translation.esm.js';

const EntityLinksCard = (props) => {
  const { cols = void 0, variant } = props;
  const { entity } = useEntity();
  const app = useApp();
  const { t } = useTranslationRef(catalogTranslationRef);
  const iconResolver = (key) => key ? app.getSystemIcon(key) ?? LanguageIcon : LanguageIcon;
  const links = entity?.metadata?.links;
  return /* @__PURE__ */ React.createElement(InfoCard, { title: t("entityLinksCard.title"), variant }, !links || links.length === 0 ? /* @__PURE__ */ React.createElement(EntityLinksEmptyState, null) : /* @__PURE__ */ React.createElement(
    LinksGridList,
    {
      cols,
      items: links.map(({ url, title, icon }) => ({
        text: title ?? url,
        href: url,
        Icon: iconResolver(icon)
      }))
    }
  ));
};

export { EntityLinksCard };
//# sourceMappingURL=EntityLinksCard.esm.js.map
