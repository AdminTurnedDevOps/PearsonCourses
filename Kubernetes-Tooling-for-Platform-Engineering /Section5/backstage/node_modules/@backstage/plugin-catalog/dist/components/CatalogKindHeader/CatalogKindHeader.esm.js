import React, { useMemo, useState, useEffect } from 'react';
import InputBase from '@material-ui/core/InputBase';
import MenuItem from '@material-ui/core/MenuItem';
import Select from '@material-ui/core/Select';
import { makeStyles, createStyles } from '@material-ui/core/styles';
import { useEntityList, EntityKindFilter } from '@backstage/plugin-catalog-react';
import pluralize from 'pluralize';
import { useAllKinds, filterKinds } from './kindFilterUtils.esm.js';

const useStyles = makeStyles(
  (theme) => createStyles({
    root: {
      ...theme.typography.h4
    }
  })
);
function CatalogKindHeader(props) {
  const { initialFilter = "component", allowedKinds } = props;
  const classes = useStyles();
  const { allKinds } = useAllKinds();
  const {
    filters,
    updateFilters,
    queryParameters: { kind: kindParameter }
  } = useEntityList();
  const queryParamKind = useMemo(
    () => [kindParameter].flat()[0],
    [kindParameter]
  );
  const [selectedKind, setSelectedKind] = useState(
    queryParamKind ?? filters.kind?.value ?? initialFilter
  );
  useEffect(() => {
    if (queryParamKind) {
      setSelectedKind(queryParamKind);
    }
  }, [queryParamKind]);
  useEffect(() => {
    if (filters.kind?.value) {
      setSelectedKind(filters.kind?.value);
    }
  }, [filters.kind]);
  const selectedKindLabel = allKinds.get(selectedKind.toLocaleLowerCase("en-US")) || selectedKind;
  useEffect(() => {
    updateFilters({
      kind: selectedKind ? new EntityKindFilter(selectedKind, selectedKindLabel) : void 0
    });
  }, [selectedKind, selectedKindLabel, updateFilters]);
  const options = filterKinds(allKinds, allowedKinds, selectedKind);
  return /* @__PURE__ */ React.createElement(
    Select,
    {
      input: /* @__PURE__ */ React.createElement(InputBase, null),
      value: selectedKind.toLocaleLowerCase("en-US"),
      onChange: (e) => setSelectedKind(e.target.value),
      classes
    },
    [...options.keys()].map((kind) => /* @__PURE__ */ React.createElement(MenuItem, { value: kind, key: kind }, `${pluralize(options.get(kind) || kind)}`))
  );
}

export { CatalogKindHeader };
//# sourceMappingURL=CatalogKindHeader.esm.js.map
