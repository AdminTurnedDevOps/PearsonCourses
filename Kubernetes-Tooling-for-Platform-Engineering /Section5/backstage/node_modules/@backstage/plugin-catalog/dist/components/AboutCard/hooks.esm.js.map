{"version":3,"file":"hooks.esm.js","sources":["../../../src/components/AboutCard/hooks.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  CompoundEntityRef,\n  Entity,\n  parseEntityRef,\n} from '@backstage/catalog-model';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport useAsync from 'react-use/lib/useAsync';\n\n// todo: should this be a constant in a scaffolder package?\nconst SOURCE_TEMPLATE_ANNOTATION = 'backstage.io/source-template';\n\n/**\n * Returns the compound entity ref of the source template that was used to\n * create this entity (assuming that it still exists and the user has access\n * to it).\n */\nexport const useSourceTemplateCompoundEntityRef = (entity: Entity) => {\n  const catalogApi = useApi(catalogApiRef);\n  const { value: sourceTemplateRef } = useAsync(async () => {\n    const refCandidate =\n      entity.metadata.annotations?.[SOURCE_TEMPLATE_ANNOTATION];\n    let compoundRefCandidate: CompoundEntityRef | undefined;\n\n    if (!refCandidate) {\n      return undefined;\n    }\n\n    try {\n      // Check for access and that this template still exists.\n      const template = await catalogApi.getEntityByRef(refCandidate);\n      compoundRefCandidate = parseEntityRef(refCandidate);\n\n      return template !== undefined ? compoundRefCandidate : undefined;\n    } catch {\n      return undefined;\n    }\n  }, [catalogApi, entity]);\n\n  return sourceTemplateRef;\n};\n"],"names":[],"mappings":";;;;;AAyBA,MAAM,0BAA6B,GAAA,8BAAA;AAOtB,MAAA,kCAAA,GAAqC,CAAC,MAAmB,KAAA;AACpE,EAAM,MAAA,UAAA,GAAa,OAAO,aAAa,CAAA;AACvC,EAAA,MAAM,EAAE,KAAA,EAAO,iBAAkB,EAAA,GAAI,SAAS,YAAY;AACxD,IAAA,MAAM,YACJ,GAAA,MAAA,CAAO,QAAS,CAAA,WAAA,GAAc,0BAA0B,CAAA;AAC1D,IAAI,IAAA,oBAAA;AAEJ,IAAA,IAAI,CAAC,YAAc,EAAA;AACjB,MAAO,OAAA,KAAA,CAAA;AAAA;AAGT,IAAI,IAAA;AAEF,MAAA,MAAM,QAAW,GAAA,MAAM,UAAW,CAAA,cAAA,CAAe,YAAY,CAAA;AAC7D,MAAA,oBAAA,GAAuB,eAAe,YAAY,CAAA;AAElD,MAAO,OAAA,QAAA,KAAa,SAAY,oBAAuB,GAAA,KAAA,CAAA;AAAA,KACjD,CAAA,MAAA;AACN,MAAO,OAAA,KAAA,CAAA;AAAA;AACT,GACC,EAAA,CAAC,UAAY,EAAA,MAAM,CAAC,CAAA;AAEvB,EAAO,OAAA,iBAAA;AACT;;;;"}