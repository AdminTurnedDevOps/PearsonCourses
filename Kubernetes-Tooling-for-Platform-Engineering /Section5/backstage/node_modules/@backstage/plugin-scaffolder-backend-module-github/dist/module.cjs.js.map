{"version":3,"file":"module.cjs.js","sources":["../src/module.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  coreServices,\n  createBackendModule,\n} from '@backstage/backend-plugin-api';\nimport { scaffolderActionsExtensionPoint } from '@backstage/plugin-scaffolder-node/alpha';\nimport {\n  createGithubActionsDispatchAction,\n  createGithubAutolinksAction,\n  createGithubDeployKeyAction,\n  createGithubEnvironmentAction,\n  createGithubIssuesLabelAction,\n  createGithubRepoCreateAction,\n  createGithubRepoPushAction,\n  createGithubWebhookAction,\n  createPublishGithubAction,\n  createPublishGithubPullRequestAction,\n  createGithubPagesEnableAction,\n  createGithubBranchProtectionAction,\n} from './actions';\nimport {\n  DefaultGithubCredentialsProvider,\n  ScmIntegrations,\n} from '@backstage/integration';\nimport { CatalogClient } from '@backstage/catalog-client';\n\n/**\n * @public\n * The GitHub Module for the Scaffolder Backend\n */\nexport const githubModule = createBackendModule({\n  pluginId: 'scaffolder',\n  moduleId: 'github',\n  register({ registerInit }) {\n    registerInit({\n      deps: {\n        scaffolder: scaffolderActionsExtensionPoint,\n        config: coreServices.rootConfig,\n        discovery: coreServices.discovery,\n        auth: coreServices.auth,\n      },\n      async init({ scaffolder, config, discovery, auth }) {\n        const integrations = ScmIntegrations.fromConfig(config);\n        const githubCredentialsProvider =\n          DefaultGithubCredentialsProvider.fromIntegrations(integrations);\n        const catalogClient = new CatalogClient({\n          discoveryApi: discovery,\n        });\n\n        scaffolder.addActions(\n          createGithubActionsDispatchAction({\n            integrations,\n            githubCredentialsProvider,\n          }),\n          createGithubAutolinksAction({\n            integrations,\n            githubCredentialsProvider,\n          }),\n          createGithubDeployKeyAction({\n            integrations,\n          }),\n          createGithubEnvironmentAction({\n            integrations,\n            catalogClient,\n            auth,\n          }),\n          createGithubIssuesLabelAction({\n            integrations,\n            githubCredentialsProvider,\n          }),\n          createGithubRepoCreateAction({\n            integrations,\n            githubCredentialsProvider,\n          }),\n          createGithubRepoPushAction({ integrations, config }),\n          createGithubWebhookAction({\n            integrations,\n            githubCredentialsProvider,\n          }),\n          createPublishGithubAction({\n            integrations,\n            config,\n            githubCredentialsProvider,\n          }),\n          createPublishGithubPullRequestAction({\n            integrations,\n            githubCredentialsProvider,\n            config,\n          }),\n          createGithubPagesEnableAction({\n            integrations,\n            githubCredentialsProvider,\n          }),\n          createGithubBranchProtectionAction({\n            integrations,\n          }),\n        );\n      },\n    });\n  },\n});\n"],"names":["createBackendModule","scaffolderActionsExtensionPoint","coreServices","ScmIntegrations","DefaultGithubCredentialsProvider","catalogClient","CatalogClient","createGithubActionsDispatchAction","createGithubAutolinksAction","createGithubDeployKeyAction","createGithubEnvironmentAction","createGithubIssuesLabelAction","createGithubRepoCreateAction","createGithubRepoPushAction","createGithubWebhookAction","createPublishGithubAction","createPublishGithubPullRequestAction","createGithubPagesEnableAction","createGithubBranchProtectionAction"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AA4CO,MAAM,eAAeA,oCAAoB,CAAA;AAAA,EAC9C,QAAU,EAAA,YAAA;AAAA,EACV,QAAU,EAAA,QAAA;AAAA,EACV,QAAA,CAAS,EAAE,YAAA,EAAgB,EAAA;AACzB,IAAa,YAAA,CAAA;AAAA,MACX,IAAM,EAAA;AAAA,QACJ,UAAY,EAAAC,qCAAA;AAAA,QACZ,QAAQC,6BAAa,CAAA,UAAA;AAAA,QACrB,WAAWA,6BAAa,CAAA,SAAA;AAAA,QACxB,MAAMA,6BAAa,CAAA;AAAA,OACrB;AAAA,MACA,MAAM,IAAK,CAAA,EAAE,YAAY,MAAQ,EAAA,SAAA,EAAW,MAAQ,EAAA;AAClD,QAAM,MAAA,YAAA,GAAeC,2BAAgB,CAAA,UAAA,CAAW,MAAM,CAAA;AACtD,QAAM,MAAA,yBAAA,GACJC,4CAAiC,CAAA,gBAAA,CAAiB,YAAY,CAAA;AAChE,QAAM,MAAAC,eAAA,GAAgB,IAAIC,2BAAc,CAAA;AAAA,UACtC,YAAc,EAAA;AAAA,SACf,CAAA;AAED,QAAW,UAAA,CAAA,UAAA;AAAA,UACTC,uDAAkC,CAAA;AAAA,YAChC,YAAA;AAAA,YACA;AAAA,WACD,CAAA;AAAA,UACDC,2CAA4B,CAAA;AAAA,YAC1B,YAAA;AAAA,YACA;AAAA,WACD,CAAA;AAAA,UACDC,2CAA4B,CAAA;AAAA,YAC1B;AAAA,WACD,CAAA;AAAA,UACDC,+CAA8B,CAAA;AAAA,YAC5B,YAAA;AAAA,2BACAL,eAAA;AAAA,YACA;AAAA,WACD,CAAA;AAAA,UACDM,+CAA8B,CAAA;AAAA,YAC5B,YAAA;AAAA,YACA;AAAA,WACD,CAAA;AAAA,UACDC,6CAA6B,CAAA;AAAA,YAC3B,YAAA;AAAA,YACA;AAAA,WACD,CAAA;AAAA,UACDC,yCAA2B,CAAA,EAAE,YAAc,EAAA,MAAA,EAAQ,CAAA;AAAA,UACnDC,uCAA0B,CAAA;AAAA,YACxB,YAAA;AAAA,YACA;AAAA,WACD,CAAA;AAAA,UACDC,gCAA0B,CAAA;AAAA,YACxB,YAAA;AAAA,YACA,MAAA;AAAA,YACA;AAAA,WACD,CAAA;AAAA,UACDC,sDAAqC,CAAA;AAAA,YACnC,YAAA;AAAA,YACA,yBAAA;AAAA,YACA;AAAA,WACD,CAAA;AAAA,UACDC,+CAA8B,CAAA;AAAA,YAC5B,YAAA;AAAA,YACA;AAAA,WACD,CAAA;AAAA,UACDC,yDAAmC,CAAA;AAAA,YACjC;AAAA,WACD;AAAA,SACH;AAAA;AACF,KACD,CAAA;AAAA;AAEL,CAAC;;;;"}