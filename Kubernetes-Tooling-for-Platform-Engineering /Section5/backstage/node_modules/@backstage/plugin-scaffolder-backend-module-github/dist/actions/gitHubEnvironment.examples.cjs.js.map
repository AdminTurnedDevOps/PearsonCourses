{"version":3,"file":"gitHubEnvironment.examples.cjs.js","sources":["../../src/actions/gitHubEnvironment.examples.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description:\n      'Create a GitHub Environment (No Policies, No Variables, No Secrets)',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:environment:create',\n          name: 'Create Environment',\n          input: {\n            repoUrl: 'github.com?repo=repository&owner=owner',\n            name: 'envname',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Create a GitHub Environment with Protected Branch Policy',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:environment:create',\n          name: 'Create Environment',\n          input: {\n            repoUrl: 'github.com?repo=repository&owner=owner',\n            name: 'envname',\n            deploymentBranchPolicy: {\n              protected_branches: true,\n              custom_branch_policies: false,\n            },\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Create a GitHub Environment with Custom Branch Policies',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:environment:create',\n          name: 'Create Environment',\n          input: {\n            repoUrl: 'github.com?repo=repository&owner=owner',\n            name: 'envname',\n            deploymentBranchPolicy: {\n              protected_branches: false,\n              custom_branch_policies: true,\n            },\n            customBranchPolicyNames: ['main', '*.*.*'],\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Create a GitHub Environment with Environment Variables and Secrets',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:environment:create',\n          name: 'Create Environment',\n          input: {\n            repoUrl: 'github.com?repo=repository&owner=owner',\n            name: 'envname',\n            environmentVariables: {\n              key1: 'val1',\n              key2: 'val2',\n            },\n            secrets: {\n              secret1: 'supersecret1',\n              secret2: 'supersecret2',\n            },\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Create a GitHub Environment with Custom Tag Policies',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:environment:create',\n          name: 'Create Environment',\n          input: {\n            repoUrl: 'github.com?repo=repository&owner=owner',\n            name: 'envname',\n            customTagPolicyNames: ['release/*/*', 'v*.*.*'],\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Create a GitHub Environment with Both Branch and Tag Policies',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:environment:create',\n          name: 'Create Environment',\n          input: {\n            repoUrl: 'github.com?repo=repository&owner=owner',\n            name: 'envname',\n            deploymentBranchPolicy: {\n              protected_branches: false,\n              custom_branch_policies: true,\n            },\n            customBranchPolicyNames: ['feature/*', 'hotfix/*'],\n            customTagPolicyNames: ['release/*', 'v*'],\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Create a GitHub Environment with Full Configuration',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:environment:create',\n          name: 'Create Environment',\n          input: {\n            repoUrl: 'github.com?repo=repository&owner=owner',\n            name: 'envname',\n            deploymentBranchPolicy: {\n              protected_branches: false,\n              custom_branch_policies: true,\n            },\n            customBranchPolicyNames: ['dev/*', 'test/*'],\n            customTagPolicyNames: ['v1.*', 'v2.*'],\n            environmentVariables: {\n              API_KEY: '123456789',\n              NODE_ENV: 'production',\n            },\n            secrets: {\n              DATABASE_URL: 'supersecretdatabaseurl',\n              API_SECRET: 'supersecretapisecret',\n            },\n            token: 'ghp_abcdef1234567890',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Create a GitHub Environment with Only Token Authentication',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:environment:create',\n          name: 'Create Environment',\n          input: {\n            repoUrl: 'github.com?repo=repository&owner=owner',\n            name: 'envname',\n            token: 'ghp_abcdef1234567890',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Create a GitHub Environment with No Deployment Policies',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:environment:create',\n          name: 'Create Environment',\n          input: {\n            repoUrl: 'github.com?repo=repository&owner=owner',\n            name: 'envname',\n            deploymentBranchPolicy: null,\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Create a GitHub Environment with Custom Branch and Tag Policies',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:environment:create',\n          name: 'Create Environment',\n          input: {\n            repoUrl: 'github.com?repo=repository&owner=owner',\n            name: 'envname',\n            deploymentBranchPolicy: {\n              protected_branches: false,\n              custom_branch_policies: true,\n            },\n            customBranchPolicyNames: ['release/*', 'hotfix/*'],\n            customTagPolicyNames: ['v*', 'release-*'],\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Create a GitHub Environment with Environment Variables Only',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:environment:create',\n          name: 'Create Environment',\n          input: {\n            repoUrl: 'github.com?repo=repository&owner=owner',\n            name: 'envname',\n            environmentVariables: {\n              VAR1: 'value1',\n              VAR2: 'value2',\n            },\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Create a GitHub Environment with Deployment Secrets Only',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:environment:create',\n          name: 'Create Environment',\n          input: {\n            repoUrl: 'github.com?repo=repository&owner=owner',\n            name: 'envname',\n            secrets: {\n              SECRET1: 'secretvalue1',\n              SECRET2: 'secretvalue2',\n            },\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Create a GitHub Environment with Deployment Branch Policy and Token',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:environment:create',\n          name: 'Create Environment',\n          input: {\n            repoUrl: 'github.com?repo=repository&owner=owner',\n            name: 'envname',\n            deploymentBranchPolicy: {\n              protected_branches: true,\n              custom_branch_policies: false,\n            },\n            token: 'ghp_abcdef1234567890',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Create a GitHub Environment with Environment Variables, Secrets, and Token',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:environment:create',\n          name: 'Create Environment',\n          input: {\n            repoUrl: 'github.com?repo=repository&owner=owner',\n            name: 'envname',\n            environmentVariables: {\n              VAR1: 'value1',\n              VAR2: 'value2',\n            },\n            secrets: {\n              SECRET1: 'secretvalue1',\n              SECRET2: 'secretvalue2',\n            },\n            token: 'ghp_abcdef1234567890',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Create a GitHub Environment with Wait Timer',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:environment:create',\n          name: 'Create Environment',\n          input: {\n            repoUrl: 'github.com?repo=repository&owner=owner',\n            name: 'envname',\n            waitTimer: 1000,\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Create a GitHub Environment with Prevent Self Review',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:environment:create',\n          name: 'Create Environment',\n          input: {\n            repoUrl: 'github.com?repo=repository&owner=owner',\n            name: 'envname',\n            preventSelfReview: true,\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Create a GitHub Environment with Reviewers',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:environment:create',\n          name: 'Create Environment',\n          input: {\n            repoUrl: 'github.com?repo=repository&owner=owner',\n            name: 'envname',\n            reviewers: ['group:default/team-a', 'user:default/johndoe'],\n          },\n        },\n      ],\n    }),\n  },\n];\n"],"names":["yaml"],"mappings":"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"}