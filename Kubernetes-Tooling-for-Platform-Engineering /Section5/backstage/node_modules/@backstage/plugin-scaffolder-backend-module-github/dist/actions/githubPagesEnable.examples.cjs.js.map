{"version":3,"file":"githubPagesEnable.examples.cjs.js","sources":["../../src/actions/githubPagesEnable.examples.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description: 'Enables GitHub Pages for a repository.',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:pages',\n          id: 'github-pages',\n          name: 'Enable GitHub Pages',\n          input: {\n            repoUrl: 'github.com?repo=repo&owner=owner',\n            buildType: 'workflow',\n            sourceBranch: 'main',\n            sourcePath: '/',\n            token: 'gph_YourGitHubToken',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Enables GitHub Pages for a repository with a custom source path.',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:pages',\n          id: 'github-pages-custom-path',\n          name: 'Enable GitHub Pages with Custom Source Path',\n          input: {\n            repoUrl: 'github.com?repo=customPathRepo&owner=customOwner',\n            sourcePath: '/docs',\n            token: 'gph_YourGitHubToken',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Enables GitHub Pages for a repository using legacy build type.',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:pages',\n          id: 'github-pages-legacy',\n          name: 'Enable GitHub Pages with Legacy Build Type',\n          input: {\n            repoUrl: 'github.com?repo=legacyRepo&owner=legacyOwner',\n            buildType: 'legacy',\n            token: 'gph_YourGitHubToken',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Enables GitHub Pages for a repository with a custom source branch.',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:pages',\n          id: 'github-pages-custom-branch',\n          name: 'Enable GitHub Pages with Custom Source Branch',\n          input: {\n            repoUrl: 'github.com?repo=customBranchRepo&owner=branchOwner',\n            sourceBranch: 'develop',\n            token: 'gph_YourGitHubToken',\n          },\n        },\n      ],\n    }),\n  },\n\n  {\n    description:\n      'Enables GitHub Pages for a repository with full customization.',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:pages',\n          id: 'github-pages-full-custom',\n          name: 'Enable GitHub Pages with Full Customization',\n          input: {\n            repoUrl: 'github.com?repo=fullCustomRepo&owner=customOwner',\n            buildType: 'workflow',\n            sourceBranch: 'main',\n            sourcePath: '/docs',\n            token: 'gph_YourGitHubToken',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Enables GitHub Pages for a repository with minimal configuration.',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:pages',\n          id: 'github-pages-minimal',\n          name: 'Enable GitHub Pages with Minimal Configuration',\n          input: {\n            repoUrl: 'github.com?repo=minimalRepo&owner=minimalOwner',\n            token: 'gph_YourGitHubToken',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Enables GitHub Pages for a repository with custom build type and source path.',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:pages',\n          id: 'github-pages-custom-build-path',\n          name: 'Enable GitHub Pages with Custom Build Type and Source Path',\n          input: {\n            repoUrl: 'github.com?repo=customBuildPathRepo&owner=customOwner',\n            buildType: 'legacy',\n            sourcePath: '/custom-path',\n            token: 'gph_YourGitHubToken',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Enables GitHub Pages for a repository with custom source branch and path.',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:pages',\n          id: 'github-pages-custom-branch-path',\n          name: 'Enable GitHub Pages with Custom Source Branch and Path',\n          input: {\n            repoUrl:\n              'github.com?repo=customBranchPathRepo&owner=branchPathOwner',\n            sourceBranch: 'feature-branch',\n            sourcePath: '/project-docs',\n            token: 'gph_YourGitHubToken',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Enables GitHub Pages for a repository with a custom owner and repository name.',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:pages',\n          id: 'github-pages-custom-owner-repo',\n          name: 'Enable GitHub Pages with Custom Owner and Repository Name',\n          input: {\n            repoUrl: 'github.com?repo=customRepoName&owner=customOwnerName',\n            token: 'gph_YourGitHubToken',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Enables GitHub Pages for a repository with full customization and a different token.',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:pages',\n          id: 'github-pages-full-custom-diff-token',\n          name: 'Enable GitHub Pages with Full Customization and Different Token',\n          input: {\n            repoUrl: 'github.com?repo=customTokenRepo&owner=tokenOwner',\n            buildType: 'workflow',\n            sourceBranch: 'main',\n            sourcePath: '/site',\n            token: 'gph_DifferentGitHubToken',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Enables GitHub Pages for a repository with a specific token for authorization.',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:pages',\n          id: 'github-pages-specific-token',\n          name: 'Enable GitHub Pages with Specific Token',\n          input: {\n            repoUrl: 'github.com?repo=specificTokenRepo&owner=tokenOwner',\n            token: 'gph_SpecificGitHubToken',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Enables GitHub Pages for a documentation site with custom configuration.',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'github:pages',\n          id: 'github-pages-doc-site',\n          name: 'Enable GitHub Pages for Documentation Site',\n          input: {\n            repoUrl: 'github.com?repo=docSiteRepo&owner=docsOwner',\n            buildType: 'workflow',\n            sourceBranch: 'docs-branch',\n            sourcePath: '/docs-site',\n            token: 'gph_DocsGitHubToken',\n          },\n        },\n      ],\n    }),\n  },\n];\n"],"names":["yaml"],"mappings":"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"}