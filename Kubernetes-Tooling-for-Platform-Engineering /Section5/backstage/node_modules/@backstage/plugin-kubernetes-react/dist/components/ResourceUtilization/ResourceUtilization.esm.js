import Grid from '@material-ui/core/Grid';
import Typography from '@material-ui/core/Typography';
import React__default from 'react';
import { LinearGauge } from '@backstage/core-components';
import { currentToDeclaredResourceToPerc } from '../../utils/resources.esm.js';

const getProgressColor = ({
  palette,
  value,
  inverse,
  max
}) => {
  if (isNaN(value)) {
    return palette.status.pending;
  }
  const actualMax = max ? max : 100;
  const actualValue = inverse ? actualMax - value : value;
  if (actualValue >= actualMax) {
    return palette.status.error;
  } else if (actualValue > 90 || actualValue < 40) {
    return palette.status.warning;
  }
  return palette.status.ok;
};
const ResourceUtilization = ({
  compressed = false,
  title,
  usage,
  total,
  totalFormatted
}) => {
  const utilization = currentToDeclaredResourceToPerc(usage, total);
  return /* @__PURE__ */ React__default.createElement(Grid, { container: true, spacing: 0 }, /* @__PURE__ */ React__default.createElement(Grid, { item: true, xs: 12 }, /* @__PURE__ */ React__default.createElement(
    Typography,
    {
      variant: compressed ? "caption" : "subtitle2"
    },
    `${title}: ${totalFormatted}`
  )), /* @__PURE__ */ React__default.createElement(Grid, { item: true, xs: 12 }, /* @__PURE__ */ React__default.createElement(
    LinearGauge,
    {
      getColor: getProgressColor,
      width: compressed ? "thin" : "thick",
      value: utilization / 100
    }
  ), !compressed && /* @__PURE__ */ React__default.createElement(Typography, { variant: "caption" }, "usage: ", `${utilization}%`)));
};

export { ResourceUtilization };
//# sourceMappingURL=ResourceUtilization.esm.js.map
