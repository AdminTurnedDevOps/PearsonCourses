import React__default from 'react';
import { KubernetesStructuredMetadataTableDrawer } from '../KubernetesDrawer/KubernetesStructuredMetadataTableDrawer.esm.js';
import '../KubernetesDrawer/KubernetesDrawer.esm.js';
import '@backstage/core-components';
import '@material-ui/core/FormControlLabel';
import '@material-ui/core/Switch';
import 'js-yaml';
import { renderCondition } from '../../utils/pod.esm.js';
import Typography from '@material-ui/core/Typography';
import Grid from '@material-ui/core/Grid';
import Chip from '@material-ui/core/Chip';

const DeploymentDrawer = ({
  deployment,
  expanded
}) => {
  const namespace = deployment.metadata?.namespace;
  return /* @__PURE__ */ React__default.createElement(
    KubernetesStructuredMetadataTableDrawer,
    {
      object: deployment,
      expanded,
      kind: "Deployment",
      renderObject: (deploymentObj) => {
        const conditions = (deploymentObj.status?.conditions ?? []).map(renderCondition).reduce((accum, next) => {
          accum[next[0]] = next[1];
          return accum;
        }, {});
        return {
          strategy: deploymentObj.spec?.strategy ?? "???",
          minReadySeconds: deploymentObj.spec?.minReadySeconds ?? "???",
          progressDeadlineSeconds: deploymentObj.spec?.progressDeadlineSeconds ?? "???",
          ...conditions
        };
      }
    },
    /* @__PURE__ */ React__default.createElement(
      Grid,
      {
        container: true,
        direction: "column",
        justifyContent: "flex-start",
        alignItems: "flex-start",
        spacing: 0
      },
      /* @__PURE__ */ React__default.createElement(Grid, { item: true }, /* @__PURE__ */ React__default.createElement(Typography, { variant: "body1" }, deployment.metadata?.name ?? "unknown object")),
      /* @__PURE__ */ React__default.createElement(Grid, { item: true }, /* @__PURE__ */ React__default.createElement(Typography, { color: "textSecondary", variant: "subtitle1" }, "Deployment")),
      namespace && /* @__PURE__ */ React__default.createElement(Grid, { item: true }, /* @__PURE__ */ React__default.createElement(Chip, { size: "small", label: `namespace: ${namespace}` }))
    )
  );
};

export { DeploymentDrawer };
//# sourceMappingURL=DeploymentDrawer.esm.js.map
