{"version":3,"file":"ContainerCard.esm.js","sources":["../../../../src/components/Pods/PodDrawer/ContainerCard.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StructuredMetadataTable } from '@backstage/core-components';\nimport { ClientContainerStatus } from '@backstage/plugin-kubernetes-common';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { IContainer, IContainerStatus } from 'kubernetes-models/v1';\nimport { DateTime } from 'luxon';\nimport React from 'react';\n\nimport { useIsPodExecTerminalEnabled } from '../../../hooks';\nimport { bytesToMiB, formatMillicores } from '../../../utils/resources';\nimport { PodExecTerminalDialog } from '../../PodExecTerminal/PodExecTerminalDialog';\nimport { ResourceUtilization } from '../../ResourceUtilization';\nimport { PodLogsDialog, PodScope } from '../PodLogs';\n\nconst getContainerHealthChecks = (\n  containerSpec: IContainer,\n  containerStatus: IContainerStatus,\n): { [key: string]: boolean } => {\n  const healthCheck = {\n    'not waiting to start': containerStatus.state?.waiting === undefined,\n    'no restarts': containerStatus.restartCount === 0,\n  };\n  if (containerStatus.state?.terminated?.reason === 'Completed') {\n    return healthCheck;\n  }\n  Object.assign(\n    healthCheck,\n    { started: !!containerStatus.started },\n    { ready: containerStatus.ready },\n    { 'readiness probe set': containerSpec?.readinessProbe !== undefined },\n  );\n  if (containerSpec && containerSpec?.livenessProbe !== undefined) {\n    Object.assign(healthCheck, {\n      'liveness probe set': containerSpec.livenessProbe,\n    });\n  }\n  return healthCheck;\n};\n\nconst getCurrentState = (containerStatus: IContainerStatus): string => {\n  return (\n    containerStatus.state?.waiting?.reason ||\n    containerStatus.state?.terminated?.reason ||\n    (containerStatus.state?.running !== undefined ? 'Running' : 'Unknown')\n  );\n};\n\nconst getStartedAtTime = (\n  containerStatus: IContainerStatus,\n): string | undefined => {\n  return (\n    containerStatus.state?.running?.startedAt ||\n    containerStatus.state?.terminated?.startedAt\n  );\n};\n\ninterface ContainerDatetimeProps {\n  prefix: string;\n  dateTime: string;\n}\n\nconst ContainerDatetime = ({ prefix, dateTime }: ContainerDatetimeProps) => {\n  return (\n    <Typography variant=\"subtitle2\">\n      {prefix}:{' '}\n      {DateTime.fromISO(dateTime).toRelative({\n        locale: 'en',\n      })}\n    </Typography>\n  );\n};\n\n/**\n * Props for ContainerCard\n *\n * @public\n */\nexport interface ContainerCardProps {\n  podScope: PodScope;\n  containerSpec?: IContainer;\n  containerStatus: IContainerStatus;\n  containerMetrics?: ClientContainerStatus;\n}\n\n/**\n * Shows details about a container within a pod\n *\n * @public\n */\nexport const ContainerCard: React.FC<ContainerCardProps> = ({\n  podScope,\n  containerSpec,\n  containerStatus,\n  containerMetrics,\n}: ContainerCardProps) => {\n  const isPodExecTerminalEnabled = useIsPodExecTerminalEnabled();\n\n  // This should never be undefined\n  if (containerSpec === undefined) {\n    return <Typography>error reading pod from cluster</Typography>;\n  }\n  const containerStartedTime = getStartedAtTime(containerStatus);\n  const containerFinishedTime = containerStatus.state?.terminated?.finishedAt;\n\n  return (\n    <Card>\n      <CardHeader\n        title={containerStatus.name}\n        subheader={containerStatus.image}\n      />\n      <CardContent>\n        <Grid container>\n          <Grid item xs={12}>\n            {containerStartedTime && (\n              <ContainerDatetime\n                prefix=\"Started\"\n                dateTime={containerStartedTime}\n              />\n            )}\n            {containerFinishedTime && (\n              <ContainerDatetime\n                prefix=\"Completed\"\n                dateTime={containerFinishedTime}\n              />\n            )}\n            {containerStartedTime && containerFinishedTime && (\n              <Typography variant=\"subtitle2\">\n                Execution time:{' '}\n                {DateTime.fromISO(containerFinishedTime)\n                  .diff(DateTime.fromISO(containerStartedTime), [\n                    'hours',\n                    'minutes',\n                    'seconds',\n                  ])\n                  .toHuman()}\n              </Typography>\n            )}\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"subtitle2\">\n              Status: {getCurrentState(containerStatus)}\n            </Typography>\n          </Grid>\n          {containerStatus.restartCount > 0 && (\n            <Grid item xs={12}>\n              <Typography variant=\"subtitle2\">\n                Restarts: {containerStatus.restartCount}\n              </Typography>\n            </Grid>\n          )}\n          <Grid item xs={12}>\n            <Typography variant=\"subtitle2\">Container health</Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <StructuredMetadataTable\n              metadata={getContainerHealthChecks(\n                containerSpec,\n                containerStatus,\n              )}\n            />\n          </Grid>\n          {containerMetrics && (\n            <Grid container item xs={12} spacing={0}>\n              <Grid item xs={12}>\n                <Typography variant=\"subtitle1\">\n                  Resource utilization\n                </Typography>\n              </Grid>\n              <Grid item xs={12} style={{ minHeight: '5rem' }}>\n                <ResourceUtilization\n                  compressed\n                  title=\"CPU requests\"\n                  usage={containerMetrics.cpuUsage.currentUsage}\n                  total={containerMetrics.cpuUsage.requestTotal}\n                  totalFormatted={formatMillicores(\n                    containerMetrics.cpuUsage.requestTotal,\n                  )}\n                />\n                <ResourceUtilization\n                  compressed\n                  title=\"CPU limits\"\n                  usage={containerMetrics.cpuUsage.currentUsage}\n                  total={containerMetrics.cpuUsage.limitTotal}\n                  totalFormatted={formatMillicores(\n                    containerMetrics.cpuUsage.limitTotal,\n                  )}\n                />\n                <ResourceUtilization\n                  compressed\n                  title=\"Memory requests\"\n                  usage={containerMetrics.memoryUsage.currentUsage}\n                  total={containerMetrics.memoryUsage.requestTotal}\n                  totalFormatted={bytesToMiB(\n                    containerMetrics.memoryUsage.requestTotal,\n                  )}\n                />\n                <ResourceUtilization\n                  compressed\n                  title=\"Memory limits\"\n                  usage={containerMetrics.memoryUsage.currentUsage}\n                  total={containerMetrics.memoryUsage.limitTotal}\n                  totalFormatted={bytesToMiB(\n                    containerMetrics.memoryUsage.limitTotal,\n                  )}\n                />\n              </Grid>\n            </Grid>\n          )}\n        </Grid>\n      </CardContent>\n      <CardActions>\n        <PodLogsDialog\n          containerScope={{\n            containerName: containerStatus.name,\n            ...podScope,\n          }}\n        />\n        {isPodExecTerminalEnabled && (\n          <PodExecTerminalDialog\n            cluster={podScope.cluster}\n            containerName={containerStatus.name}\n            podName={podScope.podName}\n            podNamespace={podScope.podNamespace}\n          />\n        )}\n      </CardActions>\n    </Card>\n  );\n};\n"],"names":["React"],"mappings":"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"}