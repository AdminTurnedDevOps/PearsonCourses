import React__default, { useContext } from 'react';
import Accordion from '@material-ui/core/Accordion';
import AccordionDetails from '@material-ui/core/AccordionDetails';
import AccordionSummary from '@material-ui/core/AccordionSummary';
import Grid from '@material-ui/core/Grid';
import Typography from '@material-ui/core/Typography';
import ExpandMoreIcon from '@material-ui/icons/ExpandMore';
import '../Pods/PodDrawer/PodDrawer.esm.js';
import { StatusOK, StatusError } from '@backstage/core-components';
import '@material-ui/core/Card';
import '@material-ui/core/CardActions';
import '@material-ui/core/CardContent';
import '@material-ui/core/CardHeader';
import 'luxon';
import '@backstage/core-plugin-api';
import 'react-use/esm/useAsync';
import '../../api/types.esm.js';
import 'react-use/esm/useInterval';
import 'react-use/esm/useAsyncRetry';
import '../../kubernetes-auth-provider/types.esm.js';
import { PodNamesWithErrorsContext } from '../../hooks/PodNamesWithErrors.esm.js';
import '../../hooks/PodNamesWithMetrics.esm.js';
import { GroupedResponsesContext } from '../../hooks/GroupedResponses.esm.js';
import '../../hooks/Cluster.esm.js';
import '../../hooks/usePodMetrics.esm.js';
import '../../hooks/useMatchingErrors.esm.js';
import '@material-ui/icons/OpenInBrowser';
import '../KubernetesDialog/KubernetesDialog.esm.js';
import '../PodExecTerminal/PodExecTerminal.esm.js';
import '@material-ui/core/Paper';
import '@material-ui/lab/Skeleton';
import '@material-ui/icons/Subject';
import '@material-ui/core/List';
import '@material-ui/core/ListItem';
import '../Pods/FixDialog/FixDialog.esm.js';
import '@material-ui/core/Avatar';
import '@material-ui/core/Container';
import '@material-ui/core/ListItemAvatar';
import '@material-ui/core/ListItemText';
import '@material-ui/core/Tooltip';
import '@material-ui/icons/Info';
import '@material-ui/icons/Warning';
import '../Pods/ErrorList/ErrorList.esm.js';
import { PodsTable, READY_COLUMNS, RESOURCE_COLUMNS } from '../Pods/PodsTable.esm.js';
import { DeploymentDrawer } from './DeploymentDrawer.esm.js';
import { HorizontalPodAutoscalerDrawer } from '../HorizontalPodAutoscalers/HorizontalPodAutoscalerDrawer.esm.js';
import { getMatchingHpa, getOwnedPodsThroughReplicaSets } from '../../utils/owner.esm.js';

const DeploymentSummary = ({
  deployment,
  numberOfCurrentPods,
  numberOfPodsWithErrors,
  hpa
}) => {
  const specCpuUtil = hpa?.spec?.metrics?.find(
    (metric) => metric.type === "Resource" && metric.resource?.name === "cpu"
  )?.resource?.target.averageUtilization;
  const cpuUtil = hpa?.status?.currentMetrics?.find(
    (metric) => metric.type === "Resource" && metric.resource?.name === "cpu"
  )?.resource?.current.averageUtilization;
  return /* @__PURE__ */ React__default.createElement(
    Grid,
    {
      container: true,
      direction: "row",
      justifyContent: "space-between",
      alignItems: "center",
      spacing: 0
    },
    /* @__PURE__ */ React__default.createElement(Grid, { xs: 4, item: true }, /* @__PURE__ */ React__default.createElement(DeploymentDrawer, { deployment })),
    hpa && /* @__PURE__ */ React__default.createElement(Grid, { item: true, xs: 4 }, /* @__PURE__ */ React__default.createElement(HorizontalPodAutoscalerDrawer, { hpa }, /* @__PURE__ */ React__default.createElement(
      Grid,
      {
        item: true,
        container: true,
        direction: "column",
        justifyContent: "flex-start",
        alignItems: "flex-start",
        spacing: 0
      },
      /* @__PURE__ */ React__default.createElement(Grid, { item: true }, /* @__PURE__ */ React__default.createElement(Typography, { variant: "subtitle2" }, "min replicas ", hpa.spec?.minReplicas ?? "?", " / max replicas", " ", hpa.spec?.maxReplicas ?? "?")),
      /* @__PURE__ */ React__default.createElement(Grid, { item: true }, /* @__PURE__ */ React__default.createElement(Typography, { variant: "subtitle2" }, "current CPU usage: ", cpuUtil ?? "?", "%")),
      /* @__PURE__ */ React__default.createElement(Grid, { item: true }, /* @__PURE__ */ React__default.createElement(Typography, { variant: "subtitle2" }, "target CPU usage: ", specCpuUtil ?? "?", "%"))
    ))),
    /* @__PURE__ */ React__default.createElement(
      Grid,
      {
        item: true,
        container: true,
        xs: 4,
        direction: "column",
        justifyContent: "flex-start",
        alignItems: "flex-end",
        spacing: 0
      },
      /* @__PURE__ */ React__default.createElement(Grid, { item: true }, /* @__PURE__ */ React__default.createElement(StatusOK, null, numberOfCurrentPods, " pods")),
      /* @__PURE__ */ React__default.createElement(Grid, { item: true }, numberOfPodsWithErrors > 0 ? /* @__PURE__ */ React__default.createElement(StatusError, null, numberOfPodsWithErrors, " pod", numberOfPodsWithErrors > 1 ? "s" : "", " with errors") : /* @__PURE__ */ React__default.createElement(StatusOK, null, "No pods with errors"))
    )
  );
};
const DeploymentAccordion = ({
  deployment,
  ownedPods,
  matchingHpa
}) => {
  const podNamesWithErrors = useContext(PodNamesWithErrorsContext);
  const podsWithErrors = ownedPods.filter(
    (p) => podNamesWithErrors.has(p.metadata?.name ?? "")
  );
  return /* @__PURE__ */ React__default.createElement(Accordion, { TransitionProps: { unmountOnExit: true }, variant: "outlined" }, /* @__PURE__ */ React__default.createElement(AccordionSummary, { expandIcon: /* @__PURE__ */ React__default.createElement(ExpandMoreIcon, null) }, /* @__PURE__ */ React__default.createElement(
    DeploymentSummary,
    {
      deployment,
      numberOfCurrentPods: ownedPods.length,
      numberOfPodsWithErrors: podsWithErrors.length,
      hpa: matchingHpa
    }
  )), /* @__PURE__ */ React__default.createElement(AccordionDetails, null, /* @__PURE__ */ React__default.createElement(
    PodsTable,
    {
      pods: ownedPods,
      extraColumns: [READY_COLUMNS, RESOURCE_COLUMNS]
    }
  )));
};
const DeploymentsAccordions = ({}) => {
  const groupedResponses = useContext(GroupedResponsesContext);
  return /* @__PURE__ */ React__default.createElement(
    Grid,
    {
      container: true,
      direction: "column",
      justifyContent: "flex-start",
      alignItems: "flex-start"
    },
    groupedResponses.deployments.map((deployment, i) => /* @__PURE__ */ React__default.createElement(Grid, { container: true, item: true, key: i, xs: true }, /* @__PURE__ */ React__default.createElement(Grid, { item: true, xs: true }, /* @__PURE__ */ React__default.createElement(
      DeploymentAccordion,
      {
        matchingHpa: getMatchingHpa(
          {
            name: deployment.metadata?.name,
            namespace: deployment.metadata?.namespace,
            kind: "deployment"
          },
          groupedResponses.horizontalPodAutoscalers
        ),
        ownedPods: getOwnedPodsThroughReplicaSets(
          deployment,
          groupedResponses.replicaSets,
          groupedResponses.pods
        ),
        deployment
      }
    ))))
  );
};

export { DeploymentsAccordions };
//# sourceMappingURL=DeploymentsAccordions.esm.js.map
