{"version":3,"file":"ErrorReporting.esm.js","sources":["../../../src/components/ErrorReporting/ErrorReporting.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as React from 'react';\nimport {\n  ClusterAttributes,\n  DetectedError,\n  DetectedErrorsByCluster,\n} from '@backstage/plugin-kubernetes-common';\nimport { Table, TableColumn } from '@backstage/core-components';\n\n/**\n *\n *\n * @public\n */\nexport type ErrorReportingProps = {\n  detectedErrors: DetectedErrorsByCluster;\n  clusters: ClusterAttributes[];\n};\n\nconst columns: TableColumn<Row>[] = [\n  {\n    title: 'cluster',\n    width: '10%',\n    render: (row: Row) => row.cluster.title || row.cluster.name,\n  },\n  {\n    title: 'namespace',\n    width: '10%',\n    render: (row: Row) => row.error.sourceRef.namespace,\n  },\n  {\n    title: 'kind',\n    width: '10%',\n    render: (row: Row) => row.error.sourceRef.kind,\n  },\n  {\n    title: 'name',\n    width: '30%',\n    render: (row: Row) => {\n      return <>{row.error.sourceRef.name} </>;\n    },\n  },\n  {\n    title: 'messages',\n    width: '40%',\n    render: (row: Row) => row.error.message,\n  },\n];\n\ninterface Row {\n  cluster: ClusterAttributes;\n  error: DetectedError;\n}\n\nconst sortBySeverity = (a: Row, b: Row) => {\n  if (a.error.severity < b.error.severity) {\n    return 1;\n  } else if (b.error.severity < a.error.severity) {\n    return -1;\n  }\n  return 0;\n};\n\n/**\n *\n *\n * @public\n */\nexport const ErrorReporting = ({\n  detectedErrors,\n  clusters,\n}: ErrorReportingProps) => {\n  const errors = Array.from(detectedErrors.entries())\n    .flatMap(([clusterName, resourceErrors]) => {\n      return resourceErrors.map(e => ({\n        cluster: clusters.find(c => c.name === clusterName)!,\n        error: e,\n      }));\n    })\n    .sort(sortBySeverity);\n\n  return (\n    <>\n      {errors.length !== 0 && (\n        <Table\n          title=\"Error Reporting\"\n          data={errors}\n          columns={columns}\n          options={{ paging: true, search: false, emptyRowsWhenPaging: false }}\n        />\n      )}\n    </>\n  );\n};\n"],"names":[],"mappings":";;;AAiCA,MAAM,OAA8B,GAAA;AAAA,EAClC;AAAA,IACE,KAAO,EAAA,SAAA;AAAA,IACP,KAAO,EAAA,KAAA;AAAA,IACP,QAAQ,CAAC,GAAA,KAAa,IAAI,OAAQ,CAAA,KAAA,IAAS,IAAI,OAAQ,CAAA;AAAA,GACzD;AAAA,EACA;AAAA,IACE,KAAO,EAAA,WAAA;AAAA,IACP,KAAO,EAAA,KAAA;AAAA,IACP,MAAQ,EAAA,CAAC,GAAa,KAAA,GAAA,CAAI,MAAM,SAAU,CAAA;AAAA,GAC5C;AAAA,EACA;AAAA,IACE,KAAO,EAAA,MAAA;AAAA,IACP,KAAO,EAAA,KAAA;AAAA,IACP,MAAQ,EAAA,CAAC,GAAa,KAAA,GAAA,CAAI,MAAM,SAAU,CAAA;AAAA,GAC5C;AAAA,EACA;AAAA,IACE,KAAO,EAAA,MAAA;AAAA,IACP,KAAO,EAAA,KAAA;AAAA,IACP,MAAA,EAAQ,CAAC,GAAa,KAAA;AACpB,MAAA,uBAAU,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAA,GAAA,CAAI,KAAM,CAAA,SAAA,CAAU,MAAK,GAAC,CAAA;AAAA;AACtC,GACF;AAAA,EACA;AAAA,IACE,KAAO,EAAA,UAAA;AAAA,IACP,KAAO,EAAA,KAAA;AAAA,IACP,MAAQ,EAAA,CAAC,GAAa,KAAA,GAAA,CAAI,KAAM,CAAA;AAAA;AAEpC,CAAA;AAOA,MAAM,cAAA,GAAiB,CAAC,CAAA,EAAQ,CAAW,KAAA;AACzC,EAAA,IAAI,CAAE,CAAA,KAAA,CAAM,QAAW,GAAA,CAAA,CAAE,MAAM,QAAU,EAAA;AACvC,IAAO,OAAA,CAAA;AAAA,aACE,CAAE,CAAA,KAAA,CAAM,QAAW,GAAA,CAAA,CAAE,MAAM,QAAU,EAAA;AAC9C,IAAO,OAAA,CAAA,CAAA;AAAA;AAET,EAAO,OAAA,CAAA;AACT,CAAA;AAOO,MAAM,iBAAiB,CAAC;AAAA,EAC7B,cAAA;AAAA,EACA;AACF,CAA2B,KAAA;AACzB,EAAA,MAAM,MAAS,GAAA,KAAA,CAAM,IAAK,CAAA,cAAA,CAAe,OAAQ,EAAC,CAC/C,CAAA,OAAA,CAAQ,CAAC,CAAC,WAAa,EAAA,cAAc,CAAM,KAAA;AAC1C,IAAO,OAAA,cAAA,CAAe,IAAI,CAAM,CAAA,MAAA;AAAA,MAC9B,SAAS,QAAS,CAAA,IAAA,CAAK,CAAK,CAAA,KAAA,CAAA,CAAE,SAAS,WAAW,CAAA;AAAA,MAClD,KAAO,EAAA;AAAA,KACP,CAAA,CAAA;AAAA,GACH,CACA,CAAA,IAAA,CAAK,cAAc,CAAA;AAEtB,EACE,uBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACG,MAAO,CAAA,MAAA,KAAW,CACjB,oBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,KAAA;AAAA,IAAA;AAAA,MACC,KAAM,EAAA,iBAAA;AAAA,MACN,IAAM,EAAA,MAAA;AAAA,MACN,OAAA;AAAA,MACA,SAAS,EAAE,MAAA,EAAQ,MAAM,MAAQ,EAAA,KAAA,EAAO,qBAAqB,KAAM;AAAA;AAAA,GAGzE,CAAA;AAEJ;;;;"}