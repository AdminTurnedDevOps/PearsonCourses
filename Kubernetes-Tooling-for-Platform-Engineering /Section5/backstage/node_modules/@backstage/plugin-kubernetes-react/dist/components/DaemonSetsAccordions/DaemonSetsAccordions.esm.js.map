{"version":3,"file":"DaemonSetsAccordions.esm.js","sources":["../../../src/components/DaemonSetsAccordions/DaemonSetsAccordions.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useContext } from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Grid from '@material-ui/core/Grid';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { V1Pod, V1DaemonSet } from '@kubernetes/client-node';\nimport { PodsTable } from '../Pods';\nimport { DaemonSetDrawer } from './DaemonSetsDrawer';\nimport { getOwnedResources } from '../../utils/owner';\nimport {\n  GroupedResponsesContext,\n  PodNamesWithErrorsContext,\n} from '../../hooks';\nimport { StatusError, StatusOK } from '@backstage/core-components';\nimport { READY_COLUMNS, RESOURCE_COLUMNS } from '../Pods/PodsTable';\n\ntype DaemonSetsAccordionsProps = {\n  children?: React.ReactNode;\n};\n\ntype DaemonSetAccordionProps = {\n  daemonset: V1DaemonSet;\n  ownedPods: V1Pod[];\n  children?: React.ReactNode;\n};\n\ntype DaemonSetSummaryProps = {\n  daemonset: V1DaemonSet;\n  numberOfCurrentPods: number;\n  numberOfPodsWithErrors: number;\n  children?: React.ReactNode;\n};\n\nconst DaemonSetSummary = ({\n  daemonset,\n  numberOfCurrentPods,\n  numberOfPodsWithErrors,\n}: DaemonSetSummaryProps) => {\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      spacing={0}\n    >\n      <Grid xs={4} item>\n        <DaemonSetDrawer daemonset={daemonset} />\n      </Grid>\n      <Grid\n        item\n        container\n        xs={4}\n        direction=\"column\"\n        justifyContent=\"flex-start\"\n        alignItems=\"flex-end\"\n        spacing={0}\n      >\n        <Grid item>\n          <StatusOK>{numberOfCurrentPods} pods</StatusOK>\n        </Grid>\n        <Grid item>\n          {numberOfPodsWithErrors > 0 ? (\n            <StatusError>\n              {numberOfPodsWithErrors} pod\n              {numberOfPodsWithErrors > 1 ? 's' : ''} with errors\n            </StatusError>\n          ) : (\n            <StatusOK>No pods with errors</StatusOK>\n          )}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst DaemonSetAccordion = ({\n  daemonset,\n  ownedPods,\n}: DaemonSetAccordionProps) => {\n  const podNamesWithErrors = useContext(PodNamesWithErrorsContext);\n\n  const podsWithErrors = ownedPods.filter(p =>\n    podNamesWithErrors.has(p.metadata?.name ?? ''),\n  );\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }} variant=\"outlined\">\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <DaemonSetSummary\n          daemonset={daemonset}\n          numberOfCurrentPods={ownedPods.length}\n          numberOfPodsWithErrors={podsWithErrors.length}\n        />\n      </AccordionSummary>\n      <AccordionDetails>\n        <PodsTable\n          pods={ownedPods}\n          extraColumns={[READY_COLUMNS, RESOURCE_COLUMNS]}\n        />\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n\nexport const DaemonSetsAccordions = ({}: DaemonSetsAccordionsProps) => {\n  const groupedResponses = useContext(GroupedResponsesContext);\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justifyContent=\"flex-start\"\n      alignItems=\"flex-start\"\n    >\n      {groupedResponses.daemonSets.map((daemonset, i) => (\n        <Grid container item key={i} xs>\n          <Grid item xs>\n            <DaemonSetAccordion\n              ownedPods={getOwnedResources(daemonset, groupedResponses.pods)}\n              daemonset={daemonset}\n            />\n          </Grid>\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n"],"names":["React"],"mappings":"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"}