{"version":3,"file":"StatefulSetsAccordions.esm.js","sources":["../../../src/components/StatefulSetsAccordions/StatefulSetsAccordions.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useContext } from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {\n  V1Pod,\n  V2HorizontalPodAutoscaler,\n  V1StatefulSet,\n} from '@kubernetes/client-node';\nimport { PodsTable } from '../Pods';\nimport { StatefulSetDrawer } from './StatefulSetDrawer';\nimport { HorizontalPodAutoscalerDrawer } from '../HorizontalPodAutoscalers';\nimport { getMatchingHpa, getOwnedResources } from '../../utils/owner';\nimport {\n  GroupedResponsesContext,\n  PodNamesWithErrorsContext,\n} from '../../hooks';\nimport { StatusError, StatusOK } from '@backstage/core-components';\nimport { READY_COLUMNS, RESOURCE_COLUMNS } from '../Pods/PodsTable';\n\ntype StatefulSetsAccordionsProps = {\n  children?: React.ReactNode;\n};\n\ntype StatefulSetAccordionProps = {\n  statefulset: V1StatefulSet;\n  ownedPods: V1Pod[];\n  matchingHpa?: V2HorizontalPodAutoscaler;\n  children?: React.ReactNode;\n};\n\ntype StatefulSetSummaryProps = {\n  statefulset: V1StatefulSet;\n  numberOfCurrentPods: number;\n  numberOfPodsWithErrors: number;\n  hpa?: V2HorizontalPodAutoscaler;\n  children?: React.ReactNode;\n};\n\nconst StatefulSetSummary = ({\n  statefulset,\n  numberOfCurrentPods,\n  numberOfPodsWithErrors,\n  hpa,\n}: StatefulSetSummaryProps) => {\n  const specCpuUtil = hpa?.spec?.metrics?.find(\n    metric => metric.type === 'Resource' && metric.resource?.name === 'cpu',\n  )?.resource?.target.averageUtilization;\n\n  const cpuUtil = hpa?.status?.currentMetrics?.find(\n    metric => metric.type === 'Resource' && metric.resource?.name === 'cpu',\n  )?.resource?.current.averageUtilization;\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      spacing={0}\n    >\n      <Grid xs={6} item>\n        <StatefulSetDrawer statefulset={statefulset} />\n      </Grid>\n      {hpa && (\n        <Grid item xs={3}>\n          <HorizontalPodAutoscalerDrawer hpa={hpa}>\n            <Grid\n              item\n              container\n              direction=\"column\"\n              justifyContent=\"flex-start\"\n              alignItems=\"flex-start\"\n              spacing={0}\n            >\n              <Grid item>\n                <Typography variant=\"subtitle2\">\n                  min replicas {hpa.spec?.minReplicas ?? '?'} / max replicas{' '}\n                  {hpa.spec?.maxReplicas ?? '?'}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"subtitle2\">\n                  current CPU usage: {cpuUtil ?? '?'}%\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"subtitle2\">\n                  target CPU usage: {specCpuUtil ?? '?'}%\n                </Typography>\n              </Grid>\n            </Grid>\n          </HorizontalPodAutoscalerDrawer>\n        </Grid>\n      )}\n      <Grid\n        item\n        container\n        xs={3}\n        direction=\"column\"\n        justifyContent=\"flex-start\"\n        alignItems=\"flex-start\"\n        spacing={0}\n      >\n        <Grid item>\n          <StatusOK>{numberOfCurrentPods} pods</StatusOK>\n        </Grid>\n        <Grid item>\n          {numberOfPodsWithErrors > 0 ? (\n            <StatusError>\n              {numberOfPodsWithErrors} pod\n              {numberOfPodsWithErrors > 1 ? 's' : ''} with errors\n            </StatusError>\n          ) : (\n            <StatusOK>No pods with errors</StatusOK>\n          )}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst StatefulSetAccordion = ({\n  statefulset,\n  ownedPods,\n  matchingHpa,\n}: StatefulSetAccordionProps) => {\n  const podNamesWithErrors = useContext(PodNamesWithErrorsContext);\n\n  const podsWithErrors = ownedPods.filter(p =>\n    podNamesWithErrors.has(p.metadata?.name ?? ''),\n  );\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }} variant=\"outlined\">\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <StatefulSetSummary\n          statefulset={statefulset}\n          numberOfCurrentPods={ownedPods.length}\n          numberOfPodsWithErrors={podsWithErrors.length}\n          hpa={matchingHpa}\n        />\n      </AccordionSummary>\n      <AccordionDetails>\n        <PodsTable\n          pods={ownedPods}\n          extraColumns={[READY_COLUMNS, RESOURCE_COLUMNS]}\n        />\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n\nexport const StatefulSetsAccordions = ({}: StatefulSetsAccordionsProps) => {\n  const groupedResponses = useContext(GroupedResponsesContext);\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justifyContent=\"flex-start\"\n      alignItems=\"flex-start\"\n    >\n      {groupedResponses.statefulsets.map((statefulset, i) => (\n        <Grid container item key={i} xs>\n          <Grid item xs>\n            <StatefulSetAccordion\n              matchingHpa={getMatchingHpa(\n                {\n                  name: statefulset.metadata?.name,\n                  namespace: statefulset.metadata?.namespace,\n                  kind: 'statefulset',\n                },\n                groupedResponses.horizontalPodAutoscalers,\n              )}\n              ownedPods={getOwnedResources(statefulset, groupedResponses.pods)}\n              statefulset={statefulset}\n            />\n          </Grid>\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n"],"names":["React"],"mappings":"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"}