import React__default, { useContext } from 'react';
import Accordion from '@material-ui/core/Accordion';
import AccordionDetails from '@material-ui/core/AccordionDetails';
import AccordionSummary from '@material-ui/core/AccordionSummary';
import Grid from '@material-ui/core/Grid';
import ExpandMoreIcon from '@material-ui/icons/ExpandMore';
import '../Pods/PodDrawer/PodDrawer.esm.js';
import { StatusOK, StatusPending, StatusError } from '@backstage/core-components';
import '@material-ui/core/Card';
import '@material-ui/core/CardActions';
import '@material-ui/core/CardContent';
import '@material-ui/core/CardHeader';
import '@material-ui/core/Typography';
import 'luxon';
import '@backstage/core-plugin-api';
import 'react-use/esm/useAsync';
import '../../api/types.esm.js';
import 'react-use/esm/useInterval';
import 'react-use/esm/useAsyncRetry';
import '../../kubernetes-auth-provider/types.esm.js';
import '../../hooks/PodNamesWithErrors.esm.js';
import '../../hooks/PodNamesWithMetrics.esm.js';
import { GroupedResponsesContext } from '../../hooks/GroupedResponses.esm.js';
import '../../hooks/Cluster.esm.js';
import '../../hooks/usePodMetrics.esm.js';
import '../../hooks/useMatchingErrors.esm.js';
import '@material-ui/icons/OpenInBrowser';
import '../KubernetesDialog/KubernetesDialog.esm.js';
import '../PodExecTerminal/PodExecTerminal.esm.js';
import '@material-ui/core/Paper';
import '@material-ui/lab/Skeleton';
import '@material-ui/icons/Subject';
import '@material-ui/core/List';
import '@material-ui/core/ListItem';
import '../Pods/FixDialog/FixDialog.esm.js';
import '@material-ui/core/Avatar';
import '@material-ui/core/Container';
import '@material-ui/core/ListItemAvatar';
import '@material-ui/core/ListItemText';
import '@material-ui/core/Tooltip';
import '@material-ui/icons/Info';
import '@material-ui/icons/Warning';
import '../Pods/ErrorList/ErrorList.esm.js';
import { PodsTable } from '../Pods/PodsTable.esm.js';
import { JobDrawer } from './JobsDrawer.esm.js';
import { getOwnedResources } from '../../utils/owner.esm.js';

const JobSummary = ({ job }) => {
  return /* @__PURE__ */ React__default.createElement(
    Grid,
    {
      container: true,
      direction: "row",
      justifyContent: "space-between",
      alignItems: "center",
      spacing: 0
    },
    /* @__PURE__ */ React__default.createElement(Grid, { xs: 6, item: true }, /* @__PURE__ */ React__default.createElement(JobDrawer, { job })),
    /* @__PURE__ */ React__default.createElement(
      Grid,
      {
        item: true,
        container: true,
        xs: 6,
        direction: "column",
        justifyContent: "flex-start",
        alignItems: "flex-end",
        spacing: 0
      },
      /* @__PURE__ */ React__default.createElement(Grid, { item: true }, job.status?.succeeded && /* @__PURE__ */ React__default.createElement(StatusOK, null, "Succeeded"), job.status?.active && /* @__PURE__ */ React__default.createElement(StatusPending, null, "Running"), job.status?.failed && /* @__PURE__ */ React__default.createElement(StatusError, null, "Failed")),
      /* @__PURE__ */ React__default.createElement(Grid, { item: true }, "Start time: ", job.status?.startTime?.toString()),
      job.status?.completionTime && /* @__PURE__ */ React__default.createElement(Grid, { item: true }, "Completion time: ", job.status.completionTime.toString())
    )
  );
};
const JobAccordion = ({ job, ownedPods }) => {
  return /* @__PURE__ */ React__default.createElement(Accordion, { TransitionProps: { unmountOnExit: true }, variant: "outlined" }, /* @__PURE__ */ React__default.createElement(AccordionSummary, { expandIcon: /* @__PURE__ */ React__default.createElement(ExpandMoreIcon, null) }, /* @__PURE__ */ React__default.createElement(JobSummary, { job })), /* @__PURE__ */ React__default.createElement(AccordionDetails, null, /* @__PURE__ */ React__default.createElement(PodsTable, { pods: ownedPods })));
};
const JobsAccordions = ({ jobs }) => {
  const groupedResponses = useContext(GroupedResponsesContext);
  return /* @__PURE__ */ React__default.createElement(
    Grid,
    {
      container: true,
      direction: "column",
      justifyContent: "flex-start",
      alignItems: "flex-start"
    },
    jobs.map((job, i) => /* @__PURE__ */ React__default.createElement(Grid, { container: true, item: true, key: i, xs: true }, /* @__PURE__ */ React__default.createElement(Grid, { item: true, xs: true }, /* @__PURE__ */ React__default.createElement(
      JobAccordion,
      {
        ownedPods: getOwnedResources(job, groupedResponses.pods),
        job
      }
    ))))
  );
};

export { JobsAccordions };
//# sourceMappingURL=JobsAccordions.esm.js.map
