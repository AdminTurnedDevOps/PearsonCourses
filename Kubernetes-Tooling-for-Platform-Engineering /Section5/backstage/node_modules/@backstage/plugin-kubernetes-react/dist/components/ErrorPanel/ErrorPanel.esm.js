import React__default from 'react';
import Typography from '@material-ui/core/Typography';
import { WarningPanel } from '@backstage/core-components';

const clustersWithErrorsToErrorMessage = (clustersWithErrors) => {
  return clustersWithErrors.map((c, i) => {
    return /* @__PURE__ */ React__default.createElement("div", { key: i }, /* @__PURE__ */ React__default.createElement(Typography, { variant: "body2" }, `Cluster: ${c.cluster.title || c.cluster.name}`), c.errors.map((e, j) => {
      return /* @__PURE__ */ React__default.createElement(Typography, { variant: "body2", key: j }, e.errorType === "FETCH_ERROR" ? `Error communicating with Kubernetes: ${e.errorType}, message: ${e.message}` : `Error fetching Kubernetes resource: '${e.resourcePath}', error: ${e.errorType}, status code: ${e.statusCode}`);
    }), /* @__PURE__ */ React__default.createElement("br", null));
  });
};
const ErrorPanel = ({
  entityName,
  errorMessage,
  clustersWithErrors
}) => /* @__PURE__ */ React__default.createElement(
  WarningPanel,
  {
    title: "There was a problem retrieving Kubernetes objects",
    message: `There was a problem retrieving some Kubernetes resources for the entity: ${entityName}. This could mean that the Error Reporting card is not completely accurate.`
  },
  clustersWithErrors && /* @__PURE__ */ React__default.createElement("div", null, "Errors: ", clustersWithErrorsToErrorMessage(clustersWithErrors)),
  errorMessage && /* @__PURE__ */ React__default.createElement(Typography, { variant: "body2" }, "Errors: ", errorMessage)
);

export { ErrorPanel };
//# sourceMappingURL=ErrorPanel.esm.js.map
