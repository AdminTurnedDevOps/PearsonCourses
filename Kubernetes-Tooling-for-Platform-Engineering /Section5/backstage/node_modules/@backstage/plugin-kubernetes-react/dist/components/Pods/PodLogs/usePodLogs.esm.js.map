{"version":3,"file":"usePodLogs.esm.js","sources":["../../../../src/components/Pods/PodLogs/usePodLogs.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport useAsync from 'react-use/esm/useAsync';\n\nimport { ContainerScope } from './types';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { kubernetesProxyApiRef } from '../../../api/types';\n\n/**\n * Arguments for usePodLogs\n *\n * @public\n */\nexport interface PodLogsOptions {\n  containerScope: ContainerScope;\n  previous?: boolean;\n}\n\n/**\n * Retrieves the logs for the given pod\n *\n * @public\n */\nexport const usePodLogs = ({ containerScope, previous }: PodLogsOptions) => {\n  const kubernetesProxyApi = useApi(kubernetesProxyApiRef);\n  return useAsync(async () => {\n    return await kubernetesProxyApi.getPodLogs({\n      podName: containerScope.podName,\n      namespace: containerScope.podNamespace,\n      containerName: containerScope.containerName,\n      clusterName: containerScope.cluster.name,\n      previous,\n    });\n  }, [JSON.stringify(containerScope)]);\n};\n"],"names":[],"mappings":";;;;AAoCO,MAAM,UAAa,GAAA,CAAC,EAAE,cAAA,EAAgB,UAA+B,KAAA;AAC1E,EAAM,MAAA,kBAAA,GAAqB,OAAO,qBAAqB,CAAA;AACvD,EAAA,OAAO,SAAS,YAAY;AAC1B,IAAO,OAAA,MAAM,mBAAmB,UAAW,CAAA;AAAA,MACzC,SAAS,cAAe,CAAA,OAAA;AAAA,MACxB,WAAW,cAAe,CAAA,YAAA;AAAA,MAC1B,eAAe,cAAe,CAAA,aAAA;AAAA,MAC9B,WAAA,EAAa,eAAe,OAAQ,CAAA,IAAA;AAAA,MACpC;AAAA,KACD,CAAA;AAAA,KACA,CAAC,IAAA,CAAK,SAAU,CAAA,cAAc,CAAC,CAAC,CAAA;AACrC;;;;"}