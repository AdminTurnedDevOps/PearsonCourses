import React__default, { useContext } from 'react';
import Accordion from '@material-ui/core/Accordion';
import AccordionDetails from '@material-ui/core/AccordionDetails';
import AccordionSummary from '@material-ui/core/AccordionSummary';
import Grid from '@material-ui/core/Grid';
import Typography from '@material-ui/core/Typography';
import ExpandMoreIcon from '@material-ui/icons/ExpandMore';
import { ServiceDrawer } from './ServiceDrawer.esm.js';
import '@backstage/core-plugin-api';
import 'react-use/esm/useAsync';
import '../../api/types.esm.js';
import 'react-use/esm/useInterval';
import 'react-use/esm/useAsyncRetry';
import '../../kubernetes-auth-provider/types.esm.js';
import '../../hooks/PodNamesWithErrors.esm.js';
import '../../hooks/PodNamesWithMetrics.esm.js';
import { GroupedResponsesContext } from '../../hooks/GroupedResponses.esm.js';
import '../../hooks/Cluster.esm.js';
import '../../hooks/usePodMetrics.esm.js';
import '../../hooks/useMatchingErrors.esm.js';
import { StructuredMetadataTable } from '@backstage/core-components';

const ServiceSummary = ({ service }) => {
  return /* @__PURE__ */ React__default.createElement(
    Grid,
    {
      container: true,
      direction: "row",
      justifyContent: "space-between",
      alignItems: "center",
      spacing: 0
    },
    /* @__PURE__ */ React__default.createElement(Grid, { xs: 8, item: true }, /* @__PURE__ */ React__default.createElement(ServiceDrawer, { service })),
    /* @__PURE__ */ React__default.createElement(Grid, { item: true }, /* @__PURE__ */ React__default.createElement(Typography, { variant: "subtitle2" }, "Type: ", service.spec?.type ?? "?"))
  );
};
const ServiceCard = ({ service }) => {
  const metadata = {};
  if (service.status?.loadBalancer?.ingress?.length ?? -1 > 0) {
    metadata.loadbalancer = service.status?.loadBalancer;
  }
  if (service.spec?.type === "ClusterIP") {
    metadata.clusterIP = service.spec.clusterIP;
  }
  if (service.spec?.type === "ExternalName") {
    metadata.externalName = service.spec.externalName;
  }
  return /* @__PURE__ */ React__default.createElement(
    StructuredMetadataTable,
    {
      metadata: {
        type: service.spec?.type,
        ports: service.spec?.ports,
        ...metadata
      }
    }
  );
};
const ServiceAccordion = ({ service }) => {
  return /* @__PURE__ */ React__default.createElement(Accordion, { TransitionProps: { unmountOnExit: true }, variant: "outlined" }, /* @__PURE__ */ React__default.createElement(AccordionSummary, { expandIcon: /* @__PURE__ */ React__default.createElement(ExpandMoreIcon, null) }, /* @__PURE__ */ React__default.createElement(ServiceSummary, { service })), /* @__PURE__ */ React__default.createElement(AccordionDetails, null, /* @__PURE__ */ React__default.createElement(ServiceCard, { service })));
};
const ServicesAccordions = ({}) => {
  const groupedResponses = useContext(GroupedResponsesContext);
  return /* @__PURE__ */ React__default.createElement(
    Grid,
    {
      container: true,
      direction: "row",
      justifyContent: "flex-start",
      alignItems: "flex-start"
    },
    groupedResponses.services.map((service, i) => /* @__PURE__ */ React__default.createElement(Grid, { item: true, key: i, xs: true }, /* @__PURE__ */ React__default.createElement(ServiceAccordion, { service })))
  );
};

export { ServicesAccordions };
//# sourceMappingURL=ServicesAccordions.esm.js.map
