{"version":3,"file":"Rollout.esm.js","sources":["../../../../src/components/CustomResources/ArgoRollouts/Rollout.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useContext } from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { V1Pod, V2HorizontalPodAutoscaler } from '@kubernetes/client-node';\nimport { PodsTable } from '../../Pods';\nimport { HorizontalPodAutoscalerDrawer } from '../../HorizontalPodAutoscalers';\nimport { RolloutDrawer } from './RolloutDrawer';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport { DateTime } from 'luxon';\nimport { StepsProgress } from './StepsProgress';\nimport {\n  PodNamesWithErrorsContext,\n  GroupedResponsesContext,\n} from '../../../hooks';\nimport {\n  getMatchingHpa,\n  getOwnedPodsThroughReplicaSets,\n} from '../../../utils/owner';\nimport { StatusError, StatusOK } from '@backstage/core-components';\nimport { READY_COLUMNS, RESOURCE_COLUMNS } from '../../Pods/PodsTable';\n\ntype RolloutAccordionsProps = {\n  rollouts: any[];\n  defaultExpanded?: boolean;\n  children?: React.ReactNode;\n};\n\ntype RolloutAccordionProps = {\n  rollout: any;\n  ownedPods: V1Pod[];\n  defaultExpanded?: boolean;\n  matchingHpa?: V2HorizontalPodAutoscaler;\n  children?: React.ReactNode;\n};\n\ntype RolloutSummaryProps = {\n  rollout: any;\n  numberOfCurrentPods: number;\n  numberOfPodsWithErrors: number;\n  hpa?: V2HorizontalPodAutoscaler;\n  children?: React.ReactNode;\n};\n\nconst AbortedTitle = (\n  <div\n    style={{\n      display: 'flex',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n    }}\n  >\n    <ErrorOutlineIcon />\n    <Typography variant=\"subtitle1\">Aborted</Typography>\n  </div>\n);\n\nconst findAbortedMessage = (rollout: any): string | undefined =>\n  rollout.status?.conditions?.find(\n    (c: any) =>\n      c.type === 'Progressing' &&\n      c.status === 'False' &&\n      c.reason === 'RolloutAborted',\n  )?.message;\n\nconst RolloutSummary = ({\n  rollout,\n  numberOfCurrentPods,\n  numberOfPodsWithErrors,\n  hpa,\n}: RolloutSummaryProps) => {\n  const pauseTime: string | undefined = rollout.status?.pauseConditions?.find(\n    (p: any) => p.reason === 'CanaryPauseStep',\n  )?.startTime;\n  const abortedMessage = findAbortedMessage(rollout);\n  const specCpuUtil = hpa?.spec?.metrics?.find(\n    metric => metric.type === 'Resource' && metric.resource?.name === 'cpu',\n  )?.resource?.target.averageUtilization;\n\n  const cpuUtil = hpa?.status?.currentMetrics?.find(\n    metric => metric.type === 'Resource' && metric.resource?.name === 'cpu',\n  )?.resource?.current.averageUtilization;\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      spacing={0}\n    >\n      <Grid xs={6} item>\n        <RolloutDrawer rollout={rollout} />\n      </Grid>\n      {hpa && (\n        <Grid item xs={3}>\n          <HorizontalPodAutoscalerDrawer hpa={hpa}>\n            <Grid\n              item\n              container\n              direction=\"column\"\n              justifyContent=\"flex-start\"\n              alignItems=\"flex-start\"\n              spacing={0}\n            >\n              <Grid item>\n                <Typography variant=\"subtitle2\">\n                  min replicas {hpa.spec?.minReplicas ?? '?'} / max replicas{' '}\n                  {hpa.spec?.maxReplicas ?? '?'}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"subtitle2\">\n                  current CPU usage: {cpuUtil ?? '?'}%\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"subtitle2\">\n                  target CPU usage: {specCpuUtil ?? '?'}%\n                </Typography>\n              </Grid>\n            </Grid>\n          </HorizontalPodAutoscalerDrawer>\n        </Grid>\n      )}\n      <Grid\n        item\n        container\n        xs={3}\n        direction=\"column\"\n        justifyContent=\"flex-start\"\n        alignItems=\"flex-end\"\n        spacing={0}\n      >\n        <Grid item>\n          <StatusOK>{numberOfCurrentPods} pods</StatusOK>\n        </Grid>\n        <Grid item>\n          {numberOfPodsWithErrors > 0 ? (\n            <StatusError>\n              {numberOfPodsWithErrors} pod\n              {numberOfPodsWithErrors > 1 ? 's' : ''} with errors\n            </StatusError>\n          ) : (\n            <StatusOK>No pods with errors</StatusOK>\n          )}\n        </Grid>\n      </Grid>\n      {pauseTime && (\n        <Grid item xs={3}>\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              flexWrap: 'wrap',\n            }}\n          >\n            <PauseIcon />\n            <Typography variant=\"subtitle1\">\n              Paused ({DateTime.fromISO(pauseTime).toRelative({ locale: 'en' })}\n              )\n            </Typography>\n          </div>\n        </Grid>\n      )}\n      {abortedMessage && (\n        <Grid item xs={3}>\n          {AbortedTitle}\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nconst RolloutAccordion = ({\n  rollout,\n  ownedPods,\n  matchingHpa,\n  defaultExpanded,\n}: RolloutAccordionProps) => {\n  const podNamesWithErrors = useContext(PodNamesWithErrorsContext);\n\n  const podsWithErrors = ownedPods.filter(p =>\n    podNamesWithErrors.has(p.metadata?.name ?? ''),\n  );\n\n  const currentStepIndex = rollout.status?.currentStepIndex ?? 0;\n  const abortedMessage = findAbortedMessage(rollout);\n\n  return (\n    <Accordion\n      defaultExpanded={defaultExpanded}\n      TransitionProps={{ unmountOnExit: true }}\n      variant=\"outlined\"\n    >\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <RolloutSummary\n          rollout={rollout}\n          numberOfCurrentPods={ownedPods.length}\n          numberOfPodsWithErrors={podsWithErrors.length}\n          hpa={matchingHpa}\n        />\n      </AccordionSummary>\n      <AccordionDetails>\n        <div style={{ width: '100%' }}>\n          <div>\n            <Typography variant=\"h6\">Rollout status</Typography>\n          </div>\n          <div style={{ margin: '1rem' }}>\n            {abortedMessage && (\n              <>\n                {AbortedTitle}\n                <Typography variant=\"subtitle2\">{abortedMessage}</Typography>\n              </>\n            )}\n            <StepsProgress\n              aborted={abortedMessage !== undefined}\n              steps={rollout.spec?.strategy?.canary?.steps ?? []}\n              currentStepIndex={currentStepIndex}\n            />\n          </div>\n          <div>\n            <PodsTable\n              pods={ownedPods}\n              extraColumns={[READY_COLUMNS, RESOURCE_COLUMNS]}\n            />\n          </div>\n        </div>\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n\nexport const RolloutAccordions = ({\n  rollouts,\n  defaultExpanded = false,\n}: RolloutAccordionsProps) => {\n  const groupedResponses = useContext(GroupedResponsesContext);\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justifyContent=\"flex-start\"\n      alignItems=\"flex-start\"\n    >\n      {rollouts.map((rollout, i) => (\n        <Grid container item key={i} xs>\n          <Grid item xs>\n            <RolloutAccordion\n              defaultExpanded={defaultExpanded}\n              matchingHpa={getMatchingHpa(\n                {\n                  name: rollout.metadata?.name,\n                  namespace: rollout.metadata?.namespace,\n                  kind: 'rollout',\n                },\n                groupedResponses.horizontalPodAutoscalers,\n              )}\n              ownedPods={getOwnedPodsThroughReplicaSets(\n                rollout,\n                groupedResponses.replicaSets,\n                groupedResponses.pods,\n              )}\n              rollout={rollout}\n            />\n          </Grid>\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n"],"names":["React"],"mappings":"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"}