{"version":3,"file":"ManifestYaml.esm.js","sources":["../../../src/components/KubernetesDrawer/ManifestYaml.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CodeSnippet } from '@backstage/core-components';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport jsyaml from 'js-yaml';\nimport React, { useState } from 'react';\n\n/**\n * Props of ManifestYaml\n *\n * @public\n */\nexport interface ManifestYamlProps {\n  object: object;\n}\n\n/**\n * Renders a Kubernetes object as a YAML code snippet\n *\n * @public\n */\nexport const ManifestYaml = ({ object }: ManifestYamlProps) => {\n  // Toggle whether the Kubernetes resource managed fields should be shown in\n  // the YAML display. This toggle is only available when the YAML is being\n  // shown because managed fields are never visible in the structured display.\n  const [managedFields, setManagedFields] = useState<boolean>(false);\n  return (\n    <>\n      <FormControlLabel\n        control={\n          <Switch\n            checked={managedFields}\n            onChange={event => {\n              setManagedFields(event.target.checked);\n            }}\n            name=\"Managed Fields\"\n          />\n        }\n        label=\"Managed Fields\"\n      />\n      <CodeSnippet\n        language=\"yaml\"\n        text={jsyaml.dump(object, {\n          // NOTE: this will remove any field called `managedFields`\n          // not just the metadata one\n          // TODO: @mclarke make this only remove the `metadata.managedFields`\n          replacer: (key: string, value: string): any => {\n            if (!managedFields) {\n              return key === 'managedFields' ? undefined : value;\n            }\n            return value;\n          },\n        })}\n      />\n    </>\n  );\n};\n"],"names":["React"],"mappings":";;;;;;AAmCO,MAAM,YAAe,GAAA,CAAC,EAAE,MAAA,EAAgC,KAAA;AAI7D,EAAA,MAAM,CAAC,aAAA,EAAe,gBAAgB,CAAA,GAAI,SAAkB,KAAK,CAAA;AACjE,EAAA,uBAEIA,cAAA,CAAA,aAAA,CAAAA,cAAA,CAAA,QAAA,EAAA,IAAA,kBAAAA,cAAA,CAAA,aAAA;AAAA,IAAC,gBAAA;AAAA,IAAA;AAAA,MACC,OACE,kBAAAA,cAAA,CAAA,aAAA;AAAA,QAAC,MAAA;AAAA,QAAA;AAAA,UACC,OAAS,EAAA,aAAA;AAAA,UACT,UAAU,CAAS,KAAA,KAAA;AACjB,YAAiB,gBAAA,CAAA,KAAA,CAAM,OAAO,OAAO,CAAA;AAAA,WACvC;AAAA,UACA,IAAK,EAAA;AAAA;AAAA,OACP;AAAA,MAEF,KAAM,EAAA;AAAA;AAAA,GAER,kBAAAA,cAAA,CAAA,aAAA;AAAA,IAAC,WAAA;AAAA,IAAA;AAAA,MACC,QAAS,EAAA,MAAA;AAAA,MACT,IAAA,EAAM,MAAO,CAAA,IAAA,CAAK,MAAQ,EAAA;AAAA;AAAA;AAAA;AAAA,QAIxB,QAAA,EAAU,CAAC,GAAA,EAAa,KAAuB,KAAA;AAC7C,UAAA,IAAI,CAAC,aAAe,EAAA;AAClB,YAAO,OAAA,GAAA,KAAQ,kBAAkB,KAAY,CAAA,GAAA,KAAA;AAAA;AAE/C,UAAO,OAAA,KAAA;AAAA;AACT,OACD;AAAA;AAAA,GAEL,CAAA;AAEJ;;;;"}