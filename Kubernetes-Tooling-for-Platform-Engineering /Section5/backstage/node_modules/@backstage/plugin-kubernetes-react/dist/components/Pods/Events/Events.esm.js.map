{"version":3,"file":"Events.esm.js","sources":["../../../../src/components/Pods/Events/Events.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { DateTime } from 'luxon';\n\nimport { useEvents } from './useEvents';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { DismissableBanner } from '@backstage/core-components';\nimport { Event } from 'kubernetes-models/v1';\n\n/**\n * Props for Events\n *\n * @public\n */\nexport interface EventsContentProps {\n  warningEventsOnly?: boolean;\n  events: Event[];\n}\n\nconst getAvatarByType = (type?: string) => {\n  return (\n    <ListItemAvatar>\n      <Avatar>{type === 'Warning' ? <WarningIcon /> : <InfoIcon />}</Avatar>\n    </ListItemAvatar>\n  );\n};\n\n/**\n * Shows given Kubernetes events\n *\n * @public\n */\nexport const EventsContent = ({\n  events,\n  warningEventsOnly,\n}: EventsContentProps) => {\n  if (events.length === 0) {\n    return <Typography>No events found</Typography>;\n  }\n\n  return (\n    <Container>\n      <Grid>\n        <List>\n          {events\n            .filter(event => {\n              if (warningEventsOnly) {\n                return event.type === 'Warning';\n              }\n              return true;\n            })\n            .map((event, index) => {\n              const timeAgo = event.metadata.creationTimestamp\n                ? DateTime.fromISO(event.metadata.creationTimestamp).toRelative(\n                    {\n                      locale: 'en',\n                    },\n                  )\n                : 'unknown';\n              return (\n                <ListItem key={`${event.metadata.name}-${index}`}>\n                  <Tooltip title={`${event.type ?? ''} event`}>\n                    {getAvatarByType(event.type)}\n                  </Tooltip>\n                  <ListItemText\n                    primary={`First event ${timeAgo} (count: ${event.count})`}\n                    secondary={`${event.reason}: ${event.message}`}\n                  />\n                </ListItem>\n              );\n            })}\n        </List>\n      </Grid>\n    </Container>\n  );\n};\n\n/**\n * Props for Events\n *\n * @public\n */\nexport interface EventsProps {\n  involvedObjectName: string;\n  namespace: string;\n  clusterName: string;\n  warningEventsOnly?: boolean;\n}\n\n/**\n * Retrieves and shows Kubernetes events for the given object\n *\n * @public\n */\nexport const Events = ({\n  involvedObjectName,\n  namespace,\n  clusterName,\n  warningEventsOnly,\n}: EventsProps) => {\n  const { value, error, loading } = useEvents({\n    involvedObjectName,\n    namespace,\n    clusterName,\n  });\n\n  return (\n    <>\n      {error && (\n        <DismissableBanner\n          {...{\n            message: error.message,\n            variant: 'error',\n            fixed: false,\n          }}\n          id=\"events\"\n        />\n      )}\n      {loading && <Skeleton variant=\"rect\" width=\"100%\" height=\"100%\" />}\n      {!loading && value !== undefined && (\n        <EventsContent warningEventsOnly={warningEventsOnly} events={value} />\n      )}\n    </>\n  );\n};\n"],"names":["React"],"mappings":"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"}