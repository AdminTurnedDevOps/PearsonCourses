import React__default, { useState } from 'react';
import Drawer from '@material-ui/core/Drawer';
import Grid from '@material-ui/core/Grid';
import IconButton from '@material-ui/core/IconButton';
import Switch from '@material-ui/core/Switch';
import Typography from '@material-ui/core/Typography';
import Button from '@material-ui/core/Button';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import { makeStyles, createStyles, withStyles } from '@material-ui/core/styles';
import CloseIcon from '@material-ui/icons/Close';
import { ManifestYaml } from './ManifestYaml.esm.js';

const useDrawerContentStyles = makeStyles(
  (_theme) => createStyles({
    header: {
      display: "flex",
      flexDirection: "row",
      justifyContent: "space-between"
    },
    content: {
      height: "80%"
    },
    icon: {
      fontSize: 20
    }
  })
);
const KubernetesDrawerContent = ({
  children,
  header,
  kubernetesObject,
  close
}) => {
  const classes = useDrawerContentStyles();
  const [isYaml, setIsYaml] = useState(false);
  return /* @__PURE__ */ React__default.createElement(React__default.Fragment, null, /* @__PURE__ */ React__default.createElement("div", { className: classes.header }, /* @__PURE__ */ React__default.createElement(Grid, { container: true, justifyContent: "flex-start", alignItems: "flex-start" }, /* @__PURE__ */ React__default.createElement(Grid, { item: true, xs: 11 }, /* @__PURE__ */ React__default.createElement(Typography, { variant: "h5" }, kubernetesObject.metadata?.name)), /* @__PURE__ */ React__default.createElement(Grid, { item: true, xs: 1 }, /* @__PURE__ */ React__default.createElement(
    IconButton,
    {
      key: "dismiss",
      title: "Close the drawer",
      onClick: () => close(),
      color: "inherit"
    },
    /* @__PURE__ */ React__default.createElement(CloseIcon, { className: classes.icon })
  )), /* @__PURE__ */ React__default.createElement(Grid, { item: true, xs: 12 }, header), /* @__PURE__ */ React__default.createElement(Grid, { item: true, xs: 12 }, /* @__PURE__ */ React__default.createElement(
    FormControlLabel,
    {
      control: /* @__PURE__ */ React__default.createElement(
        Switch,
        {
          checked: isYaml,
          onChange: (event) => {
            setIsYaml(event.target.checked);
          },
          name: "YAML"
        }
      ),
      label: "YAML"
    }
  )))), /* @__PURE__ */ React__default.createElement("div", { className: classes.content }, isYaml && /* @__PURE__ */ React__default.createElement(ManifestYaml, { object: kubernetesObject }), !isYaml && children));
};
const useDrawerStyles = makeStyles(
  (theme) => createStyles({
    paper: {
      width: "50%",
      justifyContent: "space-between",
      padding: theme.spacing(2.5)
    }
  })
);
const DrawerButton = withStyles({
  root: {
    padding: "6px 5px"
  },
  label: {
    textTransform: "none"
  }
})(Button);
const KubernetesDrawer = ({
  open,
  label,
  drawerContentsHeader,
  kubernetesObject,
  children
}) => {
  const classes = useDrawerStyles();
  const [isOpen, setIsOpen] = useState(open ?? false);
  const toggleDrawer = (e, newValue) => {
    e.stopPropagation();
    setIsOpen(newValue);
  };
  return /* @__PURE__ */ React__default.createElement(React__default.Fragment, null, /* @__PURE__ */ React__default.createElement(DrawerButton, { onClick: () => setIsOpen(true) }, label), /* @__PURE__ */ React__default.createElement(
    Drawer,
    {
      classes: {
        paper: classes.paper
      },
      anchor: "right",
      open: isOpen,
      onClose: (e) => toggleDrawer(e, false),
      onClick: (event) => event.stopPropagation()
    },
    isOpen && /* @__PURE__ */ React__default.createElement(
      KubernetesDrawerContent,
      {
        header: drawerContentsHeader,
        kubernetesObject,
        children,
        close: () => setIsOpen(false)
      }
    )
  ));
};

export { KubernetesDrawer };
//# sourceMappingURL=KubernetesDrawer.esm.js.map
