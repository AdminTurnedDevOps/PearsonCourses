{"version":3,"file":"Cluster.esm.js","sources":["../../../src/components/Cluster/Cluster.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  ClientPodStatus,\n  ClusterObjects,\n  groupResponses,\n} from '@backstage/plugin-kubernetes-common';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { DeploymentsAccordions } from '../DeploymentsAccordions';\nimport { StatefulSetsAccordions } from '../StatefulSetsAccordions';\nimport { IngressesAccordions } from '../IngressesAccordions';\nimport { ServicesAccordions } from '../ServicesAccordions';\nimport { CronJobsAccordions } from '../CronJobsAccordions';\nimport { CustomResources } from '../CustomResources';\nimport { DaemonSetsAccordions } from '../DaemonSetsAccordions';\nimport {\n  ClusterContext,\n  GroupedResponsesContext,\n  PodNamesWithErrorsContext,\n} from '../../hooks';\n\nimport { StatusError, StatusOK } from '@backstage/core-components';\nimport { PodMetricsContext } from '../../hooks/usePodMetrics';\n\ntype ClusterSummaryProps = {\n  clusterName: string;\n  totalNumberOfPods: number;\n  numberOfPodsWithErrors: number;\n  children?: React.ReactNode;\n};\n\nconst ClusterSummary = ({\n  clusterName,\n  totalNumberOfPods,\n  numberOfPodsWithErrors,\n}: ClusterSummaryProps) => {\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justifyContent=\"space-between\"\n      alignItems=\"flex-start\"\n      spacing={0}\n    >\n      <Grid\n        xs={6}\n        item\n        container\n        direction=\"column\"\n        justifyContent=\"flex-start\"\n        alignItems=\"flex-start\"\n        spacing={0}\n      >\n        <Grid item xs>\n          <Typography variant=\"body1\">{clusterName}</Typography>\n          <Typography color=\"textSecondary\" variant=\"subtitle1\">\n            Cluster\n          </Typography>\n        </Grid>\n      </Grid>\n      <Grid\n        item\n        container\n        xs={3}\n        direction=\"column\"\n        justifyContent=\"flex-start\"\n        alignItems=\"flex-end\"\n        spacing={0}\n      >\n        <Grid item>\n          <StatusOK>{totalNumberOfPods} pods</StatusOK>\n        </Grid>\n        <Grid item>\n          {numberOfPodsWithErrors > 0 ? (\n            <StatusError>{numberOfPodsWithErrors} pods with errors</StatusError>\n          ) : (\n            <StatusOK>No pods with errors</StatusOK>\n          )}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\n/**\n * Props for Cluster\n *\n * @public\n */\nexport type ClusterProps = {\n  clusterObjects: ClusterObjects;\n  podsWithErrors: Set<string>;\n  children?: React.ReactNode;\n};\n\n/**\n * Component for rendering Kubernetes resources in a cluster\n *\n * @public\n */\nexport const Cluster = ({ clusterObjects, podsWithErrors }: ClusterProps) => {\n  const groupedResponses = groupResponses(clusterObjects.resources);\n\n  const podMetricsMap = new Map<string, ClientPodStatus[]>();\n  podMetricsMap.set(clusterObjects.cluster.name, clusterObjects.podMetrics);\n  return (\n    <ClusterContext.Provider value={clusterObjects.cluster}>\n      <GroupedResponsesContext.Provider value={groupedResponses}>\n        <PodMetricsContext.Provider value={podMetricsMap}>\n          <PodNamesWithErrorsContext.Provider value={podsWithErrors}>\n            <Accordion TransitionProps={{ unmountOnExit: true }}>\n              <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                <ClusterSummary\n                  clusterName={\n                    clusterObjects.cluster.title || clusterObjects.cluster.name\n                  }\n                  totalNumberOfPods={groupedResponses.pods.length}\n                  numberOfPodsWithErrors={podsWithErrors.size}\n                />\n              </AccordionSummary>\n              <AccordionDetails>\n                <Grid container direction=\"column\">\n                  {groupedResponses.customResources.length > 0 ? (\n                    <Grid item>\n                      <CustomResources />\n                    </Grid>\n                  ) : undefined}\n                  {groupedResponses.deployments.length > 0 ? (\n                    <Grid item>\n                      <DeploymentsAccordions />\n                    </Grid>\n                  ) : undefined}\n                  {groupedResponses.daemonSets.length > 0 ? (\n                    <Grid item>\n                      <DaemonSetsAccordions />\n                    </Grid>\n                  ) : undefined}\n                  {groupedResponses.statefulsets.length > 0 ? (\n                    <Grid item>\n                      <StatefulSetsAccordions />\n                    </Grid>\n                  ) : undefined}\n                  {groupedResponses.ingresses.length > 0 ? (\n                    <Grid item>\n                      <IngressesAccordions />\n                    </Grid>\n                  ) : undefined}\n                  {groupedResponses.services.length > 0 ? (\n                    <Grid item>\n                      <ServicesAccordions />\n                    </Grid>\n                  ) : undefined}\n                  {groupedResponses.cronJobs.length > 0 ? (\n                    <Grid item>\n                      <CronJobsAccordions />\n                    </Grid>\n                  ) : undefined}\n                </Grid>\n              </AccordionDetails>\n            </Accordion>\n          </PodNamesWithErrorsContext.Provider>\n        </PodMetricsContext.Provider>\n      </GroupedResponsesContext.Provider>\n    </ClusterContext.Provider>\n  );\n};\n"],"names":["React"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA,MAAM,iBAAiB,CAAC;AAAA,EACtB,WAAA;AAAA,EACA,iBAAA;AAAA,EACA;AACF,CAA2B,KAAA;AACzB,EACE,uBAAAA,cAAA,CAAA,aAAA;AAAA,IAAC,IAAA;AAAA,IAAA;AAAA,MACC,SAAS,EAAA,IAAA;AAAA,MACT,SAAU,EAAA,KAAA;AAAA,MACV,cAAe,EAAA,eAAA;AAAA,MACf,UAAW,EAAA,YAAA;AAAA,MACX,OAAS,EAAA;AAAA,KAAA;AAAA,oBAETA,cAAA,CAAA,aAAA;AAAA,MAAC,IAAA;AAAA,MAAA;AAAA,QACC,EAAI,EAAA,CAAA;AAAA,QACJ,IAAI,EAAA,IAAA;AAAA,QACJ,SAAS,EAAA,IAAA;AAAA,QACT,SAAU,EAAA,QAAA;AAAA,QACV,cAAe,EAAA,YAAA;AAAA,QACf,UAAW,EAAA,YAAA;AAAA,QACX,OAAS,EAAA;AAAA,OAAA;AAAA,mDAER,IAAK,EAAA,EAAA,IAAA,EAAI,MAAC,EAAE,EAAA,IAAA,EAAA,+CACV,UAAW,EAAA,EAAA,OAAA,EAAQ,WAAS,WAAY,CAAA,+CACxC,UAAW,EAAA,EAAA,KAAA,EAAM,iBAAgB,OAAQ,EAAA,WAAA,EAAA,EAAY,SAEtD,CACF;AAAA,KACF;AAAA,oBACAA,cAAA,CAAA,aAAA;AAAA,MAAC,IAAA;AAAA,MAAA;AAAA,QACC,IAAI,EAAA,IAAA;AAAA,QACJ,SAAS,EAAA,IAAA;AAAA,QACT,EAAI,EAAA,CAAA;AAAA,QACJ,SAAU,EAAA,QAAA;AAAA,QACV,cAAe,EAAA,YAAA;AAAA,QACf,UAAW,EAAA,UAAA;AAAA,QACX,OAAS,EAAA;AAAA,OAAA;AAAA,sBAETA,cAAA,CAAA,aAAA,CAAC,QAAK,IAAI,EAAA,IAAA,EAAA,+CACP,QAAU,EAAA,IAAA,EAAA,iBAAA,EAAkB,OAAK,CACpC,CAAA;AAAA,sBACCA,cAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAK,IAAI,EAAA,IAAA,EAAA,EACP,yBAAyB,CACxB,mBAAAA,cAAA,CAAA,aAAA,CAAC,WAAa,EAAA,IAAA,EAAA,sBAAA,EAAuB,mBAAiB,CAAA,mBAErDA,cAAA,CAAA,aAAA,CAAA,QAAA,EAAA,IAAA,EAAS,qBAAmB,CAEjC;AAAA;AACF,GACF;AAEJ,CAAA;AAkBO,MAAM,OAAU,GAAA,CAAC,EAAE,cAAA,EAAgB,gBAAmC,KAAA;AAC3E,EAAM,MAAA,gBAAA,GAAmB,cAAe,CAAA,cAAA,CAAe,SAAS,CAAA;AAEhE,EAAM,MAAA,aAAA,uBAAoB,GAA+B,EAAA;AACzD,EAAA,aAAA,CAAc,GAAI,CAAA,cAAA,CAAe,OAAQ,CAAA,IAAA,EAAM,eAAe,UAAU,CAAA;AACxE,EAAA,oDACG,cAAe,CAAA,QAAA,EAAf,EAAwB,KAAA,EAAO,eAAe,OAC7C,EAAA,kBAAAA,cAAA,CAAA,aAAA,CAAC,uBAAwB,CAAA,QAAA,EAAxB,EAAiC,KAAO,EAAA,gBAAA,EAAA,kBACtCA,cAAA,CAAA,aAAA,CAAA,iBAAA,CAAkB,UAAlB,EAA2B,KAAA,EAAO,aACjC,EAAA,kBAAAA,cAAA,CAAA,aAAA,CAAC,0BAA0B,QAA1B,EAAA,EAAmC,KAAO,EAAA,cAAA,EAAA,+CACxC,SAAU,EAAA,EAAA,eAAA,EAAiB,EAAE,aAAA,EAAe,MAC3C,EAAA,kBAAAA,cAAA,CAAA,aAAA,CAAC,oBAAiB,UAAY,kBAAAA,cAAA,CAAA,aAAA,CAAC,oBAAe,CAC5C,EAAA,kBAAAA,cAAA,CAAA,aAAA;AAAA,IAAC,cAAA;AAAA,IAAA;AAAA,MACC,WACE,EAAA,cAAA,CAAe,OAAQ,CAAA,KAAA,IAAS,eAAe,OAAQ,CAAA,IAAA;AAAA,MAEzD,iBAAA,EAAmB,iBAAiB,IAAK,CAAA,MAAA;AAAA,MACzC,wBAAwB,cAAe,CAAA;AAAA;AAAA,GAE3C,mBACCA,cAAA,CAAA,aAAA,CAAA,gBAAA,EAAA,IAAA,+CACE,IAAK,EAAA,EAAA,SAAA,EAAS,IAAC,EAAA,SAAA,EAAU,QACvB,EAAA,EAAA,gBAAA,CAAiB,gBAAgB,MAAS,GAAA,CAAA,mBACxCA,cAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAK,IAAI,EAAA,IAAA,EAAA,+CACP,eAAgB,EAAA,IAAA,CACnB,CACE,GAAA,KAAA,CAAA,EACH,gBAAiB,CAAA,WAAA,CAAY,SAAS,CACrC,mBAAAA,cAAA,CAAA,aAAA,CAAC,IAAK,EAAA,EAAA,IAAA,EAAI,IACR,EAAA,kBAAAA,cAAA,CAAA,aAAA,CAAC,2BAAsB,CACzB,CAAA,GACE,KACH,CAAA,EAAA,gBAAA,CAAiB,UAAW,CAAA,MAAA,GAAS,oBACnCA,cAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAK,IAAI,EAAA,IAAA,EAAA,kBACPA,cAAA,CAAA,aAAA,CAAA,oBAAA,EAAA,IAAqB,CACxB,CACE,GAAA,KAAA,CAAA,EACH,gBAAiB,CAAA,YAAA,CAAa,MAAS,GAAA,CAAA,gDACrC,IAAK,EAAA,EAAA,IAAA,EAAI,wBACPA,cAAA,CAAA,aAAA,CAAA,sBAAA,EAAA,IAAuB,CAC1B,CACE,GAAA,KAAA,CAAA,EACH,gBAAiB,CAAA,SAAA,CAAU,MAAS,GAAA,CAAA,gDAClC,IAAK,EAAA,EAAA,IAAA,EAAI,IACR,EAAA,kBAAAA,cAAA,CAAA,aAAA,CAAC,mBAAoB,EAAA,IAAA,CACvB,IACE,KACH,CAAA,EAAA,gBAAA,CAAiB,QAAS,CAAA,MAAA,GAAS,CAClC,mBAAAA,cAAA,CAAA,aAAA,CAAC,QAAK,IAAI,EAAA,IAAA,EAAA,kBACPA,cAAA,CAAA,aAAA,CAAA,kBAAA,EAAA,IAAmB,CACtB,CAAA,GACE,QACH,gBAAiB,CAAA,QAAA,CAAS,MAAS,GAAA,CAAA,mBACjCA,cAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAK,MAAI,IACR,EAAA,kBAAAA,cAAA,CAAA,aAAA,CAAC,kBAAmB,EAAA,IAAA,CACtB,CACE,GAAA,KAAA,CACN,CACF,CACF,CACF,CACF,CACF,CACF,CAAA;AAEJ;;;;"}