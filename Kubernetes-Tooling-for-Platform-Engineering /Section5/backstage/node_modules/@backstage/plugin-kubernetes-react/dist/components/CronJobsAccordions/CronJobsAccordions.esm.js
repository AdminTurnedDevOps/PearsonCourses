import React__default, { useContext } from 'react';
import Accordion from '@material-ui/core/Accordion';
import AccordionDetails from '@material-ui/core/AccordionDetails';
import AccordionSummary from '@material-ui/core/AccordionSummary';
import Grid from '@material-ui/core/Grid';
import Typography from '@material-ui/core/Typography';
import ExpandMoreIcon from '@material-ui/icons/ExpandMore';
import { JobsAccordions } from '../JobsAccordions/JobsAccordions.esm.js';
import { CronJobDrawer } from './CronJobsDrawer.esm.js';
import { getOwnedResources } from '../../utils/owner.esm.js';
import '@backstage/core-plugin-api';
import 'react-use/esm/useAsync';
import '../../api/types.esm.js';
import 'react-use/esm/useInterval';
import 'react-use/esm/useAsyncRetry';
import '../../kubernetes-auth-provider/types.esm.js';
import '../../hooks/PodNamesWithErrors.esm.js';
import '../../hooks/PodNamesWithMetrics.esm.js';
import { GroupedResponsesContext } from '../../hooks/GroupedResponses.esm.js';
import '../../hooks/Cluster.esm.js';
import '../../hooks/usePodMetrics.esm.js';
import '../../hooks/useMatchingErrors.esm.js';
import { StatusError, StatusOK } from '@backstage/core-components';
import { humanizeCron } from '../../utils/crons.esm.js';

const CronJobSummary = ({ cronJob }) => {
  return /* @__PURE__ */ React__default.createElement(
    Grid,
    {
      container: true,
      direction: "row",
      justifyContent: "space-between",
      alignItems: "center",
      spacing: 0
    },
    /* @__PURE__ */ React__default.createElement(Grid, { xs: 6, item: true }, /* @__PURE__ */ React__default.createElement(CronJobDrawer, { cronJob })),
    /* @__PURE__ */ React__default.createElement(
      Grid,
      {
        item: true,
        container: true,
        xs: 6,
        direction: "column",
        justifyContent: "flex-start",
        alignItems: "flex-end",
        spacing: 0
      },
      /* @__PURE__ */ React__default.createElement(Grid, { item: true }, cronJob.spec?.suspend ? /* @__PURE__ */ React__default.createElement(StatusError, null, "Suspended") : /* @__PURE__ */ React__default.createElement(StatusOK, null, "Active")),
      /* @__PURE__ */ React__default.createElement(Grid, { item: true }, /* @__PURE__ */ React__default.createElement(Typography, { variant: "body1" }, "Schedule:", " ", cronJob.spec?.schedule ? `${cronJob.spec.schedule} (${humanizeCron(
        cronJob.spec.schedule
      )})` : "N/A"))
    )
  );
};
const CronJobAccordion = ({ cronJob, ownedJobs }) => {
  return /* @__PURE__ */ React__default.createElement(Accordion, { TransitionProps: { unmountOnExit: true }, variant: "outlined" }, /* @__PURE__ */ React__default.createElement(AccordionSummary, { expandIcon: /* @__PURE__ */ React__default.createElement(ExpandMoreIcon, null) }, /* @__PURE__ */ React__default.createElement(CronJobSummary, { cronJob })), /* @__PURE__ */ React__default.createElement(AccordionDetails, null, /* @__PURE__ */ React__default.createElement(JobsAccordions, { jobs: ownedJobs.reverse() })));
};
const CronJobsAccordions = ({}) => {
  const groupedResponses = useContext(GroupedResponsesContext);
  return /* @__PURE__ */ React__default.createElement(
    Grid,
    {
      container: true,
      direction: "column",
      justifyContent: "flex-start",
      alignItems: "flex-start"
    },
    groupedResponses.cronJobs.map((cronJob, i) => /* @__PURE__ */ React__default.createElement(Grid, { container: true, item: true, key: i, xs: true }, /* @__PURE__ */ React__default.createElement(Grid, { item: true, xs: true }, /* @__PURE__ */ React__default.createElement(
      CronJobAccordion,
      {
        ownedJobs: getOwnedResources(cronJob, groupedResponses.jobs),
        cronJob
      }
    ))))
  );
};

export { CronJobsAccordions };
//# sourceMappingURL=CronJobsAccordions.esm.js.map
