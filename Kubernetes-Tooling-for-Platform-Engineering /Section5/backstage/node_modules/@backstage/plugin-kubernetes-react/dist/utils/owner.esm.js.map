{"version":3,"file":"owner.esm.js","sources":["../../src/utils/owner.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  V1ObjectMeta,\n  V2HorizontalPodAutoscaler,\n  V1Pod,\n  V1ReplicaSet,\n} from '@kubernetes/client-node';\n\ninterface CanOwn {\n  metadata?: V1ObjectMeta;\n}\n\ninterface CanBeOwned {\n  metadata?: V1ObjectMeta;\n}\n\nexport function getOwnedResources<R extends CanBeOwned>(\n  potentialOwner: CanOwn,\n  possiblyOwned: R[],\n): R[] {\n  return possiblyOwned.filter(\n    p =>\n      p.metadata?.ownerReferences?.some(\n        o => o.uid === potentialOwner.metadata?.uid,\n      ) ?? false,\n  );\n}\n\nexport const getOwnedPodsThroughReplicaSets = (\n  potentialOwner: CanOwn,\n  replicaSets: V1ReplicaSet[],\n  pods: V1Pod[],\n) => {\n  return getOwnedResources(\n    potentialOwner,\n    replicaSets.filter(rs => rs.status && rs.status.replicas > 0),\n  ).reduce((accum, rs) => {\n    return accum.concat(getOwnedResources(rs, pods));\n  }, [] as V1Pod[]);\n};\n\ninterface ResourceRef {\n  kind: string;\n  namespace?: string;\n  name?: string;\n}\n\nexport const getMatchingHpa = (\n  owner: ResourceRef,\n  hpas: V2HorizontalPodAutoscaler[],\n): V2HorizontalPodAutoscaler | undefined => {\n  return hpas.find(hpa => {\n    return (\n      (hpa.spec?.scaleTargetRef?.kind ?? '').toLocaleLowerCase('en-US') ===\n        owner.kind.toLocaleLowerCase('en-US') &&\n      (hpa.metadata?.namespace ?? '') ===\n        (owner.namespace ?? 'unknown-namespace') &&\n      (hpa.spec?.scaleTargetRef?.name ?? '') ===\n        (owner.name ?? 'unknown-deployment')\n    );\n  });\n};\n"],"names":[],"mappings":"AA+BgB,SAAA,iBAAA,CACd,gBACA,aACK,EAAA;AACL,EAAA,OAAO,aAAc,CAAA,MAAA;AAAA,IACnB,CAAA,CAAA,KACE,CAAE,CAAA,QAAA,EAAU,eAAiB,EAAA,IAAA;AAAA,MAC3B,CAAK,CAAA,KAAA,CAAA,CAAE,GAAQ,KAAA,cAAA,CAAe,QAAU,EAAA;AAAA,KACrC,IAAA;AAAA,GACT;AACF;AAEO,MAAM,8BAAiC,GAAA,CAC5C,cACA,EAAA,WAAA,EACA,IACG,KAAA;AACH,EAAO,OAAA,iBAAA;AAAA,IACL,cAAA;AAAA,IACA,WAAA,CAAY,OAAO,CAAM,EAAA,KAAA,EAAA,CAAG,UAAU,EAAG,CAAA,MAAA,CAAO,WAAW,CAAC;AAAA,GAC5D,CAAA,MAAA,CAAO,CAAC,KAAA,EAAO,EAAO,KAAA;AACtB,IAAA,OAAO,KAAM,CAAA,MAAA,CAAO,iBAAkB,CAAA,EAAA,EAAI,IAAI,CAAC,CAAA;AAAA,GACjD,EAAG,EAAa,CAAA;AAClB;AAQa,MAAA,cAAA,GAAiB,CAC5B,KAAA,EACA,IAC0C,KAAA;AAC1C,EAAO,OAAA,IAAA,CAAK,KAAK,CAAO,GAAA,KAAA;AACtB,IACG,OAAA,CAAA,GAAA,CAAI,IAAM,EAAA,cAAA,EAAgB,IAAQ,IAAA,EAAA,EAAI,iBAAkB,CAAA,OAAO,CAC9D,KAAA,KAAA,CAAM,IAAK,CAAA,iBAAA,CAAkB,OAAO,CAAA,IAAA,CACrC,IAAI,QAAU,EAAA,SAAA,IAAa,EACzB,OAAA,KAAA,CAAM,SAAa,IAAA,mBAAA,CAAA,IAAA,CACrB,GAAI,CAAA,IAAA,EAAM,cAAgB,EAAA,IAAA,IAAQ,EAChC,OAAA,KAAA,CAAM,IAAQ,IAAA,oBAAA,CAAA;AAAA,GAEpB,CAAA;AACH;;;;"}