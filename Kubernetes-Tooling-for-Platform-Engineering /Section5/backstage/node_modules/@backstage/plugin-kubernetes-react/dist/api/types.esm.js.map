{"version":3,"file":"types.esm.js","sources":["../../src/api/types.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  KubernetesRequestBody,\n  ObjectsByEntityResponse,\n  WorkloadsByEntityRequest,\n  CustomObjectsByEntityRequest,\n} from '@backstage/plugin-kubernetes-common';\nimport { createApiRef } from '@backstage/core-plugin-api';\nimport { Event } from 'kubernetes-models/v1';\nimport { JsonObject } from '@backstage/types';\n\n/** @public */\nexport const kubernetesApiRef = createApiRef<KubernetesApi>({\n  id: 'plugin.kubernetes.service',\n});\n\n/** @public */\nexport const kubernetesProxyApiRef = createApiRef<KubernetesProxyApi>({\n  id: 'plugin.kubernetes.proxy-service',\n});\n\n/** @public */\nexport const kubernetesClusterLinkFormatterApiRef =\n  createApiRef<KubernetesClusterLinkFormatterApi>({\n    id: 'plugin.kubernetes.cluster-link-formatter-service',\n  });\n\n/** @public */\nexport interface KubernetesApi {\n  getObjectsByEntity(\n    requestBody: KubernetesRequestBody,\n  ): Promise<ObjectsByEntityResponse>;\n  getClusters(): Promise<\n    {\n      name: string;\n      authProvider: string;\n      oidcTokenProvider?: string;\n    }[]\n  >;\n  getCluster(clusterName: string): Promise<\n    | {\n        name: string;\n        authProvider: string;\n        oidcTokenProvider?: string;\n        dashboardUrl?: string;\n      }\n    | undefined\n  >;\n  getWorkloadsByEntity(\n    request: WorkloadsByEntityRequest,\n  ): Promise<ObjectsByEntityResponse>;\n  getCustomObjectsByEntity(\n    request: CustomObjectsByEntityRequest,\n  ): Promise<ObjectsByEntityResponse>;\n  proxy(options: {\n    clusterName: string;\n    path: string;\n    init?: RequestInit;\n  }): Promise<Response>;\n}\n\n/** @public */\nexport interface KubernetesProxyApi {\n  getPodLogs(request: {\n    podName: string;\n    namespace: string;\n    clusterName: string;\n    containerName: string;\n    previous?: boolean;\n  }): Promise<{ text: string }>;\n  deletePod(request: {\n    podName: string;\n    namespace: string;\n    clusterName: string;\n  }): Promise<{ text: string }>;\n  getEventsByInvolvedObjectName(request: {\n    clusterName: string;\n    involvedObjectName: string;\n    namespace: string;\n  }): Promise<Event[]>;\n}\n\n/**\n * @public\n */\nexport type FormatClusterLinkOptions = {\n  dashboardUrl?: string;\n  dashboardApp?: string;\n  dashboardParameters?: JsonObject;\n  object: any;\n  kind: string;\n};\n\n/** @public */\nexport interface KubernetesClusterLinkFormatterApi {\n  formatClusterLink(\n    options: FormatClusterLinkOptions,\n  ): Promise<string | undefined>;\n}\n"],"names":[],"mappings":";;AA2BO,MAAM,mBAAmB,YAA4B,CAAA;AAAA,EAC1D,EAAI,EAAA;AACN,CAAC;AAGM,MAAM,wBAAwB,YAAiC,CAAA;AAAA,EACpE,EAAI,EAAA;AACN,CAAC;AAGM,MAAM,uCACX,YAAgD,CAAA;AAAA,EAC9C,EAAI,EAAA;AACN,CAAC;;;;"}