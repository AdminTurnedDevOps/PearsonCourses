class KubernetesClusterLinkFormatter {
  formatters;
  defaultFormatterName;
  constructor(options) {
    this.formatters = options.formatters;
    this.defaultFormatterName = options.defaultFormatterName;
  }
  async formatClusterLink(options) {
    if (!options.dashboardUrl && !options.dashboardParameters) {
      return void 0;
    }
    if (options.dashboardUrl && !options.object) {
      return options.dashboardUrl;
    }
    const app = options.dashboardApp ?? this.defaultFormatterName;
    const formatter = this.formatters[app];
    if (!formatter) {
      throw new Error(`Could not find Kubernetes dashboard app named '${app}'`);
    }
    const url = await formatter.formatClusterLink({
      dashboardUrl: options.dashboardUrl ? new URL(options.dashboardUrl) : void 0,
      dashboardParameters: options.dashboardParameters,
      object: options.object,
      kind: options.kind
    });
    return url.toString();
  }
}

export { KubernetesClusterLinkFormatter };
//# sourceMappingURL=KubernetesClusterLinkFormatter.esm.js.map
