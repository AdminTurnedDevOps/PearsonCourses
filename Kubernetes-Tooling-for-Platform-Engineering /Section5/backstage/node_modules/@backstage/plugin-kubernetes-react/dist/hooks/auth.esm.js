const generateAuth = async (entity, kubernetesApi, kubernetesAuthProvidersApi) => {
  const clusters = await kubernetesApi.getClusters();
  const authProviders = [
    ...new Set(
      clusters.map(
        (c) => `${c.authProvider}${c.oidcTokenProvider ? `.${c.oidcTokenProvider}` : ""}`
      )
    )
  ];
  let requestBody = {
    entity
  };
  for (const authProviderStr of authProviders) {
    requestBody = await kubernetesAuthProvidersApi.decorateRequestBodyForAuth(
      authProviderStr,
      requestBody
    );
  }
  return requestBody.auth ?? {};
};

export { generateAuth };
//# sourceMappingURL=auth.esm.js.map
