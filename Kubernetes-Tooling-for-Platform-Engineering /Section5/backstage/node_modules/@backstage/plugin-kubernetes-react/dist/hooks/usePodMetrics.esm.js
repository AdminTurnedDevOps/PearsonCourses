import React__default, { useContext } from 'react';

const PodMetricsContext = React__default.createContext(/* @__PURE__ */ new Map());
const usePodMetrics = (clusterName, matcher) => {
  const targetRef = {
    name: matcher.metadata?.name ?? "",
    namespace: matcher.metadata?.namespace ?? ""
  };
  const metricsMap = useContext(PodMetricsContext);
  const metrics = metricsMap.get(clusterName);
  return metrics?.find((m) => {
    const pod = m.pod;
    return targetRef.name === (pod.metadata?.name ?? "") && targetRef.namespace === (pod.metadata?.namespace ?? "");
  });
};

export { PodMetricsContext, usePodMetrics };
//# sourceMappingURL=usePodMetrics.esm.js.map
