{"version":3,"file":"useEntityPresentation.esm.js","sources":["../../../src/apis/EntityPresentationApi/useEntityPresentation.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CompoundEntityRef,\n  Entity,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { useApiHolder } from '@backstage/core-plugin-api';\nimport { useMemo } from 'react';\nimport {\n  EntityRefPresentation,\n  EntityRefPresentationSnapshot,\n  entityPresentationApiRef,\n} from './EntityPresentationApi';\nimport { defaultEntityPresentation } from './defaultEntityPresentation';\nimport { useUpdatingObservable } from './useUpdatingObservable';\n\n/**\n * Returns information about how to represent an entity in the interface.\n *\n * @public\n * @param entityOrRef - The entity to represent, or an entity ref to it. If you\n *   pass in an entity, it is assumed that it is NOT a partial one - i.e. only\n *   pass in an entity if you know that it was fetched in such a way that it\n *   contains all of the fields that the representation renderer needs.\n * @param context - Optional context that control details of the presentation.\n * @returns A snapshot of the entity presentation, which may change over time\n */\nexport function useEntityPresentation(\n  entityOrRef: Entity | CompoundEntityRef | string,\n  context?: {\n    defaultKind?: string;\n    defaultNamespace?: string;\n  },\n): EntityRefPresentationSnapshot {\n  // Defensively allow for a missing presentation API, which makes this hook\n  // safe to use in tests.\n  const apis = useApiHolder();\n  const entityPresentationApi = apis.get(entityPresentationApiRef);\n\n  const deps = [\n    entityPresentationApi,\n    JSON.stringify(entityOrRef),\n    JSON.stringify(context || null),\n  ];\n\n  const presentation = useMemo<EntityRefPresentation>(\n    () => {\n      if (!entityPresentationApi) {\n        const fallback = defaultEntityPresentation(entityOrRef, context);\n        return { snapshot: fallback, promise: Promise.resolve(fallback) };\n      }\n\n      return entityPresentationApi.forEntity(\n        typeof entityOrRef === 'string' || 'metadata' in entityOrRef\n          ? entityOrRef\n          : stringifyEntityRef(entityOrRef),\n        context,\n      );\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    deps,\n  );\n\n  // NOTE(freben): We intentionally do not use the plain useObservable from the\n  // react-use library here. That hook does not support a dependencies array,\n  // and also it only subscribes once to the initially passed in observable and\n  // won't properly react when either initial value or the actual observable\n  // changes.\n  return useUpdatingObservable(presentation.snapshot, presentation.update$, [\n    presentation,\n  ]);\n}\n"],"names":[],"mappings":";;;;;;;AA0CgB,SAAA,qBAAA,CACd,aACA,OAI+B,EAAA;AAG/B,EAAA,MAAM,OAAO,YAAa,EAAA;AAC1B,EAAM,MAAA,qBAAA,GAAwB,IAAK,CAAA,GAAA,CAAI,wBAAwB,CAAA;AAE/D,EAAA,MAAM,IAAO,GAAA;AAAA,IACX,qBAAA;AAAA,IACA,IAAA,CAAK,UAAU,WAAW,CAAA;AAAA,IAC1B,IAAA,CAAK,SAAU,CAAA,OAAA,IAAW,IAAI;AAAA,GAChC;AAEA,EAAA,MAAM,YAAe,GAAA,OAAA;AAAA,IACnB,MAAM;AACJ,MAAA,IAAI,CAAC,qBAAuB,EAAA;AAC1B,QAAM,MAAA,QAAA,GAAW,yBAA0B,CAAA,WAAA,EAAa,OAAO,CAAA;AAC/D,QAAA,OAAO,EAAE,QAAU,EAAA,QAAA,EAAU,SAAS,OAAQ,CAAA,OAAA,CAAQ,QAAQ,CAAE,EAAA;AAAA;AAGlE,MAAA,OAAO,qBAAsB,CAAA,SAAA;AAAA,QAC3B,OAAO,WAAgB,KAAA,QAAA,IAAY,cAAc,WAC7C,GAAA,WAAA,GACA,mBAAmB,WAAW,CAAA;AAAA,QAClC;AAAA,OACF;AAAA,KACF;AAAA;AAAA,IAEA;AAAA,GACF;AAOA,EAAA,OAAO,qBAAsB,CAAA,YAAA,CAAa,QAAU,EAAA,YAAA,CAAa,OAAS,EAAA;AAAA,IACxE;AAAA,GACD,CAAA;AACH;;;;"}