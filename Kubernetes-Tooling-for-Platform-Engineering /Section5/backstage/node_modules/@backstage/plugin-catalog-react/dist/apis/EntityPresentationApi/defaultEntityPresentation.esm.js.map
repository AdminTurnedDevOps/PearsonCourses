{"version":3,"file":"defaultEntityPresentation.esm.js","sources":["../../../src/apis/EntityPresentationApi/defaultEntityPresentation.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CompoundEntityRef,\n  DEFAULT_NAMESPACE,\n  Entity,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport get from 'lodash/get';\nimport { EntityRefPresentationSnapshot } from './EntityPresentationApi';\n\n/**\n * This returns the default representation of an entity.\n *\n * @public\n * @param entityOrRef - Either an entity, or a ref to it.\n * @param context - Contextual information that may affect the presentation.\n */\nexport function defaultEntityPresentation(\n  entityOrRef: Entity | CompoundEntityRef | string,\n  context?: {\n    defaultKind?: string;\n    defaultNamespace?: string;\n  },\n): EntityRefPresentationSnapshot {\n  // NOTE(freben): This code may look convoluted, but it tries its very best to\n  // be defensive and handling any type of malformed input and still producing\n  // some form of result without crashing.\n  const { kind, namespace, name, title, description, displayName, type } =\n    getParts(entityOrRef);\n\n  const entityRef: string = stringifyEntityRef({\n    kind: kind || 'unknown',\n    namespace: namespace || DEFAULT_NAMESPACE,\n    name: name || 'unknown',\n  });\n\n  const shortRef = getShortRef({ kind, namespace, name, context });\n\n  const primary = [displayName, title, shortRef].find(\n    candidate => candidate && typeof candidate === 'string',\n  )!;\n\n  const secondary = [\n    primary !== entityRef ? entityRef : undefined,\n    type,\n    description,\n  ]\n    .filter(candidate => candidate && typeof candidate === 'string')\n    .join(' | ');\n\n  return {\n    entityRef,\n    primaryTitle: primary,\n    secondaryTitle: secondary || undefined,\n    Icon: undefined, // leave it up to the presentation API to handle\n  };\n}\n\nconst isString = (value: unknown): value is string =>\n  Boolean(value) && typeof value === 'string';\n\n// Try to extract display-worthy parts of an entity or ref as best we can, without throwing\nfunction getParts(entityOrRef: Entity | CompoundEntityRef | string): {\n  kind?: string;\n  namespace?: string;\n  name?: string;\n  title?: string;\n  description?: string;\n  displayName?: string;\n  type?: string;\n} {\n  if (typeof entityOrRef === 'string') {\n    let colonI = entityOrRef.indexOf(':');\n    const slashI = entityOrRef.indexOf('/');\n\n    // If the / is ahead of the :, treat the rest as the name\n    if (slashI !== -1 && slashI < colonI) {\n      colonI = -1;\n    }\n\n    const kind = colonI === -1 ? undefined : entityOrRef.slice(0, colonI);\n    const namespace =\n      slashI === -1 ? undefined : entityOrRef.slice(colonI + 1, slashI);\n    const name = entityOrRef.slice(Math.max(colonI + 1, slashI + 1));\n\n    return { kind, namespace, name };\n  }\n\n  if (typeof entityOrRef === 'object' && entityOrRef !== null) {\n    const kind = [get(entityOrRef, 'kind')].find(isString);\n\n    const namespace = [\n      get(entityOrRef, 'metadata.namespace'),\n      get(entityOrRef, 'namespace'),\n    ].find(isString);\n\n    const name = [\n      get(entityOrRef, 'metadata.name'),\n      get(entityOrRef, 'name'),\n    ].find(isString);\n\n    const title = [get(entityOrRef, 'metadata.title')].find(isString);\n\n    const description = [get(entityOrRef, 'metadata.description')].find(\n      isString,\n    );\n\n    const displayName = [get(entityOrRef, 'spec.profile.displayName')].find(\n      isString,\n    );\n\n    const type = [get(entityOrRef, 'spec.type')].find(isString);\n\n    return { kind, namespace, name, title, description, displayName, type };\n  }\n\n  return {};\n}\n\nfunction getShortRef(options: {\n  kind?: string;\n  namespace?: string;\n  name?: string;\n  context?: { defaultKind?: string; defaultNamespace?: string };\n}): string {\n  const kind = options.kind?.toLocaleLowerCase('en-US') || 'unknown';\n  const namespace = options.namespace || DEFAULT_NAMESPACE;\n  const name = options.name || 'unknown';\n  const defaultKindLower =\n    options.context?.defaultKind?.toLocaleLowerCase('en-US');\n  const defaultNamespaceLower =\n    options.context?.defaultNamespace?.toLocaleLowerCase('en-US');\n\n  let result = name;\n\n  if (\n    (defaultNamespaceLower &&\n      namespace.toLocaleLowerCase('en-US') !== defaultNamespaceLower) ||\n    namespace !== DEFAULT_NAMESPACE\n  ) {\n    result = `${namespace}/${result}`;\n  }\n\n  if (\n    defaultKindLower &&\n    kind.toLocaleLowerCase('en-US') !== defaultKindLower\n  ) {\n    result = `${kind}:${result}`;\n  }\n\n  return result;\n}\n"],"names":[],"mappings":"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"}