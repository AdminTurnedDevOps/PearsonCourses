import ObservableImpl from 'zen-observable';

class MockStarredEntitiesApi {
  starredEntities = /* @__PURE__ */ new Set();
  subscribers = /* @__PURE__ */ new Set();
  observable = new ObservableImpl((subscriber) => {
    subscriber.next(new Set(this.starredEntities));
    this.subscribers.add(subscriber);
    return () => {
      this.subscribers.delete(subscriber);
    };
  });
  async toggleStarred(entityRef) {
    if (!this.starredEntities.delete(entityRef)) {
      this.starredEntities.add(entityRef);
    }
    for (const subscription of this.subscribers) {
      subscription.next(new Set(this.starredEntities));
    }
  }
  starredEntitie$() {
    return this.observable;
  }
}

export { MockStarredEntitiesApi };
//# sourceMappingURL=MockStarredEntitiesApi.esm.js.map
