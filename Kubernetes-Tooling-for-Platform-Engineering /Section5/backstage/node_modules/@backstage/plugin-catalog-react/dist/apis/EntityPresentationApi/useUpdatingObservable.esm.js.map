{"version":3,"file":"useUpdatingObservable.esm.js","sources":["../../../src/apis/EntityPresentationApi/useUpdatingObservable.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Observable } from '@backstage/types';\nimport { DependencyList, useEffect, useState } from 'react';\n\n/**\n * Subscribe to an observable and return the latest value from it.\n *\n * @remarks\n *\n * This implementation differs in a few important ways from the plain\n * useObservable from the react-use library. That hook does not support a\n * dependencies array, and also it only subscribes once to the initially passed\n * in observable and won't properly react when either initial value or the\n * actual observable changes.\n *\n * This hook will ensure to resubscribe and reconsider the initial value,\n * whenever the dependencies change.\n */\nexport function useUpdatingObservable<T>(\n  value: T,\n  observable: Observable<T> | undefined,\n  deps: DependencyList,\n): T {\n  const [snapshot, setSnapshot] = useState(value);\n\n  useEffect(() => {\n    setSnapshot(value);\n\n    const subscription = observable?.subscribe({\n      next: updatedValue => {\n        setSnapshot(updatedValue);\n      },\n      complete: () => {\n        subscription?.unsubscribe();\n      },\n    });\n\n    return () => {\n      subscription?.unsubscribe();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\n  return snapshot;\n}\n"],"names":[],"mappings":";;AAiCgB,SAAA,qBAAA,CACd,KACA,EAAA,UAAA,EACA,IACG,EAAA;AACH,EAAA,MAAM,CAAC,QAAA,EAAU,WAAW,CAAA,GAAI,SAAS,KAAK,CAAA;AAE9C,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,WAAA,CAAY,KAAK,CAAA;AAEjB,IAAM,MAAA,YAAA,GAAe,YAAY,SAAU,CAAA;AAAA,MACzC,MAAM,CAAgB,YAAA,KAAA;AACpB,QAAA,WAAA,CAAY,YAAY,CAAA;AAAA,OAC1B;AAAA,MACA,UAAU,MAAM;AACd,QAAA,YAAA,EAAc,WAAY,EAAA;AAAA;AAC5B,KACD,CAAA;AAED,IAAA,OAAO,MAAM;AACX,MAAA,YAAA,EAAc,WAAY,EAAA;AAAA,KAC5B;AAAA,KAEC,IAAI,CAAA;AAEP,EAAO,OAAA,QAAA;AACT;;;;"}