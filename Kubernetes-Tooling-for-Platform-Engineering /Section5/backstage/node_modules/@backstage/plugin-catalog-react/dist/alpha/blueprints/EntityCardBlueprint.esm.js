import { createExtensionBlueprint, coreExtensionData, ExtensionBoundary } from '@backstage/frontend-plugin-api';
import { entityFilterFunctionDataRef, entityFilterExpressionDataRef } from './extensionData.esm.js';

const EntityCardBlueprint = createExtensionBlueprint({
  kind: "entity-card",
  attachTo: { id: "entity-content:catalog/overview", input: "cards" },
  output: [
    coreExtensionData.reactElement,
    entityFilterFunctionDataRef.optional(),
    entityFilterExpressionDataRef.optional()
  ],
  dataRefs: {
    filterFunction: entityFilterFunctionDataRef,
    filterExpression: entityFilterExpressionDataRef
  },
  config: {
    schema: {
      filter: (z) => z.string().optional()
    }
  },
  *factory({
    loader,
    filter
  }, { node, config }) {
    yield coreExtensionData.reactElement(ExtensionBoundary.lazy(node, loader));
    if (config.filter) {
      yield entityFilterExpressionDataRef(config.filter);
    } else if (typeof filter === "string") {
      yield entityFilterExpressionDataRef(filter);
    } else if (typeof filter === "function") {
      yield entityFilterFunctionDataRef(filter);
    }
  }
});

export { EntityCardBlueprint };
//# sourceMappingURL=EntityCardBlueprint.esm.js.map
