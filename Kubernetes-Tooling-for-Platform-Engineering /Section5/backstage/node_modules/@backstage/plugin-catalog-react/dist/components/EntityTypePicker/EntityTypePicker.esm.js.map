{"version":3,"file":"EntityTypePicker.esm.js","sources":["../../../src/components/EntityTypePicker/EntityTypePicker.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect } from 'react';\nimport Box from '@material-ui/core/Box';\nimport { useEntityTypeFilter } from '../../hooks/useEntityTypeFilter';\n\nimport { alertApiRef, useApi } from '@backstage/core-plugin-api';\nimport { Select } from '@backstage/core-components';\nimport { catalogReactTranslationRef } from '../../translation';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\n\n/**\n * Props for {@link EntityTypePicker}.\n *\n * @public\n */\nexport interface EntityTypePickerProps {\n  initialFilter?: string;\n  hidden?: boolean;\n}\n\n/** @public */\nexport const EntityTypePicker = (props: EntityTypePickerProps) => {\n  const { hidden, initialFilter } = props;\n  const alertApi = useApi(alertApiRef);\n  const { error, availableTypes, selectedTypes, setSelectedTypes } =\n    useEntityTypeFilter();\n  const { t } = useTranslationRef(catalogReactTranslationRef);\n\n  useEffect(() => {\n    if (error) {\n      alertApi.post({\n        message: t('entityTypePicker.errorMessage'),\n        severity: 'error',\n      });\n    }\n    if (initialFilter) {\n      setSelectedTypes([initialFilter]);\n    }\n  }, [error, alertApi, initialFilter, setSelectedTypes, t]);\n\n  if (availableTypes.length === 0 || error) return null;\n\n  availableTypes.sort((a, b) =>\n    a.toLocaleLowerCase('en-US').localeCompare(b.toLocaleLowerCase('en-US')),\n  );\n\n  const items = [\n    { value: 'all', label: t('entityTypePicker.optionAllTitle') },\n    ...availableTypes.map((type: string) => ({\n      value: type,\n      label: type,\n    })),\n  ];\n\n  return hidden ? null : (\n    <Box pb={1} pt={1}>\n      <Select\n        label={t('entityTypePicker.title')}\n        items={items}\n        selected={(items.length > 1 ? selectedTypes[0] : undefined) ?? 'all'}\n        onChange={value =>\n          setSelectedTypes(value === 'all' ? [] : [String(value)])\n        }\n      />\n    </Box>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;AAoCa,MAAA,gBAAA,GAAmB,CAAC,KAAiC,KAAA;AAChE,EAAM,MAAA,EAAE,MAAQ,EAAA,aAAA,EAAkB,GAAA,KAAA;AAClC,EAAM,MAAA,QAAA,GAAW,OAAO,WAAW,CAAA;AACnC,EAAA,MAAM,EAAE,KAAO,EAAA,cAAA,EAAgB,aAAe,EAAA,gBAAA,KAC5C,mBAAoB,EAAA;AACtB,EAAA,MAAM,EAAE,CAAA,EAAM,GAAA,iBAAA,CAAkB,0BAA0B,CAAA;AAE1D,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,IAAI,KAAO,EAAA;AACT,MAAA,QAAA,CAAS,IAAK,CAAA;AAAA,QACZ,OAAA,EAAS,EAAE,+BAA+B,CAAA;AAAA,QAC1C,QAAU,EAAA;AAAA,OACX,CAAA;AAAA;AAEH,IAAA,IAAI,aAAe,EAAA;AACjB,MAAiB,gBAAA,CAAA,CAAC,aAAa,CAAC,CAAA;AAAA;AAClC,KACC,CAAC,KAAA,EAAO,UAAU,aAAe,EAAA,gBAAA,EAAkB,CAAC,CAAC,CAAA;AAExD,EAAA,IAAI,cAAe,CAAA,MAAA,KAAW,CAAK,IAAA,KAAA,EAAc,OAAA,IAAA;AAEjD,EAAe,cAAA,CAAA,IAAA;AAAA,IAAK,CAAC,CAAG,EAAA,CAAA,KACtB,CAAE,CAAA,iBAAA,CAAkB,OAAO,CAAA,CAAE,aAAc,CAAA,CAAA,CAAE,iBAAkB,CAAA,OAAO,CAAC;AAAA,GACzE;AAEA,EAAA,MAAM,KAAQ,GAAA;AAAA,IACZ,EAAE,KAAO,EAAA,KAAA,EAAO,KAAO,EAAA,CAAA,CAAE,iCAAiC,CAAE,EAAA;AAAA,IAC5D,GAAG,cAAA,CAAe,GAAI,CAAA,CAAC,IAAkB,MAAA;AAAA,MACvC,KAAO,EAAA,IAAA;AAAA,MACP,KAAO,EAAA;AAAA,KACP,CAAA;AAAA,GACJ;AAEA,EAAA,OAAO,SAAS,IACd,mBAAA,KAAA,CAAA,aAAA,CAAC,OAAI,EAAI,EAAA,CAAA,EAAG,IAAI,CACd,EAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,MAAA;AAAA,IAAA;AAAA,MACC,KAAA,EAAO,EAAE,wBAAwB,CAAA;AAAA,MACjC,KAAA;AAAA,MACA,WAAW,KAAM,CAAA,MAAA,GAAS,IAAI,aAAc,CAAA,CAAC,IAAI,KAAc,CAAA,KAAA,KAAA;AAAA,MAC/D,QAAA,EAAU,CACR,KAAA,KAAA,gBAAA,CAAiB,KAAU,KAAA,KAAA,GAAQ,EAAC,GAAI,CAAC,MAAA,CAAO,KAAK,CAAC,CAAC;AAAA;AAAA,GAG7D,CAAA;AAEJ;;;;"}