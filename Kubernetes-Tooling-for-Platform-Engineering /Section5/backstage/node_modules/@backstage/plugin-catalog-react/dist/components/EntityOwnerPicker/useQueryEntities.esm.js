import { useApi } from '@backstage/core-plugin-api';
import { catalogApiRef } from '../../api.esm.js';
import useAsyncFn from 'react-use/esm/useAsyncFn';

function useQueryEntities() {
  const catalogApi = useApi(catalogApiRef);
  return useAsyncFn(
    async (request, options) => {
      const initialRequest = request;
      const cursorRequest = request;
      const limit = options?.limit ?? 20;
      if (cursorRequest.cursor) {
        const response2 = await catalogApi.queryEntities({
          cursor: cursorRequest.cursor,
          limit
        });
        return {
          cursor: response2.pageInfo.nextCursor,
          items: [...cursorRequest.items, ...response2.items]
        };
      }
      const response = await catalogApi.queryEntities({
        fullTextFilter: {
          term: initialRequest.text || "",
          fields: [
            "metadata.name",
            "kind",
            "spec.profile.displayname",
            "metadata.title"
          ]
        },
        filter: { kind: ["User", "Group"] },
        orderFields: [{ field: "metadata.name", order: "asc" }],
        limit
      });
      return {
        cursor: response.pageInfo.nextCursor,
        items: response.items
      };
    },
    [],
    { loading: true }
  );
}

export { useQueryEntities };
//# sourceMappingURL=useQueryEntities.esm.js.map
