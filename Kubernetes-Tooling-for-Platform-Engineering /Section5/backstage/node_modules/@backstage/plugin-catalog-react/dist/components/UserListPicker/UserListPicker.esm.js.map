{"version":3,"file":"UserListPicker.esm.js","sources":["../../../src/components/UserListPicker/UserListPicker.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  configApiRef,\n  IconComponent,\n  useApi,\n} from '@backstage/core-plugin-api';\nimport Card from '@material-ui/core/Card';\nimport List from '@material-ui/core/List';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { StarIcon } from '@backstage/core-components';\nimport React, { Fragment, useEffect, useMemo, useState } from 'react';\nimport { EntityUserFilter } from '../../filters';\nimport { useEntityList } from '../../hooks';\nimport { UserListFilterKind } from '../../types';\nimport { useOwnedEntitiesCount } from './useOwnedEntitiesCount';\nimport { useAllEntitiesCount } from './useAllEntitiesCount';\nimport { useStarredEntitiesCount } from './useStarredEntitiesCount';\nimport {\n  TranslationFunction,\n  useTranslationRef,\n} from '@backstage/core-plugin-api/alpha';\nimport { catalogReactTranslationRef } from '../../translation';\n\n/** @public */\nexport type CatalogReactUserListPickerClassKey =\n  | 'root'\n  | 'title'\n  | 'listIcon'\n  | 'menuItem'\n  | 'groupWrapper';\n\nconst useStyles = makeStyles(\n  theme => ({\n    root: {\n      backgroundColor: 'rgba(0, 0, 0, .11)',\n      boxShadow: 'none',\n      margin: theme.spacing(1, 0, 1, 0),\n    },\n    title: {\n      margin: theme.spacing(1, 0, 0, 1),\n      textTransform: 'uppercase',\n      fontSize: 12,\n      fontWeight: 'bold',\n    },\n    listIcon: {\n      minWidth: 30,\n      color: theme.palette.text.primary,\n    },\n    menuItem: {\n      minHeight: theme.spacing(6),\n    },\n    groupWrapper: {\n      margin: theme.spacing(1, 1, 2, 1),\n    },\n  }),\n  { name: 'CatalogReactUserListPicker' },\n);\n\nexport type ButtonGroup = {\n  name: string;\n  items: {\n    id: 'owned' | 'starred' | 'all';\n    label: string;\n    icon?: IconComponent;\n  }[];\n};\n\nfunction getFilterGroups(\n  orgName: string,\n  t: TranslationFunction<typeof catalogReactTranslationRef.T>,\n): ButtonGroup[] {\n  return [\n    {\n      name: t('userListPicker.personalFilter.title'),\n      items: [\n        {\n          id: 'owned',\n          label: t('userListPicker.personalFilter.ownedLabel'),\n          icon: SettingsIcon,\n        },\n        {\n          id: 'starred',\n          label: t('userListPicker.personalFilter.starredLabel'),\n          icon: StarIcon,\n        },\n      ],\n    },\n    {\n      name: orgName,\n      items: [\n        {\n          id: 'all',\n          label: t('userListPicker.orgFilterAllLabel'),\n        },\n      ],\n    },\n  ];\n}\n\n/** @public */\nexport type UserListPickerProps = {\n  initialFilter?: UserListFilterKind;\n  availableFilters?: UserListFilterKind[];\n};\n\n/** @public */\nexport const UserListPicker = (props: UserListPickerProps) => {\n  const { initialFilter, availableFilters } = props;\n  const classes = useStyles();\n  const configApi = useApi(configApiRef);\n  const { t } = useTranslationRef(catalogReactTranslationRef);\n  const orgName =\n    configApi.getOptionalString('organization.name') ??\n    t('userListPicker.defaultOrgName');\n  const {\n    filters,\n    updateFilters,\n    queryParameters: { kind: kindParameter, user: userParameter },\n  } = useEntityList();\n\n  // Remove group items that aren't in availableFilters and exclude\n  // any now-empty groups.\n  const userAndGroupFilterIds = ['starred', 'all'];\n  const filterGroups = getFilterGroups(orgName, t)\n    .map(filterGroup => ({\n      ...filterGroup,\n      items: filterGroup.items.filter(({ id }) =>\n        // TODO: avoid hardcoding kinds here\n        ['group', 'user'].some(kind => kind === kindParameter)\n          ? userAndGroupFilterIds.includes(id)\n          : !availableFilters || availableFilters.includes(id),\n      ),\n    }))\n    .filter(({ items }) => !!items.length);\n\n  const {\n    count: ownedEntitiesCount,\n    loading: loadingOwnedEntities,\n    filter: ownedEntitiesFilter,\n  } = useOwnedEntitiesCount();\n  const { count: allCount } = useAllEntitiesCount();\n  const {\n    count: starredEntitiesCount,\n    filter: starredEntitiesFilter,\n    loading: loadingStarredEntities,\n  } = useStarredEntitiesCount();\n\n  const queryParamUserFilter = useMemo(\n    () => [userParameter].flat()[0],\n    [userParameter],\n  );\n\n  const [selectedUserFilter, setSelectedUserFilter] = useState(\n    (queryParamUserFilter as UserListFilterKind) ?? initialFilter,\n  );\n\n  const filterCounts = useMemo(() => {\n    return {\n      all: allCount,\n      starred: starredEntitiesCount,\n      owned: ownedEntitiesCount,\n    };\n  }, [starredEntitiesCount, ownedEntitiesCount, allCount]);\n\n  // Set selected user filter on query parameter updates; this happens at initial page load and from\n  // external updates to the page location.\n  useEffect(() => {\n    if (queryParamUserFilter) {\n      setSelectedUserFilter(queryParamUserFilter as UserListFilterKind);\n    }\n  }, [queryParamUserFilter]);\n\n  const loading = loadingOwnedEntities || loadingStarredEntities;\n\n  useEffect(() => {\n    if (\n      !loading &&\n      !!selectedUserFilter &&\n      selectedUserFilter !== 'all' &&\n      filterCounts[selectedUserFilter] === 0\n    ) {\n      setSelectedUserFilter('all');\n    }\n  }, [loading, filterCounts, selectedUserFilter, setSelectedUserFilter]);\n\n  useEffect(() => {\n    if (!selectedUserFilter) {\n      return;\n    }\n    if (loading) {\n      return;\n    }\n\n    const getFilter = () => {\n      if (selectedUserFilter === 'owned') {\n        return ownedEntitiesFilter;\n      }\n      if (selectedUserFilter === 'starred') {\n        return starredEntitiesFilter;\n      }\n      return EntityUserFilter.all();\n    };\n\n    updateFilters({ user: getFilter() });\n  }, [\n    selectedUserFilter,\n    starredEntitiesFilter,\n    ownedEntitiesFilter,\n    updateFilters,\n\n    loading,\n  ]);\n\n  return (\n    <Card className={classes.root}>\n      {filterGroups.map(group => (\n        <Fragment key={group.name}>\n          <Typography\n            variant=\"subtitle2\"\n            component=\"span\"\n            className={classes.title}\n          >\n            {group.name}\n          </Typography>\n          <Card className={classes.groupWrapper}>\n            <List disablePadding dense role=\"menu\" aria-label={group.name}>\n              {group.items.map((item, index) => (\n                <MenuItem\n                  role=\"none presentation\"\n                  key={item.id}\n                  divider={index !== group.items.length - 1}\n                  onClick={() => setSelectedUserFilter(item.id)}\n                  selected={item.id === filters.user?.value}\n                  className={classes.menuItem}\n                  disabled={filterCounts[item.id] === 0}\n                  data-testid={`user-picker-${item.id}`}\n                  tabIndex={0}\n                  ContainerProps={{ role: 'menuitem' }}\n                >\n                  {item.icon && (\n                    <ListItemIcon className={classes.listIcon}>\n                      <item.icon fontSize=\"small\" />\n                    </ListItemIcon>\n                  )}\n                  <ListItemText>\n                    <Typography variant=\"body1\">{item.label} </Typography>\n                  </ListItemText>\n                  <ListItemSecondaryAction>\n                    {filterCounts[item.id] ?? '-'}\n                  </ListItemSecondaryAction>\n                </MenuItem>\n              ))}\n            </List>\n          </Card>\n        </Fragment>\n      ))}\n    </Card>\n  );\n};\n"],"names":[],"mappings":"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"}