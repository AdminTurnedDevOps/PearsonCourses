{"version":3,"file":"OverviewPage.esm.js","sources":["../../../../src/components/InspectEntityDialog/components/OverviewPage.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlphaEntity } from '@backstage/catalog-model/alpha';\nimport Box from '@material-ui/core/Box';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport groupBy from 'lodash/groupBy';\nimport sortBy from 'lodash/sortBy';\nimport React from 'react';\nimport { EntityRefLink } from '../../EntityRefLink';\nimport {\n  Container,\n  HelpIcon,\n  KeyValueListItem,\n  ListItemText,\n  ListSubheader,\n} from './common';\nimport { stringifyEntityRef } from '@backstage/catalog-model';\nimport { CopyTextButton } from '@backstage/core-components';\nimport { catalogReactTranslationRef } from '../../../translation';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n});\n\nexport function OverviewPage(props: { entity: AlphaEntity }) {\n  const classes = useStyles();\n  const {\n    apiVersion,\n    kind,\n    metadata,\n    spec,\n    relations = [],\n    status = {},\n  } = props.entity;\n\n  const groupedRelations = groupBy(\n    sortBy(relations, r => r.targetRef),\n    'type',\n  );\n  const { t } = useTranslationRef(catalogReactTranslationRef);\n\n  const entityRef = stringifyEntityRef(props.entity);\n  return (\n    <>\n      <DialogContentText variant=\"h2\">\n        {t('inspectEntityDialog.overviewPage.title')}\n      </DialogContentText>\n      <div className={classes.root}>\n        <Container title=\"Identity\">\n          <List dense>\n            <ListItem>\n              <ListItemText primary=\"apiVersion\" secondary={apiVersion} />\n            </ListItem>\n            <ListItem>\n              <ListItemText primary=\"kind\" secondary={kind} />\n            </ListItem>\n            {spec?.type && (\n              <ListItem>\n                <ListItemText\n                  primary=\"spec.type\"\n                  secondary={spec.type?.toString()}\n                />\n              </ListItem>\n            )}\n            {metadata.uid && (\n              <ListItem>\n                <ListItemText primary=\"uid\" secondary={metadata.uid} />\n                <ListItemSecondaryAction>\n                  <CopyTextButton text={metadata.uid} />\n                </ListItemSecondaryAction>\n              </ListItem>\n            )}\n            {metadata.etag && (\n              <ListItem>\n                <ListItemText primary=\"etag\" secondary={metadata.etag} />\n                <ListItemSecondaryAction>\n                  <CopyTextButton text={metadata.etag} />\n                </ListItemSecondaryAction>\n              </ListItem>\n            )}\n            <ListItem>\n              <ListItemText primary=\"entityRef\" secondary={entityRef} />\n              <ListItemSecondaryAction>\n                <CopyTextButton text={entityRef} />\n              </ListItemSecondaryAction>\n            </ListItem>\n          </List>\n        </Container>\n\n        <Container title=\"Metadata\">\n          {!!Object.keys(metadata.annotations || {}).length && (\n            <List\n              dense\n              subheader={\n                <ListSubheader>\n                  Annotations\n                  <HelpIcon to=\"https://backstage.io/docs/features/software-catalog/well-known-annotations\" />\n                </ListSubheader>\n              }\n            >\n              {Object.entries(metadata.annotations!).map(entry => (\n                <KeyValueListItem key={entry[0]} indent entry={entry} />\n              ))}\n            </List>\n          )}\n          {!!Object.keys(metadata.labels || {}).length && (\n            <List dense subheader={<ListSubheader>Labels</ListSubheader>}>\n              {Object.entries(metadata.labels!).map(entry => (\n                <KeyValueListItem key={entry[0]} indent entry={entry} />\n              ))}\n            </List>\n          )}\n          {!!metadata.tags?.length && (\n            <List dense subheader={<ListSubheader>Tags</ListSubheader>}>\n              {metadata.tags.map((tag, index) => (\n                <ListItem key={`${tag}-${index}`}>\n                  <ListItemIcon />\n                  <ListItemText primary={tag} />\n                </ListItem>\n              ))}\n            </List>\n          )}\n        </Container>\n\n        {!!relations.length && (\n          <Container\n            title=\"Relations\"\n            helpLink=\"https://backstage.io/docs/features/software-catalog/well-known-relations\"\n          >\n            {Object.entries(groupedRelations).map(\n              ([type, groupRelations], index) => (\n                <div key={index}>\n                  <List dense subheader={<ListSubheader>{type}</ListSubheader>}>\n                    {groupRelations.map(group => (\n                      <ListItem key={group.targetRef}>\n                        <ListItemText\n                          primary={\n                            <EntityRefLink entityRef={group.targetRef} />\n                          }\n                        />\n                      </ListItem>\n                    ))}\n                  </List>\n                </div>\n              ),\n            )}\n          </Container>\n        )}\n\n        {!!status.items?.length && (\n          <Container\n            title=\"Status\"\n            helpLink=\"https://backstage.io/docs/features/software-catalog/well-known-statuses\"\n          >\n            {status.items.map((item, index) => (\n              <div key={index}>\n                <Typography>\n                  {item.level}: {item.type}\n                </Typography>\n                <Box ml={2}>{item.message}</Box>\n              </div>\n            ))}\n          </Container>\n        )}\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":"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"}