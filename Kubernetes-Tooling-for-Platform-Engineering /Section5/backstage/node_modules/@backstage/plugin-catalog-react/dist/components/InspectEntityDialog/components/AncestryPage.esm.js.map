{"version":3,"file":"AncestryPage.esm.js","sources":["../../../../src/components/InspectEntityDialog/components/AncestryPage.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  DEFAULT_NAMESPACE,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport {\n  DependencyGraph,\n  DependencyGraphTypes,\n  Link,\n  Progress,\n  ResponseErrorPanel,\n} from '@backstage/core-components';\nimport { useApi, useApp, useRouteRef } from '@backstage/core-plugin-api';\nimport Box from '@material-ui/core/Box';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport React, { useLayoutEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport useAsync from 'react-use/esm/useAsync';\nimport { catalogApiRef } from '../../../api';\nimport { humanizeEntityRef } from '../../EntityRefLink';\nimport { entityRouteRef } from '../../../routes';\nimport { EntityKindIcon } from './EntityKindIcon';\nimport { catalogReactTranslationRef } from '../../../translation';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\n\nconst useStyles = makeStyles(theme => ({\n  node: {\n    fill: theme.palette.grey[300],\n    stroke: theme.palette.grey[300],\n    '&.primary': {\n      fill: theme.palette.primary.light,\n      stroke: theme.palette.primary.light,\n    },\n    '&.secondary': {\n      fill: theme.palette.secondary.light,\n      stroke: theme.palette.secondary.light,\n    },\n  },\n  text: {\n    fill: theme.palette.getContrastText(theme.palette.grey[300]),\n    '&.primary': {\n      fill: theme.palette.primary.contrastText,\n    },\n    '&.secondary': {\n      fill: theme.palette.secondary.contrastText,\n    },\n    '&.focused': {\n      fontWeight: 'bold',\n    },\n  },\n  clickable: {\n    cursor: 'pointer',\n  },\n}));\n\ntype NodeType = Entity & { root: boolean };\n\nfunction useAncestry(root: Entity): {\n  loading: boolean;\n  error?: Error;\n  nodes: DependencyGraphTypes.DependencyNode<NodeType>[];\n  edges: DependencyGraphTypes.DependencyEdge[];\n} {\n  const catalogClient = useApi(catalogApiRef);\n  const entityRef = stringifyEntityRef(root);\n\n  const { loading, error, value } = useAsync(async () => {\n    const response = await catalogClient.getEntityAncestors({ entityRef });\n    const nodes = new Array<DependencyGraphTypes.DependencyNode<NodeType>>();\n    const edges = new Array<DependencyGraphTypes.DependencyEdge>();\n    for (const current of response.items) {\n      const currentRef = stringifyEntityRef(current.entity);\n      const isRootNode = currentRef === response.rootEntityRef;\n      nodes.push({ id: currentRef, root: isRootNode, ...current.entity });\n      for (const parentRef of current.parentEntityRefs) {\n        edges.push({ from: currentRef, to: parentRef });\n      }\n    }\n    return { nodes, edges };\n  }, [entityRef]);\n\n  return {\n    loading,\n    error,\n    nodes: value?.nodes || [],\n    edges: value?.edges || [],\n  };\n}\n\nfunction CustomNode({ node }: DependencyGraphTypes.RenderNodeProps<NodeType>) {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const entityRoute = useRouteRef(entityRouteRef);\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n  const app = useApp();\n  const idRef = useRef<SVGTextElement | null>(null);\n\n  useLayoutEffect(() => {\n    // set the width to the length of the ID\n    if (idRef.current) {\n      let { height: renderedHeight, width: renderedWidth } =\n        idRef.current.getBBox();\n      renderedHeight = Math.round(renderedHeight);\n      renderedWidth = Math.round(renderedWidth);\n      if (renderedHeight !== height || renderedWidth !== width) {\n        setWidth(renderedWidth);\n        setHeight(renderedHeight);\n      }\n    }\n  }, [width, height]);\n\n  const hasKindIcon = app.getSystemIcon(\n    `kind:${node.kind.toLocaleLowerCase('en-US')}`,\n  );\n  const padding = 10;\n  const iconSize = height;\n  const paddedIconWidth = hasKindIcon ? iconSize + padding : 0;\n  const paddedWidth = paddedIconWidth + width + padding * 2;\n  const paddedHeight = height + padding * 2;\n\n  const displayTitle =\n    node.metadata.title ||\n    (node.kind && node.metadata.name && node.metadata.namespace\n      ? humanizeEntityRef({\n          kind: node.kind,\n          name: node.metadata.name,\n          namespace: node.metadata.namespace || '',\n        })\n      : node.id);\n\n  const onClick = () => {\n    navigate(\n      entityRoute({\n        kind: node.kind,\n        namespace: node.metadata.namespace || DEFAULT_NAMESPACE,\n        name: node.metadata.name,\n      }),\n    );\n  };\n\n  return (\n    <g onClick={onClick} className={classes.clickable}>\n      <rect\n        className={classNames(\n          classes.node,\n          node.root ? 'secondary' : 'primary',\n        )}\n        width={paddedWidth}\n        height={paddedHeight}\n        rx={10}\n      />\n      {hasKindIcon && (\n        <EntityKindIcon\n          kind={node.kind}\n          y={padding}\n          x={padding}\n          width={iconSize}\n          height={iconSize}\n          className={classNames(\n            classes.text,\n            node.root ? 'secondary' : 'primary',\n          )}\n        />\n      )}\n      <text\n        ref={idRef}\n        className={classNames(\n          classes.text,\n          node.root ? 'secondary' : 'primary',\n        )}\n        y={paddedHeight / 2}\n        x={paddedIconWidth + (width + padding * 2) / 2}\n        textAnchor=\"middle\"\n        alignmentBaseline=\"middle\"\n      >\n        {displayTitle}\n      </text>\n    </g>\n  );\n}\n\nexport function AncestryPage(props: { entity: Entity }) {\n  const { loading, error, nodes, edges } = useAncestry(props.entity);\n  const { t } = useTranslationRef(catalogReactTranslationRef);\n  if (loading) {\n    return <Progress />;\n  } else if (error) {\n    return <ResponseErrorPanel error={error} />;\n  }\n\n  return (\n    <>\n      <DialogContentText variant=\"h2\">\n        {t('inspectEntityDialog.ancestryPage.title')}\n      </DialogContentText>\n      <DialogContentText gutterBottom>\n        This is the ancestry of entities above the current one - as in, the\n        chain(s) of entities down to the current one, where{' '}\n        <Link to=\"https://backstage.io/docs/features/software-catalog/life-of-an-entity\">\n          processors emitted\n        </Link>{' '}\n        child entities that ultimately led to the current one existing. Note\n        that this is a completely different mechanism from relations.\n      </DialogContentText>\n      <Box mt={4}>\n        <DependencyGraph\n          nodes={nodes}\n          edges={edges}\n          renderNode={CustomNode}\n          direction={DependencyGraphTypes.Direction.BOTTOM_TOP}\n          zoom=\"enable-on-click\"\n        />\n      </Box>\n    </>\n  );\n}\n"],"names":[],"mappings":"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"}