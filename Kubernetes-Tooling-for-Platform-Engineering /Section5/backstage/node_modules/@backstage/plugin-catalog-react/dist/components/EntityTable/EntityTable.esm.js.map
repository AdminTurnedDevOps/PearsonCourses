{"version":3,"file":"EntityTable.esm.js","sources":["../../../src/components/EntityTable/EntityTable.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { ReactNode } from 'react';\nimport { columnFactories } from './columns';\nimport { componentEntityColumns, systemEntityColumns } from './presets';\nimport {\n  InfoCardVariants,\n  Table,\n  TableColumn,\n  TableOptions,\n} from '@backstage/core-components';\n\n/**\n * Props for {@link EntityTable}.\n *\n * @public\n */\nexport interface EntityTableProps<T extends Entity> {\n  title: string;\n  variant?: InfoCardVariants;\n  entities: T[];\n  emptyContent?: ReactNode;\n  columns: TableColumn<T>[];\n  tableOptions?: TableOptions;\n}\n\nconst useStyles = makeStyles(theme => ({\n  empty: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}));\n\n/**\n * A general entity table component, that can be used for composing more\n * specific entity tables.\n *\n * @public\n */\nexport const EntityTable = <T extends Entity>(props: EntityTableProps<T>) => {\n  const {\n    entities,\n    title,\n    emptyContent,\n    variant = 'gridItem',\n    columns,\n    tableOptions = {},\n  } = props;\n\n  const classes = useStyles();\n  const tableStyle: React.CSSProperties = {\n    minWidth: '0',\n    width: '100%',\n  };\n\n  if (variant === 'gridItem') {\n    tableStyle.height = 'calc(100% - 10px)';\n  }\n\n  return (\n    <Table<T>\n      columns={columns}\n      title={title}\n      style={tableStyle}\n      emptyContent={\n        emptyContent && <div className={classes.empty}>{emptyContent}</div>\n      }\n      options={{\n        // TODO: Toolbar padding if off compared to other cards, should be: padding: 16px 24px;\n        search: false,\n        paging: false,\n        actionsColumnIndex: -1,\n        padding: 'dense',\n        draggable: false,\n        ...tableOptions,\n      }}\n      data={entities}\n    />\n  );\n};\n\nEntityTable.columns = columnFactories;\n\nEntityTable.systemEntityColumns = systemEntityColumns;\n\nEntityTable.componentEntityColumns = componentEntityColumns;\n"],"names":[],"mappings":";;;;;;AA0CA,MAAM,SAAA,GAAY,WAAW,CAAU,KAAA,MAAA;AAAA,EACrC,KAAO,EAAA;AAAA,IACL,OAAA,EAAS,KAAM,CAAA,OAAA,CAAQ,CAAC,CAAA;AAAA,IACxB,OAAS,EAAA,MAAA;AAAA,IACT,cAAgB,EAAA;AAAA;AAEpB,CAAE,CAAA,CAAA;AAQW,MAAA,WAAA,GAAc,CAAmB,KAA+B,KAAA;AAC3E,EAAM,MAAA;AAAA,IACJ,QAAA;AAAA,IACA,KAAA;AAAA,IACA,YAAA;AAAA,IACA,OAAU,GAAA,UAAA;AAAA,IACV,OAAA;AAAA,IACA,eAAe;AAAC,GACd,GAAA,KAAA;AAEJ,EAAA,MAAM,UAAU,SAAU,EAAA;AAC1B,EAAA,MAAM,UAAkC,GAAA;AAAA,IACtC,QAAU,EAAA,GAAA;AAAA,IACV,KAAO,EAAA;AAAA,GACT;AAEA,EAAA,IAAI,YAAY,UAAY,EAAA;AAC1B,IAAA,UAAA,CAAW,MAAS,GAAA,mBAAA;AAAA;AAGtB,EACE,uBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,KAAA;AAAA,IAAA;AAAA,MACC,OAAA;AAAA,MACA,KAAA;AAAA,MACA,KAAO,EAAA,UAAA;AAAA,MACP,cACE,YAAgB,oBAAA,KAAA,CAAA,aAAA,CAAC,SAAI,SAAW,EAAA,OAAA,CAAQ,SAAQ,YAAa,CAAA;AAAA,MAE/D,OAAS,EAAA;AAAA;AAAA,QAEP,MAAQ,EAAA,KAAA;AAAA,QACR,MAAQ,EAAA,KAAA;AAAA,QACR,kBAAoB,EAAA,CAAA,CAAA;AAAA,QACpB,OAAS,EAAA,OAAA;AAAA,QACT,SAAW,EAAA,KAAA;AAAA,QACX,GAAG;AAAA,OACL;AAAA,MACA,IAAM,EAAA;AAAA;AAAA,GACR;AAEJ;AAEA,WAAA,CAAY,OAAU,GAAA,eAAA;AAEtB,WAAA,CAAY,mBAAsB,GAAA,mBAAA;AAElC,WAAA,CAAY,sBAAyB,GAAA,sBAAA;;;;"}