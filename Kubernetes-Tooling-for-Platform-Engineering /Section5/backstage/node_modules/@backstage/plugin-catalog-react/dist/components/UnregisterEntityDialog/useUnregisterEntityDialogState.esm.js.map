{"version":3,"file":"useUnregisterEntityDialogState.esm.js","sources":["../../../src/components/UnregisterEntityDialog/useUnregisterEntityDialogState.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  CompoundEntityRef,\n  getCompoundEntityRef,\n  ANNOTATION_ORIGIN_LOCATION,\n} from '@backstage/catalog-model';\nimport { catalogApiRef } from '../../api';\nimport { useCallback } from 'react';\nimport useAsync from 'react-use/esm/useAsync';\nimport { useApi } from '@backstage/core-plugin-api';\n\n/**\n * Each distinct state that the dialog can be in at any given time.\n */\nexport type UseUnregisterEntityDialogState =\n  | {\n      type: 'loading';\n    }\n  | {\n      type: 'error';\n      error: Error;\n    }\n  | {\n      type: 'bootstrap';\n      location: string;\n      deleteEntity: () => Promise<void>;\n    }\n  | {\n      type: 'unregister';\n      location: string;\n      colocatedEntities: CompoundEntityRef[];\n      unregisterLocation: () => Promise<void>;\n      deleteEntity: () => Promise<void>;\n    }\n  | {\n      type: 'only-delete';\n      deleteEntity: () => Promise<void>;\n    };\n\n/**\n * Houses the main logic for unregistering entities and their locations.\n */\nexport function useUnregisterEntityDialogState(\n  entity: Entity,\n): UseUnregisterEntityDialogState {\n  const catalogApi = useApi(catalogApiRef);\n  const locationRef = entity.metadata.annotations?.[ANNOTATION_ORIGIN_LOCATION];\n  const uid = entity.metadata.uid;\n  const isBootstrap = locationRef === 'bootstrap:bootstrap';\n\n  // Load the prerequisite data: what entities that are colocated with us, and\n  // what location that spawned us\n  const prerequisites = useAsync(async () => {\n    const locationPromise = catalogApi.getLocationByRef(locationRef!);\n\n    let colocatedEntitiesPromise: Promise<Entity[]>;\n    if (!locationRef) {\n      colocatedEntitiesPromise = Promise.resolve([]);\n    } else {\n      const locationAnnotationFilter = `metadata.annotations.${ANNOTATION_ORIGIN_LOCATION}`;\n      colocatedEntitiesPromise = catalogApi\n        .getEntities({\n          filter: { [locationAnnotationFilter]: locationRef },\n          fields: [\n            'kind',\n            'metadata.uid',\n            'metadata.name',\n            'metadata.namespace',\n          ],\n        })\n        .then(response => response.items);\n    }\n\n    return Promise.all([locationPromise, colocatedEntitiesPromise]).then(\n      ([location, colocatedEntities]) => ({\n        location,\n        colocatedEntities,\n      }),\n    );\n  }, [catalogApi, entity]);\n\n  // Unregisters the underlying location which will remove all of the entities that are spawned from\n  // it. Can only ever be called when the prerequisites have finished loading successfully, and if\n  // there was a matching location.\n  const unregisterLocation = useCallback(\n    async function unregisterLocationFn() {\n      const { location } = prerequisites.value!;\n      await catalogApi.removeLocationById(location!.id);\n    },\n    [catalogApi, prerequisites],\n  );\n\n  // Just removes the entity, without affecting locations in any way.\n  const deleteEntity = useCallback(\n    async function deleteEntityFn() {\n      await catalogApi.removeEntityByUid(uid!);\n    },\n    [catalogApi, uid],\n  );\n\n  // If this is a bootstrap location entity, don't even block on loading\n  // prerequisites. We know that all that we will do is to offer to remove the\n  // entity, and that doesn't require anything from the prerequisites.\n  if (isBootstrap) {\n    return { type: 'bootstrap', location: locationRef!, deleteEntity };\n  }\n\n  // Return early if prerequisites still loading or failing\n  const { loading, error, value } = prerequisites;\n  if (loading) {\n    return { type: 'loading' };\n  } else if (error) {\n    return { type: 'error', error };\n  }\n\n  const { location, colocatedEntities } = value!;\n  if (!location) {\n    return { type: 'only-delete', deleteEntity };\n  }\n  return {\n    type: 'unregister',\n    location: locationRef!,\n    colocatedEntities: colocatedEntities.map(getCompoundEntityRef),\n    unregisterLocation,\n    deleteEntity,\n  };\n}\n"],"names":["location","colocatedEntities"],"mappings":";;;;;;AA0DO,SAAS,+BACd,MACgC,EAAA;AAChC,EAAM,MAAA,UAAA,GAAa,OAAO,aAAa,CAAA;AACvC,EAAA,MAAM,WAAc,GAAA,MAAA,CAAO,QAAS,CAAA,WAAA,GAAc,0BAA0B,CAAA;AAC5E,EAAM,MAAA,GAAA,GAAM,OAAO,QAAS,CAAA,GAAA;AAC5B,EAAA,MAAM,cAAc,WAAgB,KAAA,qBAAA;AAIpC,EAAM,MAAA,aAAA,GAAgB,SAAS,YAAY;AACzC,IAAM,MAAA,eAAA,GAAkB,UAAW,CAAA,gBAAA,CAAiB,WAAY,CAAA;AAEhE,IAAI,IAAA,wBAAA;AACJ,IAAA,IAAI,CAAC,WAAa,EAAA;AAChB,MAA2B,wBAAA,GAAA,OAAA,CAAQ,OAAQ,CAAA,EAAE,CAAA;AAAA,KACxC,MAAA;AACL,MAAM,MAAA,wBAAA,GAA2B,wBAAwB,0BAA0B,CAAA,CAAA;AACnF,MAAA,wBAAA,GAA2B,WACxB,WAAY,CAAA;AAAA,QACX,MAAQ,EAAA,EAAE,CAAC,wBAAwB,GAAG,WAAY,EAAA;AAAA,QAClD,MAAQ,EAAA;AAAA,UACN,MAAA;AAAA,UACA,cAAA;AAAA,UACA,eAAA;AAAA,UACA;AAAA;AACF,OACD,CAAA,CACA,IAAK,CAAA,CAAA,QAAA,KAAY,SAAS,KAAK,CAAA;AAAA;AAGpC,IAAA,OAAO,QAAQ,GAAI,CAAA,CAAC,eAAiB,EAAA,wBAAwB,CAAC,CAAE,CAAA,IAAA;AAAA,MAC9D,CAAC,CAACA,SAAUC,EAAAA,kBAAiB,CAAO,MAAA;AAAA,QAClC,QAAAD,EAAAA,SAAAA;AAAA,QACA,iBAAAC,EAAAA;AAAA,OACF;AAAA,KACF;AAAA,GACC,EAAA,CAAC,UAAY,EAAA,MAAM,CAAC,CAAA;AAKvB,EAAA,MAAM,kBAAqB,GAAA,WAAA;AAAA,IACzB,eAAe,oBAAuB,GAAA;AACpC,MAAA,MAAM,EAAE,QAAA,EAAAD,SAAS,EAAA,GAAI,aAAc,CAAA,KAAA;AACnC,MAAM,MAAA,UAAA,CAAW,kBAAmBA,CAAAA,SAAAA,CAAU,EAAE,CAAA;AAAA,KAClD;AAAA,IACA,CAAC,YAAY,aAAa;AAAA,GAC5B;AAGA,EAAA,MAAM,YAAe,GAAA,WAAA;AAAA,IACnB,eAAe,cAAiB,GAAA;AAC9B,MAAM,MAAA,UAAA,CAAW,kBAAkB,GAAI,CAAA;AAAA,KACzC;AAAA,IACA,CAAC,YAAY,GAAG;AAAA,GAClB;AAKA,EAAA,IAAI,WAAa,EAAA;AACf,IAAA,OAAO,EAAE,IAAA,EAAM,WAAa,EAAA,QAAA,EAAU,aAAc,YAAa,EAAA;AAAA;AAInE,EAAA,MAAM,EAAE,OAAA,EAAS,KAAO,EAAA,KAAA,EAAU,GAAA,aAAA;AAClC,EAAA,IAAI,OAAS,EAAA;AACX,IAAO,OAAA,EAAE,MAAM,SAAU,EAAA;AAAA,aAChB,KAAO,EAAA;AAChB,IAAO,OAAA,EAAE,IAAM,EAAA,OAAA,EAAS,KAAM,EAAA;AAAA;AAGhC,EAAM,MAAA,EAAE,QAAU,EAAA,iBAAA,EAAsB,GAAA,KAAA;AACxC,EAAA,IAAI,CAAC,QAAU,EAAA;AACb,IAAO,OAAA,EAAE,IAAM,EAAA,aAAA,EAAe,YAAa,EAAA;AAAA;AAE7C,EAAO,OAAA;AAAA,IACL,IAAM,EAAA,YAAA;AAAA,IACN,QAAU,EAAA,WAAA;AAAA,IACV,iBAAA,EAAmB,iBAAkB,CAAA,GAAA,CAAI,oBAAoB,CAAA;AAAA,IAC7D,kBAAA;AAAA,IACA;AAAA,GACF;AACF;;;;"}