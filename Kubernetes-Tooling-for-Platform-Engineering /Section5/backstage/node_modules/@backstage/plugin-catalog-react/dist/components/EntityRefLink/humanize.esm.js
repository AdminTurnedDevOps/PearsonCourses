import { DEFAULT_NAMESPACE } from '@backstage/catalog-model';
import get from 'lodash/get';

function humanizeEntityRef(entityRef, opts) {
  const defaultKind = opts?.defaultKind;
  let kind;
  let namespace;
  let name;
  if ("metadata" in entityRef) {
    kind = entityRef.kind;
    namespace = entityRef.metadata.namespace;
    name = entityRef.metadata.name;
  } else {
    kind = entityRef.kind;
    namespace = entityRef.namespace;
    name = entityRef.name;
  }
  if (namespace === void 0 || namespace === "") {
    namespace = DEFAULT_NAMESPACE;
  }
  if (opts?.defaultNamespace !== void 0) {
    if (opts?.defaultNamespace === namespace) {
      namespace = void 0;
    }
  } else if (namespace === DEFAULT_NAMESPACE) {
    namespace = void 0;
  }
  kind = kind.toLocaleLowerCase("en-US");
  kind = defaultKind && defaultKind.toLocaleLowerCase("en-US") === kind ? void 0 : kind;
  return `${kind ? `${kind}:` : ""}${namespace ? `${namespace}/` : ""}${name}`;
}
function humanizeEntity(entity, defaultName) {
  for (const path of ["spec.profile.displayName", "metadata.title"]) {
    const value = get(entity, path);
    if (value && typeof value === "string") {
      return value;
    }
  }
  return defaultName;
}

export { humanizeEntity, humanizeEntityRef };
//# sourceMappingURL=humanize.esm.js.map
