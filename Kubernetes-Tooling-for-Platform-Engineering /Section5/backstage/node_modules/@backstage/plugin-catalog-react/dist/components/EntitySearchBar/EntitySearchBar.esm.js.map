{"version":3,"file":"EntitySearchBar.esm.js","sources":["../../../src/components/EntitySearchBar/EntitySearchBar.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Clear from '@material-ui/icons/Clear';\nimport Search from '@material-ui/icons/Search';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport useDebounce from 'react-use/lib/useDebounce';\nimport { useEntityList } from '../../hooks/useEntityListProvider';\nimport { EntityTextFilter } from '../../filters';\nimport { catalogReactTranslationRef } from '../../translation';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\n\n/** @public */\nexport type CatalogReactEntitySearchBarClassKey = 'searchToolbar' | 'input';\n\nconst useStyles = makeStyles(\n  _theme => ({\n    searchToolbar: {\n      paddingLeft: 0,\n      paddingRight: 0,\n    },\n    input: {},\n  }),\n  { name: 'CatalogReactEntitySearchBar' },\n);\n\n/**\n * Renders search bar for filtering the entity list.\n * @public\n */\nexport const EntitySearchBar = () => {\n  const classes = useStyles();\n  const { t } = useTranslationRef(catalogReactTranslationRef);\n\n  const {\n    updateFilters,\n    queryParameters: { text: textParameter },\n  } = useEntityList();\n\n  const queryParamTextFilter = useMemo(\n    () => [textParameter].flat()[0],\n    [textParameter],\n  );\n\n  const [search, setSearch] = useState(queryParamTextFilter ?? '');\n\n  useDebounce(\n    () => {\n      updateFilters({\n        text: search.length ? new EntityTextFilter(search) : undefined,\n      });\n    },\n    250,\n    [search, updateFilters],\n  );\n\n  useEffect(() => {\n    if (queryParamTextFilter) {\n      setSearch(queryParamTextFilter);\n    }\n  }, [queryParamTextFilter]);\n\n  return (\n    <Toolbar className={classes.searchToolbar}>\n      <FormControl>\n        <Input\n          aria-label=\"search\"\n          id=\"input-with-icon-adornment\"\n          className={classes.input}\n          placeholder={t('entitySearchBar.placeholder')}\n          autoComplete=\"off\"\n          onChange={event => setSearch(event.target.value)}\n          value={search}\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <Search />\n            </InputAdornment>\n          }\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"clear search\"\n                onClick={() => setSearch('')}\n                edge=\"end\"\n                disabled={search.length === 0}\n              >\n                <Clear />\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n    </Toolbar>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAkCA,MAAM,SAAY,GAAA,UAAA;AAAA,EAChB,CAAW,MAAA,MAAA;AAAA,IACT,aAAe,EAAA;AAAA,MACb,WAAa,EAAA,CAAA;AAAA,MACb,YAAc,EAAA;AAAA,KAChB;AAAA,IACA,OAAO;AAAC,GACV,CAAA;AAAA,EACA,EAAE,MAAM,6BAA8B;AACxC,CAAA;AAMO,MAAM,kBAAkB,MAAM;AACnC,EAAA,MAAM,UAAU,SAAU,EAAA;AAC1B,EAAA,MAAM,EAAE,CAAA,EAAM,GAAA,iBAAA,CAAkB,0BAA0B,CAAA;AAE1D,EAAM,MAAA;AAAA,IACJ,aAAA;AAAA,IACA,eAAA,EAAiB,EAAE,IAAA,EAAM,aAAc;AAAA,MACrC,aAAc,EAAA;AAElB,EAAA,MAAM,oBAAuB,GAAA,OAAA;AAAA,IAC3B,MAAM,CAAC,aAAa,CAAE,CAAA,IAAA,GAAO,CAAC,CAAA;AAAA,IAC9B,CAAC,aAAa;AAAA,GAChB;AAEA,EAAA,MAAM,CAAC,MAAQ,EAAA,SAAS,CAAI,GAAA,QAAA,CAAS,wBAAwB,EAAE,CAAA;AAE/D,EAAA,WAAA;AAAA,IACE,MAAM;AACJ,MAAc,aAAA,CAAA;AAAA,QACZ,MAAM,MAAO,CAAA,MAAA,GAAS,IAAI,gBAAA,CAAiB,MAAM,CAAI,GAAA,KAAA;AAAA,OACtD,CAAA;AAAA,KACH;AAAA,IACA,GAAA;AAAA,IACA,CAAC,QAAQ,aAAa;AAAA,GACxB;AAEA,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,IAAI,oBAAsB,EAAA;AACxB,MAAA,SAAA,CAAU,oBAAoB,CAAA;AAAA;AAChC,GACF,EAAG,CAAC,oBAAoB,CAAC,CAAA;AAEzB,EAAA,2CACG,OAAQ,EAAA,EAAA,SAAA,EAAW,OAAQ,CAAA,aAAA,EAAA,sCACzB,WACC,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,KAAA;AAAA,IAAA;AAAA,MACC,YAAW,EAAA,QAAA;AAAA,MACX,EAAG,EAAA,2BAAA;AAAA,MACH,WAAW,OAAQ,CAAA,KAAA;AAAA,MACnB,WAAA,EAAa,EAAE,6BAA6B,CAAA;AAAA,MAC5C,YAAa,EAAA,KAAA;AAAA,MACb,QAAU,EAAA,CAAA,KAAA,KAAS,SAAU,CAAA,KAAA,CAAM,OAAO,KAAK,CAAA;AAAA,MAC/C,KAAO,EAAA,MAAA;AAAA,MACP,gCACG,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA,EAAe,UAAS,OACvB,EAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,YAAO,CACV,CAAA;AAAA,MAEF,YACE,kBAAA,KAAA,CAAA,aAAA,CAAC,cAAe,EAAA,EAAA,QAAA,EAAS,KACvB,EAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,QAAC,UAAA;AAAA,QAAA;AAAA,UACC,YAAW,EAAA,cAAA;AAAA,UACX,OAAA,EAAS,MAAM,SAAA,CAAU,EAAE,CAAA;AAAA,UAC3B,IAAK,EAAA,KAAA;AAAA,UACL,QAAA,EAAU,OAAO,MAAW,KAAA;AAAA,SAAA;AAAA,4CAE3B,KAAM,EAAA,IAAA;AAAA,OAEX;AAAA;AAAA,GAGN,CACF,CAAA;AAEJ;;;;"}