'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var authPlugin = require('./authPlugin.cjs.js');
var router = require('./service/router.cjs.js');
var providers = require('./providers/providers.cjs.js');
var router$1 = require('./providers/router.cjs.js');
var createAuthProviderIntegration = require('./providers/createAuthProviderIntegration.cjs.js');
var prepareBackstageIdentityResponse = require('./providers/prepareBackstageIdentityResponse.cjs.js');
var authFlowHelpers = require('./lib/flow/authFlowHelpers.cjs.js');
var OAuthEnvironmentHandler = require('./lib/oauth/OAuthEnvironmentHandler.cjs.js');
var OAuthAdapter = require('./lib/oauth/OAuthAdapter.cjs.js');
var helpers = require('./lib/oauth/helpers.cjs.js');
var CatalogIdentityClient = require('./lib/catalog/CatalogIdentityClient.cjs.js');
var CatalogAuthResolverContext = require('./lib/resolvers/CatalogAuthResolverContext.cjs.js');



exports.default = authPlugin.authPlugin;
exports.createRouter = router.createRouter;
exports.defaultAuthProviderFactories = providers.defaultAuthProviderFactories;
exports.providers = providers.providers;
exports.createOriginFilter = router$1.createOriginFilter;
exports.createAuthProviderIntegration = createAuthProviderIntegration.createAuthProviderIntegration;
exports.prepareBackstageIdentityResponse = prepareBackstageIdentityResponse.prepareBackstageIdentityResponse;
exports.ensuresXRequestedWith = authFlowHelpers.ensuresXRequestedWith;
exports.postMessageResponse = authFlowHelpers.postMessageResponse;
exports.OAuthEnvironmentHandler = OAuthEnvironmentHandler.OAuthEnvironmentHandler;
exports.OAuthAdapter = OAuthAdapter.OAuthAdapter;
exports.encodeState = helpers.encodeState;
exports.readState = helpers.readState;
exports.verifyNonce = helpers.verifyNonce;
exports.CatalogIdentityClient = CatalogIdentityClient.CatalogIdentityClient;
exports.getDefaultOwnershipEntityRefs = CatalogAuthResolverContext.getDefaultOwnershipEntityRefs;
//# sourceMappingURL=index.cjs.js.map
