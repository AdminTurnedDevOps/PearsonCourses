'use strict';

var config = require('@backstage/config');
var types = require('@backstage/types');

const TOKEN_EXP_DEFAULT_S = 3600;
const TOKEN_EXP_MIN_S = 600;
const TOKEN_EXP_MAX_S = 86400;
function readBackstageTokenExpiration(config$1) {
  const processingIntervalKey = "auth.backstageTokenExpiration";
  if (!config$1.has(processingIntervalKey)) {
    return TOKEN_EXP_DEFAULT_S;
  }
  const duration = config.readDurationFromConfig(config$1, {
    key: processingIntervalKey
  });
  const durationS = Math.round(types.durationToMilliseconds(duration) / 1e3);
  if (durationS < TOKEN_EXP_MIN_S) {
    return TOKEN_EXP_MIN_S;
  } else if (durationS > TOKEN_EXP_MAX_S) {
    return TOKEN_EXP_MAX_S;
  }
  return durationS;
}

exports.readBackstageTokenExpiration = readBackstageTokenExpiration;
//# sourceMappingURL=readBackstageTokenExpiration.cjs.js.map
