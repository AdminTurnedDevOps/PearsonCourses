'use strict';

var pluginAuthBackendModuleBitbucketProvider = require('@backstage/plugin-auth-backend-module-bitbucket-provider');
var pluginAuthNode = require('@backstage/plugin-auth-node');
var adaptLegacyOAuthHandler = require('../../lib/legacy/adaptLegacyOAuthHandler.cjs.js');
var adaptLegacyOAuthSignInResolver = require('../../lib/legacy/adaptLegacyOAuthSignInResolver.cjs.js');
var adaptOAuthSignInResolverToLegacy = require('../../lib/legacy/adaptOAuthSignInResolverToLegacy.cjs.js');
var createAuthProviderIntegration = require('../createAuthProviderIntegration.cjs.js');

const bitbucket = createAuthProviderIntegration.createAuthProviderIntegration({
  create(options) {
    return pluginAuthNode.createOAuthProviderFactory({
      authenticator: pluginAuthBackendModuleBitbucketProvider.bitbucketAuthenticator,
      profileTransform: adaptLegacyOAuthHandler.adaptLegacyOAuthHandler(options?.authHandler),
      signInResolver: adaptLegacyOAuthSignInResolver.adaptLegacyOAuthSignInResolver(options?.signIn?.resolver)
    });
  },
  resolvers: adaptOAuthSignInResolverToLegacy.adaptOAuthSignInResolverToLegacy({
    userIdMatchingUserEntityAnnotation: pluginAuthBackendModuleBitbucketProvider.bitbucketSignInResolvers.userIdMatchingUserEntityAnnotation(),
    usernameMatchingUserEntityAnnotation: pluginAuthBackendModuleBitbucketProvider.bitbucketSignInResolvers.usernameMatchingUserEntityAnnotation()
  })
});

exports.bitbucket = bitbucket;
//# sourceMappingURL=provider.cjs.js.map
