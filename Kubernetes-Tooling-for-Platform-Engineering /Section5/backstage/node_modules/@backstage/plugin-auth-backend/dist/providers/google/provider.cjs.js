'use strict';

var pluginAuthBackendModuleGoogleProvider = require('@backstage/plugin-auth-backend-module-google-provider');
var pluginAuthNode = require('@backstage/plugin-auth-node');
var adaptLegacyOAuthHandler = require('../../lib/legacy/adaptLegacyOAuthHandler.cjs.js');
var adaptLegacyOAuthSignInResolver = require('../../lib/legacy/adaptLegacyOAuthSignInResolver.cjs.js');
var adaptOAuthSignInResolverToLegacy = require('../../lib/legacy/adaptOAuthSignInResolverToLegacy.cjs.js');
var createAuthProviderIntegration = require('../createAuthProviderIntegration.cjs.js');

const google = createAuthProviderIntegration.createAuthProviderIntegration({
  create(options) {
    return pluginAuthNode.createOAuthProviderFactory({
      authenticator: pluginAuthBackendModuleGoogleProvider.googleAuthenticator,
      profileTransform: adaptLegacyOAuthHandler.adaptLegacyOAuthHandler(options?.authHandler),
      signInResolver: adaptLegacyOAuthSignInResolver.adaptLegacyOAuthSignInResolver(options?.signIn?.resolver)
    });
  },
  resolvers: adaptOAuthSignInResolverToLegacy.adaptOAuthSignInResolverToLegacy({
    emailLocalPartMatchingUserEntityName: pluginAuthNode.commonSignInResolvers.emailLocalPartMatchingUserEntityName(),
    emailMatchingUserEntityProfileEmail: pluginAuthNode.commonSignInResolvers.emailMatchingUserEntityProfileEmail(),
    emailMatchingUserEntityAnnotation: pluginAuthBackendModuleGoogleProvider.googleSignInResolvers.emailMatchingUserEntityAnnotation()
  })
});

exports.google = google;
//# sourceMappingURL=provider.cjs.js.map
