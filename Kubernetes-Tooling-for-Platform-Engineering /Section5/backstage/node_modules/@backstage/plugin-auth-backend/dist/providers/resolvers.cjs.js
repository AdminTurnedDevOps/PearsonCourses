'use strict';

const commonByEmailLocalPartResolver = async (info, ctx) => {
  const { profile } = info;
  if (!profile.email) {
    throw new Error("Login failed, user profile does not contain an email");
  }
  const [localPart] = profile.email.split("@");
  return ctx.signInWithCatalogUser({
    entityRef: { name: localPart }
  });
};
const commonByEmailResolver = async (info, ctx) => {
  const { profile } = info;
  if (!profile.email) {
    throw new Error("Login failed, user profile does not contain an email");
  }
  return ctx.signInWithCatalogUser({
    filter: {
      "spec.profile.email": profile.email
    }
  });
};

exports.commonByEmailLocalPartResolver = commonByEmailLocalPartResolver;
exports.commonByEmailResolver = commonByEmailResolver;
//# sourceMappingURL=resolvers.cjs.js.map
