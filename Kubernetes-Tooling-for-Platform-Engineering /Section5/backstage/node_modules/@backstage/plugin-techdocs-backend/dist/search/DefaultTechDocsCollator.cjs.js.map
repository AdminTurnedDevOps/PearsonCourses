{"version":3,"file":"DefaultTechDocsCollator.cjs.js","sources":["../../src/search/DefaultTechDocsCollator.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TokenManager } from '@backstage/backend-common';\nimport {\n  Entity,\n  parseEntityRef,\n  RELATION_OWNED_BY,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport unescape from 'lodash/unescape';\nimport { Logger } from 'winston';\nimport pLimit from 'p-limit';\nimport { Config } from '@backstage/config';\nimport { catalogEntityReadPermission } from '@backstage/plugin-catalog-common/alpha';\nimport { Permission } from '@backstage/plugin-permission-common';\nimport {\n  CatalogApi,\n  CatalogClient,\n  CATALOG_FILTER_EXISTS,\n} from '@backstage/catalog-client';\nimport { TechDocsDocument } from '@backstage/plugin-techdocs-node';\nimport { TECHDOCS_ANNOTATION } from '@backstage/plugin-techdocs-common';\nimport { DiscoveryService } from '@backstage/backend-plugin-api';\n\ninterface MkSearchIndexDoc {\n  title: string;\n  text: string;\n  location: string;\n}\n\n/**\n * Options to configure the TechDocs collator\n *\n * @public\n */\nexport type TechDocsCollatorOptions = {\n  discovery: DiscoveryService;\n  logger: Logger;\n  tokenManager: TokenManager;\n  locationTemplate?: string;\n  catalogClient?: CatalogApi;\n  parallelismLimit?: number;\n  legacyPathCasing?: boolean;\n};\n\ntype EntityInfo = {\n  name: string;\n  namespace: string;\n  kind: string;\n};\n\n/**\n * A search collator responsible for gathering and transforming TechDocs documents.\n *\n * @public\n * @deprecated Upgrade to a more recent `@backstage/plugin-search-backend-node` and\n * use `DefaultTechDocsCollatorFactory` instead.\n */\nexport class DefaultTechDocsCollator {\n  public readonly type: string = 'techdocs';\n  public readonly visibilityPermission: Permission =\n    catalogEntityReadPermission;\n\n  private constructor(\n    private readonly legacyPathCasing: boolean,\n    private readonly options: TechDocsCollatorOptions,\n  ) {}\n\n  static fromConfig(config: Config, options: TechDocsCollatorOptions) {\n    const legacyPathCasing =\n      config.getOptionalBoolean(\n        'techdocs.legacyUseCaseSensitiveTripletPaths',\n      ) || false;\n    return new DefaultTechDocsCollator(legacyPathCasing, options);\n  }\n\n  async execute() {\n    const {\n      parallelismLimit,\n      discovery,\n      tokenManager,\n      catalogClient,\n      locationTemplate,\n      logger,\n    } = this.options;\n    const limit = pLimit(parallelismLimit ?? 10);\n    const techDocsBaseUrl = await discovery.getBaseUrl('techdocs');\n    const { token } = await tokenManager.getToken();\n    const entities = await (\n      catalogClient ?? new CatalogClient({ discoveryApi: discovery })\n    ).getEntities(\n      {\n        filter: {\n          [`metadata.annotations.${TECHDOCS_ANNOTATION}`]:\n            CATALOG_FILTER_EXISTS,\n        },\n        fields: [\n          'kind',\n          'namespace',\n          'metadata.annotations',\n          'metadata.name',\n          'metadata.title',\n          'metadata.namespace',\n          'spec.type',\n          'spec.lifecycle',\n          'relations',\n        ],\n      },\n      { token },\n    );\n    const docPromises = entities.items.map((entity: Entity) =>\n      limit(async (): Promise<TechDocsDocument[]> => {\n        const entityInfo = DefaultTechDocsCollator.handleEntityInfoCasing(\n          this.legacyPathCasing ?? false,\n          {\n            kind: entity.kind,\n            namespace: entity.metadata.namespace || 'default',\n            name: entity.metadata.name,\n          },\n        );\n\n        try {\n          const { token: newToken } = await tokenManager.getToken();\n          const searchIndexResponse = await fetch(\n            DefaultTechDocsCollator.constructDocsIndexUrl(\n              techDocsBaseUrl,\n              entityInfo,\n            ),\n            {\n              headers: {\n                Authorization: `Bearer ${newToken}`,\n              },\n            },\n          );\n          const searchIndex = await searchIndexResponse.json();\n\n          return searchIndex.docs.map((doc: MkSearchIndexDoc) => ({\n            title: unescape(doc.title),\n            text: unescape(doc.text || ''),\n            location: this.applyArgsToFormat(\n              locationTemplate || '/docs/:namespace/:kind/:name/:path',\n              {\n                ...entityInfo,\n                path: doc.location,\n              },\n            ),\n            path: doc.location,\n            ...entityInfo,\n            entityTitle: entity.metadata.title,\n            componentType: entity.spec?.type?.toString() || 'other',\n            lifecycle: (entity.spec?.lifecycle as string) || '',\n            owner: getSimpleEntityOwnerString(entity),\n            authorization: {\n              resourceRef: stringifyEntityRef(entity),\n            },\n          }));\n        } catch (e) {\n          logger.debug(\n            `Failed to retrieve tech docs search index for entity ${entityInfo.namespace}/${entityInfo.kind}/${entityInfo.name}`,\n            e,\n          );\n          return [];\n        }\n      }),\n    );\n    return (await Promise.all(docPromises)).flat();\n  }\n\n  protected applyArgsToFormat(\n    format: string,\n    args: Record<string, string>,\n  ): string {\n    let formatted = format;\n    for (const [key, value] of Object.entries(args)) {\n      formatted = formatted.replace(`:${key}`, value);\n    }\n    return formatted;\n  }\n\n  private static constructDocsIndexUrl(\n    techDocsBaseUrl: string,\n    entityInfo: { kind: string; namespace: string; name: string },\n  ) {\n    return `${techDocsBaseUrl}/static/docs/${entityInfo.namespace}/${entityInfo.kind}/${entityInfo.name}/search/search_index.json`;\n  }\n\n  private static handleEntityInfoCasing(\n    legacyPaths: boolean,\n    entityInfo: EntityInfo,\n  ): EntityInfo {\n    return legacyPaths\n      ? entityInfo\n      : Object.entries(entityInfo).reduce((acc, [key, value]) => {\n          return { ...acc, [key]: value.toLocaleLowerCase('en-US') };\n        }, {} as EntityInfo);\n  }\n}\n\nfunction getSimpleEntityOwnerString(entity: Entity): string {\n  if (entity.relations) {\n    const owner = entity.relations.find(r => r.type === RELATION_OWNED_BY);\n    if (owner) {\n      const { name } = parseEntityRef(owner.targetRef);\n      return name;\n    }\n  }\n  return '';\n}\n"],"names":["catalogEntityReadPermission","catalogClient","pLimit","CatalogClient","TECHDOCS_ANNOTATION","CATALOG_FILTER_EXISTS","unescape","stringifyEntityRef","RELATION_OWNED_BY","parseEntityRef"],"mappings":"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"}