{"version":3,"file":"SecureTemplater.cjs.js","sources":["../../../src/lib/templating/SecureTemplater.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Isolate } from 'isolated-vm';\nimport { resolvePackagePath } from '@backstage/backend-plugin-api';\nimport {\n  TemplateFilter as _TemplateFilter,\n  TemplateGlobal as _TemplateGlobal,\n} from '@backstage/plugin-scaffolder-node';\nimport fs from 'fs-extra';\nimport { JsonValue } from '@backstage/types';\nimport { getMajorNodeVersion, isNoNodeSnapshotOptionProvided } from './helpers';\n\n// language=JavaScript\nconst mkScript = (nunjucksSource: string) => `\nconst { render, renderCompat } = (() => {\n  const module = {};\n  const process = { env: {} };\n  const require = (pkg) => { if (pkg === 'events') { return function (){}; }};\n\n  ${nunjucksSource}\n\n  const env = module.exports.configure({\n    autoescape: false,\n    ...JSON.parse(nunjucksConfigs),\n    tags: {\n      variableStart: '\\${{',\n      variableEnd: '}}',\n    },\n  });\n\n  const compatEnv = module.exports.configure({\n    autoescape: false,\n    ...JSON.parse(nunjucksConfigs),\n    tags: {\n      variableStart: '{{',\n      variableEnd: '}}',\n    },\n  });\n  compatEnv.addFilter('jsonify', compatEnv.getFilter('dump'));\n\n  const handleFunctionResult = (value) => {\n    return value === '' ? undefined : JSON.parse(value);\n  };\n  for (const name of JSON.parse(availableTemplateFilters)) {\n    env.addFilter(name, (...args) => handleFunctionResult(callFilter(name, args)));\n  }\n  for (const [name, value] of Object.entries(JSON.parse(availableTemplateGlobals))) {\n    env.addGlobal(name, value);\n  }\n  for (const name of JSON.parse(availableTemplateCallbacks)) {\n    env.addGlobal(name, (...args) => handleFunctionResult(callGlobal(name, args)));\n  }\n\n  let uninstallCompat = undefined;\n\n  function render(str, values) {\n    try {\n      if (uninstallCompat) {\n        uninstallCompat();\n        uninstallCompat = undefined;\n      }\n      return env.renderString(str, JSON.parse(values));\n    } catch (error) {\n      // Make sure errors don't leak anything\n      throw new Error(String(error.message));\n    }\n  }\n\n  function renderCompat(str, values) {\n    try {\n      if (!uninstallCompat) {\n        uninstallCompat = module.exports.installJinjaCompat();\n      }\n      return compatEnv.renderString(str, JSON.parse(values));\n    } catch (error) {\n      // Make sure errors don't leak anything\n      throw new Error(String(error.message));\n    }\n  }\n\n  return { render, renderCompat };\n})();\n`;\n\n/**\n * @public\n * @deprecated Import from `@backstage/plugin-scaffolder-node` instead.\n */\nexport type TemplateFilter = _TemplateFilter;\n\n/**\n * @public\n * @deprecated Import from `@backstage/plugin-scaffolder-node` instead.\n */\nexport type TemplateGlobal = _TemplateGlobal;\n\ninterface SecureTemplaterOptions {\n  /* Enables jinja compatibility and the \"jsonify\" filter */\n  cookiecutterCompat?: boolean;\n  /* Extra user-provided nunjucks filters */\n  templateFilters?: Record<string, TemplateFilter>;\n  /* Extra user-provided nunjucks globals */\n  templateGlobals?: Record<string, TemplateGlobal>;\n  nunjucksConfigs?: { trimBlocks?: boolean; lstripBlocks?: boolean };\n}\n\nexport type SecureTemplateRenderer = (\n  template: string,\n  values: unknown,\n) => string;\n\nexport class SecureTemplater {\n  static async loadRenderer(options: SecureTemplaterOptions = {}) {\n    const {\n      cookiecutterCompat,\n      templateFilters = {},\n      templateGlobals = {},\n      nunjucksConfigs = {},\n    } = options;\n\n    const nodeVersion = getMajorNodeVersion();\n    if (nodeVersion >= 20 && !isNoNodeSnapshotOptionProvided()) {\n      throw new Error(\n        `When using Node.js version 20 or newer, the scaffolder backend plugin requires that it be started with the --no-node-snapshot option. \n        Please make sure that you have NODE_OPTIONS=--no-node-snapshot in your environment.`,\n      );\n    }\n\n    const isolate = new Isolate({ memoryLimit: 128 });\n    const context = await isolate.createContext();\n    const contextGlobal = context.global;\n\n    const nunjucksSource = await fs.readFile(\n      resolvePackagePath(\n        '@backstage/plugin-scaffolder-backend',\n        'assets/nunjucks.js.txt',\n      ),\n      'utf-8',\n    );\n\n    const nunjucksScript = await isolate.compileScript(\n      mkScript(nunjucksSource),\n    );\n\n    await contextGlobal.set('nunjucksConfigs', JSON.stringify(nunjucksConfigs));\n\n    const availableFilters = Object.keys(templateFilters);\n\n    await contextGlobal.set(\n      'availableTemplateFilters',\n      JSON.stringify(availableFilters),\n    );\n\n    const globalCallbacks = [];\n    const globalValues: Record<string, unknown> = {};\n    for (const [name, value] of Object.entries(templateGlobals)) {\n      if (typeof value === 'function') {\n        globalCallbacks.push(name);\n      } else {\n        globalValues[name] = value;\n      }\n    }\n\n    await contextGlobal.set(\n      'availableTemplateGlobals',\n      JSON.stringify(globalValues),\n    );\n    await contextGlobal.set(\n      'availableTemplateCallbacks',\n      JSON.stringify(globalCallbacks),\n    );\n\n    await contextGlobal.set(\n      'callFilter',\n      (filterName: string, args: JsonValue[]) => {\n        if (!Object.hasOwn(templateFilters, filterName)) {\n          return '';\n        }\n        const rz = templateFilters[filterName](...args);\n        return rz === undefined ? '' : JSON.stringify(rz);\n      },\n    );\n\n    await contextGlobal.set(\n      'callGlobal',\n      (globalName: string, args: JsonValue[]) => {\n        if (!Object.hasOwn(templateGlobals, globalName)) {\n          return '';\n        }\n        const global = templateGlobals[globalName];\n        if (typeof global !== 'function') {\n          return '';\n        }\n        const rz = global(...args);\n        return rz === undefined ? '' : JSON.stringify(rz);\n      },\n    );\n\n    await nunjucksScript.run(context);\n\n    const render: SecureTemplateRenderer = (template, values) => {\n      if (!context) {\n        throw new Error('SecureTemplater has not been initialized');\n      }\n\n      contextGlobal.setSync('templateStr', String(template));\n      contextGlobal.setSync('templateValues', JSON.stringify(values));\n\n      if (cookiecutterCompat) {\n        return context.evalSync(`renderCompat(templateStr, templateValues)`);\n      }\n\n      return context.evalSync(`render(templateStr, templateValues)`);\n    };\n    return render;\n  }\n}\n"],"names":["getMajorNodeVersion","isNoNodeSnapshotOptionProvided","Isolate","fs","resolvePackagePath"],"mappings":"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"}