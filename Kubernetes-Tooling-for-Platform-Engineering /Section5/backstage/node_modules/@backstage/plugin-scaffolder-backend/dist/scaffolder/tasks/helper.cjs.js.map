{"version":3,"file":"helper.cjs.js","sources":["../../../src/scaffolder/tasks/helper.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config, readDurationFromConfig } from '@backstage/config';\nimport { HumanDuration } from '@backstage/types';\n\nimport { isArray } from 'lodash';\nimport { Schema } from 'jsonschema';\n\n/**\n * Returns true if the input is not `false`, `undefined`, `null`, `\"\"`, `0`, or\n * `[]`. This behavior is based on the behavior of handlebars, see\n * https://handlebarsjs.com/guide/builtin-helpers.html#if\n */\nexport function isTruthy(value: any): boolean {\n  return isArray(value) ? value.length > 0 : !!value;\n}\n\nexport function generateExampleOutput(schema: Schema): unknown {\n  const { examples } = schema as { examples?: unknown };\n  if (examples && Array.isArray(examples)) {\n    return examples[0];\n  }\n  if (schema.type === 'object') {\n    return Object.fromEntries(\n      Object.entries(schema.properties ?? {}).map(([key, value]) => [\n        key,\n        generateExampleOutput(value),\n      ]),\n    );\n  } else if (schema.type === 'array') {\n    const [firstSchema] = [schema.items]?.flat();\n    if (firstSchema) {\n      return [generateExampleOutput(firstSchema)];\n    }\n    return [];\n  } else if (schema.type === 'string') {\n    return '<example>';\n  } else if (schema.type === 'number') {\n    return 0;\n  } else if (schema.type === 'boolean') {\n    return false;\n  }\n  return '<unknown>';\n}\n\nexport const readDuration = (\n  config: Config | undefined,\n  key: string,\n  defaultValue: HumanDuration,\n) => {\n  if (config?.has(key)) {\n    return readDurationFromConfig(config, { key });\n  }\n  return defaultValue;\n};\n"],"names":["isArray","config","readDurationFromConfig"],"mappings":";;;;;AA2BO,SAAS,SAAS,KAAqB,EAAA;AAC5C,EAAA,OAAOA,eAAQ,KAAK,CAAA,GAAI,MAAM,MAAS,GAAA,CAAA,GAAI,CAAC,CAAC,KAAA;AAC/C;AAEO,SAAS,sBAAsB,MAAyB,EAAA;AAC7D,EAAM,MAAA,EAAE,UAAa,GAAA,MAAA;AACrB,EAAA,IAAI,QAAY,IAAA,KAAA,CAAM,OAAQ,CAAA,QAAQ,CAAG,EAAA;AACvC,IAAA,OAAO,SAAS,CAAC,CAAA;AAAA;AAEnB,EAAI,IAAA,MAAA,CAAO,SAAS,QAAU,EAAA;AAC5B,IAAA,OAAO,MAAO,CAAA,WAAA;AAAA,MACZ,MAAO,CAAA,OAAA,CAAQ,MAAO,CAAA,UAAA,IAAc,EAAE,CAAE,CAAA,GAAA,CAAI,CAAC,CAAC,GAAK,EAAA,KAAK,CAAM,KAAA;AAAA,QAC5D,GAAA;AAAA,QACA,sBAAsB,KAAK;AAAA,OAC5B;AAAA,KACH;AAAA,GACF,MAAA,IAAW,MAAO,CAAA,IAAA,KAAS,OAAS,EAAA;AAClC,IAAA,MAAM,CAAC,WAAW,CAAA,GAAI,CAAC,MAAO,CAAA,KAAK,GAAG,IAAK,EAAA;AAC3C,IAAA,IAAI,WAAa,EAAA;AACf,MAAO,OAAA,CAAC,qBAAsB,CAAA,WAAW,CAAC,CAAA;AAAA;AAE5C,IAAA,OAAO,EAAC;AAAA,GACV,MAAA,IAAW,MAAO,CAAA,IAAA,KAAS,QAAU,EAAA;AACnC,IAAO,OAAA,WAAA;AAAA,GACT,MAAA,IAAW,MAAO,CAAA,IAAA,KAAS,QAAU,EAAA;AACnC,IAAO,OAAA,CAAA;AAAA,GACT,MAAA,IAAW,MAAO,CAAA,IAAA,KAAS,SAAW,EAAA;AACpC,IAAO,OAAA,KAAA;AAAA;AAET,EAAO,OAAA,WAAA;AACT;AAEO,MAAM,YAAe,GAAA,CAC1BC,QACA,EAAA,GAAA,EACA,YACG,KAAA;AACH,EAAI,IAAAA,QAAA,EAAQ,GAAI,CAAA,GAAG,CAAG,EAAA;AACpB,IAAA,OAAOC,6BAAuB,CAAAD,QAAA,EAAQ,EAAE,GAAA,EAAK,CAAA;AAAA;AAE/C,EAAO,OAAA,YAAA;AACT;;;;;;"}