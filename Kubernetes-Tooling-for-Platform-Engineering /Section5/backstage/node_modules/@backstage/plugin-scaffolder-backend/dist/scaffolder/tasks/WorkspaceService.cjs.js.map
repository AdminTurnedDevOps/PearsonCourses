{"version":3,"file":"WorkspaceService.cjs.js","sources":["../../../src/scaffolder/tasks/WorkspaceService.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\nimport { CurrentClaimedTask } from './StorageTaskBroker';\nimport { WorkspaceProvider } from '@backstage/plugin-scaffolder-node/alpha';\nimport { DatabaseWorkspaceProvider } from './DatabaseWorkspaceProvider';\nimport { TaskStore } from './types';\nimport fs from 'fs-extra';\n\nexport interface WorkspaceService {\n  serializeWorkspace(options: { path: string }): Promise<void>;\n\n  cleanWorkspace(): Promise<void>;\n\n  rehydrateWorkspace(options: {\n    taskId: string;\n    targetPath: string;\n  }): Promise<void>;\n}\n\nexport class DefaultWorkspaceService implements WorkspaceService {\n  static create(\n    task: CurrentClaimedTask,\n    storage: TaskStore,\n    additionalWorkspaceProviders?: Record<string, WorkspaceProvider>,\n    config?: Config,\n  ) {\n    const workspaceProviderName =\n      config?.getOptionalString(\n        'scaffolder.EXPERIMENTAL_workspaceSerializationProvider',\n      ) ?? 'database';\n    const workspaceProvider =\n      additionalWorkspaceProviders?.[workspaceProviderName] ??\n      DatabaseWorkspaceProvider.create(storage);\n    return new DefaultWorkspaceService(task, workspaceProvider, config);\n  }\n\n  private constructor(\n    private readonly task: CurrentClaimedTask,\n    private readonly workspaceProvider: WorkspaceProvider,\n    private readonly config?: Config,\n  ) {}\n\n  public async serializeWorkspace(options: { path: string }): Promise<void> {\n    if (this.isWorkspaceSerializationEnabled()) {\n      await this.workspaceProvider.serializeWorkspace({\n        path: options.path,\n        taskId: this.task.taskId,\n      });\n    }\n  }\n\n  public async cleanWorkspace(): Promise<void> {\n    if (this.isWorkspaceSerializationEnabled()) {\n      await this.workspaceProvider.cleanWorkspace({ taskId: this.task.taskId });\n    }\n  }\n\n  public async rehydrateWorkspace(options: {\n    taskId: string;\n    targetPath: string;\n  }): Promise<void> {\n    if (this.isWorkspaceSerializationEnabled()) {\n      await fs.mkdirp(options.targetPath);\n      await this.workspaceProvider.rehydrateWorkspace(options);\n    }\n  }\n\n  private isWorkspaceSerializationEnabled(): boolean {\n    return (\n      this.config?.getOptionalBoolean(\n        'scaffolder.EXPERIMENTAL_workspaceSerialization',\n      ) ?? false\n    );\n  }\n}\n"],"names":["DatabaseWorkspaceProvider","fs"],"mappings":";;;;;;;;;AAkCO,MAAM,uBAAoD,CAAA;AAAA,EAiBvD,WAAA,CACW,IACA,EAAA,iBAAA,EACA,MACjB,EAAA;AAHiB,IAAA,IAAA,CAAA,IAAA,GAAA,IAAA;AACA,IAAA,IAAA,CAAA,iBAAA,GAAA,iBAAA;AACA,IAAA,IAAA,CAAA,MAAA,GAAA,MAAA;AAAA;AAChB,EApBH,OAAO,MAAA,CACL,IACA,EAAA,OAAA,EACA,8BACA,MACA,EAAA;AACA,IAAA,MAAM,wBACJ,MAAQ,EAAA,iBAAA;AAAA,MACN;AAAA,KACG,IAAA,UAAA;AACP,IAAA,MAAM,oBACJ,4BAA+B,GAAA,qBAAqB,CACpD,IAAAA,mDAAA,CAA0B,OAAO,OAAO,CAAA;AAC1C,IAAA,OAAO,IAAI,uBAAA,CAAwB,IAAM,EAAA,iBAAA,EAAmB,MAAM,CAAA;AAAA;AACpE,EAQA,MAAa,mBAAmB,OAA0C,EAAA;AACxE,IAAI,IAAA,IAAA,CAAK,iCAAmC,EAAA;AAC1C,MAAM,MAAA,IAAA,CAAK,kBAAkB,kBAAmB,CAAA;AAAA,QAC9C,MAAM,OAAQ,CAAA,IAAA;AAAA,QACd,MAAA,EAAQ,KAAK,IAAK,CAAA;AAAA,OACnB,CAAA;AAAA;AACH;AACF,EAEA,MAAa,cAAgC,GAAA;AAC3C,IAAI,IAAA,IAAA,CAAK,iCAAmC,EAAA;AAC1C,MAAM,MAAA,IAAA,CAAK,kBAAkB,cAAe,CAAA,EAAE,QAAQ,IAAK,CAAA,IAAA,CAAK,QAAQ,CAAA;AAAA;AAC1E;AACF,EAEA,MAAa,mBAAmB,OAGd,EAAA;AAChB,IAAI,IAAA,IAAA,CAAK,iCAAmC,EAAA;AAC1C,MAAM,MAAAC,mBAAA,CAAG,MAAO,CAAA,OAAA,CAAQ,UAAU,CAAA;AAClC,MAAM,MAAA,IAAA,CAAK,iBAAkB,CAAA,kBAAA,CAAmB,OAAO,CAAA;AAAA;AACzD;AACF,EAEQ,+BAA2C,GAAA;AACjD,IAAA,OACE,KAAK,MAAQ,EAAA,kBAAA;AAAA,MACX;AAAA,KACG,IAAA,KAAA;AAAA;AAGX;;;;"}