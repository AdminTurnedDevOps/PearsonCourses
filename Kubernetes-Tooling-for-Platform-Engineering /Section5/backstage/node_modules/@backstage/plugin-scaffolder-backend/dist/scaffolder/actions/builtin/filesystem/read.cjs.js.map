{"version":3,"file":"read.cjs.js","sources":["../../../../../src/scaffolder/actions/builtin/filesystem/read.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createTemplateAction } from '@backstage/plugin-scaffolder-node';\nimport z from 'zod';\nimport { resolveSafeChildPath } from '@backstage/backend-plugin-api';\nimport fs from 'fs/promises';\nimport path from 'path';\n\nconst contentSchema = z.object({\n  name: z.string().describe('Name of the file or directory'),\n  path: z\n    .string()\n    .describe('path to the file or directory relative to the workspace'),\n  fullPath: z.string().describe('full path to the file or directory'),\n});\ntype Content = z.infer<typeof contentSchema>;\n\n/**\n * Creates new action that enables reading directories in the workspace.\n * @public\n */\nexport const createFilesystemReadDirAction = () => {\n  return createTemplateAction({\n    id: 'fs:readdir',\n    description: 'Reads files and directories from the workspace',\n    supportsDryRun: true,\n    schema: {\n      input: z.object({\n        paths: z.array(z.string().min(1)),\n        recursive: z.boolean().default(false),\n      }),\n      output: z.object({\n        files: z.array(contentSchema),\n        folders: z.array(contentSchema),\n      }),\n    },\n    async handler(ctx) {\n      const files: Content[] = [];\n      const folders: Content[] = [];\n\n      for (const localPath of ctx.input.paths) {\n        const fullWorkspacePath = resolveSafeChildPath(\n          ctx.workspacePath,\n          localPath,\n        );\n        const content = await fs.readdir(fullWorkspacePath, {\n          recursive: ctx.input.recursive,\n          withFileTypes: true,\n        });\n        for (const dirent of content) {\n          const fullPath = path.join(dirent.parentPath, dirent.name);\n          const element = {\n            name: dirent.name,\n            path: path.relative(ctx.workspacePath, fullPath),\n            fullPath,\n          };\n          if (dirent.isDirectory()) {\n            folders.push(element);\n          } else {\n            files.push(element);\n          }\n        }\n      }\n\n      ctx.output('files', files);\n      ctx.output('folders', folders);\n    },\n  });\n};\n"],"names":["z","createTemplateAction","resolveSafeChildPath","fs","path"],"mappings":";;;;;;;;;;;;;;AAqBA,MAAM,aAAA,GAAgBA,mBAAE,MAAO,CAAA;AAAA,EAC7B,IAAM,EAAAA,kBAAA,CAAE,MAAO,EAAA,CAAE,SAAS,+BAA+B,CAAA;AAAA,EACzD,IAAM,EAAAA,kBAAA,CACH,MAAO,EAAA,CACP,SAAS,yDAAyD,CAAA;AAAA,EACrE,QAAU,EAAAA,kBAAA,CAAE,MAAO,EAAA,CAAE,SAAS,oCAAoC;AACpE,CAAC,CAAA;AAOM,MAAM,gCAAgC,MAAM;AACjD,EAAA,OAAOC,yCAAqB,CAAA;AAAA,IAC1B,EAAI,EAAA,YAAA;AAAA,IACJ,WAAa,EAAA,gDAAA;AAAA,IACb,cAAgB,EAAA,IAAA;AAAA,IAChB,MAAQ,EAAA;AAAA,MACN,KAAA,EAAOD,mBAAE,MAAO,CAAA;AAAA,QACd,KAAA,EAAOA,mBAAE,KAAM,CAAAA,kBAAA,CAAE,QAAS,CAAA,GAAA,CAAI,CAAC,CAAC,CAAA;AAAA,QAChC,SAAW,EAAAA,kBAAA,CAAE,OAAQ,EAAA,CAAE,QAAQ,KAAK;AAAA,OACrC,CAAA;AAAA,MACD,MAAA,EAAQA,mBAAE,MAAO,CAAA;AAAA,QACf,KAAA,EAAOA,kBAAE,CAAA,KAAA,CAAM,aAAa,CAAA;AAAA,QAC5B,OAAA,EAASA,kBAAE,CAAA,KAAA,CAAM,aAAa;AAAA,OAC/B;AAAA,KACH;AAAA,IACA,MAAM,QAAQ,GAAK,EAAA;AACjB,MAAA,MAAM,QAAmB,EAAC;AAC1B,MAAA,MAAM,UAAqB,EAAC;AAE5B,MAAW,KAAA,MAAA,SAAA,IAAa,GAAI,CAAA,KAAA,CAAM,KAAO,EAAA;AACvC,QAAA,MAAM,iBAAoB,GAAAE,qCAAA;AAAA,UACxB,GAAI,CAAA,aAAA;AAAA,UACJ;AAAA,SACF;AACA,QAAA,MAAM,OAAU,GAAA,MAAMC,mBAAG,CAAA,OAAA,CAAQ,iBAAmB,EAAA;AAAA,UAClD,SAAA,EAAW,IAAI,KAAM,CAAA,SAAA;AAAA,UACrB,aAAe,EAAA;AAAA,SAChB,CAAA;AACD,QAAA,KAAA,MAAW,UAAU,OAAS,EAAA;AAC5B,UAAA,MAAM,WAAWC,qBAAK,CAAA,IAAA,CAAK,MAAO,CAAA,UAAA,EAAY,OAAO,IAAI,CAAA;AACzD,UAAA,MAAM,OAAU,GAAA;AAAA,YACd,MAAM,MAAO,CAAA,IAAA;AAAA,YACb,IAAM,EAAAA,qBAAA,CAAK,QAAS,CAAA,GAAA,CAAI,eAAe,QAAQ,CAAA;AAAA,YAC/C;AAAA,WACF;AACA,UAAI,IAAA,MAAA,CAAO,aAAe,EAAA;AACxB,YAAA,OAAA,CAAQ,KAAK,OAAO,CAAA;AAAA,WACf,MAAA;AACL,YAAA,KAAA,CAAM,KAAK,OAAO,CAAA;AAAA;AACpB;AACF;AAGF,MAAI,GAAA,CAAA,MAAA,CAAO,SAAS,KAAK,CAAA;AACzB,MAAI,GAAA,CAAA,MAAA,CAAO,WAAW,OAAO,CAAA;AAAA;AAC/B,GACD,CAAA;AACH;;;;"}