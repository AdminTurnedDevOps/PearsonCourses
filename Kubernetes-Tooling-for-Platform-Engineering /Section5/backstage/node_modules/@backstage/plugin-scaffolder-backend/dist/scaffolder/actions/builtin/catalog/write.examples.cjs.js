'use strict';

var yaml = require('yaml');

function _interopNamespaceCompat(e) {
  if (e && typeof e === 'object' && 'default' in e) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n.default = e;
  return Object.freeze(n);
}

var yaml__namespace = /*#__PURE__*/_interopNamespaceCompat(yaml);

const examples = [
  {
    description: "Write a catalog yaml file",
    example: yaml__namespace.stringify({
      steps: [
        {
          action: "catalog:write",
          id: "create-catalog-info-file",
          name: "Create catalog file",
          input: {
            entity: {
              apiVersion: "backstage.io/v1alpha1",
              kind: "Component",
              metadata: {
                name: "test",
                annotations: {}
              },
              spec: {
                type: "service",
                lifecycle: "production",
                owner: "default/owner"
              }
            }
          }
        }
      ]
    })
  }
];

exports.examples = examples;
//# sourceMappingURL=write.examples.cjs.js.map
