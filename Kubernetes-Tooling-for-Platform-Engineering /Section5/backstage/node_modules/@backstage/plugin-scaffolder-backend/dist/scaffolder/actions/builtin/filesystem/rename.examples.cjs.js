'use strict';

var yaml = require('yaml');

function _interopNamespaceCompat(e) {
  if (e && typeof e === 'object' && 'default' in e) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n.default = e;
  return Object.freeze(n);
}

var yaml__namespace = /*#__PURE__*/_interopNamespaceCompat(yaml);

const examples = [
  {
    description: "Rename specified files ",
    example: yaml__namespace.stringify({
      steps: [
        {
          action: "fs:rename",
          id: "renameFiles",
          name: "Rename files",
          input: {
            files: [
              { from: "file1.txt", to: "file1Renamed.txt" },
              { from: "file2.txt", to: "file2Renamed.txt" },
              { from: "file3.txt", to: "file3Renamed.txt", overwrite: true }
            ]
          }
        }
      ]
    })
  }
];

exports.examples = examples;
//# sourceMappingURL=rename.examples.cjs.js.map
