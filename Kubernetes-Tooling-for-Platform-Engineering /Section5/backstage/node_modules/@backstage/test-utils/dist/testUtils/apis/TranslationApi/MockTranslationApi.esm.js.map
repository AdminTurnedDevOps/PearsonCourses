{"version":3,"file":"MockTranslationApi.esm.js","sources":["../../../../src/testUtils/apis/TranslationApi/MockTranslationApi.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  TranslationApi,\n  TranslationFunction,\n  TranslationRef,\n  TranslationSnapshot,\n} from '@backstage/core-plugin-api/alpha';\nimport { createInstance as createI18n, type i18n as I18n } from 'i18next';\nimport ObservableImpl from 'zen-observable';\n\nimport { Observable } from '@backstage/types';\n// Internal import to avoid code duplication, this will lead to duplication in build output\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport { toInternalTranslationRef } from '../../../../../core-plugin-api/src/translation/TranslationRef';\n\nconst DEFAULT_LANGUAGE = 'en';\n\n/**\n * @alpha\n * @deprecated Use `mockApis` from `@backstage/test-utils` instead\n */\nexport class MockTranslationApi implements TranslationApi {\n  static create() {\n    const i18n = createI18n({\n      fallbackLng: DEFAULT_LANGUAGE,\n      supportedLngs: [DEFAULT_LANGUAGE],\n      interpolation: {\n        escapeValue: false,\n      },\n      ns: [],\n      defaultNS: false,\n      fallbackNS: false,\n\n      // Disable resource loading on init, meaning i18n will be ready to use immediately\n      initImmediate: false,\n    });\n\n    i18n.init();\n    if (!i18n.isInitialized) {\n      throw new Error('i18next was unexpectedly not initialized');\n    }\n\n    return new MockTranslationApi(i18n);\n  }\n\n  #i18n: I18n;\n  #registeredRefs = new Set<string>();\n\n  private constructor(i18n: I18n) {\n    this.#i18n = i18n;\n  }\n\n  getTranslation<TMessages extends { [key in string]: string }>(\n    translationRef: TranslationRef<string, TMessages>,\n  ): TranslationSnapshot<TMessages> {\n    const internalRef = toInternalTranslationRef(translationRef);\n\n    if (!this.#registeredRefs.has(internalRef.id)) {\n      this.#registeredRefs.add(internalRef.id);\n      this.#i18n.addResourceBundle(\n        DEFAULT_LANGUAGE,\n        internalRef.id,\n        internalRef.getDefaultMessages(),\n        false, // do not merge\n        true, // overwrite existing\n      );\n    }\n\n    const t = this.#i18n.getFixedT(\n      null,\n      internalRef.id,\n    ) as TranslationFunction<TMessages>;\n\n    return {\n      ready: true,\n      t,\n    };\n  }\n\n  translation$<TMessages extends { [key in string]: string }>(): Observable<\n    TranslationSnapshot<TMessages>\n  > {\n    // No need to implement, getTranslation will always return a ready snapshot\n    return new ObservableImpl<TranslationSnapshot<TMessages>>(_subscriber => {\n      return () => {};\n    });\n  }\n}\n"],"names":["createI18n"],"mappings":";;;;AA8BA,MAAM,gBAAmB,GAAA,IAAA;AAMlB,MAAM,kBAA6C,CAAA;AAAA,EACxD,OAAO,MAAS,GAAA;AACd,IAAA,MAAM,OAAOA,cAAW,CAAA;AAAA,MACtB,WAAa,EAAA,gBAAA;AAAA,MACb,aAAA,EAAe,CAAC,gBAAgB,CAAA;AAAA,MAChC,aAAe,EAAA;AAAA,QACb,WAAa,EAAA;AAAA,OACf;AAAA,MACA,IAAI,EAAC;AAAA,MACL,SAAW,EAAA,KAAA;AAAA,MACX,UAAY,EAAA,KAAA;AAAA;AAAA,MAGZ,aAAe,EAAA;AAAA,KAChB,CAAA;AAED,IAAA,IAAA,CAAK,IAAK,EAAA;AACV,IAAI,IAAA,CAAC,KAAK,aAAe,EAAA;AACvB,MAAM,MAAA,IAAI,MAAM,0CAA0C,CAAA;AAAA;AAG5D,IAAO,OAAA,IAAI,mBAAmB,IAAI,CAAA;AAAA;AACpC,EAEA,KAAA;AAAA,EACA,eAAA,uBAAsB,GAAY,EAAA;AAAA,EAE1B,YAAY,IAAY,EAAA;AAC9B,IAAA,IAAA,CAAK,KAAQ,GAAA,IAAA;AAAA;AACf,EAEA,eACE,cACgC,EAAA;AAChC,IAAM,MAAA,WAAA,GAAc,yBAAyB,cAAc,CAAA;AAE3D,IAAA,IAAI,CAAC,IAAK,CAAA,eAAA,CAAgB,GAAI,CAAA,WAAA,CAAY,EAAE,CAAG,EAAA;AAC7C,MAAK,IAAA,CAAA,eAAA,CAAgB,GAAI,CAAA,WAAA,CAAY,EAAE,CAAA;AACvC,MAAA,IAAA,CAAK,KAAM,CAAA,iBAAA;AAAA,QACT,gBAAA;AAAA,QACA,WAAY,CAAA,EAAA;AAAA,QACZ,YAAY,kBAAmB,EAAA;AAAA,QAC/B,KAAA;AAAA;AAAA,QACA;AAAA;AAAA,OACF;AAAA;AAGF,IAAM,MAAA,CAAA,GAAI,KAAK,KAAM,CAAA,SAAA;AAAA,MACnB,IAAA;AAAA,MACA,WAAY,CAAA;AAAA,KACd;AAEA,IAAO,OAAA;AAAA,MACL,KAAO,EAAA,IAAA;AAAA,MACP;AAAA,KACF;AAAA;AACF,EAEA,YAEE,GAAA;AAEA,IAAO,OAAA,IAAI,eAA+C,CAAe,WAAA,KAAA;AACvE,MAAA,OAAO,MAAM;AAAA,OAAC;AAAA,KACf,CAAA;AAAA;AAEL;;;;"}