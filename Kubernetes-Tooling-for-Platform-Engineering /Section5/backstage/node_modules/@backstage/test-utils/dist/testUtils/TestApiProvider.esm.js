import React from 'react';
import { ApiProvider } from '@backstage/core-app-api';

class TestApiRegistry {
  constructor(apis) {
    this.apis = apis;
  }
  /**
   * Creates a new {@link TestApiRegistry} with a list of API implementation pairs.
   *
   * Similar to the {@link TestApiProvider}, there is no need to provide a full
   * implementation of each API, it's enough to implement the methods that are tested.
   *
   * @example
   * ```ts
   * const apis = TestApiRegistry.from(
   *   [configApiRef, new ConfigReader({})],
   *   [identityApiRef, { getUserId: () => 'tester' }],
   * );
   * ```
   *
   * @public
   * @param apis - A list of pairs mapping an ApiRef to its respective implementation.
   */
  static from(...apis) {
    return new TestApiRegistry(
      new Map(apis.map(([api, impl]) => [api.id, impl]))
    );
  }
  /**
   * Returns an implementation of the API.
   *
   * @public
   */
  get(api) {
    return this.apis.get(api.id);
  }
}
const TestApiProvider = (props) => {
  return /* @__PURE__ */ React.createElement(
    ApiProvider,
    {
      apis: TestApiRegistry.from(...props.apis),
      children: props.children
    }
  );
};

export { TestApiProvider, TestApiRegistry };
//# sourceMappingURL=TestApiProvider.esm.js.map
