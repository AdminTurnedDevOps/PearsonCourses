{"version":3,"file":"MockPermissionApi.esm.js","sources":["../../../../src/testUtils/apis/PermissionApi/MockPermissionApi.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PermissionApi } from '@backstage/plugin-permission-react';\nimport {\n  EvaluatePermissionResponse,\n  EvaluatePermissionRequest,\n  AuthorizeResult,\n} from '@backstage/plugin-permission-common';\n\n/**\n * Mock implementation of\n * {@link @backstage/plugin-permission-react#PermissionApi}. Supply a\n * requestHandler function to override the mock result returned for a given\n * request.\n * @deprecated Use {@link @backstage/test-utils#mockApis.(permission:namespace)} instead\n * @public\n */\nexport class MockPermissionApi implements PermissionApi {\n  constructor(\n    private readonly requestHandler: (\n      request: EvaluatePermissionRequest,\n    ) => AuthorizeResult.ALLOW | AuthorizeResult.DENY = () =>\n      AuthorizeResult.ALLOW,\n  ) {}\n\n  async authorize(\n    request: EvaluatePermissionRequest,\n  ): Promise<EvaluatePermissionResponse> {\n    return { result: this.requestHandler(request) };\n  }\n}\n"],"names":[],"mappings":";;AA+BO,MAAM,iBAA2C,CAAA;AAAA,EACtD,WACmB,CAAA,cAAA,GAEmC,MAClD,eAAA,CAAgB,KAClB,EAAA;AAJiB,IAAA,IAAA,CAAA,cAAA,GAAA,cAAA;AAAA;AAIhB,EAEH,MAAM,UACJ,OACqC,EAAA;AACrC,IAAA,OAAO,EAAE,MAAA,EAAQ,IAAK,CAAA,cAAA,CAAe,OAAO,CAAE,EAAA;AAAA;AAElD;;;;"}