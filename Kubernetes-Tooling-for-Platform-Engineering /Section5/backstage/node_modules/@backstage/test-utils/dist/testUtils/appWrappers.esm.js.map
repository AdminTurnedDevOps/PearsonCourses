{"version":3,"file":"appWrappers.esm.js","sources":["../../src/testUtils/appWrappers.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n  ComponentType,\n  PropsWithChildren,\n  ReactElement,\n  ReactNode,\n} from 'react';\nimport { MemoryRouter, Route } from 'react-router-dom';\nimport { themes, UnifiedThemeProvider } from '@backstage/theme';\nimport MockIcon from '@material-ui/icons/AcUnit';\nimport { AppIcons, createSpecializedApp } from '@backstage/core-app-api';\nimport {\n  AppComponents,\n  attachComponentData,\n  BootErrorPageProps,\n  createRouteRef,\n  ExternalRouteRef,\n  IconComponent,\n  RouteRef,\n} from '@backstage/core-plugin-api';\nimport { MatcherFunction, RenderResult } from '@testing-library/react';\nimport { LegacyRootOption, renderWithEffects } from './testingLibrary';\nimport { defaultApis } from './defaultApis';\nimport { mockApis } from './mockApis';\n\nconst mockIcons = {\n  'kind:api': MockIcon,\n  'kind:component': MockIcon,\n  'kind:domain': MockIcon,\n  'kind:group': MockIcon,\n  'kind:location': MockIcon,\n  'kind:system': MockIcon,\n  'kind:user': MockIcon,\n  'kind:resource': MockIcon,\n  'kind:template': MockIcon,\n\n  brokenImage: MockIcon,\n  catalog: MockIcon,\n  scaffolder: MockIcon,\n  techdocs: MockIcon,\n  search: MockIcon,\n  chat: MockIcon,\n  dashboard: MockIcon,\n  docs: MockIcon,\n  email: MockIcon,\n  github: MockIcon,\n  group: MockIcon,\n  help: MockIcon,\n  user: MockIcon,\n  warning: MockIcon,\n  star: MockIcon,\n  unstarred: MockIcon,\n};\n\nconst ErrorBoundaryFallback = ({ error }: { error: Error }) => {\n  throw new Error(`Reached ErrorBoundaryFallback Page with error, ${error}`);\n};\nconst NotFoundErrorPage = () => {\n  throw new Error('Reached NotFound Page');\n};\nconst BootErrorPage = ({ step, error }: BootErrorPageProps) => {\n  throw new Error(`Reached BootError Page at step ${step} with error ${error}`);\n};\nconst Progress = () => <div data-testid=\"progress\" />;\n\nconst NoRender = (_props: { children: ReactNode }) => null;\n\n/**\n * Options to customize the behavior of the test app wrapper.\n * @public\n */\nexport type TestAppOptions = {\n  /**\n   * Initial route entries to pass along as `initialEntries` to the router.\n   */\n  routeEntries?: string[];\n\n  /**\n   * An object of paths to mount route ref on, with the key being the path and the value\n   * being the RouteRef that the path will be bound to. This allows the route refs to be\n   * used by `useRouteRef` in the rendered elements.\n   *\n   * @example\n   * wrapInTestApp(<MyComponent />, \\{\n   *   mountedRoutes: \\{\n   *     '/my-path': myRouteRef,\n   *   \\}\n   * \\})\n   * // ...\n   * const link = useRouteRef(myRouteRef)\n   */\n  mountedRoutes?: { [path: string]: RouteRef | ExternalRouteRef };\n\n  /**\n   * Components to be forwarded to the `components` option of `createApp`.\n   */\n  components?: Partial<AppComponents>;\n\n  /**\n   * Icons to be forwarded to the `icons` option of `createApp`.\n   */\n  icons?: Partial<AppIcons> & {\n    [key in string]: IconComponent;\n  };\n};\n\nfunction isExternalRouteRef(\n  routeRef: RouteRef | ExternalRouteRef,\n): routeRef is ExternalRouteRef {\n  // TODO(Rugvip): Least ugly workaround for now, but replace :D\n  return String(routeRef).includes('{type=external,');\n}\n\n/**\n * Creates a Wrapper component that wraps a component inside a Backstage test app,\n * providing a mocked theme and app context, along with mocked APIs.\n *\n * @param options - Additional options for the rendering.\n * @public\n */\nexport function createTestAppWrapper(\n  options: TestAppOptions = {},\n): (props: { children: ReactNode }) => JSX.Element {\n  const { routeEntries = ['/'] } = options;\n  const boundRoutes = new Map<ExternalRouteRef, RouteRef>();\n\n  const app = createSpecializedApp({\n    apis: mockApis,\n    defaultApis,\n    // Bit of a hack to make sure that the default config loader isn't used\n    // as that would force every single test to wait for config loading.\n    configLoader: false as unknown as undefined,\n    components: {\n      Progress,\n      BootErrorPage,\n      NotFoundErrorPage,\n      ErrorBoundaryFallback,\n      Router: ({ children }) => (\n        <MemoryRouter initialEntries={routeEntries} children={children} />\n      ),\n      ...options.components,\n    },\n    icons: {\n      ...mockIcons,\n      ...options.icons,\n    },\n    plugins: [],\n    themes: [\n      {\n        id: 'light',\n        title: 'Test App Theme',\n        variant: 'light',\n        Provider: ({ children }) => (\n          <UnifiedThemeProvider theme={themes.light}>\n            {children}\n          </UnifiedThemeProvider>\n        ),\n      },\n    ],\n    bindRoutes: ({ bind }) => {\n      for (const [externalRef, absoluteRef] of boundRoutes) {\n        bind(\n          { ref: externalRef },\n          {\n            ref: absoluteRef,\n          },\n        );\n      }\n    },\n  });\n\n  const routeElements = Object.entries(options.mountedRoutes ?? {}).map(\n    ([path, routeRef]) => {\n      const Page = () => <div>Mounted at {path}</div>;\n\n      // Allow external route refs to be bound to paths as well, for convenience.\n      // We work around it by creating and binding an absolute ref to the external one.\n      if (isExternalRouteRef(routeRef)) {\n        const absoluteRef = createRouteRef({ id: 'id' });\n        boundRoutes.set(routeRef, absoluteRef);\n        attachComponentData(Page, 'core.mountPoint', absoluteRef);\n      } else {\n        attachComponentData(Page, 'core.mountPoint', routeRef);\n      }\n      return <Route key={path} path={path} element={<Page />} />;\n    },\n  );\n\n  const AppProvider = app.getProvider();\n  const AppRouter = app.getRouter();\n\n  const TestAppWrapper = ({ children }: { children: ReactNode }) => (\n    <AppProvider>\n      <AppRouter>\n        <NoRender>{routeElements}</NoRender>\n        {children}\n      </AppRouter>\n    </AppProvider>\n  );\n\n  return TestAppWrapper;\n}\n\n/**\n * Wraps a component inside a Backstage test app, providing a mocked theme\n * and app context, along with mocked APIs.\n *\n * @param Component - A component or react node to render inside the test app.\n * @param options - Additional options for the rendering.\n * @public\n */\nexport function wrapInTestApp(\n  Component: ComponentType | ReactNode,\n  options: TestAppOptions = {},\n): ReactElement {\n  const TestAppWrapper = createTestAppWrapper(options);\n\n  let wrappedElement: React.ReactElement;\n  if (Component instanceof Function) {\n    wrappedElement = React.createElement(Component as ComponentType);\n  } else {\n    wrappedElement = Component as React.ReactElement;\n  }\n\n  return <TestAppWrapper>{wrappedElement}</TestAppWrapper>;\n}\n\n/**\n * Renders a component inside a Backstage test app, providing a mocked theme\n * and app context, along with mocked APIs.\n *\n * The render executes async effects similar to `renderWithEffects`. To avoid this\n * behavior, use a regular `render()` + `wrapInTestApp()` instead.\n *\n * @param Component - A component or react node to render inside the test app.\n * @param options - Additional options for the rendering.\n * @public\n */\nexport async function renderInTestApp(\n  Component: ComponentType<PropsWithChildren<{}>> | ReactNode,\n  options: TestAppOptions & LegacyRootOption = {},\n): Promise<RenderResult> {\n  let wrappedElement: React.ReactElement;\n  if (Component instanceof Function) {\n    wrappedElement = React.createElement(Component as ComponentType);\n  } else {\n    wrappedElement = Component as React.ReactElement;\n  }\n  const { legacyRoot } = options;\n\n  return renderWithEffects(wrappedElement, {\n    wrapper: createTestAppWrapper(options),\n    legacyRoot,\n  });\n}\n\n/**\n * Returns a `@testing-library/react` valid MatcherFunction for supplied text\n *\n * @param string - text Text to match by element's textContent\n *\n * @public\n */\nexport const textContentMatcher =\n  (text: string): MatcherFunction =>\n  (_, node) => {\n    if (!node) {\n      return false;\n    }\n\n    const hasText = (textNode: Element) =>\n      textNode?.textContent?.includes(text) ?? false;\n    const childrenDontHaveText = (containerNode: Element) =>\n      Array.from(containerNode?.children).every(child => !hasText(child));\n\n    return hasText(node) && childrenDontHaveText(node);\n  };\n"],"names":[],"mappings":"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"}