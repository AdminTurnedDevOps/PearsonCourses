{"version":3,"file":"module.cjs.js","sources":["../src/module.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  coreServices,\n  createBackendModule,\n} from '@backstage/backend-plugin-api';\nimport { scaffolderActionsExtensionPoint } from '@backstage/plugin-scaffolder-node/alpha';\nimport {\n  createBitbucketPipelinesRunAction,\n  createPublishBitbucketCloudAction,\n  createPublishBitbucketServerAction,\n  createPublishBitbucketServerPullRequestAction,\n} from './deprecated';\nimport { ScmIntegrations } from '@backstage/integration';\n\n/**\n * The Bitbucket Module for the Scaffolder Backend\n * @public\n * @deprecated use module by \\@backstage/plugin-scaffolder-backend-module-bitbucket-cloud or \\@backstage/plugin-scaffolder-backend-module-bitbucket-server instead\n */\nexport const bitbucketModule = createBackendModule({\n  moduleId: 'bitbucket',\n  pluginId: 'scaffolder',\n  register({ registerInit }) {\n    registerInit({\n      deps: {\n        scaffolder: scaffolderActionsExtensionPoint,\n        config: coreServices.rootConfig,\n      },\n      async init({ scaffolder, config }) {\n        const integrations = ScmIntegrations.fromConfig(config);\n\n        scaffolder.addActions(\n          createPublishBitbucketCloudAction({ integrations, config }),\n          createPublishBitbucketServerAction({ integrations, config }),\n          createPublishBitbucketServerPullRequestAction({\n            integrations,\n            config,\n          }),\n          createBitbucketPipelinesRunAction({ integrations }),\n        );\n      },\n    });\n  },\n});\n"],"names":["createBackendModule","scaffolderActionsExtensionPoint","coreServices","ScmIntegrations","createPublishBitbucketCloudAction","createPublishBitbucketServerAction","createPublishBitbucketServerPullRequestAction","createBitbucketPipelinesRunAction"],"mappings":";;;;;;;AAiCO,MAAM,kBAAkBA,oCAAoB,CAAA;AAAA,EACjD,QAAU,EAAA,WAAA;AAAA,EACV,QAAU,EAAA,YAAA;AAAA,EACV,QAAA,CAAS,EAAE,YAAA,EAAgB,EAAA;AACzB,IAAa,YAAA,CAAA;AAAA,MACX,IAAM,EAAA;AAAA,QACJ,UAAY,EAAAC,qCAAA;AAAA,QACZ,QAAQC,6BAAa,CAAA;AAAA,OACvB;AAAA,MACA,MAAM,IAAA,CAAK,EAAE,UAAA,EAAY,QAAU,EAAA;AACjC,QAAM,MAAA,YAAA,GAAeC,2BAAgB,CAAA,UAAA,CAAW,MAAM,CAAA;AAEtD,QAAW,UAAA,CAAA,UAAA;AAAA,UACTC,4CAAkC,CAAA,EAAE,YAAc,EAAA,MAAA,EAAQ,CAAA;AAAA,UAC1DC,6CAAmC,CAAA,EAAE,YAAc,EAAA,MAAA,EAAQ,CAAA;AAAA,UAC3DC,wDAA8C,CAAA;AAAA,YAC5C,YAAA;AAAA,YACA;AAAA,WACD,CAAA;AAAA,UACDC,4CAAA,CAAkC,EAAE,YAAA,EAAc;AAAA,SACpD;AAAA;AACF,KACD,CAAA;AAAA;AAEL,CAAC;;;;"}