'use strict';

var bitbucketCloud = require('@backstage/plugin-scaffolder-backend-module-bitbucket-cloud');
var bitbucketServer = require('@backstage/plugin-scaffolder-backend-module-bitbucket-server');
require('@backstage/errors');
require('@backstage/plugin-scaffolder-node');
require('./actions/bitbucket.examples.cjs.js');

function _interopNamespaceCompat(e) {
  if (e && typeof e === 'object' && 'default' in e) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n.default = e;
  return Object.freeze(n);
}

var bitbucketCloud__namespace = /*#__PURE__*/_interopNamespaceCompat(bitbucketCloud);
var bitbucketServer__namespace = /*#__PURE__*/_interopNamespaceCompat(bitbucketServer);

const createPublishBitbucketCloudAction = bitbucketCloud__namespace.createPublishBitbucketCloudAction;
const createBitbucketPipelinesRunAction = bitbucketCloud__namespace.createBitbucketPipelinesRunAction;
const createPublishBitbucketServerAction = bitbucketServer__namespace.createPublishBitbucketServerAction;
const createPublishBitbucketServerPullRequestAction = bitbucketServer__namespace.createPublishBitbucketServerPullRequestAction;

exports.createBitbucketPipelinesRunAction = createBitbucketPipelinesRunAction;
exports.createPublishBitbucketCloudAction = createPublishBitbucketCloudAction;
exports.createPublishBitbucketServerAction = createPublishBitbucketServerAction;
exports.createPublishBitbucketServerPullRequestAction = createPublishBitbucketServerPullRequestAction;
//# sourceMappingURL=deprecated.cjs.js.map
