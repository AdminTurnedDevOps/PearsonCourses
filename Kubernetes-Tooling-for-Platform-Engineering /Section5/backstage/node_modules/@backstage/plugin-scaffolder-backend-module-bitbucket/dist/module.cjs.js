'use strict';

var backendPluginApi = require('@backstage/backend-plugin-api');
var alpha = require('@backstage/plugin-scaffolder-node/alpha');
var deprecated = require('./deprecated.cjs.js');
var integration = require('@backstage/integration');

const bitbucketModule = backendPluginApi.createBackendModule({
  moduleId: "bitbucket",
  pluginId: "scaffolder",
  register({ registerInit }) {
    registerInit({
      deps: {
        scaffolder: alpha.scaffolderActionsExtensionPoint,
        config: backendPluginApi.coreServices.rootConfig
      },
      async init({ scaffolder, config }) {
        const integrations = integration.ScmIntegrations.fromConfig(config);
        scaffolder.addActions(
          deprecated.createPublishBitbucketCloudAction({ integrations, config }),
          deprecated.createPublishBitbucketServerAction({ integrations, config }),
          deprecated.createPublishBitbucketServerPullRequestAction({
            integrations,
            config
          }),
          deprecated.createBitbucketPipelinesRunAction({ integrations })
        );
      }
    });
  }
});

exports.bitbucketModule = bitbucketModule;
//# sourceMappingURL=module.cjs.js.map
