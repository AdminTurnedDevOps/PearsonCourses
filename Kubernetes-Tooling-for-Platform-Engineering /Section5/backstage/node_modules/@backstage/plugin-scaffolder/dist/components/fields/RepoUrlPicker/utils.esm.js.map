{"version":3,"file":"utils.esm.js","sources":["../../../../src/components/fields/RepoUrlPicker/utils.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoUrlPickerState } from './types';\n\nexport function serializeRepoPickerUrl(data: RepoUrlPickerState) {\n  if (!data.host) {\n    return undefined;\n  }\n\n  const params = new URLSearchParams();\n  if (data.owner) {\n    params.set('owner', data.owner);\n  }\n  if (data.repoName) {\n    params.set('repo', data.repoName);\n  }\n  if (data.organization) {\n    params.set('organization', data.organization);\n  }\n  if (data.workspace) {\n    params.set('workspace', data.workspace);\n  }\n  if (data.project) {\n    params.set('project', data.project);\n  }\n  if (data.id) {\n    params.set('id', data.id);\n  }\n\n  return `${data.host}?${params.toString()}`;\n}\n\nexport function parseRepoPickerUrl(\n  url: string | undefined,\n): RepoUrlPickerState {\n  let host = '';\n  let owner = '';\n  let repoName = '';\n  let organization = '';\n  let workspace = '';\n  let project = '';\n  let id = '';\n\n  try {\n    if (url) {\n      const parsed = new URL(`https://${url}`);\n      host = parsed.host;\n      owner = parsed.searchParams.get('owner') || '';\n      repoName = parsed.searchParams.get('repo') || '';\n      organization = parsed.searchParams.get('organization') || '';\n      workspace = parsed.searchParams.get('workspace') || '';\n      project = parsed.searchParams.get('project') || '';\n      id = parsed.searchParams.get('id') || '';\n    }\n  } catch {\n    /* ok */\n  }\n  return { host, owner, repoName, organization, workspace, project, id };\n}\n"],"names":[],"mappings":"AAkBO,SAAS,uBAAuB,IAA0B,EAAA;AAC/D,EAAI,IAAA,CAAC,KAAK,IAAM,EAAA;AACd,IAAO,OAAA,KAAA,CAAA;AAAA;AAGT,EAAM,MAAA,MAAA,GAAS,IAAI,eAAgB,EAAA;AACnC,EAAA,IAAI,KAAK,KAAO,EAAA;AACd,IAAO,MAAA,CAAA,GAAA,CAAI,OAAS,EAAA,IAAA,CAAK,KAAK,CAAA;AAAA;AAEhC,EAAA,IAAI,KAAK,QAAU,EAAA;AACjB,IAAO,MAAA,CAAA,GAAA,CAAI,MAAQ,EAAA,IAAA,CAAK,QAAQ,CAAA;AAAA;AAElC,EAAA,IAAI,KAAK,YAAc,EAAA;AACrB,IAAO,MAAA,CAAA,GAAA,CAAI,cAAgB,EAAA,IAAA,CAAK,YAAY,CAAA;AAAA;AAE9C,EAAA,IAAI,KAAK,SAAW,EAAA;AAClB,IAAO,MAAA,CAAA,GAAA,CAAI,WAAa,EAAA,IAAA,CAAK,SAAS,CAAA;AAAA;AAExC,EAAA,IAAI,KAAK,OAAS,EAAA;AAChB,IAAO,MAAA,CAAA,GAAA,CAAI,SAAW,EAAA,IAAA,CAAK,OAAO,CAAA;AAAA;AAEpC,EAAA,IAAI,KAAK,EAAI,EAAA;AACX,IAAO,MAAA,CAAA,GAAA,CAAI,IAAM,EAAA,IAAA,CAAK,EAAE,CAAA;AAAA;AAG1B,EAAA,OAAO,GAAG,IAAK,CAAA,IAAI,CAAI,CAAA,EAAA,MAAA,CAAO,UAAU,CAAA,CAAA;AAC1C;AAEO,SAAS,mBACd,GACoB,EAAA;AACpB,EAAA,IAAI,IAAO,GAAA,EAAA;AACX,EAAA,IAAI,KAAQ,GAAA,EAAA;AACZ,EAAA,IAAI,QAAW,GAAA,EAAA;AACf,EAAA,IAAI,YAAe,GAAA,EAAA;AACnB,EAAA,IAAI,SAAY,GAAA,EAAA;AAChB,EAAA,IAAI,OAAU,GAAA,EAAA;AACd,EAAA,IAAI,EAAK,GAAA,EAAA;AAET,EAAI,IAAA;AACF,IAAA,IAAI,GAAK,EAAA;AACP,MAAA,MAAM,MAAS,GAAA,IAAI,GAAI,CAAA,CAAA,QAAA,EAAW,GAAG,CAAE,CAAA,CAAA;AACvC,MAAA,IAAA,GAAO,MAAO,CAAA,IAAA;AACd,MAAA,KAAA,GAAQ,MAAO,CAAA,YAAA,CAAa,GAAI,CAAA,OAAO,CAAK,IAAA,EAAA;AAC5C,MAAA,QAAA,GAAW,MAAO,CAAA,YAAA,CAAa,GAAI,CAAA,MAAM,CAAK,IAAA,EAAA;AAC9C,MAAA,YAAA,GAAe,MAAO,CAAA,YAAA,CAAa,GAAI,CAAA,cAAc,CAAK,IAAA,EAAA;AAC1D,MAAA,SAAA,GAAY,MAAO,CAAA,YAAA,CAAa,GAAI,CAAA,WAAW,CAAK,IAAA,EAAA;AACpD,MAAA,OAAA,GAAU,MAAO,CAAA,YAAA,CAAa,GAAI,CAAA,SAAS,CAAK,IAAA,EAAA;AAChD,MAAA,EAAA,GAAK,MAAO,CAAA,YAAA,CAAa,GAAI,CAAA,IAAI,CAAK,IAAA,EAAA;AAAA;AACxC,GACM,CAAA,MAAA;AAAA;AAGR,EAAA,OAAO,EAAE,IAAM,EAAA,KAAA,EAAO,UAAU,YAAc,EAAA,SAAA,EAAW,SAAS,EAAG,EAAA;AACvE;;;;"}