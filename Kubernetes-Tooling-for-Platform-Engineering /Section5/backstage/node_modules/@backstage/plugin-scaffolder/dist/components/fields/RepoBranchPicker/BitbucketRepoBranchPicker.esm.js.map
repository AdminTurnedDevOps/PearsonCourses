{"version":3,"file":"BitbucketRepoBranchPicker.esm.js","sources":["../../../../src/components/fields/RepoBranchPicker/BitbucketRepoBranchPicker.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useApi } from '@backstage/core-plugin-api';\nimport { scaffolderApiRef } from '@backstage/plugin-scaffolder-react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport React, { useCallback, useState } from 'react';\nimport useDebounce from 'react-use/esm/useDebounce';\nimport { BaseRepoBranchPickerProps } from './types';\n\n/**\n * The underlying component that is rendered in the form for the `BitbucketRepoBranchPicker`\n * field extension.\n *\n * @public\n *\n */\nexport const BitbucketRepoBranchPicker = ({\n  onChange,\n  state,\n  rawErrors,\n  accessToken,\n  required,\n}: BaseRepoBranchPickerProps<{\n  accessToken?: string;\n}>) => {\n  const { host, workspace, repository, branch } = state;\n\n  const [availableBranches, setAvailableBranches] = useState<string[]>([]);\n\n  const scaffolderApi = useApi(scaffolderApiRef);\n\n  const updateAvailableBranches = useCallback(() => {\n    if (\n      !scaffolderApi.autocomplete ||\n      !workspace ||\n      !repository ||\n      !accessToken ||\n      host !== 'bitbucket.org'\n    ) {\n      setAvailableBranches([]);\n      return;\n    }\n\n    scaffolderApi\n      .autocomplete({\n        token: accessToken,\n        resource: 'branches',\n        context: { workspace, repository },\n        provider: 'bitbucket-cloud',\n      })\n      .then(({ results }) => {\n        setAvailableBranches(results.map(r => r.title!));\n      })\n      .catch(() => {\n        setAvailableBranches([]);\n      });\n  }, [host, workspace, repository, accessToken, scaffolderApi]);\n\n  useDebounce(updateAvailableBranches, 500, [updateAvailableBranches]);\n\n  return (\n    <FormControl\n      margin=\"normal\"\n      required={required}\n      error={rawErrors?.length > 0 && !branch}\n    >\n      <Autocomplete\n        value={branch}\n        onChange={(_, newValue) => {\n          onChange({ branch: newValue || '' });\n        }}\n        options={availableBranches}\n        renderInput={params => (\n          <TextField {...params} label=\"Branch\" required={required} />\n        )}\n        freeSolo\n        autoSelect\n      />\n      <FormHelperText>The branch of the repository</FormHelperText>\n    </FormControl>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;AAiCO,MAAM,4BAA4B,CAAC;AAAA,EACxC,QAAA;AAAA,EACA,KAAA;AAAA,EACA,SAAA;AAAA,EACA,WAAA;AAAA,EACA;AACF,CAEO,KAAA;AACL,EAAA,MAAM,EAAE,IAAA,EAAM,SAAW,EAAA,UAAA,EAAY,QAAW,GAAA,KAAA;AAEhD,EAAA,MAAM,CAAC,iBAAmB,EAAA,oBAAoB,CAAI,GAAA,QAAA,CAAmB,EAAE,CAAA;AAEvE,EAAM,MAAA,aAAA,GAAgB,OAAO,gBAAgB,CAAA;AAE7C,EAAM,MAAA,uBAAA,GAA0B,YAAY,MAAM;AAChD,IACE,IAAA,CAAC,aAAc,CAAA,YAAA,IACf,CAAC,SAAA,IACD,CAAC,UACD,IAAA,CAAC,WACD,IAAA,IAAA,KAAS,eACT,EAAA;AACA,MAAA,oBAAA,CAAqB,EAAE,CAAA;AACvB,MAAA;AAAA;AAGF,IAAA,aAAA,CACG,YAAa,CAAA;AAAA,MACZ,KAAO,EAAA,WAAA;AAAA,MACP,QAAU,EAAA,UAAA;AAAA,MACV,OAAA,EAAS,EAAE,SAAA,EAAW,UAAW,EAAA;AAAA,MACjC,QAAU,EAAA;AAAA,KACX,CACA,CAAA,IAAA,CAAK,CAAC,EAAE,SAAc,KAAA;AACrB,MAAA,oBAAA,CAAqB,OAAQ,CAAA,GAAA,CAAI,CAAK,CAAA,KAAA,CAAA,CAAE,KAAM,CAAC,CAAA;AAAA,KAChD,CACA,CAAA,KAAA,CAAM,MAAM;AACX,MAAA,oBAAA,CAAqB,EAAE,CAAA;AAAA,KACxB,CAAA;AAAA,KACF,CAAC,IAAA,EAAM,WAAW,UAAY,EAAA,WAAA,EAAa,aAAa,CAAC,CAAA;AAE5D,EAAA,WAAA,CAAY,uBAAyB,EAAA,GAAA,EAAK,CAAC,uBAAuB,CAAC,CAAA;AAEnE,EACE,uBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,WAAA;AAAA,IAAA;AAAA,MACC,MAAO,EAAA,QAAA;AAAA,MACP,QAAA;AAAA,MACA,KAAO,EAAA,SAAA,EAAW,MAAS,GAAA,CAAA,IAAK,CAAC;AAAA,KAAA;AAAA,oBAEjC,KAAA,CAAA,aAAA;AAAA,MAAC,YAAA;AAAA,MAAA;AAAA,QACC,KAAO,EAAA,MAAA;AAAA,QACP,QAAA,EAAU,CAAC,CAAA,EAAG,QAAa,KAAA;AACzB,UAAA,QAAA,CAAS,EAAE,MAAA,EAAQ,QAAY,IAAA,EAAA,EAAI,CAAA;AAAA,SACrC;AAAA,QACA,OAAS,EAAA,iBAAA;AAAA,QACT,WAAA,EAAa,4BACV,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,EAAW,GAAG,MAAQ,EAAA,KAAA,EAAM,UAAS,QAAoB,EAAA,CAAA;AAAA,QAE5D,QAAQ,EAAA,IAAA;AAAA,QACR,UAAU,EAAA;AAAA;AAAA,KACZ;AAAA,oBACA,KAAA,CAAA,aAAA,CAAC,sBAAe,8BAA4B;AAAA,GAC9C;AAEJ;;;;"}