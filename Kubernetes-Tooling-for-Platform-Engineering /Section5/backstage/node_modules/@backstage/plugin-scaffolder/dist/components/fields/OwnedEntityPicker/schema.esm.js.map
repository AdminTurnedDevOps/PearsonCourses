{"version":3,"file":"schema.esm.js","sources":["../../../../src/components/fields/OwnedEntityPicker/schema.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { z } from 'zod';\nimport { makeFieldSchemaFromZod } from '../utils';\nimport { entityQueryFilterExpressionSchema } from '../EntityPicker/schema';\n\n/**\n * @public\n */\nexport const OwnedEntityPickerFieldSchema = makeFieldSchemaFromZod(\n  z.string(),\n  z.object({\n    allowedKinds: z\n      .array(z.string())\n      .optional()\n      .describe(\n        'DEPRECATED: Use `catalogFilter` instead. List of kinds of entities to derive options from',\n      ),\n    defaultKind: z\n      .string()\n      .optional()\n      .describe(\n        'The default entity kind. Options of this kind will not be prefixed.',\n      ),\n    allowArbitraryValues: z\n      .boolean()\n      .optional()\n      .describe('Whether to allow arbitrary user input. Defaults to true'),\n    defaultNamespace: z\n      .union([z.string(), z.literal(false)])\n      .optional()\n      .describe(\n        'The default namespace. Options with this namespace will not be prefixed.',\n      ),\n    catalogFilter: z\n      .array(entityQueryFilterExpressionSchema)\n      .or(entityQueryFilterExpressionSchema)\n      .optional()\n      .describe('List of key-value filter expression for entities'),\n  }),\n);\n\n/**\n * The input props that can be specified under `ui:options` for the\n * `OwnedEntityPicker` field extension.\n *\n * @public\n */\nexport type OwnedEntityPickerUiOptions =\n  typeof OwnedEntityPickerFieldSchema.uiOptionsType;\n\nexport type OwnedEntityPickerProps = typeof OwnedEntityPickerFieldSchema.type;\n\nexport const OwnedEntityPickerSchema = OwnedEntityPickerFieldSchema.schema;\n"],"names":[],"mappings":";;;;AAsBO,MAAM,4BAA+B,GAAA,sBAAA;AAAA,EAC1C,EAAE,MAAO,EAAA;AAAA,EACT,EAAE,MAAO,CAAA;AAAA,IACP,YAAA,EAAc,EACX,KAAM,CAAA,CAAA,CAAE,QAAQ,CAAA,CAChB,UACA,CAAA,QAAA;AAAA,MACC;AAAA,KACF;AAAA,IACF,WAAa,EAAA,CAAA,CACV,MAAO,EAAA,CACP,UACA,CAAA,QAAA;AAAA,MACC;AAAA,KACF;AAAA,IACF,sBAAsB,CACnB,CAAA,OAAA,GACA,QAAS,EAAA,CACT,SAAS,yDAAyD,CAAA;AAAA,IACrE,gBAAkB,EAAA,CAAA,CACf,KAAM,CAAA,CAAC,EAAE,MAAO,EAAA,EAAG,CAAE,CAAA,OAAA,CAAQ,KAAK,CAAC,CAAC,CAAA,CACpC,UACA,CAAA,QAAA;AAAA,MACC;AAAA,KACF;AAAA,IACF,aAAA,EAAe,CACZ,CAAA,KAAA,CAAM,iCAAiC,CAAA,CACvC,EAAG,CAAA,iCAAiC,CACpC,CAAA,QAAA,EACA,CAAA,QAAA,CAAS,kDAAkD;AAAA,GAC/D;AACH;AAaO,MAAM,0BAA0B,4BAA6B,CAAA;;;;"}