import React from 'react';
import { EntityPicker } from '../EntityPicker/EntityPicker.esm.js';
import { useTranslationRef } from '@backstage/core-plugin-api/alpha';
import { scaffolderTranslationRef } from '../../../translation.esm.js';
export { OwnerPickerSchema } from './schema.esm.js';

const OwnerPicker = (props) => {
  const { t } = useTranslationRef(scaffolderTranslationRef);
  const {
    schema: {
      title = t("fields.ownerPicker.title"),
      description = t("fields.ownerPicker.description")
    },
    uiSchema,
    ...restProps
  } = props;
  const defaultNamespace = uiSchema["ui:options"]?.defaultNamespace;
  const allowedKinds = uiSchema["ui:options"]?.allowedKinds;
  const catalogFilter = uiSchema["ui:options"]?.catalogFilter || {
    kind: allowedKinds || ["Group", "User"]
  };
  const ownerUiSchema = {
    ...uiSchema,
    "ui:options": {
      catalogFilter,
      defaultKind: "Group",
      allowArbitraryValues: uiSchema["ui:options"]?.allowArbitraryValues ?? true,
      ...defaultNamespace !== void 0 ? { defaultNamespace } : {}
    }
  };
  return /* @__PURE__ */ React.createElement(
    EntityPicker,
    {
      ...restProps,
      schema: { title, description },
      uiSchema: ownerUiSchema
    }
  );
};

export { OwnerPicker };
//# sourceMappingURL=OwnerPicker.esm.js.map
