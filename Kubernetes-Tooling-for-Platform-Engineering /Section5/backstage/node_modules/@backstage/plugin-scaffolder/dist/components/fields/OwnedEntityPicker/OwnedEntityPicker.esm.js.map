{"version":3,"file":"OwnedEntityPicker.esm.js","sources":["../../../../src/components/fields/OwnedEntityPicker/OwnedEntityPicker.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { RELATION_OWNED_BY } from '@backstage/catalog-model';\nimport { identityApiRef, useApi } from '@backstage/core-plugin-api';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport React from 'react';\nimport useAsync from 'react-use/esm/useAsync';\nimport { EntityPicker } from '../EntityPicker/EntityPicker';\n\nimport { OwnedEntityPickerProps } from './schema';\nimport { EntityPickerProps } from '../EntityPicker/schema';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\nimport { scaffolderTranslationRef } from '../../../translation';\n\nexport { OwnedEntityPickerSchema } from './schema';\n\n/**\n * The underlying component that is rendered in the form for the `OwnedEntityPicker`\n * field extension.\n *\n * @public\n */\nexport const OwnedEntityPicker = (props: OwnedEntityPickerProps) => {\n  const { t } = useTranslationRef(scaffolderTranslationRef);\n  const {\n    schema: {\n      title = t('fields.ownedEntityPicker.title'),\n      description = t('fields.ownedEntityPicker.description'),\n    },\n    uiSchema,\n    required,\n  } = props;\n\n  const identityApi = useApi(identityApiRef);\n  const { loading, value: identityRefs } = useAsync(async () => {\n    const identity = await identityApi.getBackstageIdentity();\n    return identity.ownershipEntityRefs;\n  });\n\n  if (loading)\n    return (\n      <Autocomplete\n        loading={loading}\n        renderInput={params => (\n          <TextField\n            {...params}\n            label={title}\n            margin=\"dense\"\n            helperText={description}\n            FormHelperTextProps={{ margin: 'dense', style: { marginLeft: 0 } }}\n            variant=\"outlined\"\n            required={required}\n            InputProps={params.InputProps}\n          />\n        )}\n        options={[]}\n      />\n    );\n\n  const entityPickerUISchema = buildEntityPickerUISchema(\n    uiSchema,\n    identityRefs,\n  );\n\n  return <EntityPicker {...props} uiSchema={entityPickerUISchema} />;\n};\n\n/**\n * Builds a `uiSchema` for an `EntityPicker` from a parent `OwnedEntityPicker`.\n * Migrates deprecated parameters such as `allowedKinds` to `catalogFilter` structure.\n *\n * @param uiSchema The `uiSchema` of an `OwnedEntityPicker` component.\n * @param identityRefs The user and group entities that the user claims ownership through.\n * @returns The `uiSchema` for an `EntityPicker` component.\n */\nfunction buildEntityPickerUISchema(\n  uiSchema: OwnedEntityPickerProps['uiSchema'],\n  identityRefs: string[] | undefined,\n): EntityPickerProps['uiSchema'] {\n  // Note: This is typed to avoid es-lint rule TS2698\n  const uiOptions: EntityPickerProps['uiSchema']['ui:options'] =\n    uiSchema?.['ui:options'] || {};\n  const { allowedKinds, ...extraOptions } = uiOptions;\n\n  const catalogFilter = asArray(uiOptions.catalogFilter).map(e => ({\n    ...e,\n    ...(allowedKinds ? { kind: allowedKinds } : {}),\n    [`relations.${RELATION_OWNED_BY}`]: identityRefs || [],\n  }));\n\n  return {\n    'ui:options': {\n      ...extraOptions,\n      catalogFilter,\n    },\n  };\n}\n\nfunction asArray(catalogFilter: any): any[] {\n  if (catalogFilter) {\n    return Array.isArray(catalogFilter) ? catalogFilter : [catalogFilter];\n  }\n  return [{}];\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAoCa,MAAA,iBAAA,GAAoB,CAAC,KAAkC,KAAA;AAClE,EAAA,MAAM,EAAE,CAAA,EAAM,GAAA,iBAAA,CAAkB,wBAAwB,CAAA;AACxD,EAAM,MAAA;AAAA,IACJ,MAAQ,EAAA;AAAA,MACN,KAAA,GAAQ,EAAE,gCAAgC,CAAA;AAAA,MAC1C,WAAA,GAAc,EAAE,sCAAsC;AAAA,KACxD;AAAA,IACA,QAAA;AAAA,IACA;AAAA,GACE,GAAA,KAAA;AAEJ,EAAM,MAAA,WAAA,GAAc,OAAO,cAAc,CAAA;AACzC,EAAA,MAAM,EAAE,OAAS,EAAA,KAAA,EAAO,YAAa,EAAA,GAAI,SAAS,YAAY;AAC5D,IAAM,MAAA,QAAA,GAAW,MAAM,WAAA,CAAY,oBAAqB,EAAA;AACxD,IAAA,OAAO,QAAS,CAAA,mBAAA;AAAA,GACjB,CAAA;AAED,EAAI,IAAA,OAAA;AACF,IACE,uBAAA,KAAA,CAAA,aAAA;AAAA,MAAC,YAAA;AAAA,MAAA;AAAA,QACC,OAAA;AAAA,QACA,aAAa,CACX,MAAA,qBAAA,KAAA,CAAA,aAAA;AAAA,UAAC,SAAA;AAAA,UAAA;AAAA,YACE,GAAG,MAAA;AAAA,YACJ,KAAO,EAAA,KAAA;AAAA,YACP,MAAO,EAAA,OAAA;AAAA,YACP,UAAY,EAAA,WAAA;AAAA,YACZ,mBAAA,EAAqB,EAAE,MAAQ,EAAA,OAAA,EAAS,OAAO,EAAE,UAAA,EAAY,GAAI,EAAA;AAAA,YACjE,OAAQ,EAAA,UAAA;AAAA,YACR,QAAA;AAAA,YACA,YAAY,MAAO,CAAA;AAAA;AAAA,SACrB;AAAA,QAEF,SAAS;AAAC;AAAA,KACZ;AAGJ,EAAA,MAAM,oBAAuB,GAAA,yBAAA;AAAA,IAC3B,QAAA;AAAA,IACA;AAAA,GACF;AAEA,EAAA,uBAAQ,KAAA,CAAA,aAAA,CAAA,YAAA,EAAA,EAAc,GAAG,KAAA,EAAO,UAAU,oBAAsB,EAAA,CAAA;AAClE;AAUA,SAAS,yBAAA,CACP,UACA,YAC+B,EAAA;AAE/B,EAAA,MAAM,SACJ,GAAA,QAAA,GAAW,YAAY,CAAA,IAAK,EAAC;AAC/B,EAAA,MAAM,EAAE,YAAA,EAAc,GAAG,YAAA,EAAiB,GAAA,SAAA;AAE1C,EAAA,MAAM,gBAAgB,OAAQ,CAAA,SAAA,CAAU,aAAa,CAAA,CAAE,IAAI,CAAM,CAAA,MAAA;AAAA,IAC/D,GAAG,CAAA;AAAA,IACH,GAAI,YAAe,GAAA,EAAE,IAAM,EAAA,YAAA,KAAiB,EAAC;AAAA,IAC7C,CAAC,CAAa,UAAA,EAAA,iBAAiB,CAAE,CAAA,GAAG,gBAAgB;AAAC,GACrD,CAAA,CAAA;AAEF,EAAO,OAAA;AAAA,IACL,YAAc,EAAA;AAAA,MACZ,GAAG,YAAA;AAAA,MACH;AAAA;AACF,GACF;AACF;AAEA,SAAS,QAAQ,aAA2B,EAAA;AAC1C,EAAA,IAAI,aAAe,EAAA;AACjB,IAAA,OAAO,MAAM,OAAQ,CAAA,aAAa,CAAI,GAAA,aAAA,GAAgB,CAAC,aAAa,CAAA;AAAA;AAEtE,EAAO,OAAA,CAAC,EAAE,CAAA;AACZ;;;;"}