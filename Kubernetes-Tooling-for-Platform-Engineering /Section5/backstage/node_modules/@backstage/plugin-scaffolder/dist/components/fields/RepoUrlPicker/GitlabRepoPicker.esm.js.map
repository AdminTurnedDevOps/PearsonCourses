{"version":3,"file":"GitlabRepoPicker.esm.js","sources":["../../../../src/components/fields/RepoUrlPicker/GitlabRepoPicker.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Select, SelectItem } from '@backstage/core-components';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\nimport { scaffolderApiRef } from '@backstage/plugin-scaffolder-react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport React, { useCallback, useState } from 'react';\nimport useDebounce from 'react-use/esm/useDebounce';\nimport { scaffolderTranslationRef } from '../../../translation';\nimport { BaseRepoUrlPickerProps } from './types';\n\nexport const GitlabRepoPicker = (\n  props: BaseRepoUrlPickerProps<{\n    allowedOwners?: string[];\n    allowedRepos?: string[];\n    accessToken?: string;\n  }>,\n) => {\n  const { allowedOwners = [], state, onChange, rawErrors, accessToken } = props;\n  const [availableGroups, setAvailableGroups] = useState<\n    { title: string; id: string }[]\n  >([]);\n  const { t } = useTranslationRef(scaffolderTranslationRef);\n  const ownerItems: SelectItem[] = allowedOwners\n    ? allowedOwners.map(i => ({ label: i, value: i }))\n    : [{ label: 'Loading...', value: 'loading' }];\n\n  const { owner, host } = state;\n\n  const scaffolderApi = useApi(scaffolderApiRef);\n\n  const updateAvailableGroups = useCallback(() => {\n    if (!scaffolderApi.autocomplete || !accessToken || !host) {\n      setAvailableGroups([]);\n      return;\n    }\n\n    scaffolderApi\n      .autocomplete({\n        token: accessToken,\n        resource: 'groups',\n        provider: 'gitlab',\n        context: { host },\n      })\n      .then(({ results }) => {\n        setAvailableGroups(\n          results.map(r => {\n            return {\n              title: r.title!,\n              id: r.id,\n            };\n          }),\n        );\n      })\n      .catch(() => {\n        setAvailableGroups([]);\n      });\n  }, [scaffolderApi, accessToken, host]);\n\n  useDebounce(updateAvailableGroups, 500, [updateAvailableGroups]);\n\n  // Update available repositories when client is available and group changes\n  const updateAvailableRepositories = useCallback(() => {\n    if (!scaffolderApi.autocomplete || !accessToken || !host || !owner) {\n      onChange({ availableRepos: [] });\n      return;\n    }\n\n    const selectedGroup = availableGroups.find(group => group.title === owner);\n\n    scaffolderApi\n      .autocomplete({\n        token: accessToken,\n        resource: 'repositories',\n        context: {\n          id: selectedGroup?.id ?? '',\n          host,\n        },\n        provider: 'gitlab',\n      })\n      .then(({ results }) => {\n        onChange({\n          availableRepos: results.map(r => {\n            return { name: r.title!, id: r.id };\n          }),\n        });\n      })\n      .catch(() => {\n        onChange({ availableRepos: [] });\n      });\n  }, [scaffolderApi, accessToken, host, owner, onChange, availableGroups]);\n\n  useDebounce(updateAvailableRepositories, 500, [updateAvailableRepositories]);\n\n  return (\n    <>\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !owner}\n      >\n        {allowedOwners?.length ? (\n          <>\n            <Select\n              native\n              label={t('fields.gitlabRepoPicker.owner.title')}\n              onChange={selected =>\n                onChange({\n                  owner: String(\n                    Array.isArray(selected) ? selected[0] : selected,\n                  ),\n                })\n              }\n              disabled={allowedOwners.length === 1}\n              selected={owner}\n              items={ownerItems}\n            />\n            <FormHelperText>\n              {t('fields.gitlabRepoPicker.owner.description')}\n            </FormHelperText>\n          </>\n        ) : (\n          <Autocomplete\n            value={owner}\n            onChange={(_, newValue) => {\n              onChange({ owner: newValue || '' });\n            }}\n            options={availableGroups.map(group => group.title)}\n            renderInput={params => (\n              <TextField\n                {...params}\n                label={t('fields.gitlabRepoPicker.owner.title')}\n                required\n              />\n            )}\n            freeSolo\n            autoSelect\n          />\n        )}\n      </FormControl>\n    </>\n  );\n};\n"],"names":[],"mappings":"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"}