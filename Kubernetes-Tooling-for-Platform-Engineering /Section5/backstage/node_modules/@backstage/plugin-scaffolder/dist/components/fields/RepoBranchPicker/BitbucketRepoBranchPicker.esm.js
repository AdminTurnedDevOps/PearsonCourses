import { useApi } from '@backstage/core-plugin-api';
import { scaffolderApiRef } from '@backstage/plugin-scaffolder-react';
import FormControl from '@material-ui/core/FormControl';
import FormHelperText from '@material-ui/core/FormHelperText';
import TextField from '@material-ui/core/TextField';
import Autocomplete from '@material-ui/lab/Autocomplete';
import React, { useState, useCallback } from 'react';
import useDebounce from 'react-use/esm/useDebounce';

const BitbucketRepoBranchPicker = ({
  onChange,
  state,
  rawErrors,
  accessToken,
  required
}) => {
  const { host, workspace, repository, branch } = state;
  const [availableBranches, setAvailableBranches] = useState([]);
  const scaffolderApi = useApi(scaffolderApiRef);
  const updateAvailableBranches = useCallback(() => {
    if (!scaffolderApi.autocomplete || !workspace || !repository || !accessToken || host !== "bitbucket.org") {
      setAvailableBranches([]);
      return;
    }
    scaffolderApi.autocomplete({
      token: accessToken,
      resource: "branches",
      context: { workspace, repository },
      provider: "bitbucket-cloud"
    }).then(({ results }) => {
      setAvailableBranches(results.map((r) => r.title));
    }).catch(() => {
      setAvailableBranches([]);
    });
  }, [host, workspace, repository, accessToken, scaffolderApi]);
  useDebounce(updateAvailableBranches, 500, [updateAvailableBranches]);
  return /* @__PURE__ */ React.createElement(
    FormControl,
    {
      margin: "normal",
      required,
      error: rawErrors?.length > 0 && !branch
    },
    /* @__PURE__ */ React.createElement(
      Autocomplete,
      {
        value: branch,
        onChange: (_, newValue) => {
          onChange({ branch: newValue || "" });
        },
        options: availableBranches,
        renderInput: (params) => /* @__PURE__ */ React.createElement(TextField, { ...params, label: "Branch", required }),
        freeSolo: true,
        autoSelect: true
      }
    ),
    /* @__PURE__ */ React.createElement(FormHelperText, null, "The branch of the repository")
  );
};

export { BitbucketRepoBranchPicker };
//# sourceMappingURL=BitbucketRepoBranchPicker.esm.js.map
