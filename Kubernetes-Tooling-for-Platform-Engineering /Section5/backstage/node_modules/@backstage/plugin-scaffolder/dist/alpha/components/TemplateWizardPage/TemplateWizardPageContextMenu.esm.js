import IconButton from '@material-ui/core/IconButton';
import ListItemIcon from '@material-ui/core/ListItemIcon';
import ListItemText from '@material-ui/core/ListItemText';
import MenuItem from '@material-ui/core/MenuItem';
import MenuList from '@material-ui/core/MenuList';
import Popover from '@material-ui/core/Popover';
import { makeStyles } from '@material-ui/core/styles';
import Edit from '@material-ui/icons/Edit';
import MoreVert from '@material-ui/icons/MoreVert';
import React, { useState } from 'react';
import { useTranslationRef } from '@backstage/core-plugin-api/alpha';
import { scaffolderTranslationRef } from '../../../translation.esm.js';

const useStyles = makeStyles((theme) => ({
  button: {
    color: theme.page.fontColor
  }
}));
function TemplateWizardPageContextMenu(props) {
  const { editUrl } = props;
  const classes = useStyles();
  const [anchorEl, setAnchorEl] = useState();
  const { t } = useTranslationRef(scaffolderTranslationRef);
  if (!editUrl) {
    return null;
  }
  const onOpen = (event) => {
    setAnchorEl(event.currentTarget);
  };
  const onClose = () => {
    setAnchorEl(void 0);
  };
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(
    IconButton,
    {
      id: "long-menu",
      "aria-label": "more",
      "aria-controls": "long-menu",
      "aria-expanded": !!anchorEl,
      "aria-haspopup": "true",
      role: "button",
      onClick: onOpen,
      "data-testid": "menu-button",
      color: "inherit",
      className: classes.button
    },
    /* @__PURE__ */ React.createElement(MoreVert, null)
  ), /* @__PURE__ */ React.createElement(
    Popover,
    {
      "aria-labelledby": "long-menu",
      open: Boolean(anchorEl),
      onClose,
      anchorEl,
      anchorOrigin: { vertical: "bottom", horizontal: "right" },
      transformOrigin: { vertical: "top", horizontal: "right" }
    },
    /* @__PURE__ */ React.createElement(MenuList, null, /* @__PURE__ */ React.createElement(MenuItem, { onClick: () => window.open(editUrl, "_blank") }, /* @__PURE__ */ React.createElement(ListItemIcon, null, /* @__PURE__ */ React.createElement(Edit, { fontSize: "small" })), /* @__PURE__ */ React.createElement(
      ListItemText,
      {
        primary: t(
          "templateWizardPage.pageContextMenu.editConfigurationTitle"
        )
      }
    )))
  ));
}

export { TemplateWizardPageContextMenu };
//# sourceMappingURL=TemplateWizardPageContextMenu.esm.js.map
