import React, { useCallback } from 'react';
import { Page, Header, Content } from '@backstage/core-components';
import { TemplateEditorIntro } from './TemplateEditorIntro.esm.js';
import { useNavigate } from 'react-router-dom';
import { useRouteRef } from '@backstage/core-plugin-api';
import { rootRouteRef, editorRouteRef, templateFormRouteRef, customFieldsRouteRef } from '../../../routes.esm.js';
import { useTranslationRef } from '@backstage/core-plugin-api/alpha';
import { scaffolderTranslationRef } from '../../../translation.esm.js';
import { useTemplateDirectory } from './useTemplateDirectory.esm.js';

function TemplateIntroPage() {
  const navigate = useNavigate();
  const createLink = useRouteRef(rootRouteRef);
  const editorLink = useRouteRef(editorRouteRef);
  const templateFormLink = useRouteRef(templateFormRouteRef);
  const customFieldsLink = useRouteRef(customFieldsRouteRef);
  const { t } = useTranslationRef(scaffolderTranslationRef);
  const { openDirectory, createDirectory } = useTemplateDirectory();
  const handleSelect = useCallback(
    (option) => {
      if (option === "local") {
        openDirectory().then(() => navigate(editorLink())).catch(() => {
        });
      } else if (option === "create-template") {
        createDirectory().then(() => navigate(editorLink())).catch(() => {
        });
      } else if (option === "form") {
        navigate(templateFormLink());
      } else if (option === "field-explorer") {
        navigate(customFieldsLink());
      }
    },
    [
      openDirectory,
      createDirectory,
      navigate,
      editorLink,
      templateFormLink,
      customFieldsLink
    ]
  );
  return /* @__PURE__ */ React.createElement(Page, { themeId: "home" }, /* @__PURE__ */ React.createElement(
    Header,
    {
      title: t("templateIntroPage.title"),
      type: "Scaffolder",
      typeLink: createLink(),
      subtitle: t("templateIntroPage.subtitle")
    }
  ), /* @__PURE__ */ React.createElement(Content, null, /* @__PURE__ */ React.createElement(TemplateEditorIntro, { onSelect: handleSelect })));
}

export { TemplateIntroPage };
//# sourceMappingURL=TemplateIntroPage.esm.js.map
