{"version":3,"file":"TemplateEditor.esm.js","sources":["../../../../src/alpha/components/TemplateEditorPage/TemplateEditor.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useCallback, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { useRouteRef } from '@backstage/core-plugin-api';\nimport type {\n  FormProps,\n  LayoutOptions,\n  FieldExtensionOptions,\n} from '@backstage/plugin-scaffolder-react';\n\nimport { editRouteRef } from '../../../routes';\n\nimport { useTemplateDirectory } from './useTemplateDirectory';\nimport { DirectoryEditorProvider } from './DirectoryEditorContext';\nimport {\n  TemplateEditorLayout,\n  TemplateEditorLayoutToolbar,\n  TemplateEditorLayoutBrowser,\n  TemplateEditorLayoutFiles,\n  TemplateEditorLayoutPreview,\n  TemplateEditorLayoutConsole,\n} from './TemplateEditorLayout';\nimport { TemplateEditorToolbar } from './TemplateEditorToolbar';\nimport { TemplateEditorToolbarFileMenu } from './TemplateEditorToolbarFileMenu';\nimport { TemplateEditorBrowser } from './TemplateEditorBrowser';\nimport { TemplateEditorTextArea } from './TemplateEditorTextArea';\nimport { TemplateEditorForm } from './TemplateEditorForm';\nimport { DryRunProvider } from './DryRunContext';\nimport { DryRunResults } from './DryRunResults';\n\n/** @public */\nexport type ScaffolderTemplateEditorClassKey =\n  | 'root'\n  | 'toolbar'\n  | 'browser'\n  | 'editor'\n  | 'preview'\n  | 'results';\n\nexport const TemplateEditor = (props: {\n  layouts?: LayoutOptions[];\n  formProps?: FormProps;\n  fieldExtensions?: FieldExtensionOptions<any, any>[];\n}) => {\n  const { layouts, formProps, fieldExtensions } = props;\n  const [errorText, setErrorText] = useState<string>();\n  const navigate = useNavigate();\n  const editLink = useRouteRef(editRouteRef);\n  const {\n    directory,\n    openDirectory: handleOpenDirectory,\n    createDirectory: handleCreateDirectory,\n    closeDirectory,\n  } = useTemplateDirectory();\n\n  const handleCloseDirectory = useCallback(() => {\n    closeDirectory().then(() => navigate(editLink()));\n  }, [closeDirectory, navigate, editLink]);\n\n  return (\n    <DirectoryEditorProvider directory={directory}>\n      <DryRunProvider>\n        <TemplateEditorLayout>\n          <TemplateEditorLayoutToolbar>\n            <TemplateEditorToolbar fieldExtensions={fieldExtensions}>\n              <TemplateEditorToolbarFileMenu\n                onOpenDirectory={handleOpenDirectory}\n                onCreateDirectory={handleCreateDirectory}\n                onCloseDirectory={handleCloseDirectory}\n              />\n            </TemplateEditorToolbar>\n          </TemplateEditorLayoutToolbar>\n          <TemplateEditorLayoutBrowser>\n            <TemplateEditorBrowser onClose={closeDirectory} />\n          </TemplateEditorLayoutBrowser>\n          <TemplateEditorLayoutFiles>\n            <TemplateEditorTextArea.DirectoryEditor errorText={errorText} />\n          </TemplateEditorLayoutFiles>\n          <TemplateEditorLayoutPreview>\n            <TemplateEditorForm.DirectoryEditorDryRun\n              setErrorText={setErrorText}\n              fieldExtensions={fieldExtensions}\n              layouts={layouts}\n              formProps={formProps}\n            />\n          </TemplateEditorLayoutPreview>\n          <TemplateEditorLayoutConsole>\n            <DryRunResults />\n          </TemplateEditorLayoutConsole>\n        </TemplateEditorLayout>\n      </DryRunProvider>\n    </DirectoryEditorProvider>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAsDa,MAAA,cAAA,GAAiB,CAAC,KAIzB,KAAA;AACJ,EAAA,MAAM,EAAE,OAAA,EAAS,SAAW,EAAA,eAAA,EAAoB,GAAA,KAAA;AAChD,EAAA,MAAM,CAAC,SAAA,EAAW,YAAY,CAAA,GAAI,QAAiB,EAAA;AACnD,EAAA,MAAM,WAAW,WAAY,EAAA;AAC7B,EAAM,MAAA,QAAA,GAAW,YAAY,YAAY,CAAA;AACzC,EAAM,MAAA;AAAA,IACJ,SAAA;AAAA,IACA,aAAe,EAAA,mBAAA;AAAA,IACf,eAAiB,EAAA,qBAAA;AAAA,IACjB;AAAA,MACE,oBAAqB,EAAA;AAEzB,EAAM,MAAA,oBAAA,GAAuB,YAAY,MAAM;AAC7C,IAAA,cAAA,GAAiB,IAAK,CAAA,MAAM,QAAS,CAAA,QAAA,EAAU,CAAC,CAAA;AAAA,GAC/C,EAAA,CAAC,cAAgB,EAAA,QAAA,EAAU,QAAQ,CAAC,CAAA;AAEvC,EACE,uBAAA,KAAA,CAAA,aAAA,CAAC,uBAAwB,EAAA,EAAA,SAAA,EAAA,kBACtB,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA,IAAA,kBACE,KAAA,CAAA,aAAA,CAAA,oBAAA,EAAA,IAAA,kBACE,KAAA,CAAA,aAAA,CAAA,2BAAA,EAAA,IAAA,kBACE,KAAA,CAAA,aAAA,CAAA,qBAAA,EAAA,EAAsB,eACrB,EAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,6BAAA;AAAA,IAAA;AAAA,MACC,eAAiB,EAAA,mBAAA;AAAA,MACjB,iBAAmB,EAAA,qBAAA;AAAA,MACnB,gBAAkB,EAAA;AAAA;AAAA,GAEtB,CACF,CACA,kBAAA,KAAA,CAAA,aAAA,CAAC,mDACE,KAAA,CAAA,aAAA,CAAA,qBAAA,EAAA,EAAsB,SAAS,cAAgB,EAAA,CAClD,mBACC,KAAA,CAAA,aAAA,CAAA,yBAAA,EAAA,IAAA,sCACE,sBAAuB,CAAA,eAAA,EAAvB,EAAuC,SAAsB,EAAA,CAChE,CACA,kBAAA,KAAA,CAAA,aAAA,CAAC,2BACC,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,kBAAmB,CAAA,qBAAA;AAAA,IAAnB;AAAA,MACC,YAAA;AAAA,MACA,eAAA;AAAA,MACA,OAAA;AAAA,MACA;AAAA;AAAA,GAEJ,mBACC,KAAA,CAAA,aAAA,CAAA,2BAAA,EAAA,IAAA,sCACE,aAAc,EAAA,IAAA,CACjB,CACF,CACF,CACF,CAAA;AAEJ;;;;"}