import { useCallback } from 'react';
import useAsyncRetry from 'react-use/esm/useAsyncRetry';
import { createExampleTemplate } from '../../../lib/filesystem/createExampleTemplate.esm.js';
import { WebFileSystemStore } from '../../../lib/filesystem/WebFileSystemStore.esm.js';
import { WebFileSystemAccess } from '../../../lib/filesystem/WebFileSystemAccess.esm.js';

function useTemplateDirectory() {
  const { value, loading, error, retry } = useAsyncRetry(async () => {
    const directory = await WebFileSystemStore.getDirectory();
    if (!directory) return void 0;
    return WebFileSystemAccess.fromHandle(directory);
  }, []);
  const openDirectory = useCallback(() => {
    return WebFileSystemAccess.requestDirectoryAccess().then(WebFileSystemStore.setDirectory).then(retry);
  }, [retry]);
  const createDirectory = useCallback(() => {
    return WebFileSystemAccess.requestDirectoryAccess().then(createExampleTemplate).then(WebFileSystemStore.setDirectory).then(retry);
  }, [retry]);
  const closeDirectory = useCallback(() => {
    return WebFileSystemStore.setDirectory(void 0).then(retry);
  }, [retry]);
  return {
    directory: value,
    loading,
    error,
    openDirectory,
    createDirectory,
    closeDirectory
  };
}

export { useTemplateDirectory };
//# sourceMappingURL=useTemplateDirectory.esm.js.map
