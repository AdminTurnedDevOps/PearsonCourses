import React, { useState, useCallback } from 'react';
import Button from '@material-ui/core/Button';
import Menu from '@material-ui/core/Menu';
import MenuItem from '@material-ui/core/MenuItem';
import { useTranslationRef } from '@backstage/frontend-plugin-api';
import { scaffolderTranslationRef } from '../../../translation.esm.js';

function TemplateEditorToolbarFileMenu(props) {
  const { onOpenDirectory, onCreateDirectory, onCloseDirectory } = props;
  const { t } = useTranslationRef(scaffolderTranslationRef);
  const [anchorEl, setAnchorEl] = useState(null);
  const handleOpenMenu = useCallback(
    (event) => {
      setAnchorEl(event.currentTarget);
    },
    [setAnchorEl]
  );
  const handleCloseMenu = useCallback(() => {
    setAnchorEl(null);
  }, [setAnchorEl]);
  const handleOpenDirectory = useCallback(() => {
    handleCloseMenu();
    onOpenDirectory?.();
  }, [handleCloseMenu, onOpenDirectory]);
  const handleCreateDirectory = useCallback(() => {
    handleCloseMenu();
    onCreateDirectory?.();
  }, [handleCloseMenu, onCreateDirectory]);
  const handleCloseEditor = useCallback(() => {
    handleCloseMenu();
    onCloseDirectory?.();
  }, [handleCloseMenu, onCloseDirectory]);
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(
    Button,
    {
      "aria-controls": "file-menu",
      "aria-haspopup": "true",
      onClick: handleOpenMenu
    },
    t("templateEditorToolbarFileMenu.button")
  ), /* @__PURE__ */ React.createElement(
    Menu,
    {
      id: "file-menu",
      anchorEl,
      open: Boolean(anchorEl),
      onClose: handleCloseMenu,
      getContentAnchorEl: null,
      anchorOrigin: {
        vertical: "bottom",
        horizontal: "left"
      },
      transformOrigin: {
        vertical: "top",
        horizontal: "left"
      }
    },
    /* @__PURE__ */ React.createElement(MenuItem, { onClick: handleOpenDirectory, disabled: !onOpenDirectory }, t("templateEditorToolbarFileMenu.options.openDirectory")),
    /* @__PURE__ */ React.createElement(
      MenuItem,
      {
        onClick: handleCreateDirectory,
        disabled: !onCreateDirectory,
        divider: true
      },
      t("templateEditorToolbarFileMenu.options.createDirectory")
    ),
    /* @__PURE__ */ React.createElement(MenuItem, { onClick: handleCloseEditor, disabled: !onCloseDirectory }, t("templateEditorToolbarFileMenu.options.closeEditor"))
  ));
}

export { TemplateEditorToolbarFileMenu };
//# sourceMappingURL=TemplateEditorToolbarFileMenu.esm.js.map
