import React, { useCallback } from 'react';
import { useNavigate } from 'react-router-dom';
import { makeStyles } from '@material-ui/core/styles';
import { Page, Header, Content } from '@backstage/core-components';
import { useRouteRef } from '@backstage/core-plugin-api';
import { useTranslationRef } from '@backstage/core-plugin-api/alpha';
import { editRouteRef } from '../../../routes.esm.js';
import { scaffolderTranslationRef } from '../../../translation.esm.js';
import { TemplateFormPreviewer } from './TemplateFormPreviewer.esm.js';

const useStyles = makeStyles({
  root: {
    padding: 0
  }
});
function TemplateFormPage(props) {
  const classes = useStyles();
  const navigate = useNavigate();
  const editLink = useRouteRef(editRouteRef);
  const { t } = useTranslationRef(scaffolderTranslationRef);
  const handleClose = useCallback(() => {
    navigate(editLink());
  }, [navigate, editLink]);
  return /* @__PURE__ */ React.createElement(Page, { themeId: "home" }, /* @__PURE__ */ React.createElement(
    Header,
    {
      title: t("templateFormPage.title"),
      subtitle: t("templateFormPage.subtitle"),
      type: t("templateIntroPage.title"),
      typeLink: editLink()
    }
  ), /* @__PURE__ */ React.createElement(Content, { className: classes.root }, /* @__PURE__ */ React.createElement(
    TemplateFormPreviewer,
    {
      layouts: props.layouts,
      formProps: props.formProps,
      customFieldExtensions: props.fieldExtensions,
      defaultPreviewTemplate: props.defaultPreviewTemplate,
      onClose: handleClose
    }
  )));
}

export { TemplateFormPage };
//# sourceMappingURL=TemplateFormPage.esm.js.map
