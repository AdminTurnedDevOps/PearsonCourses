import React, { useState, useCallback } from 'react';
import { useNavigate } from 'react-router-dom';
import { useRouteRef } from '@backstage/core-plugin-api';
import { editRouteRef } from '../../../routes.esm.js';
import { useTemplateDirectory } from './useTemplateDirectory.esm.js';
import { DirectoryEditorProvider } from './DirectoryEditorContext.esm.js';
import { TemplateEditorLayout, TemplateEditorLayoutToolbar, TemplateEditorLayoutBrowser, TemplateEditorLayoutFiles, TemplateEditorLayoutPreview, TemplateEditorLayoutConsole } from './TemplateEditorLayout.esm.js';
import { TemplateEditorToolbar } from './TemplateEditorToolbar.esm.js';
import { TemplateEditorToolbarFileMenu } from './TemplateEditorToolbarFileMenu.esm.js';
import { TemplateEditorBrowser } from './TemplateEditorBrowser.esm.js';
import { TemplateEditorTextArea } from './TemplateEditorTextArea.esm.js';
import { TemplateEditorForm } from './TemplateEditorForm.esm.js';
import { DryRunProvider } from './DryRunContext.esm.js';
import { DryRunResults } from './DryRunResults/DryRunResults.esm.js';

const TemplateEditor = (props) => {
  const { layouts, formProps, fieldExtensions } = props;
  const [errorText, setErrorText] = useState();
  const navigate = useNavigate();
  const editLink = useRouteRef(editRouteRef);
  const {
    directory,
    openDirectory: handleOpenDirectory,
    createDirectory: handleCreateDirectory,
    closeDirectory
  } = useTemplateDirectory();
  const handleCloseDirectory = useCallback(() => {
    closeDirectory().then(() => navigate(editLink()));
  }, [closeDirectory, navigate, editLink]);
  return /* @__PURE__ */ React.createElement(DirectoryEditorProvider, { directory }, /* @__PURE__ */ React.createElement(DryRunProvider, null, /* @__PURE__ */ React.createElement(TemplateEditorLayout, null, /* @__PURE__ */ React.createElement(TemplateEditorLayoutToolbar, null, /* @__PURE__ */ React.createElement(TemplateEditorToolbar, { fieldExtensions }, /* @__PURE__ */ React.createElement(
    TemplateEditorToolbarFileMenu,
    {
      onOpenDirectory: handleOpenDirectory,
      onCreateDirectory: handleCreateDirectory,
      onCloseDirectory: handleCloseDirectory
    }
  ))), /* @__PURE__ */ React.createElement(TemplateEditorLayoutBrowser, null, /* @__PURE__ */ React.createElement(TemplateEditorBrowser, { onClose: closeDirectory })), /* @__PURE__ */ React.createElement(TemplateEditorLayoutFiles, null, /* @__PURE__ */ React.createElement(TemplateEditorTextArea.DirectoryEditor, { errorText })), /* @__PURE__ */ React.createElement(TemplateEditorLayoutPreview, null, /* @__PURE__ */ React.createElement(
    TemplateEditorForm.DirectoryEditorDryRun,
    {
      setErrorText,
      fieldExtensions,
      layouts,
      formProps
    }
  )), /* @__PURE__ */ React.createElement(TemplateEditorLayoutConsole, null, /* @__PURE__ */ React.createElement(DryRunResults, null)))));
};

export { TemplateEditor };
//# sourceMappingURL=TemplateEditor.esm.js.map
