{"version":3,"file":"DryRunResultsList.esm.js","sources":["../../../../../src/alpha/components/TemplateEditorPage/DryRunResults/DryRunResultsList.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport CheckIcon from '@material-ui/icons/Check';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DownloadIcon from '@material-ui/icons/GetApp';\nimport React from 'react';\nimport { useDryRun } from '../DryRunContext';\nimport { downloadBlob } from '../../../../lib/download';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\nimport { scaffolderTranslationRef } from '../../../../translation';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    overflowY: 'auto',\n    background: theme.palette.background.default,\n  },\n  iconSuccess: {\n    minWidth: 0,\n    marginRight: theme.spacing(1),\n    color: theme.palette.status.ok,\n  },\n  iconFailure: {\n    minWidth: 0,\n    marginRight: theme.spacing(1),\n    color: theme.palette.status.error,\n  },\n}));\n\nexport function DryRunResultsList() {\n  const classes = useStyles();\n  const dryRun = useDryRun();\n  const { t } = useTranslationRef(scaffolderTranslationRef);\n\n  return (\n    <List className={classes.root} dense>\n      {dryRun.results.map(result => {\n        const failed = result.log.some(l => l.body.status === 'failed');\n        let isLoading = false;\n\n        async function downloadResult() {\n          isLoading = true;\n          await downloadDirectoryContents(\n            result.directoryContents,\n            `dry-run-result-${result.id}.zip`,\n          );\n          isLoading = false;\n        }\n\n        return (\n          <ListItem\n            button\n            key={result.id}\n            selected={dryRun.selectedResult?.id === result.id}\n            onClick={() => dryRun.selectResult(result.id)}\n          >\n            <ListItemIcon\n              className={failed ? classes.iconFailure : classes.iconSuccess}\n            >\n              {failed ? <CancelIcon /> : <CheckIcon />}\n            </ListItemIcon>\n            <ListItemText\n              primary={t('templateEditorPage.dryRunResultsList.title', {\n                resultId: `${result.id}`,\n              })}\n            />\n            <ListItemSecondaryAction>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"download\"\n                title={t(\n                  'templateEditorPage.dryRunResultsList.downloadButtonTitle',\n                )}\n                disabled={isLoading}\n                onClick={() => downloadResult()}\n              >\n                <DownloadIcon />\n              </IconButton>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"delete\"\n                title={t(\n                  'templateEditorPage.dryRunResultsList.deleteButtonTitle',\n                )}\n                onClick={() => dryRun.deleteResult(result.id)}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n\nasync function downloadDirectoryContents(\n  directoryContents: {\n    path: string;\n    base64Content: string;\n    executable: boolean;\n  }[],\n  name: string,\n) {\n  const { default: JSZip } = await import('jszip');\n  const zip = new JSZip();\n\n  for (const d of directoryContents) {\n    // Decode text content from base64 to ascii\n    const converted = atob(d.base64Content);\n\n    // add folder/file to zip\n    await zip.file(d.path, converted);\n  }\n\n  const blob = await zip.generateAsync({ type: 'blob' });\n  downloadBlob(blob, name);\n}\n"],"names":["CancelIcon"],"mappings":"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"}