{"version":3,"file":"WebFileSystemAccess.esm.js","sources":["../../../src/lib/filesystem/WebFileSystemAccess.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateDirectoryAccess, TemplateFileAccess } from './types';\n\ntype WritableFileHandle = FileSystemFileHandle & {\n  createWritable(): Promise<{\n    write(data: string | Blob | BufferSource): Promise<void>;\n    close(): Promise<void>;\n  }>;\n};\n\n// A nicer type than the one from the TS lib\nexport interface IterableDirectoryHandle extends FileSystemDirectoryHandle {\n  values(): AsyncIterable<\n    | ({ kind: 'file' } & WritableFileHandle)\n    | ({ kind: 'directory' } & IterableDirectoryHandle)\n  >;\n}\n\nconst showDirectoryPicker = (window as any).showDirectoryPicker as\n  | (() => Promise<IterableDirectoryHandle>)\n  | undefined;\n\nclass WebFileAccess implements TemplateFileAccess {\n  constructor(\n    readonly path: string,\n    private readonly handle: WritableFileHandle,\n  ) {}\n\n  file(): Promise<File> {\n    return this.handle.getFile();\n  }\n\n  async save(data: string | Blob | BufferSource): Promise<void> {\n    const writable = await this.handle.createWritable();\n    await writable.write(data);\n    await writable.close();\n  }\n}\n\n/** @internal */\nexport class WebDirectoryAccess implements TemplateDirectoryAccess {\n  constructor(private readonly handle: IterableDirectoryHandle) {}\n\n  async listFiles(): Promise<TemplateFileAccess[]> {\n    const content = [];\n    for await (const entry of this.listDirectoryContents(this.handle)) {\n      content.push(entry);\n    }\n    return content;\n  }\n\n  private async *listDirectoryContents(\n    dirHandle: IterableDirectoryHandle,\n    basePath: string[] = [],\n  ): AsyncIterable<TemplateFileAccess> {\n    for await (const handle of dirHandle.values()) {\n      if (handle.kind === 'file') {\n        yield new WebFileAccess([...basePath, handle.name].join('/'), handle);\n      } else if (handle.kind === 'directory') {\n        // Skip git storage directory\n        if (handle.name === '.git') {\n          continue;\n        }\n        yield* this.listDirectoryContents(handle, [...basePath, handle.name]);\n      }\n    }\n  }\n\n  async createFile(options: { name: string; data: string }): Promise<void> {\n    const { name, data } = options;\n    let file: FileSystemFileHandle;\n\n    // Current create template does not require support for nested directories\n    if (name.includes('/')) {\n      const [dir, path] = name.split('/');\n      const handle = await this.handle.getDirectoryHandle(dir, {\n        create: true,\n      });\n      file = await handle.getFileHandle(path, { create: true });\n    } else {\n      file = await this.handle.getFileHandle(name, {\n        create: true,\n      });\n    }\n    const writable = await file.createWritable();\n    await writable.write(data);\n    await writable.close();\n  }\n}\n\n/** @internal */\nexport class WebFileSystemAccess {\n  static isSupported(): boolean {\n    return Boolean(showDirectoryPicker);\n  }\n\n  static fromHandle(handle: IterableDirectoryHandle) {\n    return new WebDirectoryAccess(handle);\n  }\n\n  static async requestDirectoryAccess(): Promise<TemplateDirectoryAccess> {\n    if (!showDirectoryPicker) {\n      throw new Error('File system access is not supported');\n    }\n    const handle = await showDirectoryPicker();\n    return new WebDirectoryAccess(handle);\n  }\n\n  private constructor() {}\n}\n"],"names":[],"mappings":"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"}