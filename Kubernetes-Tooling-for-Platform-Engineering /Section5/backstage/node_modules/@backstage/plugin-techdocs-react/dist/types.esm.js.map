{"version":3,"file":"types.esm.js","sources":["../src/types.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentType } from 'react';\nimport { Entity } from '@backstage/catalog-model';\n\n/**\n * Metadata for TechDocs page\n *\n * @public\n */\nexport type TechDocsMetadata = {\n  site_name: string;\n  site_description: string;\n};\n\n/**\n * Metadata for TechDocs Entity\n *\n * @public\n */\nexport type TechDocsEntityMetadata = Entity & {\n  locationMetadata?: { type: string; target: string };\n};\n\n/**\n * Locations for which TechDocs addons may be declared and rendered.\n * @public\n */\nexport const TechDocsAddonLocations = Object.freeze({\n  /**\n   * These addons fill up the header from the right, on the same line as the\n   * title.\n   */\n  Header: 'Header',\n\n  /**\n   * These addons appear below the header and above all content; tooling addons\n   * can be inserted for convenience.\n   */\n  Subheader: 'Subheader',\n\n  /**\n   * These addons are items added to the settings menu list and are designed to make\n   * the reader experience customizable, for example accessibility options\n   */\n  Settings: 'Settings',\n\n  /**\n   * These addons appear left of the content and above the navigation.\n   */\n  PrimarySidebar: 'PrimarySidebar',\n\n  /**\n   * These addons appear right of the content and above the table of contents.\n   */\n  SecondarySidebar: 'SecondarySidebar',\n\n  /**\n   * A virtual location which allows mutation of all content within the shadow\n   * root by transforming DOM nodes. These addons should return null on render.\n   */\n  Content: 'Content',\n\n  /**\n   * todo(backstage/community): This is a proposed virtual location which would\n   * help implement a common addon pattern in which many instances of a given\n   * element in markdown would be dynamically replaced at render-time based on\n   * attributes provided on that element, for example:\n   *\n   * ```md\n   * ## For Fun\n   * <TechDocsAddon>CatGif</TechDocsAddon>\n   *\n   * ## Component Metadata\n   * <TechDocsAddon entityRef=\"default:component/some-component-name\">CatalogEntityCard</TechDocsAddon>\n   *\n   * ## System Metadata\n   * <TechDocsAddon entityRef=\"default:system/some-system-name\">CatalogEntityCard</TechDocsAddon>\n   * ```\n   *\n   * Could correspond to a TechDocs addon named `CatalogEntityCard` with\n   * location `TechDocsAddonLocations.COMPONENT`, whose `component` would be\n   * the react component that would be rendered in place of all instances of\n   * the markdown illustrated above.\n   *\n   * The `@backstage/plugin-techdocs-react` package would need to be updated to, in\n   * cases where such addons had been registered, find all instances of the\n   * the `<TechDocsAddon>` tag whose `textContent` corresponded with the name of the\n   * addon, then replace them with component instances of the addon component,\n   * passing any attributes from the tag as props to the component.\n   */\n  // Component: 'Component',\n} as const);\n\n/**\n * Options for creating a TechDocs addon.\n * @public\n */\nexport type TechDocsAddonOptions<TAddonProps = {}> = {\n  name: string;\n  location: keyof typeof TechDocsAddonLocations;\n  component: ComponentType<TAddonProps>;\n};\n"],"names":[],"mappings":"AA0Ca,MAAA,sBAAA,GAAyB,OAAO,MAAO,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKlD,MAAQ,EAAA,QAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMR,SAAW,EAAA,WAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMX,QAAU,EAAA,UAAA;AAAA;AAAA;AAAA;AAAA,EAKV,cAAgB,EAAA,gBAAA;AAAA;AAAA;AAAA;AAAA,EAKhB,gBAAkB,EAAA,kBAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMlB,OAAS,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+BX,CAAU;;;;"}