{"version":3,"file":"DefaultNode.esm.js","sources":["../../../src/components/DependencyGraph/DefaultNode.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DependencyGraphTypes as Types } from './types';\n\n/** @public */\nexport type DependencyGraphDefaultNodeClassKey = 'node' | 'text';\n\nconst useStyles = makeStyles(\n  theme => ({\n    node: {\n      fill: theme.palette.primary.light,\n      stroke: theme.palette.primary.light,\n    },\n    text: {\n      fill: theme.palette.primary.contrastText,\n    },\n  }),\n  { name: 'BackstageDependencyGraphDefaultNode' },\n);\n\n/** @public */\nexport function DefaultNode({ node: { id } }: Types.RenderNodeProps) {\n  const classes = useStyles();\n  const [width, setWidth] = React.useState(0);\n  const [height, setHeight] = React.useState(0);\n  const idRef = React.useRef<SVGTextElement | null>(null);\n\n  React.useLayoutEffect(() => {\n    // set the width to the length of the ID\n    if (idRef.current) {\n      let { height: renderedHeight, width: renderedWidth } =\n        idRef.current.getBBox();\n      renderedHeight = Math.round(renderedHeight);\n      renderedWidth = Math.round(renderedWidth);\n\n      if (renderedHeight !== height || renderedWidth !== width) {\n        setWidth(renderedWidth);\n        setHeight(renderedHeight);\n      }\n    }\n  }, [width, height]);\n\n  const padding = 10;\n  const paddedWidth = width + padding * 2;\n  const paddedHeight = height + padding * 2;\n\n  return (\n    <g>\n      <rect\n        className={classes.node}\n        width={paddedWidth}\n        height={paddedHeight}\n        rx={10}\n      />\n      <text\n        ref={idRef}\n        className={classes.text}\n        y={paddedHeight / 2}\n        x={paddedWidth / 2}\n        textAnchor=\"middle\"\n        alignmentBaseline=\"middle\"\n      >\n        {id}\n      </text>\n    </g>\n  );\n}\n"],"names":["React"],"mappings":";;;AAuBA,MAAM,SAAY,GAAA,UAAA;AAAA,EAChB,CAAU,KAAA,MAAA;AAAA,IACR,IAAM,EAAA;AAAA,MACJ,IAAA,EAAM,KAAM,CAAA,OAAA,CAAQ,OAAQ,CAAA,KAAA;AAAA,MAC5B,MAAA,EAAQ,KAAM,CAAA,OAAA,CAAQ,OAAQ,CAAA;AAAA,KAChC;AAAA,IACA,IAAM,EAAA;AAAA,MACJ,IAAA,EAAM,KAAM,CAAA,OAAA,CAAQ,OAAQ,CAAA;AAAA;AAC9B,GACF,CAAA;AAAA,EACA,EAAE,MAAM,qCAAsC;AAChD,CAAA;AAGO,SAAS,YAAY,EAAE,IAAA,EAAM,EAAE,EAAA,IAA+B,EAAA;AACnE,EAAA,MAAM,UAAU,SAAU,EAAA;AAC1B,EAAA,MAAM,CAAC,KAAO,EAAA,QAAQ,CAAI,GAAAA,cAAA,CAAM,SAAS,CAAC,CAAA;AAC1C,EAAA,MAAM,CAAC,MAAQ,EAAA,SAAS,CAAI,GAAAA,cAAA,CAAM,SAAS,CAAC,CAAA;AAC5C,EAAM,MAAA,KAAA,GAAQA,cAAM,CAAA,MAAA,CAA8B,IAAI,CAAA;AAEtD,EAAAA,cAAA,CAAM,gBAAgB,MAAM;AAE1B,IAAA,IAAI,MAAM,OAAS,EAAA;AACjB,MAAI,IAAA,EAAE,QAAQ,cAAgB,EAAA,KAAA,EAAO,eACnC,GAAA,KAAA,CAAM,QAAQ,OAAQ,EAAA;AACxB,MAAiB,cAAA,GAAA,IAAA,CAAK,MAAM,cAAc,CAAA;AAC1C,MAAgB,aAAA,GAAA,IAAA,CAAK,MAAM,aAAa,CAAA;AAExC,MAAI,IAAA,cAAA,KAAmB,MAAU,IAAA,aAAA,KAAkB,KAAO,EAAA;AACxD,QAAA,QAAA,CAAS,aAAa,CAAA;AACtB,QAAA,SAAA,CAAU,cAAc,CAAA;AAAA;AAC1B;AACF,GACC,EAAA,CAAC,KAAO,EAAA,MAAM,CAAC,CAAA;AAElB,EAAA,MAAM,OAAU,GAAA,EAAA;AAChB,EAAM,MAAA,WAAA,GAAc,QAAQ,OAAU,GAAA,CAAA;AACtC,EAAM,MAAA,YAAA,GAAe,SAAS,OAAU,GAAA,CAAA;AAExC,EAAA,oDACG,GACC,EAAA,IAAA,kBAAAA,cAAA,CAAA,aAAA;AAAA,IAAC,MAAA;AAAA,IAAA;AAAA,MACC,WAAW,OAAQ,CAAA,IAAA;AAAA,MACnB,KAAO,EAAA,WAAA;AAAA,MACP,MAAQ,EAAA,YAAA;AAAA,MACR,EAAI,EAAA;AAAA;AAAA,GAEN,kBAAAA,cAAA,CAAA,aAAA;AAAA,IAAC,MAAA;AAAA,IAAA;AAAA,MACC,GAAK,EAAA,KAAA;AAAA,MACL,WAAW,OAAQ,CAAA,IAAA;AAAA,MACnB,GAAG,YAAe,GAAA,CAAA;AAAA,MAClB,GAAG,WAAc,GAAA,CAAA;AAAA,MACjB,UAAW,EAAA,QAAA;AAAA,MACX,iBAAkB,EAAA;AAAA,KAAA;AAAA,IAEjB;AAAA,GAEL,CAAA;AAEJ;;;;"}