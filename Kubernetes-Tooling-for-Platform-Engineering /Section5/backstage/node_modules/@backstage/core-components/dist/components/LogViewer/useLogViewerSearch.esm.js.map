{"version":3,"file":"useLogViewerSearch.esm.js","sources":["../../../src/components/LogViewer/useLogViewerSearch.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useMemo, useState } from 'react';\nimport { useToggle } from '@react-hookz/web';\nimport { AnsiLine } from './AnsiProcessor';\n\nexport function applySearchFilter(lines: AnsiLine[], searchText: string) {\n  if (!searchText) {\n    return { lines };\n  }\n\n  const matchingLines = [];\n  const searchResults = [];\n  for (const line of lines) {\n    if (line.text.includes(searchText)) {\n      matchingLines.push(line);\n\n      let offset = 0;\n      let lineResultIndex = 0;\n      for (;;) {\n        const start = line.text.indexOf(searchText, offset);\n        if (start === -1) {\n          break;\n        }\n        searchResults.push({\n          lineNumber: line.lineNumber,\n          lineIndex: lineResultIndex++,\n        });\n        offset = start + searchText.length;\n      }\n    }\n  }\n\n  return {\n    lines: matchingLines,\n    results: searchResults,\n  };\n}\n\nexport interface LogViewerSearch {\n  lines: AnsiLine[];\n\n  searchText: string;\n  searchInput: string;\n  setSearchInput: (searchInput: string) => void;\n\n  shouldFilter: boolean;\n  toggleShouldFilter: () => void;\n\n  resultCount: number | undefined;\n  resultIndex: number | undefined;\n  resultIndexStep: (decrement?: boolean) => void;\n\n  resultLine: number | undefined;\n  resultLineIndex: number | undefined;\n}\n\nexport function useLogViewerSearch(lines: AnsiLine[]): LogViewerSearch {\n  const [searchInput, setSearchInput] = useState('');\n  const searchText = searchInput.toLocaleLowerCase('en-US');\n\n  const [resultIndex, setResultIndex] = useState<number>(0);\n\n  const [shouldFilter, toggleShouldFilter] = useToggle(false);\n\n  const filter = useMemo(\n    () => applySearchFilter(lines, searchText),\n    [lines, searchText],\n  );\n\n  const searchResult = filter.results\n    ? filter.results[Math.min(resultIndex, filter.results.length - 1)]\n    : undefined;\n  const resultCount = filter.results?.length;\n\n  const resultIndexStep = (decrement?: boolean) => {\n    if (decrement) {\n      if (resultCount !== undefined) {\n        const next = Math.min(resultIndex - 1, resultCount - 2);\n        setResultIndex(next < 0 ? resultCount - 1 : next);\n      }\n    } else {\n      if (resultCount !== undefined) {\n        const next = resultIndex + 1;\n        setResultIndex(next >= resultCount ? 0 : next);\n      }\n    }\n  };\n\n  return {\n    lines: shouldFilter ? filter.lines : lines,\n    searchText,\n    searchInput,\n    setSearchInput,\n    shouldFilter,\n    toggleShouldFilter,\n    resultCount,\n    resultIndex,\n    resultIndexStep,\n    resultLine: searchResult?.lineNumber,\n    resultLineIndex: searchResult?.lineIndex,\n  };\n}\n"],"names":[],"mappings":"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"}