{"version":3,"file":"useLogViewerSelection.esm.js","sources":["../../../src/components/LogViewer/useLogViewerSelection.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { errorApiRef, useApi } from '@backstage/core-plugin-api';\nimport { useEffect, useState } from 'react';\nimport useCopyToClipboard from 'react-use/esm/useCopyToClipboard';\nimport { AnsiLine } from './AnsiProcessor';\n\nexport function useLogViewerSelection(lines: AnsiLine[]) {\n  const errorApi = useApi(errorApiRef);\n  const [sel, setSelection] = useState<{ start: number; end: number }>();\n  const start = sel ? Math.min(sel.start, sel.end) : undefined;\n  const end = sel ? Math.max(sel.start, sel.end) : undefined;\n\n  const [{ error }, copyToClipboard] = useCopyToClipboard();\n\n  useEffect(() => {\n    if (error) {\n      errorApi.post(error);\n    }\n  }, [error, errorApi]);\n\n  return {\n    shouldShowButton(line: number) {\n      return start === line || end === line;\n    },\n    isSelected(line: number) {\n      if (!sel) {\n        return false;\n      }\n      return start! <= line && line <= end!;\n    },\n    setSelection(line: number, add: boolean) {\n      if (add) {\n        setSelection(s =>\n          s ? { start: s.start, end: line } : { start: line, end: line },\n        );\n      } else {\n        setSelection(s =>\n          s?.start === line && s?.end === line\n            ? undefined\n            : { start: line, end: line },\n        );\n      }\n    },\n    copySelection() {\n      if (sel) {\n        const copyText = lines\n          .slice(Math.min(sel.start, sel.end) - 1, Math.max(sel.start, sel.end))\n          .map(l => l.chunks.map(c => c.text).join(''))\n          .join('\\n');\n        copyToClipboard(copyText);\n        setSelection(undefined);\n      }\n    },\n  };\n}\n"],"names":[],"mappings":";;;;AAqBO,SAAS,sBAAsB,KAAmB,EAAA;AACvD,EAAM,MAAA,QAAA,GAAW,OAAO,WAAW,CAAA;AACnC,EAAA,MAAM,CAAC,GAAA,EAAK,YAAY,CAAA,GAAI,QAAyC,EAAA;AACrE,EAAM,MAAA,KAAA,GAAQ,MAAM,IAAK,CAAA,GAAA,CAAI,IAAI,KAAO,EAAA,GAAA,CAAI,GAAG,CAAI,GAAA,KAAA,CAAA;AACnD,EAAM,MAAA,GAAA,GAAM,MAAM,IAAK,CAAA,GAAA,CAAI,IAAI,KAAO,EAAA,GAAA,CAAI,GAAG,CAAI,GAAA,KAAA,CAAA;AAEjD,EAAA,MAAM,CAAC,EAAE,KAAA,EAAS,EAAA,eAAe,IAAI,kBAAmB,EAAA;AAExD,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,IAAI,KAAO,EAAA;AACT,MAAA,QAAA,CAAS,KAAK,KAAK,CAAA;AAAA;AACrB,GACC,EAAA,CAAC,KAAO,EAAA,QAAQ,CAAC,CAAA;AAEpB,EAAO,OAAA;AAAA,IACL,iBAAiB,IAAc,EAAA;AAC7B,MAAO,OAAA,KAAA,KAAU,QAAQ,GAAQ,KAAA,IAAA;AAAA,KACnC;AAAA,IACA,WAAW,IAAc,EAAA;AACvB,MAAA,IAAI,CAAC,GAAK,EAAA;AACR,QAAO,OAAA,KAAA;AAAA;AAET,MAAO,OAAA,KAAA,IAAU,QAAQ,IAAQ,IAAA,GAAA;AAAA,KACnC;AAAA,IACA,YAAA,CAAa,MAAc,GAAc,EAAA;AACvC,MAAA,IAAI,GAAK,EAAA;AACP,QAAA,YAAA;AAAA,UAAa,CACX,CAAA,KAAA,CAAA,GAAI,EAAE,KAAA,EAAO,CAAE,CAAA,KAAA,EAAO,GAAK,EAAA,IAAA,EAAS,GAAA,EAAE,KAAO,EAAA,IAAA,EAAM,KAAK,IAAK;AAAA,SAC/D;AAAA,OACK,MAAA;AACL,QAAA,YAAA;AAAA,UAAa,CACX,CAAA,KAAA,CAAA,EAAG,KAAU,KAAA,IAAA,IAAQ,CAAG,EAAA,GAAA,KAAQ,IAC5B,GAAA,KAAA,CAAA,GACA,EAAE,KAAA,EAAO,IAAM,EAAA,GAAA,EAAK,IAAK;AAAA,SAC/B;AAAA;AACF,KACF;AAAA,IACA,aAAgB,GAAA;AACd,MAAA,IAAI,GAAK,EAAA;AACP,QAAA,MAAM,QAAW,GAAA,KAAA,CACd,KAAM,CAAA,IAAA,CAAK,IAAI,GAAI,CAAA,KAAA,EAAO,GAAI,CAAA,GAAG,CAAI,GAAA,CAAA,EAAG,IAAK,CAAA,GAAA,CAAI,IAAI,KAAO,EAAA,GAAA,CAAI,GAAG,CAAC,CACpE,CAAA,GAAA,CAAI,CAAK,CAAA,KAAA,CAAA,CAAE,OAAO,GAAI,CAAA,CAAA,CAAA,KAAK,CAAE,CAAA,IAAI,EAAE,IAAK,CAAA,EAAE,CAAC,CAAA,CAC3C,KAAK,IAAI,CAAA;AACZ,QAAA,eAAA,CAAgB,QAAQ,CAAA;AACxB,QAAA,YAAA,CAAa,KAAS,CAAA,CAAA;AAAA;AACxB;AACF,GACF;AACF;;;;"}