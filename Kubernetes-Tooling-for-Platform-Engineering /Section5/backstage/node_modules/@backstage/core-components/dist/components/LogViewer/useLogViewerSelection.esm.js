import { useApi, errorApiRef } from '@backstage/core-plugin-api';
import { useState, useEffect } from 'react';
import useCopyToClipboard from 'react-use/esm/useCopyToClipboard';

function useLogViewerSelection(lines) {
  const errorApi = useApi(errorApiRef);
  const [sel, setSelection] = useState();
  const start = sel ? Math.min(sel.start, sel.end) : void 0;
  const end = sel ? Math.max(sel.start, sel.end) : void 0;
  const [{ error }, copyToClipboard] = useCopyToClipboard();
  useEffect(() => {
    if (error) {
      errorApi.post(error);
    }
  }, [error, errorApi]);
  return {
    shouldShowButton(line) {
      return start === line || end === line;
    },
    isSelected(line) {
      if (!sel) {
        return false;
      }
      return start <= line && line <= end;
    },
    setSelection(line, add) {
      if (add) {
        setSelection(
          (s) => s ? { start: s.start, end: line } : { start: line, end: line }
        );
      } else {
        setSelection(
          (s) => s?.start === line && s?.end === line ? void 0 : { start: line, end: line }
        );
      }
    },
    copySelection() {
      if (sel) {
        const copyText = lines.slice(Math.min(sel.start, sel.end) - 1, Math.max(sel.start, sel.end)).map((l) => l.chunks.map((c) => c.text).join("")).join("\n");
        copyToClipboard(copyText);
        setSelection(void 0);
      }
    }
  };
}

export { useLogViewerSelection };
//# sourceMappingURL=useLogViewerSelection.esm.js.map
