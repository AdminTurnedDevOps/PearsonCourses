{"version":3,"file":"Node.esm.js","sources":["../../../src/components/DependencyGraph/Node.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { DefaultNode } from './DefaultNode';\nimport { DependencyGraphTypes as Types } from './types';\nimport { NODE_TEST_ID } from './constants';\nimport dagre from 'dagre';\n\n/** @public */\nexport type DependencyGraphNodeClassKey = 'node';\n\nconst useStyles = makeStyles(\n  theme => ({\n    node: {\n      transition: `${theme.transitions.duration.shortest}ms`,\n    },\n  }),\n  { name: 'BackstageDependencyGraphNode' },\n);\n\nexport type GraphNode<T> = dagre.Node<Types.DependencyNode<T>>;\n\nexport type NodeComponentProps<T> = {\n  node: GraphNode<T>;\n  render?: Types.RenderNodeFunction<T>;\n  setNode: dagre.graphlib.Graph['setNode'];\n};\n\nconst renderDefault = (props: Types.RenderNodeProps) => (\n  <DefaultNode {...props} />\n);\n\nexport function Node<T>({\n  render = renderDefault,\n  setNode,\n  node,\n}: NodeComponentProps<T>) {\n  const { width, height, x = 0, y = 0 } = node;\n  const nodeProps: Types.DependencyNode<T> = node;\n  const classes = useStyles();\n  const nodeRef = React.useRef<SVGGElement | null>(null);\n\n  React.useLayoutEffect(() => {\n    // set the node width to the actual rendered width to properly layout graph\n    if (nodeRef.current) {\n      let { height: renderedHeight, width: renderedWidth } =\n        nodeRef.current.getBBox();\n      renderedHeight = Math.round(renderedHeight);\n      renderedWidth = Math.round(renderedWidth);\n\n      if (renderedHeight !== height || renderedWidth !== width) {\n        setNode(node.id, {\n          ...node,\n          height: renderedHeight,\n          width: renderedWidth,\n        });\n      }\n    }\n  }, [node, width, height, setNode]);\n\n  return (\n    <g\n      ref={nodeRef}\n      data-testid={NODE_TEST_ID}\n      className={classes.node}\n      transform={`translate(${x - width / 2},${y - height / 2})`}\n    >\n      {render({ node: nodeProps })}\n    </g>\n  );\n}\n"],"names":["React"],"mappings":";;;;;AA0BA,MAAM,SAAY,GAAA,UAAA;AAAA,EAChB,CAAU,KAAA,MAAA;AAAA,IACR,IAAM,EAAA;AAAA,MACJ,UAAY,EAAA,CAAA,EAAG,KAAM,CAAA,WAAA,CAAY,SAAS,QAAQ,CAAA,EAAA;AAAA;AACpD,GACF,CAAA;AAAA,EACA,EAAE,MAAM,8BAA+B;AACzC,CAAA;AAUA,MAAM,gBAAgB,CAAC,KAAA,qBACpBA,cAAA,CAAA,aAAA,CAAA,WAAA,EAAA,EAAa,GAAG,KAAO,EAAA,CAAA;AAGnB,SAAS,IAAQ,CAAA;AAAA,EACtB,MAAS,GAAA,aAAA;AAAA,EACT,OAAA;AAAA,EACA;AACF,CAA0B,EAAA;AACxB,EAAA,MAAM,EAAE,KAAO,EAAA,MAAA,EAAQ,IAAI,CAAG,EAAA,CAAA,GAAI,GAAM,GAAA,IAAA;AACxC,EAAA,MAAM,SAAqC,GAAA,IAAA;AAC3C,EAAA,MAAM,UAAU,SAAU,EAAA;AAC1B,EAAM,MAAA,OAAA,GAAUA,cAAM,CAAA,MAAA,CAA2B,IAAI,CAAA;AAErD,EAAAA,cAAA,CAAM,gBAAgB,MAAM;AAE1B,IAAA,IAAI,QAAQ,OAAS,EAAA;AACnB,MAAI,IAAA,EAAE,QAAQ,cAAgB,EAAA,KAAA,EAAO,eACnC,GAAA,OAAA,CAAQ,QAAQ,OAAQ,EAAA;AAC1B,MAAiB,cAAA,GAAA,IAAA,CAAK,MAAM,cAAc,CAAA;AAC1C,MAAgB,aAAA,GAAA,IAAA,CAAK,MAAM,aAAa,CAAA;AAExC,MAAI,IAAA,cAAA,KAAmB,MAAU,IAAA,aAAA,KAAkB,KAAO,EAAA;AACxD,QAAA,OAAA,CAAQ,KAAK,EAAI,EAAA;AAAA,UACf,GAAG,IAAA;AAAA,UACH,MAAQ,EAAA,cAAA;AAAA,UACR,KAAO,EAAA;AAAA,SACR,CAAA;AAAA;AACH;AACF,KACC,CAAC,IAAA,EAAM,KAAO,EAAA,MAAA,EAAQ,OAAO,CAAC,CAAA;AAEjC,EACE,uBAAAA,cAAA,CAAA,aAAA;AAAA,IAAC,GAAA;AAAA,IAAA;AAAA,MACC,GAAK,EAAA,OAAA;AAAA,MACL,aAAa,EAAA,YAAA;AAAA,MACb,WAAW,OAAQ,CAAA,IAAA;AAAA,MACnB,SAAA,EAAW,aAAa,CAAI,GAAA,KAAA,GAAQ,CAAC,CAAI,CAAA,EAAA,CAAA,GAAI,SAAS,CAAC,CAAA,CAAA;AAAA,KAAA;AAAA,IAEtD,MAAO,CAAA,EAAE,IAAM,EAAA,SAAA,EAAW;AAAA,GAC7B;AAEJ;;;;"}