{"version":3,"file":"Filters.esm.js","sources":["../../../src/components/Table/Filters.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect, useState } from 'react';\n\nimport { Select } from '../Select';\nimport { SelectProps } from '../Select/Select';\nimport { coreComponentsTranslationRef } from '../../translation';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\n\nexport type TableFiltersClassKey = 'root' | 'value' | 'heder' | 'filters';\n\nconst useFilterStyles = makeStyles(\n  theme => ({\n    root: {\n      height: '100%',\n      width: '315px',\n      display: 'flex',\n      flexDirection: 'column',\n      marginRight: theme.spacing(3),\n    },\n    value: {\n      fontWeight: 'bold',\n      fontSize: 18,\n    },\n    header: {\n      display: 'flex',\n      alignItems: 'center',\n      height: theme.spacing(7.5),\n      justifyContent: 'space-between',\n      borderBottom: `1px solid ${theme.palette.grey[500]}`,\n    },\n    filters: {\n      display: 'flex',\n      flexDirection: 'column',\n      '& > *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n  }),\n  { name: 'BackstageTableFilters' },\n);\n\nexport type Without<T, K> = Pick<T, Exclude<keyof T, K>>;\n\nexport type Filter = {\n  type: 'select' | 'multiple-select';\n  element: Without<SelectProps, 'onChange'>;\n};\n\nexport type SelectedFilters = {\n  [key: string]: string | string[];\n};\n\ntype Props = {\n  filters: Filter[];\n  selectedFilters?: SelectedFilters;\n  onChangeFilters: (arg: any) => any;\n};\n\nexport const Filters = (props: Props) => {\n  const classes = useFilterStyles();\n\n  const { onChangeFilters } = props;\n  const { t } = useTranslationRef(coreComponentsTranslationRef);\n\n  const [selectedFilters, setSelectedFilters] = useState<SelectedFilters>({\n    ...props.selectedFilters,\n  });\n  const [reset, triggerReset] = useState(false);\n\n  // Trigger re-rendering\n  const handleClick = () => {\n    setSelectedFilters({});\n    triggerReset(el => !el);\n  };\n\n  useEffect(() => {\n    onChangeFilters(selectedFilters);\n  }, [selectedFilters, onChangeFilters]);\n\n  // As material table doesn't provide a way to add a column filter tab we will make our own filter logic\n  return (\n    <Box className={classes.root}>\n      <Box className={classes.header}>\n        <Box className={classes.value}>{t('table.filter.title')}</Box>\n        <Button color=\"primary\" onClick={handleClick}>\n          {t('table.filter.clearAll')}\n        </Button>\n      </Box>\n      <Box className={classes.filters}>\n        {props.filters?.length &&\n          props.filters.map(filter => (\n            <Select\n              triggerReset={reset}\n              key={filter.element.label}\n              {...(filter.element as SelectProps)}\n              selected={selectedFilters[filter.element.label]}\n              onChange={el =>\n                setSelectedFilters({\n                  ...selectedFilters,\n                  [filter.element.label]: el as any,\n                })\n              }\n            />\n          ))}\n      </Box>\n    </Box>\n  );\n};\n"],"names":["React","Select"],"mappings":"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"}