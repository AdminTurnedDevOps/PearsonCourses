{"version":3,"file":"TabbedLayout.esm.js","sources":["../../../src/components/TabbedLayout/TabbedLayout.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { attachComponentData } from '@backstage/core-plugin-api';\nimport React, {\n  Children,\n  Fragment,\n  isValidElement,\n  PropsWithChildren,\n  ReactNode,\n} from 'react';\nimport { RoutedTabs } from './RoutedTabs';\nimport { TabProps } from '@material-ui/core/Tab';\n\ntype SubRoute = {\n  path: string;\n  title: string;\n  children: JSX.Element;\n  tabProps?: TabProps<React.ElementType, { component?: React.ElementType }>;\n};\n\nconst Route: (props: SubRoute) => null = () => null;\n\n// This causes all mount points that are discovered within this route to use the path of the route itself\nattachComponentData(Route, 'core.gatherMountPoints', true);\n\nexport function createSubRoutesFromChildren(\n  childrenProps: ReactNode,\n): SubRoute[] {\n  // Directly comparing child.type with Route will not work with in\n  // combination with react-hot-loader in storybook\n  // https://github.com/gaearon/react-hot-loader/issues/304\n  const routeType = (\n    <Route path=\"\" title=\"\">\n      <div />\n    </Route>\n  ).type;\n\n  return Children.toArray(childrenProps).flatMap(child => {\n    if (!isValidElement(child)) {\n      return [];\n    }\n\n    if (child.type === Fragment) {\n      return createSubRoutesFromChildren(child.props.children);\n    }\n\n    if (child.type !== routeType) {\n      throw new Error('Child of TabbedLayout must be an TabbedLayout.Route');\n    }\n\n    const { path, title, children, tabProps } = child.props;\n    return [{ path, title, children, tabProps }];\n  });\n}\n\n/**\n * TabbedLayout is a compound component, which allows you to define a layout for\n * pages using a sub-navigation mechanism.\n *\n * @remarks\n * Consists of two parts: TabbedLayout and TabbedLayout.Route\n *\n * @example\n * ```jsx\n * <TabbedLayout>\n *   <TabbedLayout.Route path=\"/example\" title=\"Example tab\">\n *     <div>This is rendered under /example/anything-here route</div>\n *   </TabbedLayout.Route>\n * </TabbedLayout>\n * ```\n */\nexport function TabbedLayout(props: PropsWithChildren<{}>) {\n  const routes = createSubRoutesFromChildren(props.children);\n\n  return <RoutedTabs routes={routes} />;\n}\n\nTabbedLayout.Route = Route;\n"],"names":["React"],"mappings":";;;;AAkCA,MAAM,QAAmC,MAAM,IAAA;AAG/C,mBAAoB,CAAA,KAAA,EAAO,0BAA0B,IAAI,CAAA;AAElD,SAAS,4BACd,aACY,EAAA;AAIZ,EAAM,MAAA,SAAA,GAAA,iBACHA,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAM,IAAK,EAAA,EAAA,EAAG,OAAM,EACnB,EAAA,kBAAAA,cAAA,CAAA,aAAA,CAAC,KAAI,EAAA,IAAA,CACP,CACA,EAAA,IAAA;AAEF,EAAA,OAAO,QAAS,CAAA,OAAA,CAAQ,aAAa,CAAA,CAAE,QAAQ,CAAS,KAAA,KAAA;AACtD,IAAI,IAAA,CAAC,cAAe,CAAA,KAAK,CAAG,EAAA;AAC1B,MAAA,OAAO,EAAC;AAAA;AAGV,IAAI,IAAA,KAAA,CAAM,SAAS,QAAU,EAAA;AAC3B,MAAO,OAAA,2BAAA,CAA4B,KAAM,CAAA,KAAA,CAAM,QAAQ,CAAA;AAAA;AAGzD,IAAI,IAAA,KAAA,CAAM,SAAS,SAAW,EAAA;AAC5B,MAAM,MAAA,IAAI,MAAM,qDAAqD,CAAA;AAAA;AAGvE,IAAA,MAAM,EAAE,IAAM,EAAA,KAAA,EAAO,QAAU,EAAA,QAAA,KAAa,KAAM,CAAA,KAAA;AAClD,IAAA,OAAO,CAAC,EAAE,IAAA,EAAM,KAAO,EAAA,QAAA,EAAU,UAAU,CAAA;AAAA,GAC5C,CAAA;AACH;AAkBO,SAAS,aAAa,KAA8B,EAAA;AACzD,EAAM,MAAA,MAAA,GAAS,2BAA4B,CAAA,KAAA,CAAM,QAAQ,CAAA;AAEzD,EAAO,uBAAAA,cAAA,CAAA,aAAA,CAAC,cAAW,MAAgB,EAAA,CAAA;AACrC;AAEA,YAAA,CAAa,KAAQ,GAAA,KAAA;;;;"}