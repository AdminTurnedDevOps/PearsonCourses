{"version":3,"file":"Select.esm.js","sources":["../../../src/components/Select/Select.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  withStyles,\n} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport React, { useEffect, useState } from 'react';\n\nimport ClosedDropdown from './static/ClosedDropdown';\nimport OpenedDropdown from './static/OpenedDropdown';\n\n/** @public */\nexport type SelectInputBaseClassKey = 'root' | 'input';\n\nconst BootstrapInput = withStyles(\n  (theme: Theme) =>\n    createStyles({\n      root: {\n        'label + &': {\n          marginTop: theme.spacing(3),\n        },\n        '&.Mui-focused > div[role=button]': {\n          borderColor: theme.palette.primary.main,\n        },\n      },\n      input: {\n        borderRadius: theme.shape.borderRadius,\n        position: 'relative',\n        backgroundColor: theme.palette.background.paper,\n        border: '1px solid #ced4da',\n        fontSize: theme.typography.body1.fontSize,\n        padding: theme.spacing(1.25, 3.25, 1.25, 1.5),\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        '&:focus': {\n          background: theme.palette.background.paper,\n          borderRadius: theme.shape.borderRadius,\n        },\n      },\n    }),\n  { name: 'BackstageSelectInputBase' },\n)(InputBase);\n\n/** @public */\nexport type SelectClassKey =\n  | 'formControl'\n  | 'label'\n  | 'chips'\n  | 'chip'\n  | 'checkbox'\n  | 'root';\n\nconst useStyles = makeStyles(\n  (theme: Theme) =>\n    createStyles({\n      formControl: {\n        margin: theme.spacing(1, 0),\n      },\n      label: {\n        transform: 'initial',\n        fontWeight: 'bold',\n        fontSize: theme.typography.body2.fontSize,\n        fontFamily: theme.typography.fontFamily,\n        color: theme.palette.text.primary,\n        '&.Mui-focused': {\n          color: theme.palette.text.primary,\n        },\n      },\n      formLabel: {\n        transform: 'initial',\n        fontWeight: 'bold',\n        fontSize: theme.typography.body2.fontSize,\n        fontFamily: theme.typography.fontFamily,\n        color: theme.palette.text.primary,\n        '&.Mui-focused': {\n          color: theme.palette.text.primary,\n        },\n      },\n      chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n      },\n      chip: {\n        margin: 2,\n      },\n      checkbox: {},\n\n      root: {\n        display: 'flex',\n        flexDirection: 'column',\n      },\n    }),\n  { name: 'BackstageSelect' },\n);\n\n/** @public */\nexport type SelectItem = {\n  label: string;\n  value: string | number;\n};\n\n/** @public */\nexport type SelectedItems = string | string[] | number | number[];\n\nexport type SelectProps = {\n  multiple?: boolean;\n  items: SelectItem[];\n  label: string;\n  placeholder?: string;\n  selected?: SelectedItems;\n  onChange: (arg: SelectedItems) => void;\n  triggerReset?: boolean;\n  native?: boolean;\n  disabled?: boolean;\n  margin?: 'dense' | 'none';\n  'data-testid'?: string;\n};\n\n/** @public */\nexport function SelectComponent(props: SelectProps) {\n  const {\n    multiple,\n    items,\n    label,\n    placeholder,\n    selected,\n    onChange,\n    triggerReset,\n    native = false,\n    disabled = false,\n    margin,\n    'data-testid': dataTestId = 'select',\n  } = props;\n  const classes = useStyles();\n  const [value, setValue] = useState<SelectedItems>(\n    selected || (multiple ? [] : ''),\n  );\n  const [isOpen, setOpen] = useState(false);\n\n  useEffect(() => {\n    setValue(multiple ? [] : '');\n  }, [triggerReset, multiple]);\n\n  useEffect(() => {\n    setValue(selected || (multiple ? [] : ''));\n  }, [selected, multiple]);\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setValue(event.target.value as SelectedItems);\n    onChange(event.target.value as SelectedItems);\n  };\n\n  const handleOpen = (event: React.ChangeEvent<any>) => {\n    if (disabled) {\n      event.preventDefault();\n      return;\n    }\n    setOpen(previous => {\n      if (multiple && !(event.target instanceof HTMLElement)) {\n        return true;\n      }\n      return !previous;\n    });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleDelete = (selectedValue: string | number) => () => {\n    const newValue = (value as any[]).filter(chip => chip !== selectedValue);\n    setValue(newValue);\n    onChange(newValue);\n  };\n\n  return (\n    <Box className={classes.root}>\n      <FormControl className={classes.formControl}>\n        <InputLabel className={classes.formLabel}>{label}</InputLabel>\n        <Select\n          aria-label={label}\n          value={value}\n          native={native}\n          disabled={disabled}\n          data-testid={dataTestId}\n          displayEmpty\n          multiple={multiple}\n          margin={margin}\n          onChange={handleChange}\n          open={isOpen}\n          onOpen={handleOpen}\n          onClose={handleClose}\n          input={<BootstrapInput />}\n          label={label}\n          renderValue={s =>\n            multiple && (value as any[]).length !== 0 ? (\n              <Box className={classes.chips}>\n                {(s as string[]).map(selectedValue => {\n                  const item = items.find(el => el.value === selectedValue);\n                  return item ? (\n                    <Chip\n                      key={item?.value}\n                      label={item?.label}\n                      clickable\n                      onDelete={handleDelete(selectedValue)}\n                      className={classes.chip}\n                    />\n                  ) : (\n                    false\n                  );\n                })}\n              </Box>\n            ) : (\n              <Typography>\n                {(value as any[]).length === 0\n                  ? placeholder || ''\n                  : items.find(el => el.value === s)?.label}\n              </Typography>\n            )\n          }\n          IconComponent={() =>\n            !isOpen ? <ClosedDropdown /> : <OpenedDropdown />\n          }\n          MenuProps={{\n            anchorOrigin: {\n              vertical: 'bottom',\n              horizontal: 'left',\n            },\n            transformOrigin: {\n              vertical: 'top',\n              horizontal: 'left',\n            },\n            getContentAnchorEl: null,\n          }}\n        >\n          {!!placeholder && !multiple && (\n            <MenuItem value={[]}>{placeholder}</MenuItem>\n          )}\n          {native\n            ? items &&\n              items.map(item => (\n                <option value={item.value} key={item.value}>\n                  {item.label}\n                </option>\n              ))\n            : items &&\n              items.map(item => (\n                <MenuItem key={item.value} value={item.value}>\n                  {multiple && (\n                    <Checkbox\n                      color=\"primary\"\n                      checked={(value as any[]).includes(item.value) || false}\n                      className={classes.checkbox}\n                    />\n                  )}\n                  {item.label}\n                </MenuItem>\n              ))}\n        </Select>\n      </FormControl>\n    </Box>\n  );\n}\n"],"names":["React"],"mappings":"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"}