{"version":3,"file":"ResponseErrorPanel.esm.js","sources":["../../../src/components/ResponseErrorPanel/ResponseErrorPanel.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ResponseError } from '@backstage/errors';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport React from 'react';\nimport { CodeSnippet } from '../CodeSnippet';\nimport { CopyTextButton } from '../CopyTextButton';\nimport { ErrorPanel, ErrorPanelProps } from '../ErrorPanel';\n\nexport type ResponseErrorPanelClassKey = 'text' | 'divider';\n\nconst useStyles = makeStyles(\n  theme => ({\n    text: {\n      fontFamily: 'monospace',\n      whiteSpace: 'pre',\n      overflowX: 'auto',\n      marginRight: theme.spacing(2),\n    },\n    divider: {\n      margin: theme.spacing(2),\n    },\n  }),\n  { name: 'BackstageResponseErrorPanel' },\n);\n\n/**\n * Renders a warning panel as the effect of a failed server request.\n *\n * @remarks\n * Has special treatment for ResponseError errors, to display rich\n * server-provided information about what happened.\n */\nexport function ResponseErrorPanel(props: ErrorPanelProps) {\n  const { title, error, defaultExpanded } = props;\n  const classes = useStyles();\n\n  if (error.name !== 'ResponseError') {\n    return (\n      <ErrorPanel\n        title={title ?? error.message}\n        defaultExpanded={defaultExpanded}\n        error={error}\n      />\n    );\n  }\n\n  const { body, cause } = error as ResponseError;\n  const { request, response } = body;\n\n  const errorString = `${response.statusCode}: ${cause.name}`;\n  const requestString = request && `${request.method} ${request.url}`;\n  const messageString = cause.message.replace(/\\\\n/g, '\\n');\n  const stackString = cause.stack?.replace(/\\\\n/g, '\\n');\n  const jsonString = JSON.stringify(body, undefined, 2);\n\n  return (\n    <ErrorPanel\n      title={title ?? error.message}\n      defaultExpanded={defaultExpanded}\n      error={{ name: errorString, message: messageString, stack: stackString }}\n    >\n      {requestString && (\n        <ListItem alignItems=\"flex-start\">\n          <ListItemText\n            classes={{ secondary: classes.text }}\n            primary=\"Request\"\n            secondary={request ? `${requestString}` : undefined}\n          />\n          <CopyTextButton text={requestString} />\n        </ListItem>\n      )}\n      <>\n        <Divider component=\"li\" className={classes.divider} />\n        <ListItem alignItems=\"flex-start\">\n          <ListItemText\n            classes={{ secondary: classes.text }}\n            primary=\"Full Error as JSON\"\n          />\n        </ListItem>\n        <CodeSnippet language=\"json\" text={jsonString} showCopyCodeButton />\n      </>\n    </ErrorPanel>\n  );\n}\n"],"names":["React"],"mappings":";;;;;;;;;AA4BA,MAAM,SAAY,GAAA,UAAA;AAAA,EAChB,CAAU,KAAA,MAAA;AAAA,IACR,IAAM,EAAA;AAAA,MACJ,UAAY,EAAA,WAAA;AAAA,MACZ,UAAY,EAAA,KAAA;AAAA,MACZ,SAAW,EAAA,MAAA;AAAA,MACX,WAAA,EAAa,KAAM,CAAA,OAAA,CAAQ,CAAC;AAAA,KAC9B;AAAA,IACA,OAAS,EAAA;AAAA,MACP,MAAA,EAAQ,KAAM,CAAA,OAAA,CAAQ,CAAC;AAAA;AACzB,GACF,CAAA;AAAA,EACA,EAAE,MAAM,6BAA8B;AACxC,CAAA;AASO,SAAS,mBAAmB,KAAwB,EAAA;AACzD,EAAA,MAAM,EAAE,KAAA,EAAO,KAAO,EAAA,eAAA,EAAoB,GAAA,KAAA;AAC1C,EAAA,MAAM,UAAU,SAAU,EAAA;AAE1B,EAAI,IAAA,KAAA,CAAM,SAAS,eAAiB,EAAA;AAClC,IACE,uBAAAA,cAAA,CAAA,aAAA;AAAA,MAAC,UAAA;AAAA,MAAA;AAAA,QACC,KAAA,EAAO,SAAS,KAAM,CAAA,OAAA;AAAA,QACtB,eAAA;AAAA,QACA;AAAA;AAAA,KACF;AAAA;AAIJ,EAAM,MAAA,EAAE,IAAM,EAAA,KAAA,EAAU,GAAA,KAAA;AACxB,EAAM,MAAA,EAAE,OAAS,EAAA,QAAA,EAAa,GAAA,IAAA;AAE9B,EAAA,MAAM,cAAc,CAAG,EAAA,QAAA,CAAS,UAAU,CAAA,EAAA,EAAK,MAAM,IAAI,CAAA,CAAA;AACzD,EAAA,MAAM,gBAAgB,OAAW,IAAA,CAAA,EAAG,QAAQ,MAAM,CAAA,CAAA,EAAI,QAAQ,GAAG,CAAA,CAAA;AACjE,EAAA,MAAM,aAAgB,GAAA,KAAA,CAAM,OAAQ,CAAA,OAAA,CAAQ,QAAQ,IAAI,CAAA;AACxD,EAAA,MAAM,WAAc,GAAA,KAAA,CAAM,KAAO,EAAA,OAAA,CAAQ,QAAQ,IAAI,CAAA;AACrD,EAAA,MAAM,UAAa,GAAA,IAAA,CAAK,SAAU,CAAA,IAAA,EAAM,QAAW,CAAC,CAAA;AAEpD,EACE,uBAAAA,cAAA,CAAA,aAAA;AAAA,IAAC,UAAA;AAAA,IAAA;AAAA,MACC,KAAA,EAAO,SAAS,KAAM,CAAA,OAAA;AAAA,MACtB,eAAA;AAAA,MACA,OAAO,EAAE,IAAA,EAAM,aAAa,OAAS,EAAA,aAAA,EAAe,OAAO,WAAY;AAAA,KAAA;AAAA,IAEtE,aACC,oBAAAA,cAAA,CAAA,aAAA,CAAC,QAAS,EAAA,EAAA,UAAA,EAAW,YACnB,EAAA,kBAAAA,cAAA,CAAA,aAAA;AAAA,MAAC,YAAA;AAAA,MAAA;AAAA,QACC,OAAS,EAAA,EAAE,SAAW,EAAA,OAAA,CAAQ,IAAK,EAAA;AAAA,QACnC,OAAQ,EAAA,SAAA;AAAA,QACR,SAAW,EAAA,OAAA,GAAU,CAAG,EAAA,aAAa,CAAK,CAAA,GAAA,KAAA;AAAA;AAAA,KAE5C,kBAAAA,cAAA,CAAA,aAAA,CAAC,cAAe,EAAA,EAAA,IAAA,EAAM,eAAe,CACvC,CAAA;AAAA,oBAGAA,cAAA,CAAA,aAAA,CAAAA,cAAA,CAAA,QAAA,EAAA,IAAA,kBAAAA,cAAA,CAAA,aAAA,CAAC,OAAQ,EAAA,EAAA,SAAA,EAAU,IAAK,EAAA,SAAA,EAAW,OAAQ,CAAA,OAAA,EAAS,CACpD,kBAAAA,cAAA,CAAA,aAAA,CAAC,QAAS,EAAA,EAAA,UAAA,EAAW,YACnB,EAAA,kBAAAA,cAAA,CAAA,aAAA;AAAA,MAAC,YAAA;AAAA,MAAA;AAAA,QACC,OAAS,EAAA,EAAE,SAAW,EAAA,OAAA,CAAQ,IAAK,EAAA;AAAA,QACnC,OAAQ,EAAA;AAAA;AAAA,KAEZ,CACA,kBAAAA,cAAA,CAAA,aAAA,CAAC,WAAY,EAAA,EAAA,QAAA,EAAS,QAAO,IAAM,EAAA,UAAA,EAAY,kBAAkB,EAAA,IAAA,EAAC,CACpE;AAAA,GACF;AAEJ;;;;"}