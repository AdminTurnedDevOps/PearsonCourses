{"version":3,"file":"LogViewerControls.esm.js","sources":["../../../src/components/LogViewer/LogViewerControls.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { LogViewerSearch } from './useLogViewerSearch';\n\nexport interface LogViewerControlsProps extends LogViewerSearch {}\n\nexport function LogViewerControls(props: LogViewerControlsProps) {\n  const { resultCount, resultIndexStep, toggleShouldFilter } = props;\n  const resultIndex = props.resultIndex ?? 0;\n\n  const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      if (event.metaKey || event.ctrlKey || event.altKey) {\n        toggleShouldFilter();\n      } else {\n        resultIndexStep(event.shiftKey);\n      }\n    }\n  };\n\n  return (\n    <>\n      {resultCount !== undefined && (\n        <>\n          <IconButton size=\"small\" onClick={() => resultIndexStep(true)}>\n            <ChevronLeftIcon />\n          </IconButton>\n          <Typography>\n            {Math.min(resultIndex + 1, resultCount)}/{resultCount}\n          </Typography>\n          <IconButton size=\"small\" onClick={() => resultIndexStep()}>\n            <ChevronRightIcon />\n          </IconButton>\n        </>\n      )}\n      <TextField\n        size=\"small\"\n        variant=\"standard\"\n        placeholder=\"Search\"\n        value={props.searchInput}\n        onKeyPress={handleKeyPress}\n        onChange={e => props.setSearchInput(e.target.value)}\n      />\n      <IconButton size=\"small\" onClick={toggleShouldFilter}>\n        {props.shouldFilter ? (\n          <FilterListIcon color=\"primary\" />\n        ) : (\n          <FilterListIcon color=\"disabled\" />\n        )}\n      </IconButton>\n    </>\n  );\n}\n"],"names":["React","ChevronRightIcon","FilterListIcon"],"mappings":";;;;;;;;AA2BO,SAAS,kBAAkB,KAA+B,EAAA;AAC/D,EAAA,MAAM,EAAE,WAAA,EAAa,eAAiB,EAAA,kBAAA,EAAuB,GAAA,KAAA;AAC7D,EAAM,MAAA,WAAA,GAAc,MAAM,WAAe,IAAA,CAAA;AAEzC,EAAM,MAAA,cAAA,GAAiB,CAAC,KAAiD,KAAA;AACvE,IAAI,IAAA,KAAA,CAAM,QAAQ,OAAS,EAAA;AACzB,MAAA,IAAI,KAAM,CAAA,OAAA,IAAW,KAAM,CAAA,OAAA,IAAW,MAAM,MAAQ,EAAA;AAClD,QAAmB,kBAAA,EAAA;AAAA,OACd,MAAA;AACL,QAAA,eAAA,CAAgB,MAAM,QAAQ,CAAA;AAAA;AAChC;AACF,GACF;AAEA,EAAA,mFAEK,WAAgB,KAAA,KAAA,CAAA,gGAEZA,cAAA,CAAA,aAAA,CAAA,UAAA,EAAA,EAAW,MAAK,OAAQ,EAAA,OAAA,EAAS,MAAM,eAAA,CAAgB,IAAI,CAC1D,EAAA,kBAAAA,cAAA,CAAA,aAAA,CAAC,qBAAgB,CACnB,CAAA,+CACC,UACE,EAAA,IAAA,EAAA,IAAA,CAAK,GAAI,CAAA,WAAA,GAAc,GAAG,WAAW,CAAA,EAAE,KAAE,WAC5C,CAAA,+CACC,UAAW,EAAA,EAAA,IAAA,EAAK,OAAQ,EAAA,OAAA,EAAS,MAAM,eAAgB,EAAA,EAAA,+CACrDC,YAAiB,EAAA,IAAA,CACpB,CACF,CAEF,kBAAAD,cAAA,CAAA,aAAA;AAAA,IAAC,SAAA;AAAA,IAAA;AAAA,MACC,IAAK,EAAA,OAAA;AAAA,MACL,OAAQ,EAAA,UAAA;AAAA,MACR,WAAY,EAAA,QAAA;AAAA,MACZ,OAAO,KAAM,CAAA,WAAA;AAAA,MACb,UAAY,EAAA,cAAA;AAAA,MACZ,UAAU,CAAK,CAAA,KAAA,KAAA,CAAM,cAAe,CAAA,CAAA,CAAE,OAAO,KAAK;AAAA;AAAA,qBAEnDA,cAAA,CAAA,aAAA,CAAA,UAAA,EAAA,EAAW,MAAK,OAAQ,EAAA,OAAA,EAAS,sBAC/B,KAAM,CAAA,YAAA,gDACJE,UAAe,EAAA,EAAA,KAAA,EAAM,WAAU,CAEhC,mBAAAF,cAAA,CAAA,aAAA,CAACE,cAAe,KAAM,EAAA,UAAA,EAAW,CAErC,CACF,CAAA;AAEJ;;;;"}