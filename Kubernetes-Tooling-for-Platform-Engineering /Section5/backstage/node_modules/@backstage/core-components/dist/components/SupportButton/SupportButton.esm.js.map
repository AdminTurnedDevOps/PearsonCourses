{"version":3,"file":"SupportButton.esm.js","sources":["../../../src/components/SupportButton/SupportButton.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { configApiRef, useApi, useApp } from '@backstage/core-plugin-api';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { Theme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport React, { MouseEventHandler, useState } from 'react';\nimport { SupportItem, SupportItemLink, useSupportConfig } from '../../hooks';\nimport { HelpIcon } from '../../icons';\nimport { Link } from '../Link';\nimport { coreComponentsTranslationRef } from '../../translation';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\n\ntype SupportButtonProps = {\n  title?: string;\n  items?: SupportItem[];\n  children?: React.ReactNode;\n};\n\nexport type SupportButtonClassKey = 'popoverList';\n\nconst useStyles = makeStyles(\n  {\n    popoverList: {\n      minWidth: 260,\n      maxWidth: 400,\n    },\n    menuItem: {\n      whiteSpace: 'normal',\n    },\n  },\n  { name: 'BackstageSupportButton' },\n);\n\nconst SupportIcon = ({ icon }: { icon: string | undefined }) => {\n  const app = useApp();\n  const Icon = icon ? app.getSystemIcon(icon) ?? HelpIcon : HelpIcon;\n  return <Icon />;\n};\n\nconst SupportLink = ({ link }: { link: SupportItemLink }) => (\n  <Link to={link.url}>{link.title ?? link.url}</Link>\n);\n\nconst SupportListItem = ({ item }: { item: SupportItem }) => {\n  return (\n    <MenuItem button={false}>\n      <ListItemIcon>\n        <SupportIcon icon={item.icon} />\n      </ListItemIcon>\n      <ListItemText\n        primary={item.title}\n        secondary={item.links?.reduce<React.ReactNode[]>(\n          (prev, link, idx) => [\n            ...prev,\n            idx > 0 && <br key={idx} />,\n            <SupportLink link={link} key={link.url} />,\n          ],\n          [],\n        )}\n      />\n    </MenuItem>\n  );\n};\n\nexport function SupportButton(props: SupportButtonProps) {\n  const { t } = useTranslationRef(coreComponentsTranslationRef);\n  const { title, items, children } = props;\n  const { items: configItems } = useSupportConfig();\n\n  const [popoverOpen, setPopoverOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState<Element | null>(null);\n  const classes = useStyles();\n  const supportConfig = useApi(configApiRef).getOptionalConfig('app.support');\n  const isSmallScreen = useMediaQuery<Theme>(theme =>\n    theme.breakpoints.down('sm'),\n  );\n\n  const onClickHandler: MouseEventHandler = event => {\n    setAnchorEl(event.currentTarget);\n    setPopoverOpen(true);\n  };\n\n  const popoverCloseHandler = () => {\n    setPopoverOpen(false);\n  };\n\n  if (!supportConfig) {\n    return null;\n  }\n\n  return (\n    <>\n      <Box display=\"flex\" ml={1}>\n        {isSmallScreen ? (\n          <IconButton\n            color=\"primary\"\n            size=\"small\"\n            onClick={onClickHandler}\n            data-testid=\"support-button\"\n            aria-label=\"Support\"\n          >\n            <HelpIcon />\n          </IconButton>\n        ) : (\n          <Button\n            data-testid=\"support-button\"\n            aria-label=\"Support\"\n            color=\"primary\"\n            onClick={onClickHandler}\n            startIcon={<HelpIcon />}\n          >\n            {t('supportButton.title')}\n          </Button>\n        )}\n      </Box>\n      <Popover\n        data-testid=\"support-button-popover\"\n        open={popoverOpen}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        onClose={popoverCloseHandler}\n      >\n        <MenuList\n          className={classes.popoverList}\n          autoFocusItem={Boolean(anchorEl)}\n        >\n          {title && (\n            <MenuItem\n              button={false}\n              alignItems=\"flex-start\"\n              className={classes.menuItem}\n            >\n              <Typography variant=\"subtitle1\">{title}</Typography>\n            </MenuItem>\n          )}\n          {React.Children.map(children, (child, i) => (\n            <MenuItem\n              button={false}\n              alignItems=\"flex-start\"\n              key={`child-${i}`}\n              className={classes.menuItem}\n            >\n              {child}\n            </MenuItem>\n          ))}\n          {(items ?? configItems).map((item, i) => (\n            <SupportListItem item={item} key={`item-${i}`} />\n          ))}\n        </MenuList>\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            onClick={popoverCloseHandler}\n            aria-label=\"Close\"\n          >\n            {t('supportButton.close')}\n          </Button>\n        </DialogActions>\n      </Popover>\n    </>\n  );\n}\n"],"names":["React"],"mappings":"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"}