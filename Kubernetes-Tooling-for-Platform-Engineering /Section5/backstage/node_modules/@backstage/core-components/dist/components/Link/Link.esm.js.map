{"version":3,"file":"Link.esm.js","sources":["../../../src/components/Link/Link.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { configApiRef, useAnalytics, useApi } from '@backstage/core-plugin-api';\n// eslint-disable-next-line no-restricted-imports\nimport MaterialLink, {\n  LinkProps as MaterialLinkProps,\n} from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport classnames from 'classnames';\nimport { trimEnd } from 'lodash';\nimport React, { ElementType } from 'react';\nimport {\n  createRoutesFromChildren,\n  Link as RouterLink,\n  LinkProps as RouterLinkProps,\n  Route,\n} from 'react-router-dom';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport { useApp } from '@backstage/core-plugin-api';\n\nexport function isReactRouterBeta(): boolean {\n  const [obj] = createRoutesFromChildren(<Route index element={<div />} />);\n  return !obj.index;\n}\n\n/** @public */\nexport type LinkClassKey = 'visuallyHidden' | 'externalLink';\n\nconst useStyles = makeStyles(\n  theme => ({\n    visuallyHidden: {\n      clip: 'rect(0 0 0 0)',\n      clipPath: 'inset(50%)',\n      overflow: 'hidden',\n      position: 'absolute',\n      userSelect: 'none',\n      whiteSpace: 'nowrap',\n      height: 1,\n      width: 1,\n    },\n    externalLink: {\n      position: 'relative',\n    },\n    externalLinkIcon: {\n      verticalAlign: 'bottom',\n      marginLeft: theme.spacing(0.5),\n    },\n  }),\n  { name: 'Link' },\n);\n\nconst ExternalLinkIcon = () => {\n  const app = useApp();\n  const Icon = app.getSystemIcon('externalLink') || OpenInNew;\n  const classes = useStyles();\n  return <Icon className={classes.externalLinkIcon} />;\n};\n\nexport const isExternalUri = (uri: string) => /^([a-z+.-]+):/.test(uri);\n\n// See https://github.com/facebook/react/blob/f0cf832e1d0c8544c36aa8b310960885a11a847c/packages/react-dom-bindings/src/shared/sanitizeURL.js\nconst scriptProtocolPattern =\n  // eslint-disable-next-line no-control-regex\n  /^[\\u0000-\\u001F ]*j[\\r\\n\\t]*a[\\r\\n\\t]*v[\\r\\n\\t]*a[\\r\\n\\t]*s[\\r\\n\\t]*c[\\r\\n\\t]*r[\\r\\n\\t]*i[\\r\\n\\t]*p[\\r\\n\\t]*t[\\r\\n\\t]*\\:/i;\n\n// We install this globally in order to prevent javascript: URL XSS attacks via window.open\nconst originalWindowOpen = window.open as typeof window.open & {\n  __backstage?: true;\n};\nif (originalWindowOpen && !originalWindowOpen.__backstage) {\n  const newOpen = function open(\n    this: Window,\n    ...args: Parameters<typeof window.open>\n  ) {\n    const url = String(args[0]);\n    if (scriptProtocolPattern.test(url)) {\n      throw new Error(\n        'Rejected window.open() with a javascript: URL as a security precaution',\n      );\n    }\n    return originalWindowOpen.apply(this, args);\n  };\n  newOpen.__backstage = true;\n  window.open = newOpen;\n}\n\nexport type LinkProps = Omit<MaterialLinkProps, 'to'> &\n  Omit<RouterLinkProps, 'to'> & {\n    to: string;\n    component?: ElementType<any>;\n    noTrack?: boolean;\n    externalLinkIcon?: boolean;\n  };\n\n/**\n * Returns the app base url that could be empty if the Config API is not properly implemented.\n * The only cases there would be no Config API are in tests and in storybook stories, and in those cases, it's unlikely that callers would rely on this subpath behavior.\n */\nconst useBaseUrl = () => {\n  try {\n    const config = useApi(configApiRef);\n    return config.getOptionalString('app.baseUrl');\n  } catch {\n    return undefined;\n  }\n};\n\n/**\n * Get the app base path from the configured app baseUrl.\n * The returned path does not have a trailing slash.\n */\nconst useBasePath = () => {\n  // baseUrl can be specified as just a path\n  const base = 'http://sample.dev';\n  const url = useBaseUrl() ?? '/';\n  const { pathname } = new URL(url, base);\n  return trimEnd(pathname, '/');\n};\n\n/** @deprecated Remove once we no longer support React Router v6 beta */\nexport const useResolvedPath = (uri: LinkProps['to']) => {\n  let resolvedPath = String(uri);\n\n  const basePath = useBasePath();\n  const external = isExternalUri(resolvedPath);\n  const startsWithBasePath = resolvedPath.startsWith(basePath);\n\n  if (!external && !startsWithBasePath) {\n    resolvedPath = basePath.concat(resolvedPath);\n  }\n\n  return resolvedPath;\n};\n\n/**\n * Given a react node, try to retrieve its text content.\n */\nconst getNodeText = (node: React.ReactNode): string => {\n  // If the node is an array of children, recurse and join.\n  if (node instanceof Array) {\n    return node.map(getNodeText).join(' ').trim();\n  }\n\n  // If the node is a react element, recurse on its children.\n  if (typeof node === 'object' && node) {\n    return getNodeText((node as React.ReactElement)?.props?.children);\n  }\n\n  // Base case: the node is just text. Return it.\n  if (['string', 'number'].includes(typeof node)) {\n    return String(node);\n  }\n\n  // Base case: just return an empty string.\n  return '';\n};\n\n/**\n * Thin wrapper on top of material-ui's Link component, which...\n * - Makes the Link use react-router\n * - Captures Link clicks as analytics events.\n */\nexport const Link = React.forwardRef<any, LinkProps>(\n  ({ onClick, noTrack, externalLinkIcon, ...props }, ref) => {\n    const classes = useStyles();\n    const analytics = useAnalytics();\n\n    // Adding the base path to URLs breaks react-router v6 stable, so we only\n    // do it for beta. The react router version won't change at runtime so it is\n    // fine to ignore the rules of hooks.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const to = isReactRouterBeta() ? useResolvedPath(props.to) : props.to;\n    const linkText = getNodeText(props.children) || to;\n    const external = isExternalUri(to);\n    const newWindow = external && !!/^https?:/.exec(to);\n\n    if (scriptProtocolPattern.test(to)) {\n      throw new Error(\n        'Link component rejected javascript: URL as a security precaution',\n      );\n    }\n\n    const handleClick = (event: React.MouseEvent<any, MouseEvent>) => {\n      onClick?.(event);\n      if (!noTrack) {\n        analytics.captureEvent('click', linkText, { attributes: { to } });\n      }\n    };\n\n    return external ? (\n      // External links\n      <MaterialLink\n        {...(newWindow ? { target: '_blank', rel: 'noopener' } : {})}\n        {...props}\n        {...(props['aria-label']\n          ? { 'aria-label': `${props['aria-label']}, Opens in a new window` }\n          : {})}\n        ref={ref}\n        href={to}\n        onClick={handleClick}\n        className={classnames(classes.externalLink, props.className)}\n      >\n        {props.children}\n        {externalLinkIcon && <ExternalLinkIcon />}\n        <Typography component=\"span\" className={classes.visuallyHidden}>\n          , Opens in a new window\n        </Typography>\n      </MaterialLink>\n    ) : (\n      // Interact with React Router for internal links\n      <MaterialLink\n        {...props}\n        ref={ref}\n        component={RouterLink}\n        to={to}\n        onClick={handleClick}\n      />\n    );\n  },\n) as (props: LinkProps) => JSX.Element;\n"],"names":["React","classnames","RouterLink"],"mappings":"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"}