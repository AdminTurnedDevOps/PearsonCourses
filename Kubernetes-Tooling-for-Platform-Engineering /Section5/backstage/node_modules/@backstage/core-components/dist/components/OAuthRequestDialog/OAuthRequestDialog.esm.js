import { makeStyles } from '@material-ui/core/styles';
import Dialog from '@material-ui/core/Dialog';
import DialogActions from '@material-ui/core/DialogActions';
import DialogContent from '@material-ui/core/DialogContent';
import DialogTitle from '@material-ui/core/DialogTitle';
import List from '@material-ui/core/List';
import Button from '@material-ui/core/Button';
import React__default, { useState, useMemo } from 'react';
import useObservable from 'react-use/esm/useObservable';
import LoginRequestListItem from './LoginRequestListItem.esm.js';
import { useApi, oauthRequestApiRef, configApiRef } from '@backstage/core-plugin-api';
import Typography from '@material-ui/core/Typography';
import { coreComponentsTranslationRef } from '../../translation.esm.js';
import { useTranslationRef } from '@backstage/core-plugin-api/alpha';

const useStyles = makeStyles(
  (theme) => ({
    dialog: {
      paddingTop: theme.spacing(1)
    },
    title: {
      minWidth: 0
    },
    titleHeading: {
      fontSize: theme.typography.h6.fontSize
    },
    contentList: {
      padding: 0
    },
    actionButtons: {
      padding: theme.spacing(2, 0)
    }
  }),
  { name: "OAuthRequestDialog" }
);
function OAuthRequestDialog(_props) {
  const classes = useStyles();
  const [busy, setBusy] = useState(false);
  const oauthRequestApi = useApi(oauthRequestApiRef);
  const configApi = useApi(configApiRef);
  const { t } = useTranslationRef(coreComponentsTranslationRef);
  const authRedirect = configApi.getOptionalBoolean("enableExperimentalRedirectFlow") ?? false;
  const requests = useObservable(
    useMemo(() => oauthRequestApi.authRequest$(), [oauthRequestApi]),
    []
  );
  const handleRejectAll = () => {
    requests.forEach((request) => request.reject());
  };
  return /* @__PURE__ */ React__default.createElement(
    Dialog,
    {
      open: Boolean(requests.length),
      fullWidth: true,
      maxWidth: "xs",
      classes: { paper: classes.dialog },
      "aria-labelledby": "oauth-req-dialog-title"
    },
    /* @__PURE__ */ React__default.createElement("main", null, /* @__PURE__ */ React__default.createElement(
      DialogTitle,
      {
        classes: { root: classes.title },
        id: "oauth-req-dialog-title"
      },
      /* @__PURE__ */ React__default.createElement(
        Typography,
        {
          className: classes.titleHeading,
          variant: "h1",
          variantMapping: { h1: "span" }
        },
        t("oauthRequestDialog.title")
      ),
      authRedirect ? /* @__PURE__ */ React__default.createElement(Typography, null, t("oauthRequestDialog.authRedirectTitle")) : null
    ), /* @__PURE__ */ React__default.createElement(DialogContent, { dividers: true, classes: { root: classes.contentList } }, /* @__PURE__ */ React__default.createElement(List, null, requests.map((request) => /* @__PURE__ */ React__default.createElement(
      LoginRequestListItem,
      {
        key: request.provider.title,
        request,
        busy,
        setBusy
      }
    ))))),
    /* @__PURE__ */ React__default.createElement(DialogActions, { classes: { root: classes.actionButtons } }, /* @__PURE__ */ React__default.createElement(Button, { onClick: handleRejectAll }, t("oauthRequestDialog.rejectAll")))
  );
}

export { OAuthRequestDialog };
//# sourceMappingURL=OAuthRequestDialog.esm.js.map
