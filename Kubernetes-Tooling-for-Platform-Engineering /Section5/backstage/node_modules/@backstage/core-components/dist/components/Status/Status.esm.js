import { makeStyles } from '@material-ui/core/styles';
import Typography from '@material-ui/core/Typography';
import CheckCircleOutline from '@material-ui/icons/CheckCircleOutline';
import WarningOutline from '@material-ui/icons/ReportProblemOutlined';
import ErrorOutline from '@material-ui/icons/ErrorOutline';
import classNames from 'classnames';
import React__default from 'react';
import { PendingIcon } from './icons/PendingIcon.esm.js';
import { RunningIcon } from './icons/RunningIcon.esm.js';
import { AbortedIcon } from './icons/AbortedIcon.esm.js';

const useStyles = makeStyles(
  (theme) => ({
    status: {
      fontWeight: theme.typography.fontWeightMedium,
      alignItems: "baseline",
      display: "flex"
    },
    statusIcon: {
      flexShrink: 0,
      position: "relative",
      top: "0.125em",
      marginRight: theme.spacing(1)
    },
    statusIconSize: {
      width: "0.8em",
      height: "0.8em"
    },
    statusIconSizeForImg: {
      width: "1.2em",
      height: "1.2em"
    },
    ok: {
      fill: theme.palette.status.ok || "#3E8635"
    },
    warning: {
      fill: theme.palette.status.warning || "#F0AB00"
    },
    error: {
      fill: theme.palette.status.error || "#C9190B"
    },
    pending: {
      fill: theme.palette.status.aborted || "#6A6E73"
    },
    running: {
      fill: theme.palette.status.aborted || "#6A6E73"
    },
    aborted: {
      fill: theme.palette.status.aborted || "#6A6E73"
    }
  }),
  { name: "BackstageStatus" }
);
function StatusOK(props) {
  const { children, ...otherProps } = props;
  const classes = useStyles(otherProps);
  return /* @__PURE__ */ React__default.createElement(
    Typography,
    {
      component: "span",
      className: classNames(classes.status),
      "aria-label": "Status ok",
      "aria-hidden": "true",
      ...otherProps
    },
    /* @__PURE__ */ React__default.createElement(
      CheckCircleOutline,
      {
        "data-testid": "status-ok",
        className: classNames(
          classes.ok,
          classes.statusIconSize,
          classes.statusIcon
        )
      }
    ),
    children
  );
}
function StatusWarning(props) {
  const { children, ...otherProps } = props;
  const classes = useStyles(otherProps);
  return /* @__PURE__ */ React__default.createElement(
    Typography,
    {
      component: "span",
      className: classNames(classes.status),
      "aria-label": "Status warning",
      "aria-hidden": "true",
      ...otherProps
    },
    /* @__PURE__ */ React__default.createElement(
      WarningOutline,
      {
        "data-testid": "status-warning",
        className: classNames(
          classes.warning,
          classes.statusIconSize,
          classes.statusIcon
        )
      }
    ),
    children
  );
}
function StatusError(props) {
  const { children, ...otherProps } = props;
  const classes = useStyles(otherProps);
  return /* @__PURE__ */ React__default.createElement(
    Typography,
    {
      component: "span",
      className: classNames(classes.status),
      "aria-label": "Status error",
      "aria-hidden": "true",
      ...otherProps
    },
    /* @__PURE__ */ React__default.createElement(
      ErrorOutline,
      {
        "data-testid": "status-error",
        className: classNames(
          classes.error,
          classes.statusIconSize,
          classes.statusIcon
        )
      }
    ),
    children
  );
}
function StatusPending(props) {
  const { children, ...otherProps } = props;
  const classes = useStyles(otherProps);
  return /* @__PURE__ */ React__default.createElement(
    Typography,
    {
      component: "span",
      className: classNames(classes.status),
      "aria-label": "Status pending",
      "aria-hidden": "true",
      ...otherProps
    },
    /* @__PURE__ */ React__default.createElement(
      PendingIcon,
      {
        dataTestId: "status-pending",
        className: classNames(
          classes.pending,
          classes.statusIconSizeForImg,
          classes.statusIcon
        )
      }
    ),
    children
  );
}
function StatusRunning(props) {
  const { children, ...otherProps } = props;
  const classes = useStyles(otherProps);
  return /* @__PURE__ */ React__default.createElement(
    Typography,
    {
      component: "span",
      className: classNames(classes.status),
      "aria-label": "Status running",
      "aria-hidden": "true",
      ...otherProps
    },
    /* @__PURE__ */ React__default.createElement(
      RunningIcon,
      {
        dataTestId: "status-running",
        className: classNames(
          classes.running,
          classes.statusIcon,
          classes.statusIconSizeForImg
        )
      }
    ),
    children
  );
}
function StatusAborted(props) {
  const { children, ...otherProps } = props;
  const classes = useStyles(otherProps);
  return /* @__PURE__ */ React__default.createElement(
    Typography,
    {
      component: "span",
      className: classNames(classes.status),
      "aria-label": "Status aborted",
      "aria-hidden": "true",
      ...otherProps
    },
    /* @__PURE__ */ React__default.createElement(
      AbortedIcon,
      {
        dataTestId: "status-aborted",
        className: classNames(
          classes.aborted,
          classes.statusIcon,
          classes.statusIconSizeForImg
        )
      }
    ),
    children
  );
}

export { StatusAborted, StatusError, StatusOK, StatusPending, StatusRunning, StatusWarning };
//# sourceMappingURL=Status.esm.js.map
