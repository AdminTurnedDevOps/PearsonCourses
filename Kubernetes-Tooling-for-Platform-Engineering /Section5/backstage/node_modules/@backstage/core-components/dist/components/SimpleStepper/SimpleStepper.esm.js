import React__default, { useState, useEffect, Children, isValidElement } from 'react';
import MuiStepper from '@material-ui/core/Stepper';

const noop = () => {
};
const VerticalStepperContext = React__default.createContext({
  stepperLength: 0,
  stepIndex: 0,
  setStepIndex: noop,
  stepHistory: [],
  setStepHistory: noop,
  onStepChange: noop
});
function SimpleStepper(props) {
  const { children, elevated, onStepChange, activeStep = 0 } = props;
  const [stepIndex, setStepIndex] = useState(activeStep);
  const [stepHistory, setStepHistory] = useState([0]);
  useEffect(() => {
    setStepIndex(activeStep);
  }, [activeStep]);
  const steps = [];
  let endStep;
  Children.forEach(children, (child) => {
    if (isValidElement(child)) {
      if (child.props.end) {
        endStep = child;
      } else {
        steps.push(child);
      }
    }
  });
  return /* @__PURE__ */ React__default.createElement(React__default.Fragment, null, /* @__PURE__ */ React__default.createElement(
    VerticalStepperContext.Provider,
    {
      value: {
        stepIndex,
        setStepIndex,
        stepHistory,
        setStepHistory,
        onStepChange,
        stepperLength: Children.count(children)
      }
    },
    /* @__PURE__ */ React__default.createElement(
      MuiStepper,
      {
        activeStep: stepIndex,
        orientation: "vertical",
        elevation: elevated ? 2 : 0
      },
      steps
    )
  ), stepIndex >= Children.count(children) - 1 && endStep);
}

export { SimpleStepper, VerticalStepperContext };
//# sourceMappingURL=SimpleStepper.esm.js.map
