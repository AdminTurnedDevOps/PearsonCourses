{"version":3,"file":"LoginRequestListItem.esm.js","sources":["../../../src/components/OAuthRequestDialog/LoginRequestListItem.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport React, { useState } from 'react';\nimport { isError } from '@backstage/errors';\nimport { PendingOAuthRequest } from '@backstage/core-plugin-api';\nimport { coreComponentsTranslationRef } from '../../translation';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\n\nexport type LoginRequestListItemClassKey = 'root';\n\nconst useItemStyles = makeStyles(\n  theme => ({\n    root: {\n      paddingLeft: theme.spacing(3),\n    },\n  }),\n  { name: 'BackstageLoginRequestListItem' },\n);\n\ntype RowProps = {\n  request: PendingOAuthRequest;\n  busy: boolean;\n  setBusy: (busy: boolean) => void;\n};\n\nconst LoginRequestListItem = ({ request, busy, setBusy }: RowProps) => {\n  const classes = useItemStyles();\n  const [error, setError] = useState<string>();\n  const { t } = useTranslationRef(coreComponentsTranslationRef);\n\n  const handleContinue = async () => {\n    setBusy(true);\n    try {\n      await request.trigger();\n    } catch (e) {\n      setError(isError(e) ? e.message : 'An unspecified error occurred');\n    } finally {\n      setBusy(false);\n    }\n  };\n\n  const IconComponent = request.provider.icon;\n\n  return (\n    <ListItem disabled={busy} classes={{ root: classes.root }}>\n      <ListItemAvatar>\n        <IconComponent fontSize=\"large\" />\n      </ListItemAvatar>\n      <ListItemText\n        primary={request.provider.title}\n        secondary={error && <Typography color=\"error\">{error}</Typography>}\n      />\n      <Button color=\"primary\" variant=\"contained\" onClick={handleContinue}>\n        {t('oauthRequestDialog.login')}\n      </Button>\n    </ListItem>\n  );\n};\n\nexport default LoginRequestListItem;\n"],"names":["React"],"mappings":";;;;;;;;;;;AA8BA,MAAM,aAAgB,GAAA,UAAA;AAAA,EACpB,CAAU,KAAA,MAAA;AAAA,IACR,IAAM,EAAA;AAAA,MACJ,WAAA,EAAa,KAAM,CAAA,OAAA,CAAQ,CAAC;AAAA;AAC9B,GACF,CAAA;AAAA,EACA,EAAE,MAAM,+BAAgC;AAC1C,CAAA;AAQA,MAAM,uBAAuB,CAAC,EAAE,OAAS,EAAA,IAAA,EAAM,SAAwB,KAAA;AACrE,EAAA,MAAM,UAAU,aAAc,EAAA;AAC9B,EAAA,MAAM,CAAC,KAAA,EAAO,QAAQ,CAAA,GAAI,QAAiB,EAAA;AAC3C,EAAA,MAAM,EAAE,CAAA,EAAM,GAAA,iBAAA,CAAkB,4BAA4B,CAAA;AAE5D,EAAA,MAAM,iBAAiB,YAAY;AACjC,IAAA,OAAA,CAAQ,IAAI,CAAA;AACZ,IAAI,IAAA;AACF,MAAA,MAAM,QAAQ,OAAQ,EAAA;AAAA,aACf,CAAG,EAAA;AACV,MAAA,QAAA,CAAS,OAAQ,CAAA,CAAC,CAAI,GAAA,CAAA,CAAE,UAAU,+BAA+B,CAAA;AAAA,KACjE,SAAA;AACA,MAAA,OAAA,CAAQ,KAAK,CAAA;AAAA;AACf,GACF;AAEA,EAAM,MAAA,aAAA,GAAgB,QAAQ,QAAS,CAAA,IAAA;AAEvC,EAAA,oDACG,QAAS,EAAA,EAAA,QAAA,EAAU,IAAM,EAAA,OAAA,EAAS,EAAE,IAAM,EAAA,OAAA,CAAQ,IAAK,EAAA,EAAA,+CACrD,cACC,EAAA,IAAA,kBAAAA,cAAA,CAAA,aAAA,CAAC,iBAAc,QAAS,EAAA,OAAA,EAAQ,CAClC,CACA,kBAAAA,cAAA,CAAA,aAAA;AAAA,IAAC,YAAA;AAAA,IAAA;AAAA,MACC,OAAA,EAAS,QAAQ,QAAS,CAAA,KAAA;AAAA,MAC1B,WAAW,KAAS,oBAAAA,cAAA,CAAA,aAAA,CAAC,UAAW,EAAA,EAAA,KAAA,EAAM,WAAS,KAAM;AAAA;AAAA,GAEvD,kBAAAA,cAAA,CAAA,aAAA,CAAC,MAAO,EAAA,EAAA,KAAA,EAAM,SAAU,EAAA,OAAA,EAAQ,WAAY,EAAA,OAAA,EAAS,cAClD,EAAA,EAAA,CAAA,CAAE,0BAA0B,CAC/B,CACF,CAAA;AAEJ;;;;"}