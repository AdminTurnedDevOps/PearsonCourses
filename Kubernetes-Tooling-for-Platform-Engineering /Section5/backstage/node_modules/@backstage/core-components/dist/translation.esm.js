import { createTranslationRef } from '@backstage/core-plugin-api/alpha';

const coreComponentsTranslationRef = createTranslationRef({
  id: "core-components",
  messages: {
    signIn: {
      title: "Sign In",
      loginFailed: "Login failed",
      customProvider: {
        title: "Custom User",
        subtitle: "Enter your own User ID and credentials.\n This selection will not be stored.",
        userId: "User ID",
        tokenInvalid: "Token is not a valid OpenID Connect JWT Token",
        continue: "Continue",
        idToken: "ID Token (optional)"
      },
      guestProvider: {
        title: "Guest",
        subtitle: "Enter as a Guest User.\n You will not have a verified identity, meaning some features might be unavailable.",
        enter: "Enter"
      }
    },
    skipToContent: "Skip to content",
    copyTextButton: {
      tooltipText: "Text copied to clipboard"
    },
    simpleStepper: {
      reset: "Reset",
      finish: "Finish",
      next: "Next",
      skip: "Skip",
      back: "Back"
    },
    errorPage: {
      subtitle: "ERROR {{status}}: {{statusMessage}}",
      title: "Looks like someone dropped the mic!",
      goBack: "Go back",
      showMoreDetails: "Show more details",
      showLessDetails: "Show less details"
    },
    emptyState: {
      missingAnnotation: {
        title: "Missing Annotation",
        actionTitle: "Add the annotation to your component YAML as shown in the highlighted example below:",
        readMore: "Read more"
      }
    },
    supportConfig: {
      default: {
        title: "Support Not Configured",
        linkTitle: "Add `app.support` config key"
      }
    },
    errorBoundary: {
      title: "Please contact {{slackChannel}} for help."
    },
    oauthRequestDialog: {
      title: "Login Required",
      authRedirectTitle: "This will trigger a http redirect to OAuth Login.",
      login: "Log in",
      rejectAll: "Reject All"
    },
    supportButton: {
      title: "Support",
      close: "Close"
    },
    table: {
      filter: {
        title: "Filters",
        clearAll: "Clear all"
      }
    },
    alertDisplay: {
      message_one: "({{ count }} older message)",
      message_other: "({{ count }} older messages)"
    },
    autoLogout: {
      stillTherePrompt: {
        title: "Logging out due to inactivity",
        buttonText: "Yes! Don't log me out"
      }
    },
    proxiedSignInPage: {
      title: "You do not appear to be signed in. Please try reloading the browser page."
    }
  }
});

export { coreComponentsTranslationRef };
//# sourceMappingURL=translation.esm.js.map
