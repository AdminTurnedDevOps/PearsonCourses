{"version":3,"file":"InfoCard.esm.js","sources":["../../../src/layout/InfoCard/InfoCard.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader, { CardHeaderProps } from '@material-ui/core/CardHeader';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport React, { ReactNode } from 'react';\nimport { BottomLink, BottomLinkProps } from '../BottomLink';\nimport { ErrorBoundary, ErrorBoundaryProps } from '../ErrorBoundary';\n\n/** @public */\nexport type InfoCardClassKey =\n  | 'noPadding'\n  | 'header'\n  | 'headerTitle'\n  | 'headerSubheader'\n  | 'headerAvatar'\n  | 'headerAction'\n  | 'headerContent';\n\nconst useStyles = makeStyles(\n  theme => ({\n    noPadding: {\n      padding: 0,\n      '&:last-child': {\n        paddingBottom: 0,\n      },\n    },\n    contentAlignBottom: {\n      display: 'flex',\n      alignItems: 'self-end',\n    },\n    header: {\n      padding: theme.spacing(2, 2, 2, 2.5),\n    },\n    headerTitle: {\n      fontWeight: theme.typography.fontWeightBold,\n    },\n    headerSubheader: {\n      paddingTop: theme.spacing(1),\n    },\n    headerAvatar: {},\n    headerAction: {},\n    headerContent: {},\n    subheader: {\n      display: 'flex',\n    },\n  }),\n  { name: 'BackstageInfoCard' },\n);\n\n/** @public */\nexport type CardActionsTopRightClassKey = 'root';\n\nconst CardActionsTopRight = withStyles(\n  theme => ({\n    root: {\n      display: 'inline-block',\n      padding: theme.spacing(8, 8, 0, 0),\n      float: 'right',\n    },\n  }),\n  { name: 'BackstageInfoCardCardActionsTopRight' },\n)(CardActions);\n\nconst VARIANT_STYLES = {\n  card: {\n    flex: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    fullHeight: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%',\n    },\n    gridItem: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: 'calc(100% - 10px)', // for pages without content header\n      marginBottom: '10px',\n      breakInside: 'avoid-page',\n      '@media print': {\n        height: 'auto',\n      },\n    },\n  },\n  cardContent: {\n    fullHeight: {\n      flex: 1,\n    },\n    gridItem: {\n      flex: 1,\n    },\n  },\n};\n\n/** @public */\nexport type InfoCardVariants = 'flex' | 'fullHeight' | 'gridItem';\n\n/**\n * InfoCard is used to display a paper-styled block on the screen, similar to a panel.\n *\n * You can custom style an InfoCard with the 'className' (outer container) and 'cardClassName' (inner container)\n * props. This is typically used with the material-ui makeStyles mechanism.\n *\n * The InfoCard serves as an error boundary. As a result, if you provide an 'errorBoundaryProps' property this\n * specifies the extra information to display in the error component that is displayed if an error occurs\n * in any descendent components.\n *\n * By default the InfoCard has no custom layout of its children, but is treated as a block element. A\n * couple common variants are provided and can be specified via the variant property:\n *\n * When the InfoCard is displayed as a grid item within a grid, you may want items to have the same height for all items.\n * Set to the 'gridItem' variant to display the InfoCard with full height suitable for Grid:\n *\n * `<InfoCard variant=\"gridItem\">...</InfoCard>`\n */\nexport type Props = {\n  title?: ReactNode;\n  subheader?: ReactNode;\n  divider?: boolean;\n  deepLink?: BottomLinkProps;\n  /** @deprecated Use errorBoundaryProps instead */\n  slackChannel?: string;\n  errorBoundaryProps?: ErrorBoundaryProps;\n  variant?: InfoCardVariants;\n  alignContent?: 'normal' | 'bottom';\n  children?: ReactNode;\n  headerStyle?: object;\n  headerProps?: CardHeaderProps;\n  icon?: ReactNode;\n  action?: ReactNode;\n  actionsClassName?: string;\n  actions?: ReactNode;\n  cardClassName?: string;\n  actionsTopRight?: ReactNode;\n  className?: string;\n  noPadding?: boolean;\n  titleTypographyProps?: object;\n  subheaderTypographyProps?: object;\n};\n\n/**\n * Material-ui card with header , content and actions footer\n *\n * @public\n *\n */\nexport function InfoCard(props: Props): JSX.Element {\n  const {\n    title,\n    subheader,\n    divider = true,\n    deepLink,\n    slackChannel,\n    errorBoundaryProps,\n    variant,\n    alignContent = 'normal',\n    children,\n    headerStyle,\n    headerProps,\n    icon,\n    action,\n    actionsClassName,\n    actions,\n    cardClassName,\n    actionsTopRight,\n    className,\n    noPadding,\n    titleTypographyProps,\n    subheaderTypographyProps,\n  } = props;\n  const classes = useStyles();\n  /**\n   * If variant is specified, we build up styles for that particular variant for both\n   * the Card and the CardContent (since these need to be synced)\n   */\n  let calculatedStyle = {};\n  let calculatedCardStyle = {};\n  if (variant) {\n    const variants = variant.split(/[\\s]+/g);\n    variants.forEach(name => {\n      calculatedStyle = {\n        ...calculatedStyle,\n        ...VARIANT_STYLES.card[name as keyof (typeof VARIANT_STYLES)['card']],\n      };\n      calculatedCardStyle = {\n        ...calculatedCardStyle,\n        ...VARIANT_STYLES.cardContent[\n          name as keyof (typeof VARIANT_STYLES)['cardContent']\n        ],\n      };\n    });\n  }\n\n  const cardSubTitle = () => {\n    if (!subheader && !icon) {\n      return null;\n    }\n\n    return (\n      <div data-testid=\"info-card-subheader\">\n        {subheader && <div className={classes.subheader}>{subheader}</div>}\n        {icon}\n      </div>\n    );\n  };\n\n  const errProps: ErrorBoundaryProps =\n    errorBoundaryProps || (slackChannel ? { slackChannel } : {});\n\n  return (\n    <Card style={calculatedStyle} className={className}>\n      <ErrorBoundary {...errProps}>\n        {title && (\n          <CardHeader\n            classes={{\n              root: classNames(classes.header),\n              title: classes.headerTitle,\n              subheader: classes.headerSubheader,\n              avatar: classes.headerAvatar,\n              action: classes.headerAction,\n              content: classes.headerContent,\n            }}\n            title={title}\n            subheader={cardSubTitle()}\n            action={action}\n            style={{ ...headerStyle }}\n            titleTypographyProps={titleTypographyProps}\n            subheaderTypographyProps={subheaderTypographyProps}\n            {...headerProps}\n          />\n        )}\n        {actionsTopRight && (\n          <CardActionsTopRight>{actionsTopRight}</CardActionsTopRight>\n        )}\n        {divider && <Divider />}\n        <CardContent\n          className={classNames(cardClassName, {\n            [classes.noPadding]: noPadding,\n            [classes.contentAlignBottom]: alignContent === 'bottom',\n          })}\n          style={calculatedCardStyle}\n        >\n          {children}\n        </CardContent>\n        {actions && (\n          <CardActions className={actionsClassName}>{actions}</CardActions>\n        )}\n        {deepLink && <BottomLink {...deepLink} />}\n      </ErrorBoundary>\n    </Card>\n  );\n}\n"],"names":["React"],"mappings":";;;;;;;;;;;AAqCA,MAAM,SAAY,GAAA,UAAA;AAAA,EAChB,CAAU,KAAA,MAAA;AAAA,IACR,SAAW,EAAA;AAAA,MACT,OAAS,EAAA,CAAA;AAAA,MACT,cAAgB,EAAA;AAAA,QACd,aAAe,EAAA;AAAA;AACjB,KACF;AAAA,IACA,kBAAoB,EAAA;AAAA,MAClB,OAAS,EAAA,MAAA;AAAA,MACT,UAAY,EAAA;AAAA,KACd;AAAA,IACA,MAAQ,EAAA;AAAA,MACN,SAAS,KAAM,CAAA,OAAA,CAAQ,CAAG,EAAA,CAAA,EAAG,GAAG,GAAG;AAAA,KACrC;AAAA,IACA,WAAa,EAAA;AAAA,MACX,UAAA,EAAY,MAAM,UAAW,CAAA;AAAA,KAC/B;AAAA,IACA,eAAiB,EAAA;AAAA,MACf,UAAA,EAAY,KAAM,CAAA,OAAA,CAAQ,CAAC;AAAA,KAC7B;AAAA,IACA,cAAc,EAAC;AAAA,IACf,cAAc,EAAC;AAAA,IACf,eAAe,EAAC;AAAA,IAChB,SAAW,EAAA;AAAA,MACT,OAAS,EAAA;AAAA;AACX,GACF,CAAA;AAAA,EACA,EAAE,MAAM,mBAAoB;AAC9B,CAAA;AAKA,MAAM,mBAAsB,GAAA,UAAA;AAAA,EAC1B,CAAU,KAAA,MAAA;AAAA,IACR,IAAM,EAAA;AAAA,MACJ,OAAS,EAAA,cAAA;AAAA,MACT,SAAS,KAAM,CAAA,OAAA,CAAQ,CAAG,EAAA,CAAA,EAAG,GAAG,CAAC,CAAA;AAAA,MACjC,KAAO,EAAA;AAAA;AACT,GACF,CAAA;AAAA,EACA,EAAE,MAAM,sCAAuC;AACjD,CAAA,CAAE,WAAW,CAAA;AAEb,MAAM,cAAiB,GAAA;AAAA,EACrB,IAAM,EAAA;AAAA,IACJ,IAAM,EAAA;AAAA,MACJ,OAAS,EAAA,MAAA;AAAA,MACT,aAAe,EAAA;AAAA,KACjB;AAAA,IACA,UAAY,EAAA;AAAA,MACV,OAAS,EAAA,MAAA;AAAA,MACT,aAAe,EAAA,QAAA;AAAA,MACf,MAAQ,EAAA;AAAA,KACV;AAAA,IACA,QAAU,EAAA;AAAA,MACR,OAAS,EAAA,MAAA;AAAA,MACT,aAAe,EAAA,QAAA;AAAA,MACf,MAAQ,EAAA,mBAAA;AAAA;AAAA,MACR,YAAc,EAAA,MAAA;AAAA,MACd,WAAa,EAAA,YAAA;AAAA,MACb,cAAgB,EAAA;AAAA,QACd,MAAQ,EAAA;AAAA;AACV;AACF,GACF;AAAA,EACA,WAAa,EAAA;AAAA,IACX,UAAY,EAAA;AAAA,MACV,IAAM,EAAA;AAAA,KACR;AAAA,IACA,QAAU,EAAA;AAAA,MACR,IAAM,EAAA;AAAA;AACR;AAEJ,CAAA;AAsDO,SAAS,SAAS,KAA2B,EAAA;AAClD,EAAM,MAAA;AAAA,IACJ,KAAA;AAAA,IACA,SAAA;AAAA,IACA,OAAU,GAAA,IAAA;AAAA,IACV,QAAA;AAAA,IACA,YAAA;AAAA,IACA,kBAAA;AAAA,IACA,OAAA;AAAA,IACA,YAAe,GAAA,QAAA;AAAA,IACf,QAAA;AAAA,IACA,WAAA;AAAA,IACA,WAAA;AAAA,IACA,IAAA;AAAA,IACA,MAAA;AAAA,IACA,gBAAA;AAAA,IACA,OAAA;AAAA,IACA,aAAA;AAAA,IACA,eAAA;AAAA,IACA,SAAA;AAAA,IACA,SAAA;AAAA,IACA,oBAAA;AAAA,IACA;AAAA,GACE,GAAA,KAAA;AACJ,EAAA,MAAM,UAAU,SAAU,EAAA;AAK1B,EAAA,IAAI,kBAAkB,EAAC;AACvB,EAAA,IAAI,sBAAsB,EAAC;AAC3B,EAAA,IAAI,OAAS,EAAA;AACX,IAAM,MAAA,QAAA,GAAW,OAAQ,CAAA,KAAA,CAAM,QAAQ,CAAA;AACvC,IAAA,QAAA,CAAS,QAAQ,CAAQ,IAAA,KAAA;AACvB,MAAkB,eAAA,GAAA;AAAA,QAChB,GAAG,eAAA;AAAA,QACH,GAAG,cAAe,CAAA,IAAA,CAAK,IAA6C;AAAA,OACtE;AACA,MAAsB,mBAAA,GAAA;AAAA,QACpB,GAAG,mBAAA;AAAA,QACH,GAAG,cAAe,CAAA,WAAA,CAChB,IACF;AAAA,OACF;AAAA,KACD,CAAA;AAAA;AAGH,EAAA,MAAM,eAAe,MAAM;AACzB,IAAI,IAAA,CAAC,SAAa,IAAA,CAAC,IAAM,EAAA;AACvB,MAAO,OAAA,IAAA;AAAA;AAGT,IAAA,uBACGA,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAI,aAAY,EAAA,qBAAA,EAAA,EACd,SAAa,oBAAAA,cAAA,CAAA,aAAA,CAAC,KAAI,EAAA,EAAA,SAAA,EAAW,OAAQ,CAAA,SAAA,EAAA,EAAY,SAAU,CAAA,EAC3D,IACH,CAAA;AAAA,GAEJ;AAEA,EAAA,MAAM,WACJ,kBAAuB,KAAA,YAAA,GAAe,EAAE,YAAA,KAAiB,EAAC,CAAA;AAE5D,EACE,uBAAAA,cAAA,CAAA,aAAA,CAAC,QAAK,KAAO,EAAA,eAAA,EAAiB,6BAC3BA,cAAA,CAAA,aAAA,CAAA,aAAA,EAAA,EAAe,GAAG,QAAA,EAAA,EAChB,KACC,oBAAAA,cAAA,CAAA,aAAA;AAAA,IAAC,UAAA;AAAA,IAAA;AAAA,MACC,OAAS,EAAA;AAAA,QACP,IAAA,EAAM,UAAW,CAAA,OAAA,CAAQ,MAAM,CAAA;AAAA,QAC/B,OAAO,OAAQ,CAAA,WAAA;AAAA,QACf,WAAW,OAAQ,CAAA,eAAA;AAAA,QACnB,QAAQ,OAAQ,CAAA,YAAA;AAAA,QAChB,QAAQ,OAAQ,CAAA,YAAA;AAAA,QAChB,SAAS,OAAQ,CAAA;AAAA,OACnB;AAAA,MACA,KAAA;AAAA,MACA,WAAW,YAAa,EAAA;AAAA,MACxB,MAAA;AAAA,MACA,KAAA,EAAO,EAAE,GAAG,WAAY,EAAA;AAAA,MACxB,oBAAA;AAAA,MACA,wBAAA;AAAA,MACC,GAAG;AAAA;AAAA,GACN,EAED,mCACEA,cAAA,CAAA,aAAA,CAAA,mBAAA,EAAA,IAAA,EAAqB,eAAgB,CAEvC,EAAA,OAAA,oBAAYA,cAAA,CAAA,aAAA,CAAA,OAAA,EAAA,IAAQ,CACrB,kBAAAA,cAAA,CAAA,aAAA;AAAA,IAAC,WAAA;AAAA,IAAA;AAAA,MACC,SAAA,EAAW,WAAW,aAAe,EAAA;AAAA,QACnC,CAAC,OAAQ,CAAA,SAAS,GAAG,SAAA;AAAA,QACrB,CAAC,OAAA,CAAQ,kBAAkB,GAAG,YAAiB,KAAA;AAAA,OAChD,CAAA;AAAA,MACD,KAAO,EAAA;AAAA,KAAA;AAAA,IAEN;AAAA,GAEF,EAAA,OAAA,oBACEA,cAAA,CAAA,aAAA,CAAA,WAAA,EAAA,EAAY,WAAW,gBAAmB,EAAA,EAAA,OAAQ,CAEpD,EAAA,QAAA,oBAAaA,cAAA,CAAA,aAAA,CAAA,UAAA,EAAA,EAAY,GAAG,QAAA,EAAU,CACzC,CACF,CAAA;AAEJ;;;;"}