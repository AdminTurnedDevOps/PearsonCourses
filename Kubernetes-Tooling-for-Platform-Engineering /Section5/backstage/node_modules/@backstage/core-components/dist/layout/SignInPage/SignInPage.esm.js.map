{"version":3,"file":"SignInPage.esm.js","sources":["../../../src/layout/SignInPage/SignInPage.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BackstageIdentityResponse,\n  configApiRef,\n  SignInPageProps,\n  useApi,\n} from '@backstage/core-plugin-api';\nimport { UserIdentity } from './UserIdentity';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport React, { ComponentType, ReactNode, useState } from 'react';\nimport { useMountEffect } from '@react-hookz/web';\nimport { Progress } from '../../components/Progress';\nimport { Content } from '../Content/Content';\nimport { ContentHeader } from '../ContentHeader/ContentHeader';\nimport { Header } from '../Header';\nimport { InfoCard } from '../InfoCard';\nimport { Page } from '../Page';\nimport { getSignInProviders, useSignInProviders } from './providers';\nimport { GridItem, useStyles } from './styles';\nimport { IdentityProviders, SignInProviderConfig } from './types';\nimport { coreComponentsTranslationRef } from '../../translation';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\nimport { useSearchParams } from 'react-router-dom';\n\ntype CommonSignInPageProps = SignInPageProps & {\n  /**\n   * Error component to be rendered instead of the default error panel in case\n   * sign in fails.\n   */\n  ErrorComponent?: ComponentType<{ error?: Error }>;\n};\n\ntype MultiSignInPageProps = CommonSignInPageProps & {\n  providers: IdentityProviders;\n  title?: string;\n  titleComponent?: ReactNode;\n  align?: 'center' | 'left';\n};\n\ntype SingleSignInPageProps = CommonSignInPageProps & {\n  provider: SignInProviderConfig;\n  auto?: boolean;\n};\n\nexport type Props = MultiSignInPageProps | SingleSignInPageProps;\n\nexport const MultiSignInPage = ({\n  onSignInSuccess,\n  providers = [],\n  title,\n  titleComponent,\n  align = 'left',\n}: MultiSignInPageProps) => {\n  const configApi = useApi(configApiRef);\n  const classes = useStyles();\n\n  const signInProviders = getSignInProviders(providers);\n  const [loading, providerElements] = useSignInProviders(\n    signInProviders,\n    onSignInSuccess,\n  );\n\n  if (loading) {\n    return <Progress />;\n  }\n\n  return (\n    <Page themeId=\"home\">\n      <Header title={configApi.getString('app.title')} />\n      <Content>\n        {(title || titleComponent) && (\n          <ContentHeader\n            title={title}\n            titleComponent={titleComponent}\n            textAlign={align}\n          />\n        )}\n        <Grid\n          container\n          justifyContent={align === 'center' ? align : 'flex-start'}\n          spacing={2}\n          component=\"ul\"\n          classes={classes}\n        >\n          {providerElements}\n        </Grid>\n      </Content>\n    </Page>\n  );\n};\n\nexport const SingleSignInPage = ({\n  provider,\n  auto,\n  onSignInSuccess,\n  ErrorComponent,\n}: SingleSignInPageProps) => {\n  const classes = useStyles();\n  const authApi = useApi(provider.apiRef);\n  const configApi = useApi(configApiRef);\n  const { t } = useTranslationRef(coreComponentsTranslationRef);\n\n  const [error, setError] = useState<Error>();\n\n  // The SignIn component takes some time to decide whether the user is logged-in or not.\n  // showLoginPage is used to prevent a glitch-like experience where the sign-in page is\n  // displayed for a split second when the user is already logged-in.\n  const [showLoginPage, setShowLoginPage] = useState<boolean>(false);\n\n  // User was redirected back to sign in page with error from auth redirect flow\n  const [searchParams, _setSearchParams] = useSearchParams();\n  const errorParam = searchParams.get('error');\n\n  type LoginOpts = { checkExisting?: boolean; showPopup?: boolean };\n  const login = async ({ checkExisting, showPopup }: LoginOpts) => {\n    try {\n      let identityResponse: BackstageIdentityResponse | undefined;\n      if (checkExisting) {\n        // Do an initial check if any logged-in session exists\n        identityResponse = await authApi.getBackstageIdentity({\n          optional: true,\n        });\n      }\n\n      // If no session exists, show the sign-in page\n      if (!identityResponse && (showPopup || auto) && !errorParam) {\n        // Unless auto is set to true, this step should not happen.\n        // When user intentionally clicks the Sign In button, autoShowPopup is set to true\n        setShowLoginPage(true);\n        identityResponse = await authApi.getBackstageIdentity({\n          instantPopup: true,\n        });\n        if (!identityResponse) {\n          throw new Error(\n            `The ${provider.title} provider is not configured to support sign-in`,\n          );\n        }\n      }\n\n      if (!identityResponse) {\n        setShowLoginPage(true);\n        return;\n      }\n\n      const profile = await authApi.getProfile();\n      onSignInSuccess(\n        UserIdentity.create({\n          identity: identityResponse.identity,\n          authApi,\n          profile,\n        }),\n      );\n    } catch (err: any) {\n      // User closed the sign-in modal\n      setError(err);\n      setShowLoginPage(true);\n    }\n  };\n\n  useMountEffect(() => {\n    if (errorParam) {\n      setError(new Error(errorParam));\n    }\n    login({ checkExisting: true });\n  });\n\n  return showLoginPage ? (\n    <Page themeId=\"home\">\n      <Header title={configApi.getString('app.title')} />\n      <Content>\n        <Grid\n          container\n          justifyContent=\"center\"\n          spacing={2}\n          component=\"ul\"\n          classes={classes}\n        >\n          <GridItem>\n            <InfoCard\n              variant=\"fullHeight\"\n              title={provider.title}\n              actions={\n                <Button\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  onClick={() => {\n                    login({ showPopup: true });\n                  }}\n                >\n                  {t('signIn.title')}\n                </Button>\n              }\n            >\n              <Typography variant=\"body1\">{provider.message}</Typography>\n              {error &&\n                error.name !== 'PopupRejectedError' &&\n                (ErrorComponent ? (\n                  <ErrorComponent error={error} />\n                ) : (\n                  <Typography variant=\"body1\" color=\"error\">\n                    {error.message}\n                  </Typography>\n                ))}\n            </InfoCard>\n          </GridItem>\n        </Grid>\n      </Content>\n    </Page>\n  ) : (\n    <Progress />\n  );\n};\n\nexport function SignInPage(props: Props) {\n  if ('provider' in props) {\n    return <SingleSignInPage {...props} />;\n  }\n\n  return <MultiSignInPage {...props} />;\n}\n"],"names":["React"],"mappings":"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"}