{"version":3,"file":"ProxiedSignInIdentity.esm.js","sources":["../../../src/layout/ProxiedSignInPage/ProxiedSignInIdentity.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BackstageUserIdentity,\n  discoveryApiRef,\n  IdentityApi,\n  ProfileInfo,\n} from '@backstage/core-plugin-api';\nimport { ResponseError } from '@backstage/errors';\nimport { ProxiedSession, proxiedSessionSchema } from './types';\n\nexport const DEFAULTS = {\n  // The amount of time between token refreshes, if we fail to get an actual\n  // value out of the exp claim\n  defaultTokenExpiryMillis: 5 * 60 * 1000,\n  // The amount of time before the actual expiry of the Backstage token, that we\n  // shall start trying to get a new one\n  tokenExpiryMarginMillis: 5 * 60 * 1000,\n} as const;\n\n// When the token expires, with some margin\nexport function tokenToExpiry(jwtToken: string | undefined): Date {\n  const fallback = new Date(Date.now() + DEFAULTS.defaultTokenExpiryMillis);\n  if (!jwtToken) {\n    return fallback;\n  }\n\n  const [_header, rawPayload, _signature] = jwtToken.split('.');\n  const payload = JSON.parse(window.atob(rawPayload));\n  if (typeof payload.exp !== 'number') {\n    return fallback;\n  }\n\n  return new Date(payload.exp * 1000 - DEFAULTS.tokenExpiryMarginMillis);\n}\n\ntype ProxiedSignInIdentityOptions = {\n  provider: string;\n  discoveryApi: typeof discoveryApiRef.T;\n  headers?: HeadersInit | (() => HeadersInit) | (() => Promise<HeadersInit>);\n};\n\ntype State =\n  | {\n      type: 'empty';\n    }\n  | {\n      type: 'fetching';\n      promise: Promise<ProxiedSession>;\n      previous: ProxiedSession | undefined;\n    }\n  | {\n      type: 'active';\n      session: ProxiedSession;\n      expiresAt: Date;\n    }\n  | {\n      type: 'failed';\n      error: Error;\n    };\n\n/**\n * An identity API that gets the user auth information solely based on a\n * provider's `/refresh` endpoint.\n */\nexport class ProxiedSignInIdentity implements IdentityApi {\n  private readonly options: ProxiedSignInIdentityOptions;\n  private readonly abortController: AbortController;\n  private state: State;\n\n  constructor(options: ProxiedSignInIdentityOptions) {\n    this.options = options;\n    this.abortController = new AbortController();\n    this.state = { type: 'empty' };\n  }\n\n  async start() {\n    // Try to make a first fetch, bubble up any errors to the caller\n    await this.getSessionAsync();\n  }\n\n  /** {@inheritdoc @backstage/core-plugin-api#IdentityApi.getUserId} */\n  getUserId(): string {\n    const { backstageIdentity } = this.getSessionSync();\n    const ref = backstageIdentity.identity.userEntityRef;\n    const match = /^([^:/]+:)?([^:/]+\\/)?([^:/]+)$/.exec(ref);\n    if (!match) {\n      throw new TypeError(`Invalid user entity reference \"${ref}\"`);\n    }\n\n    return match[3];\n  }\n\n  /** {@inheritdoc @backstage/core-plugin-api#IdentityApi.getIdToken} */\n  async getIdToken(): Promise<string | undefined> {\n    const session = await this.getSessionAsync();\n    return session.backstageIdentity.token;\n  }\n\n  /** {@inheritdoc @backstage/core-plugin-api#IdentityApi.getProfile} */\n  getProfile(): ProfileInfo {\n    const session = this.getSessionSync();\n    return session.profile;\n  }\n\n  /** {@inheritdoc @backstage/core-plugin-api#IdentityApi.getProfileInfo} */\n  async getProfileInfo(): Promise<ProfileInfo> {\n    const session = await this.getSessionAsync();\n    return session.profile;\n  }\n\n  /** {@inheritdoc @backstage/core-plugin-api#IdentityApi.getBackstageIdentity} */\n  async getBackstageIdentity(): Promise<BackstageUserIdentity> {\n    const session = await this.getSessionAsync();\n    return session.backstageIdentity.identity;\n  }\n\n  /** {@inheritdoc @backstage/core-plugin-api#IdentityApi.getCredentials} */\n  async getCredentials(): Promise<{ token?: string | undefined }> {\n    const session = await this.getSessionAsync();\n    return {\n      token: session.backstageIdentity.token,\n    };\n  }\n\n  /** {@inheritdoc @backstage/core-plugin-api#IdentityApi.signOut} */\n  async signOut(): Promise<void> {\n    this.abortController.abort();\n  }\n\n  getSessionSync(): ProxiedSession {\n    if (this.state.type === 'active') {\n      return this.state.session;\n    } else if (this.state.type === 'fetching' && this.state.previous) {\n      return this.state.previous;\n    }\n    throw new Error('No session available. Try reloading your browser page.');\n  }\n\n  async getSessionAsync(): Promise<ProxiedSession> {\n    if (this.state.type === 'fetching') {\n      return this.state.promise;\n    } else if (\n      this.state.type === 'active' &&\n      new Date() < this.state.expiresAt\n    ) {\n      return this.state.session;\n    }\n\n    const previous =\n      this.state.type === 'active' ? this.state.session : undefined;\n\n    const promise = this.fetchSession().then(\n      session => {\n        this.state = {\n          type: 'active',\n          session,\n          expiresAt: tokenToExpiry(session.backstageIdentity.token),\n        };\n        return session;\n      },\n      error => {\n        this.state = {\n          type: 'failed',\n          error,\n        };\n        throw error;\n      },\n    );\n\n    this.state = {\n      type: 'fetching',\n      promise,\n      previous,\n    };\n\n    return promise;\n  }\n\n  async fetchSession(): Promise<ProxiedSession> {\n    const baseUrl = await this.options.discoveryApi.getBaseUrl('auth');\n\n    const headers =\n      typeof this.options.headers === 'function'\n        ? await this.options.headers()\n        : this.options.headers;\n    const mergedHeaders = new Headers(headers);\n    mergedHeaders.set('X-Requested-With', 'XMLHttpRequest');\n\n    // Note that we do not use the fetchApi here, since this all happens before\n    // sign-in completes so there can be no automatic token injection and\n    // similar.\n    const response = await fetch(\n      `${baseUrl}/${this.options.provider}/refresh`,\n      {\n        signal: this.abortController.signal,\n        headers: mergedHeaders,\n        credentials: 'include',\n      },\n    );\n\n    if (!response.ok) {\n      throw await ResponseError.fromResponse(response);\n    }\n\n    return proxiedSessionSchema.parse(await response.json());\n  }\n}\n"],"names":[],"mappings":"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"}