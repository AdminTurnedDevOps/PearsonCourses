{"version":3,"file":"Bar.esm.js","sources":["../../../src/layout/Sidebar/Bar.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport classnames from 'classnames';\nimport React, { useContext, useRef, useState } from 'react';\n\nimport {\n  makeSidebarConfig,\n  makeSidebarSubmenuConfig,\n  SidebarConfig,\n  SidebarConfigContext,\n  SidebarOptions,\n  SubmenuConfig,\n  SubmenuOptions,\n} from './config';\nimport { MobileSidebar } from './MobileSidebar';\nimport { useContent } from './Page';\nimport { SidebarOpenStateProvider } from './SidebarOpenStateContext';\nimport { useSidebarPinState } from './SidebarPinStateContext';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\nimport { coreComponentsTranslationRef } from '../../translation';\n\n/** @public */\nexport type SidebarClassKey = 'drawer' | 'drawerOpen';\nconst useStyles = makeStyles<Theme, { sidebarConfig: SidebarConfig }>(\n  theme => ({\n    drawer: {\n      display: 'flex',\n      flexFlow: 'column nowrap',\n      alignItems: 'flex-start',\n      position: 'fixed',\n      left: 0,\n      top: 0,\n      bottom: 0,\n      zIndex: theme.zIndex.appBar,\n      background: theme.palette.navigation.background,\n      overflowX: 'hidden',\n      msOverflowStyle: 'none',\n      scrollbarWidth: 'none',\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.shortest,\n      }),\n      '& > *': {\n        flexShrink: 0,\n      },\n      '&::-webkit-scrollbar': {\n        display: 'none',\n      },\n      '@media print': {\n        display: 'none',\n      },\n    },\n    drawerWidth: props => ({\n      width: props.sidebarConfig.drawerWidthClosed,\n    }),\n    drawerOpen: props => ({\n      width: props.sidebarConfig.drawerWidthOpen,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.shorter,\n      }),\n    }),\n    visuallyHidden: {\n      top: 0,\n      position: 'absolute',\n      zIndex: 1000,\n      transform: 'translateY(-200%)',\n      '&:focus': {\n        transform: 'translateY(5px)',\n      },\n    },\n  }),\n  { name: 'BackstageSidebar' },\n);\n\nenum State {\n  Closed,\n  Idle,\n  Open,\n}\n\n/** @public */\nexport type SidebarProps = {\n  openDelayMs?: number;\n  closeDelayMs?: number;\n  sidebarOptions?: SidebarOptions;\n  submenuOptions?: SubmenuOptions;\n  disableExpandOnHover?: boolean;\n  children?: React.ReactNode;\n};\n\nexport type DesktopSidebarProps = {\n  openDelayMs?: number;\n  closeDelayMs?: number;\n  disableExpandOnHover?: boolean;\n  children?: React.ReactNode;\n};\n\n/**\n * Places the Sidebar & wraps the children providing context weather the `Sidebar` is open or not.\n *\n * Handles & delays hover events for expanding the `Sidebar`\n *\n * @param props `disableExpandOnHover` disables the default hover behaviour;\n * `openDelayMs` & `closeDelayMs` set delay until sidebar will open/close on hover\n * @returns\n * @internal\n */\nconst DesktopSidebar = (props: DesktopSidebarProps) => {\n  const { sidebarConfig } = useContext(SidebarConfigContext);\n  const {\n    openDelayMs = sidebarConfig.defaultOpenDelayMs,\n    closeDelayMs = sidebarConfig.defaultCloseDelayMs,\n    disableExpandOnHover,\n    children,\n  } = props;\n\n  const classes = useStyles({ sidebarConfig });\n  const isSmallScreen = useMediaQuery<Theme>(\n    theme => theme.breakpoints.down('md'),\n    { noSsr: true },\n  );\n  const [state, setState] = useState(State.Closed);\n  const hoverTimerRef = useRef<number>();\n  const { isPinned, toggleSidebarPinState } = useSidebarPinState();\n\n  const handleOpen = () => {\n    if (isPinned || disableExpandOnHover) {\n      return;\n    }\n    if (hoverTimerRef.current) {\n      clearTimeout(hoverTimerRef.current);\n      hoverTimerRef.current = undefined;\n    }\n    if (state !== State.Open && !isSmallScreen) {\n      hoverTimerRef.current = window.setTimeout(() => {\n        hoverTimerRef.current = undefined;\n        setState(State.Open);\n      }, openDelayMs);\n\n      setState(State.Idle);\n    }\n  };\n\n  const handleClose = () => {\n    if (isPinned || disableExpandOnHover) {\n      return;\n    }\n    if (hoverTimerRef.current) {\n      clearTimeout(hoverTimerRef.current);\n      hoverTimerRef.current = undefined;\n    }\n    if (state === State.Idle) {\n      setState(State.Closed);\n    } else if (state === State.Open) {\n      hoverTimerRef.current = window.setTimeout(() => {\n        hoverTimerRef.current = undefined;\n        setState(State.Closed);\n      }, closeDelayMs);\n    }\n  };\n\n  const isOpen = (state === State.Open && !isSmallScreen) || isPinned;\n\n  /**\n   * Close/Open Sidebar directly without delays. Also toggles `SidebarPinState` to avoid hidden content behind Sidebar.\n   */\n  const setOpen = (open: boolean) => {\n    if (open) {\n      setState(State.Open);\n      toggleSidebarPinState();\n    } else {\n      setState(State.Closed);\n      toggleSidebarPinState();\n    }\n  };\n\n  return (\n    <nav style={{}} aria-label=\"sidebar nav\">\n      <A11ySkipSidebar />\n      <SidebarOpenStateProvider value={{ isOpen, setOpen }}>\n        <Box\n          className={classes.root}\n          data-testid=\"sidebar-root\"\n          onMouseEnter={disableExpandOnHover ? () => {} : handleOpen}\n          onFocus={disableExpandOnHover ? () => {} : handleOpen}\n          onMouseLeave={disableExpandOnHover ? () => {} : handleClose}\n          onBlur={disableExpandOnHover ? () => {} : handleClose}\n        >\n          <Box\n            className={classnames(classes.drawer, classes.drawerWidth, {\n              [classes.drawerOpen]: isOpen,\n            })}\n          >\n            {children}\n          </Box>\n        </Box>\n      </SidebarOpenStateProvider>\n    </nav>\n  );\n};\n\n/**\n * Passing children into the desktop or mobile sidebar depending on the context\n *\n * @public\n */\nexport const Sidebar = (props: SidebarProps) => {\n  const sidebarConfig: SidebarConfig = makeSidebarConfig(\n    props.sidebarOptions ?? {},\n  );\n  const submenuConfig: SubmenuConfig = makeSidebarSubmenuConfig(\n    props.submenuOptions ?? {},\n  );\n  const { children, disableExpandOnHover, openDelayMs, closeDelayMs } = props;\n  const { isMobile } = useSidebarPinState();\n\n  return isMobile ? (\n    <MobileSidebar>{children}</MobileSidebar>\n  ) : (\n    <SidebarConfigContext.Provider value={{ sidebarConfig, submenuConfig }}>\n      <DesktopSidebar\n        openDelayMs={openDelayMs}\n        closeDelayMs={closeDelayMs}\n        disableExpandOnHover={disableExpandOnHover}\n      >\n        {children}\n      </DesktopSidebar>\n    </SidebarConfigContext.Provider>\n  );\n};\n\nfunction A11ySkipSidebar() {\n  const { sidebarConfig } = useContext(SidebarConfigContext);\n  const { focusContent, contentRef } = useContent();\n  const classes = useStyles({ sidebarConfig });\n  const { t } = useTranslationRef(coreComponentsTranslationRef);\n\n  if (!contentRef?.current) {\n    return null;\n  }\n  return (\n    <Button\n      onClick={focusContent}\n      variant=\"contained\"\n      className={classnames(classes.visuallyHidden)}\n    >\n      {t('skipToContent')}\n    </Button>\n  );\n}\n"],"names":["React","classnames"],"mappings":"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"}