{"version":3,"file":"TabbedCard.esm.js","sources":["../../../src/layout/TabbedCard/TabbedCard.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Tab, { TabProps } from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport React, {\n  PropsWithChildren,\n  ReactElement,\n  ReactNode,\n  useState,\n} from 'react';\nimport { BottomLink, BottomLinkProps } from '../BottomLink';\nimport { ErrorBoundary, ErrorBoundaryProps } from '../ErrorBoundary';\n\nexport type TabbedCardClassKey = 'root' | 'indicator';\n\nconst useTabsStyles = makeStyles(\n  theme => ({\n    root: {\n      padding: theme.spacing(0, 2, 0, 2.5),\n      minHeight: theme.spacing(3),\n    },\n    indicator: {\n      backgroundColor: theme.palette.info.main,\n      height: theme.spacing(0.3),\n    },\n  }),\n  { name: 'BackstageTabbedCard' },\n);\n\n/** @public */\nexport type BoldHeaderClassKey = 'root' | 'title' | 'subheader';\n\nconst BoldHeader = withStyles(\n  theme => ({\n    root: { padding: theme.spacing(2, 2, 2, 2.5), display: 'inline-block' },\n    title: { fontWeight: 700 },\n    subheader: { paddingTop: theme.spacing(1) },\n  }),\n  { name: 'BackstageTabbedCardBoldHeader' },\n)(CardHeader);\n\ntype Props = {\n  /** @deprecated Use errorBoundaryProps instead */\n  slackChannel?: string;\n  errorBoundaryProps?: ErrorBoundaryProps;\n  children?: ReactElement<TabProps>[];\n  onChange?: (event: React.ChangeEvent<{}>, value: number | string) => void;\n  title?: string;\n  value?: number | string;\n  deepLink?: BottomLinkProps;\n};\n\nexport function TabbedCard(props: PropsWithChildren<Props>) {\n  const {\n    slackChannel,\n    errorBoundaryProps,\n    children,\n    title,\n    deepLink,\n    value,\n    onChange,\n  } = props;\n  const tabsClasses = useTabsStyles();\n  const [selectedIndex, selectIndex] = useState(0);\n\n  const handleChange = onChange\n    ? onChange\n    : (_ev: unknown, newSelectedIndex: number) => selectIndex(newSelectedIndex);\n\n  let selectedTabContent: ReactNode;\n  if (!value) {\n    React.Children.map(children, (child, index) => {\n      if (React.isValidElement(child) && index === selectedIndex) {\n        selectedTabContent = child?.props.children;\n      }\n    });\n  } else {\n    React.Children.map(children, child => {\n      if (\n        React.isValidElement<{ children?: ReactNode; value?: unknown }>(\n          child,\n        ) &&\n        child?.props.value === value\n      ) {\n        selectedTabContent = child?.props.children;\n      }\n    });\n  }\n\n  const errProps: ErrorBoundaryProps =\n    errorBoundaryProps || (slackChannel ? { slackChannel } : {});\n\n  return (\n    <Card>\n      <ErrorBoundary {...errProps}>\n        {title && <BoldHeader title={title} />}\n        <Tabs\n          classes={tabsClasses}\n          value={value || selectedIndex}\n          onChange={handleChange}\n        >\n          {children}\n        </Tabs>\n        <Divider />\n        <CardContent>{selectedTabContent}</CardContent>\n        {deepLink && <BottomLink {...deepLink} />}\n      </ErrorBoundary>\n    </Card>\n  );\n}\n\n/** @public */\nexport type CardTabClassKey = 'root' | 'selected';\n\nconst useCardTabStyles = makeStyles(\n  theme => ({\n    root: {\n      minWidth: theme.spacing(6),\n      minHeight: theme.spacing(3),\n      margin: theme.spacing(0, 2, 0, 0),\n      padding: theme.spacing(0.5, 0, 0.5, 0),\n      textTransform: 'none',\n      '&:hover': {\n        opacity: 1,\n        backgroundColor: 'transparent',\n        color: theme.palette.text.primary,\n      },\n    },\n    selected: {\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  }),\n  { name: 'BackstageCardTab' },\n);\n\ntype CardTabProps = TabProps & {\n  children: ReactNode;\n};\n\n/**\n * Card tab component used in {@link TabbedCard}\n *\n * @public\n *\n */\nexport function CardTab(props: PropsWithChildren<CardTabProps>) {\n  const { children, ...restProps } = props;\n  const classes = useCardTabStyles();\n\n  return <Tab disableRipple classes={classes} {...restProps} />;\n}\n"],"names":["React","Tab"],"mappings":"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"}