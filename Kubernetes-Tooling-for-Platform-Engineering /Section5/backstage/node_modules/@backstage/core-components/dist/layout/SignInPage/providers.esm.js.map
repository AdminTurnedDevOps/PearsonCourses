{"version":3,"file":"providers.esm.js","sources":["../../../src/layout/SignInPage/providers.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useLayoutEffect, useState, useMemo, useCallback } from 'react';\nimport {\n  SignInPageProps,\n  useApi,\n  useApiHolder,\n  errorApiRef,\n  IdentityApi,\n} from '@backstage/core-plugin-api';\nimport {\n  IdentityProviders,\n  SignInProvider,\n  SignInProviderConfig,\n} from './types';\nimport { commonProvider } from './commonProvider';\nimport { guestProvider } from './guestProvider';\nimport { customProvider } from './customProvider';\nimport { IdentityApiSignOutProxy } from './IdentityApiSignOutProxy';\nimport { useSearchParams } from 'react-router-dom';\nimport { useMountEffect } from '@react-hookz/web';\nimport { ForwardedError } from '@backstage/errors';\nimport { coreComponentsTranslationRef } from '../../translation';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\n\nconst PROVIDER_STORAGE_KEY = '@backstage/core:SignInPage:provider';\n\nexport type SignInProviderType = {\n  [key: string]: {\n    components: SignInProvider;\n    id: string;\n    config?: SignInProviderConfig;\n  };\n};\n\nconst signInProviders: { [key: string]: SignInProvider } = {\n  guest: guestProvider,\n  custom: customProvider,\n  common: commonProvider,\n};\n\nfunction validateIDs(id: string, providers: SignInProviderType): void {\n  if (id in providers)\n    throw new Error(\n      `\"${id}\" ID is duplicated. IDs of identity providers have to be unique.`,\n    );\n}\n\nexport function getSignInProviders(\n  identityProviders: IdentityProviders,\n): SignInProviderType {\n  const providers = identityProviders.reduce(\n    (acc: SignInProviderType, config) => {\n      if (typeof config === 'string') {\n        validateIDs(config, acc);\n        acc[config] = { components: signInProviders[config], id: config };\n\n        return acc;\n      }\n\n      const { id } = config as SignInProviderConfig;\n      validateIDs(id, acc);\n\n      acc[id] = { components: signInProviders.common, id, config };\n\n      return acc;\n    },\n    {},\n  );\n\n  return providers;\n}\n\nexport const useSignInProviders = (\n  providers: SignInProviderType,\n  onSignInSuccess: SignInPageProps['onSignInSuccess'],\n) => {\n  const errorApi = useApi(errorApiRef);\n  const apiHolder = useApiHolder();\n  const [loading, setLoading] = useState(true);\n\n  const { t } = useTranslationRef(coreComponentsTranslationRef);\n  // User was redirected back to sign in page with error from auth redirect flow\n  const [searchParams, _setSearchParams] = useSearchParams();\n\n  useMountEffect(() => {\n    const errorParam = searchParams.get('error');\n    if (errorParam) {\n      errorApi.post(\n        new ForwardedError(t('signIn.loginFailed'), new Error(errorParam)),\n      );\n    }\n  });\n\n  // This decorates the result with sign out logic from this hook\n  const handleWrappedResult = useCallback(\n    (identityApi: IdentityApi) => {\n      onSignInSuccess(\n        IdentityApiSignOutProxy.from({\n          identityApi,\n          signOut: async () => {\n            localStorage.removeItem(PROVIDER_STORAGE_KEY);\n            await identityApi.signOut?.();\n          },\n        }),\n      );\n    },\n    [onSignInSuccess],\n  );\n\n  // In this effect we check if the user has already selected an existing login\n  // provider, and in that case try to load an existing session for the provider.\n  useLayoutEffect(() => {\n    if (!loading) {\n      return undefined;\n    }\n\n    // We can't use storageApi here, as it might have a dependency on the IdentityApi\n    const selectedProviderId = localStorage.getItem(\n      PROVIDER_STORAGE_KEY,\n    ) as string;\n\n    // No provider selected, let the user pick one\n    if (selectedProviderId === null) {\n      setLoading(false);\n      return undefined;\n    }\n\n    const provider = providers[selectedProviderId];\n    if (!provider) {\n      setLoading(false);\n      return undefined;\n    }\n\n    let didCancel = false;\n\n    provider.components\n      .loader(apiHolder, provider.config?.apiRef!)\n      .then(result => {\n        if (didCancel) {\n          localStorage.removeItem(PROVIDER_STORAGE_KEY);\n          return;\n        }\n        if (result) {\n          handleWrappedResult(result);\n        } else {\n          setLoading(false);\n        }\n      })\n      .catch(error => {\n        localStorage.removeItem(PROVIDER_STORAGE_KEY);\n        if (didCancel) {\n          return;\n        }\n        errorApi.post(error);\n        setLoading(false);\n      });\n\n    return () => {\n      didCancel = true;\n    };\n  }, [\n    loading,\n    errorApi,\n    onSignInSuccess,\n    apiHolder,\n    providers,\n    handleWrappedResult,\n  ]);\n\n  // This renders all available sign-in providers\n  const elements = useMemo(\n    () =>\n      Object.keys(providers).map(key => {\n        const provider = providers[key];\n\n        const { Component } = provider.components;\n\n        const handleSignInSuccess = (result: IdentityApi) => {\n          handleWrappedResult(result);\n        };\n\n        const handleSignInStarted = () => {\n          localStorage.setItem(\n            PROVIDER_STORAGE_KEY,\n            provider?.config?.id || provider.id,\n          );\n        };\n\n        const handleSignInFailure = () => {\n          localStorage.removeItem(PROVIDER_STORAGE_KEY);\n        };\n\n        return (\n          <Component\n            key={provider.id}\n            config={provider.config!}\n            onSignInStarted={handleSignInStarted}\n            onSignInSuccess={handleSignInSuccess}\n            onSignInFailure={handleSignInFailure}\n          />\n        );\n      }),\n    [providers, handleWrappedResult],\n  );\n\n  return [loading, elements];\n};\n"],"names":["React"],"mappings":"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"}