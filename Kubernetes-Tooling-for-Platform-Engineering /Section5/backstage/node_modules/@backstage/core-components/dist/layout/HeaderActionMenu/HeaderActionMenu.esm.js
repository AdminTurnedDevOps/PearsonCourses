import React__default, { Fragment } from 'react';
import IconButton from '@material-ui/core/IconButton';
import List from '@material-ui/core/List';
import ListItem from '@material-ui/core/ListItem';
import ListItemIcon from '@material-ui/core/ListItemIcon';
import ListItemText from '@material-ui/core/ListItemText';
import Popover from '@material-ui/core/Popover';
import MoreVert from '@material-ui/icons/MoreVert';
import { useTheme } from '@material-ui/core/styles';

const ActionItem = ({
  label,
  secondaryLabel,
  icon,
  disabled = false,
  onClick
}) => {
  return /* @__PURE__ */ React__default.createElement(Fragment, null, /* @__PURE__ */ React__default.createElement(
    ListItem,
    {
      "data-testid": "header-action-item",
      disabled,
      button: true,
      onClick: (event) => {
        if (onClick) {
          onClick(event);
        }
      }
    },
    icon && /* @__PURE__ */ React__default.createElement(ListItemIcon, null, icon),
    /* @__PURE__ */ React__default.createElement(ListItemText, { primary: label, secondary: secondaryLabel })
  ));
};
function HeaderActionMenu(props) {
  const {
    palette: {
      common: { white }
    }
  } = useTheme();
  const { actionItems } = props;
  const [open, setOpen] = React__default.useState(false);
  const anchorElRef = React__default.useRef(null);
  return /* @__PURE__ */ React__default.createElement(Fragment, null, /* @__PURE__ */ React__default.createElement(
    IconButton,
    {
      onClick: () => setOpen(true),
      "data-testid": "header-action-menu",
      ref: anchorElRef,
      style: {
        color: white,
        height: 56,
        width: 56,
        marginRight: -4,
        padding: 0
      }
    },
    /* @__PURE__ */ React__default.createElement(MoreVert, null)
  ), /* @__PURE__ */ React__default.createElement(
    Popover,
    {
      open,
      anchorEl: anchorElRef.current,
      anchorOrigin: { horizontal: "right", vertical: "bottom" },
      transformOrigin: { horizontal: "right", vertical: "top" },
      onClose: () => setOpen(false)
    },
    /* @__PURE__ */ React__default.createElement(List, null, actionItems.map((actionItem, i) => {
      return /* @__PURE__ */ React__default.createElement(ActionItem, { key: `header-action-menu-${i}`, ...actionItem });
    }))
  ));
}

export { HeaderActionMenu };
//# sourceMappingURL=HeaderActionMenu.esm.js.map
