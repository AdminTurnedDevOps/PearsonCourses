{"version":3,"file":"MobileSidebar.esm.js","sources":["../../../src/layout/Sidebar/MobileSidebar.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useElementFilter } from '@backstage/core-plugin-api';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Theme, makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { orderBy } from 'lodash';\nimport React, { useEffect, useState, useContext, ReactNode } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { SidebarOpenStateProvider } from './SidebarOpenStateContext';\nimport { SidebarGroup } from './SidebarGroup';\nimport { SidebarConfigContext, SidebarConfig } from './config';\nimport { MobileSidebarContext } from './MobileSidebarContext';\n\n/**\n * Props of MobileSidebar\n *\n * @public\n */\nexport type MobileSidebarProps = {\n  children?: React.ReactNode;\n};\n\n/**\n * @internal\n */\ntype OverlayMenuProps = {\n  label?: string;\n  onClose: () => void;\n  open: boolean;\n  children?: React.ReactNode;\n};\n\nconst useStyles = makeStyles<Theme, { sidebarConfig: SidebarConfig }>(\n  theme => ({\n    root: {\n      position: 'fixed',\n      backgroundColor: theme.palette.navigation.background,\n      color: theme.palette.navigation.color,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      zIndex: theme.zIndex.snackbar,\n      // SidebarDivider color\n      borderTop: '1px solid #383838',\n      '@media print': {\n        display: 'none',\n      },\n    },\n\n    overlay: props => ({\n      background: theme.palette.navigation.background,\n      width: '100%',\n      bottom: `${props.sidebarConfig.mobileSidebarHeight}px`,\n      height: `calc(100% - ${props.sidebarConfig.mobileSidebarHeight}px)`,\n      flex: '0 1 auto',\n      overflow: 'auto',\n    }),\n\n    overlayHeader: {\n      display: 'flex',\n      color: theme.palette.navigation.color,\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      padding: theme.spacing(2, 3),\n    },\n\n    overlayHeaderClose: {\n      color: theme.palette.navigation.color,\n    },\n\n    marginMobileSidebar: props => ({\n      marginBottom: `${props.sidebarConfig.mobileSidebarHeight}px`,\n    }),\n  }),\n);\n\nconst sortSidebarGroupsForPriority = (children: React.ReactElement[]) =>\n  orderBy(\n    children,\n    ({ props: { priority } }) => (Number.isInteger(priority) ? priority : -1),\n    'desc',\n  );\n\nconst sidebarGroupType = React.createElement(SidebarGroup).type;\n\nconst OverlayMenu = ({\n  children,\n  label = 'Menu',\n  open,\n  onClose,\n}: OverlayMenuProps) => {\n  const { sidebarConfig } = useContext(SidebarConfigContext);\n  const classes = useStyles({ sidebarConfig });\n\n  return (\n    <Drawer\n      anchor=\"bottom\"\n      open={open}\n      onClose={onClose}\n      ModalProps={{\n        BackdropProps: { classes: { root: classes.marginMobileSidebar } },\n      }}\n      classes={{\n        root: classes.marginMobileSidebar,\n        paperAnchorBottom: classes.overlay,\n      }}\n    >\n      <Box className={classes.overlayHeader}>\n        <Typography variant=\"h3\">{label}</Typography>\n        <IconButton\n          onClick={onClose}\n          classes={{ root: classes.overlayHeaderClose }}\n        >\n          <CloseIcon />\n        </IconButton>\n      </Box>\n      <Box component=\"nav\">{children}</Box>\n    </Drawer>\n  );\n};\n\n/**\n * A navigation component for mobile screens, which sticks to the bottom.\n *\n * @remarks\n * It alternates the normal sidebar by grouping the `SidebarItems` based on provided `SidebarGroup`s\n * either rendering them as a link or an overlay menu.\n * If no `SidebarGroup`s are provided the sidebar content is wrapped in an default overlay menu.\n *\n * @public\n */\nexport const MobileSidebar = (props: MobileSidebarProps) => {\n  const { sidebarConfig } = useContext(SidebarConfigContext);\n  const { children } = props;\n  const classes = useStyles({ sidebarConfig });\n  const location = useLocation();\n  const [selectedMenuItemIndex, setSelectedMenuItemIndex] =\n    useState<number>(-1);\n\n  useEffect(() => {\n    setSelectedMenuItemIndex(-1);\n  }, [location.pathname]);\n\n  // Filter children for SidebarGroups\n  //\n  // Directly comparing child.type with SidebarSubmenu will not work with in\n  // combination with react-hot-loader\n  //\n  // https://github.com/gaearon/react-hot-loader/issues/304#issuecomment-456569720\n  let sidebarGroups = useElementFilter(children, elements =>\n    elements.getElements().filter(child => child.type === sidebarGroupType),\n  );\n\n  if (!children) {\n    // If Sidebar has no children the MobileSidebar won't be rendered\n    return null;\n  } else if (!sidebarGroups.length) {\n    // If Sidebar has no SidebarGroup as a children a default\n    // SidebarGroup with the complete Sidebar content will be created\n    sidebarGroups.push(\n      <SidebarGroup key=\"default_menu\" icon={<MenuIcon />}>\n        {children}\n      </SidebarGroup>,\n    );\n  } else {\n    // Sort SidebarGroups for the given Priority\n    sidebarGroups = sortSidebarGroupsForPriority(sidebarGroups);\n  }\n\n  const shouldShowGroupChildren =\n    selectedMenuItemIndex >= 0 &&\n    !sidebarGroups[selectedMenuItemIndex].props.to;\n\n  return (\n    <SidebarOpenStateProvider value={{ isOpen: true, setOpen: () => {} }}>\n      <MobileSidebarContext.Provider\n        value={{ selectedMenuItemIndex, setSelectedMenuItemIndex }}\n      >\n        <OverlayMenu\n          label={\n            sidebarGroups[selectedMenuItemIndex] &&\n            (sidebarGroups[selectedMenuItemIndex]!.props.label as string)\n          }\n          open={shouldShowGroupChildren}\n          onClose={() => setSelectedMenuItemIndex(-1)}\n        >\n          {sidebarGroups[selectedMenuItemIndex] &&\n            (sidebarGroups[selectedMenuItemIndex].props.children as ReactNode)}\n        </OverlayMenu>\n        <BottomNavigation\n          className={classes.root}\n          data-testid=\"mobile-sidebar-root\"\n          component=\"nav\"\n        >\n          {sidebarGroups}\n        </BottomNavigation>\n      </MobileSidebarContext.Provider>\n    </SidebarOpenStateProvider>\n  );\n};\n"],"names":["React"],"mappings":"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"}