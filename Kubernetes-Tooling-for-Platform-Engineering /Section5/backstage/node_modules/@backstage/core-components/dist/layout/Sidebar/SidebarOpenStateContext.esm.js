import React__default, { createContext, useContext } from 'react';
import { createVersionedContext, createVersionedValueMap } from '@backstage/version-bridge';

const defaultSidebarOpenStateContext = {
  isOpen: false,
  setOpen: () => {
  }
};
const LegacySidebarContext = createContext(
  defaultSidebarOpenStateContext
);
const VersionedSidebarContext = createVersionedContext("sidebar-open-state-context");
function SidebarOpenStateProvider(props) {
  const { children, value } = props;
  return /* @__PURE__ */ React__default.createElement(LegacySidebarContext.Provider, { value }, /* @__PURE__ */ React__default.createElement(
    VersionedSidebarContext.Provider,
    {
      value: createVersionedValueMap({ 1: value })
    },
    children
  ));
}
const useSidebarOpenState = () => {
  const versionedOpenStateContext = useContext(VersionedSidebarContext);
  const legacyOpenStateContext = useContext(LegacySidebarContext);
  if (versionedOpenStateContext === void 0) {
    return legacyOpenStateContext || defaultSidebarOpenStateContext;
  }
  const openStateContext = versionedOpenStateContext.atVersion(1);
  if (openStateContext === void 0) {
    throw new Error("No context found for version 1.");
  }
  return openStateContext;
};

export { LegacySidebarContext, SidebarOpenStateProvider, useSidebarOpenState };
//# sourceMappingURL=SidebarOpenStateContext.esm.js.map
