{"version":3,"file":"UserIdentity.esm.js","sources":["../../../src/layout/SignInPage/UserIdentity.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  IdentityApi,\n  ProfileInfo,\n  ProfileInfoApi,\n  BackstageUserIdentity,\n  BackstageIdentityApi,\n  SessionApi,\n} from '@backstage/core-plugin-api';\n\nimport { GuestUserIdentity } from './GuestUserIdentity';\nimport { LegacyUserIdentity } from './LegacyUserIdentity';\n\n// TODO(Rugvip): This and the other IdentityApi implementations still implement\n//               the old removed methods. This is to allow for backwards compatibility\n//               with old plugins that still consume this API. We will leave these in\n//               place as a hidden compatibility for a couple of months.\n//               The AppIdentityProxy warns in case any of these methods are called.\n\n/**\n * An implementation of the IdentityApi that is constructed using\n * various backstage user identity representations.\n *\n * @public\n */\nexport class UserIdentity implements IdentityApi {\n  private profilePromise?: Promise<ProfileInfo>;\n  /**\n   * Creates a new IdentityApi that acts as a Guest User.\n   *\n   * @public\n   */\n  static createGuest(): IdentityApi {\n    return new GuestUserIdentity();\n  }\n\n  /**\n   * Creates a new IdentityApi using a legacy SignInResult object.\n   *\n   * @public\n   */\n  static fromLegacy(result: {\n    /**\n     * User ID that will be returned by the IdentityApi\n     */\n    userId: string;\n\n    profile: ProfileInfo;\n\n    /**\n     * Function used to retrieve an ID token for the signed in user.\n     */\n    getIdToken?: () => Promise<string>;\n\n    /**\n     * Sign out handler that will be called if the user requests to sign out.\n     */\n    signOut?: () => Promise<void>;\n  }): IdentityApi {\n    return LegacyUserIdentity.fromResult(result);\n  }\n\n  /**\n   * Creates a new IdentityApi implementation using a user identity\n   * and an auth API that will be used to request backstage tokens.\n   *\n   * @public\n   */\n  static create(options: {\n    identity: BackstageUserIdentity;\n    authApi: ProfileInfoApi & BackstageIdentityApi & SessionApi;\n    /**\n     * Passing a profile synchronously allows the deprecated `getProfile` method to be\n     * called by consumers of the {@link @backstage/core-plugin-api#IdentityApi}. If you\n     * do not have any consumers of that method then this is safe to leave out.\n     *\n     * @deprecated Only provide this if you have plugins that call the synchronous `getProfile` method, which is also deprecated.\n     */\n    profile?: ProfileInfo;\n  }): IdentityApi {\n    return new UserIdentity(options.identity, options.authApi, options.profile);\n  }\n\n  private constructor(\n    private readonly identity: BackstageUserIdentity,\n    private readonly authApi: ProfileInfoApi &\n      BackstageIdentityApi &\n      SessionApi,\n    private readonly profile?: ProfileInfo,\n  ) {}\n\n  /** {@inheritdoc @backstage/core-plugin-api#IdentityApi.getUserId} */\n  getUserId(): string {\n    const ref = this.identity.userEntityRef;\n    const match = /^([^:/]+:)?([^:/]+\\/)?([^:/]+)$/.exec(ref);\n    if (!match) {\n      throw new TypeError(`Invalid user entity reference \"${ref}\"`);\n    }\n\n    return match[3];\n  }\n\n  /** {@inheritdoc @backstage/core-plugin-api#IdentityApi.getIdToken} */\n  async getIdToken(): Promise<string | undefined> {\n    const identity = await this.authApi.getBackstageIdentity();\n    return identity!.token;\n  }\n\n  /** {@inheritdoc @backstage/core-plugin-api#IdentityApi.getProfile} */\n  getProfile(): ProfileInfo {\n    if (!this.profile) {\n      throw new Error(\n        'The identity API does not implement synchronous profile fetching, use getProfileInfo() instead',\n      );\n    }\n    return this.profile;\n  }\n\n  /** {@inheritdoc @backstage/core-plugin-api#IdentityApi.getProfileInfo} */\n  async getProfileInfo(): Promise<ProfileInfo> {\n    if (this.profilePromise) {\n      return await this.profilePromise;\n    }\n\n    try {\n      this.profilePromise = this.authApi.getProfile() as Promise<ProfileInfo>;\n      return await this.profilePromise;\n    } catch (ex) {\n      this.profilePromise = undefined;\n      throw ex;\n    }\n  }\n\n  /** {@inheritdoc @backstage/core-plugin-api#IdentityApi.getBackstageIdentity} */\n  async getBackstageIdentity(): Promise<BackstageUserIdentity> {\n    return this.identity;\n  }\n\n  /** {@inheritdoc @backstage/core-plugin-api#IdentityApi.getCredentials} */\n  async getCredentials(): Promise<{ token?: string | undefined }> {\n    const identity = await this.authApi.getBackstageIdentity();\n    return { token: identity!.token };\n  }\n\n  /** {@inheritdoc @backstage/core-plugin-api#IdentityApi.signOut} */\n  async signOut(): Promise<void> {\n    return this.authApi.signOut();\n  }\n}\n"],"names":[],"mappings":";;;AAwCO,MAAM,YAAoC,CAAA;AAAA,EA0DvC,WAAA,CACW,QACA,EAAA,OAAA,EAGA,OACjB,EAAA;AALiB,IAAA,IAAA,CAAA,QAAA,GAAA,QAAA;AACA,IAAA,IAAA,CAAA,OAAA,GAAA,OAAA;AAGA,IAAA,IAAA,CAAA,OAAA,GAAA,OAAA;AAAA;AAChB,EA/DK,cAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMR,OAAO,WAA2B,GAAA;AAChC,IAAA,OAAO,IAAI,iBAAkB,EAAA;AAAA;AAC/B;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,OAAO,WAAW,MAiBF,EAAA;AACd,IAAO,OAAA,kBAAA,CAAmB,WAAW,MAAM,CAAA;AAAA;AAC7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAO,OAAO,OAWE,EAAA;AACd,IAAA,OAAO,IAAI,YAAa,CAAA,OAAA,CAAQ,UAAU,OAAQ,CAAA,OAAA,EAAS,QAAQ,OAAO,CAAA;AAAA;AAC5E;AAAA,EAWA,SAAoB,GAAA;AAClB,IAAM,MAAA,GAAA,GAAM,KAAK,QAAS,CAAA,aAAA;AAC1B,IAAM,MAAA,KAAA,GAAQ,iCAAkC,CAAA,IAAA,CAAK,GAAG,CAAA;AACxD,IAAA,IAAI,CAAC,KAAO,EAAA;AACV,MAAA,MAAM,IAAI,SAAA,CAAU,CAAkC,+BAAA,EAAA,GAAG,CAAG,CAAA,CAAA,CAAA;AAAA;AAG9D,IAAA,OAAO,MAAM,CAAC,CAAA;AAAA;AAChB;AAAA,EAGA,MAAM,UAA0C,GAAA;AAC9C,IAAA,MAAM,QAAW,GAAA,MAAM,IAAK,CAAA,OAAA,CAAQ,oBAAqB,EAAA;AACzD,IAAA,OAAO,QAAU,CAAA,KAAA;AAAA;AACnB;AAAA,EAGA,UAA0B,GAAA;AACxB,IAAI,IAAA,CAAC,KAAK,OAAS,EAAA;AACjB,MAAA,MAAM,IAAI,KAAA;AAAA,QACR;AAAA,OACF;AAAA;AAEF,IAAA,OAAO,IAAK,CAAA,OAAA;AAAA;AACd;AAAA,EAGA,MAAM,cAAuC,GAAA;AAC3C,IAAA,IAAI,KAAK,cAAgB,EAAA;AACvB,MAAA,OAAO,MAAM,IAAK,CAAA,cAAA;AAAA;AAGpB,IAAI,IAAA;AACF,MAAK,IAAA,CAAA,cAAA,GAAiB,IAAK,CAAA,OAAA,CAAQ,UAAW,EAAA;AAC9C,MAAA,OAAO,MAAM,IAAK,CAAA,cAAA;AAAA,aACX,EAAI,EAAA;AACX,MAAA,IAAA,CAAK,cAAiB,GAAA,KAAA,CAAA;AACtB,MAAM,MAAA,EAAA;AAAA;AACR;AACF;AAAA,EAGA,MAAM,oBAAuD,GAAA;AAC3D,IAAA,OAAO,IAAK,CAAA,QAAA;AAAA;AACd;AAAA,EAGA,MAAM,cAA0D,GAAA;AAC9D,IAAA,MAAM,QAAW,GAAA,MAAM,IAAK,CAAA,OAAA,CAAQ,oBAAqB,EAAA;AACzD,IAAO,OAAA,EAAE,KAAO,EAAA,QAAA,CAAU,KAAM,EAAA;AAAA;AAClC;AAAA,EAGA,MAAM,OAAyB,GAAA;AAC7B,IAAO,OAAA,IAAA,CAAK,QAAQ,OAAQ,EAAA;AAAA;AAEhC;;;;"}