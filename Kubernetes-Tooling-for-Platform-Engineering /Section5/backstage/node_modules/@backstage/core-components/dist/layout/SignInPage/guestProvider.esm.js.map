{"version":3,"file":"guestProvider.esm.js","sources":["../../../src/layout/SignInPage/guestProvider.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { InfoCard } from '../InfoCard/InfoCard';\nimport { GridItem } from './styles';\nimport { ProviderComponent, ProviderLoader, SignInProvider } from './types';\nimport { ProxiedSignInIdentity } from '../ProxiedSignInPage/ProxiedSignInIdentity';\nimport { discoveryApiRef, useApi } from '@backstage/core-plugin-api';\nimport { GuestUserIdentity } from './GuestUserIdentity';\nimport useLocalStorage from 'react-use/esm/useLocalStorage';\nimport { ResponseError } from '@backstage/errors';\nimport { coreComponentsTranslationRef } from '../../translation';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\n\nconst getIdentity = async (identity: ProxiedSignInIdentity) => {\n  try {\n    const identityResponse = await identity.getBackstageIdentity();\n    return identityResponse;\n  } catch (error) {\n    if (\n      error.name === 'ResponseError' &&\n      (error as ResponseError).cause.name === 'NotFoundError'\n    ) {\n      return undefined;\n    }\n    throw error;\n  }\n};\n\nconst Component: ProviderComponent = ({\n  onSignInStarted,\n  onSignInSuccess,\n  onSignInFailure,\n}) => {\n  const discoveryApi = useApi(discoveryApiRef);\n  const [_, setUseLegacyGuestToken] = useLocalStorage('enableLegacyGuestToken');\n  const { t } = useTranslationRef(coreComponentsTranslationRef);\n\n  const handle = async () => {\n    onSignInStarted();\n\n    const identity = new ProxiedSignInIdentity({\n      provider: 'guest',\n      discoveryApi,\n    });\n\n    const identityResponse = await getIdentity(identity).catch(error => {\n      // eslint-disable-next-line no-console\n      console.warn(`Failed to sign in as a guest, ${error}`);\n      return undefined;\n    });\n\n    if (!identityResponse) {\n      // eslint-disable-next-line no-alert\n      const useLegacyGuestTokenResponse = confirm(\n        'Failed to sign in as a guest using the auth backend. Do you want to fallback to the legacy guest token?',\n      );\n      if (useLegacyGuestTokenResponse) {\n        setUseLegacyGuestToken(true);\n        onSignInSuccess(new GuestUserIdentity());\n        return;\n      }\n      onSignInFailure();\n      throw new Error(\n        `You cannot sign in as a guest, you must either enable the legacy guest token or configure the auth backend to support guest sign in.`,\n      );\n    }\n\n    onSignInSuccess(identity);\n  };\n\n  return (\n    <GridItem>\n      <InfoCard\n        title=\"Guest\"\n        variant=\"fullHeight\"\n        actions={\n          <Button color=\"primary\" variant=\"outlined\" onClick={handle}>\n            {t('signIn.guestProvider.enter')}\n          </Button>\n        }\n      >\n        <Typography variant=\"body1\" style={{ whiteSpace: 'pre-line' }}>\n          {t('signIn.guestProvider.subtitle')}\n        </Typography>\n      </InfoCard>\n    </GridItem>\n  );\n};\n\nconst loader: ProviderLoader = async apis => {\n  const useLegacyGuestToken =\n    localStorage.getItem('enableLegacyGuestToken') === 'true';\n\n  const identity = new ProxiedSignInIdentity({\n    provider: 'guest',\n    discoveryApi: apis.get(discoveryApiRef)!,\n  });\n  const identityResponse = await getIdentity(identity).catch(error => {\n    // eslint-disable-next-line no-console\n    console.warn(`Failed to sign in as a guest, ${error}`);\n    return undefined;\n  });\n\n  if (!identityResponse && !useLegacyGuestToken) {\n    return undefined;\n  } else if (identityResponse && useLegacyGuestToken) {\n    // eslint-disable-next-line no-alert\n    const switchToNewGuestToken = confirm(\n      'You are currently using the legacy guest token, but you have the new guest backend module installed. Do you want to use the new module?',\n    );\n    if (switchToNewGuestToken) {\n      localStorage.removeItem('enableLegacyGuestToken');\n    } else {\n      return new GuestUserIdentity();\n    }\n  } else if (useLegacyGuestToken) {\n    return new GuestUserIdentity();\n  }\n\n  return identity;\n};\n\nexport const guestProvider: SignInProvider = { Component, loader };\n"],"names":["React"],"mappings":"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"}