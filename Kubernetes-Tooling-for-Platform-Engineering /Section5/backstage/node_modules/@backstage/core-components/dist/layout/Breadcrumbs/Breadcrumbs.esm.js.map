{"version":3,"file":"Breadcrumbs.esm.js","sources":["../../../src/layout/Breadcrumbs/Breadcrumbs.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Box from '@material-ui/core/Box';\nimport MaterialBreadcrumbs from '@material-ui/core/Breadcrumbs';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Popover from '@material-ui/core/Popover';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport React, { ComponentProps, Fragment } from 'react';\n\ntype Props = ComponentProps<typeof MaterialBreadcrumbs>;\n\n/** @public */\nexport type BreadcrumbsClickableTextClassKey = 'root';\n\nconst ClickableText = withStyles(\n  {\n    root: {\n      textDecoration: 'underline',\n      cursor: 'pointer',\n    },\n  },\n  { name: 'BackstageBreadcrumbsClickableText' },\n)(Typography);\n\n/** @public */\nexport type BreadcrumbsStyledBoxClassKey = 'root';\n\nconst StyledBox = withStyles(\n  {\n    root: {\n      textDecoration: 'underline',\n      color: 'inherit',\n    },\n  },\n  { name: 'BackstageBreadcrumbsStyledBox' },\n)(Box);\n\n/** @public */\nexport type BreadcrumbsCurrentPageClassKey = 'root';\n\nconst BreadcrumbsCurrentPage = withStyles(\n  {\n    root: {\n      fontStyle: 'italic',\n    },\n  },\n  { name: 'BreadcrumbsCurrentPage' },\n)(Box);\n\n/**\n * Breadcrumbs component to show navigation hierarchical structure\n *\n * @public\n *\n */\nexport function Breadcrumbs(props: Props) {\n  const { children, ...restProps } = props;\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\n    null,\n  );\n\n  const childrenArray = React.Children.toArray(children);\n\n  const [firstPage, secondPage, ...expandablePages] = childrenArray;\n  const currentPage = expandablePages.length\n    ? expandablePages.pop()\n    : childrenArray[childrenArray.length - 1];\n  const hasHiddenBreadcrumbs = childrenArray.length > 3;\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  return (\n    <Fragment>\n      <MaterialBreadcrumbs aria-label=\"breadcrumb\" {...restProps}>\n        {childrenArray.length > 1 && <StyledBox clone>{firstPage}</StyledBox>}\n        {childrenArray.length > 2 && <StyledBox clone>{secondPage}</StyledBox>}\n        {hasHiddenBreadcrumbs && (\n          <ClickableText onClick={handleClick}>...</ClickableText>\n        )}\n        <BreadcrumbsCurrentPage>{currentPage}</BreadcrumbsCurrentPage>\n      </MaterialBreadcrumbs>\n      <Popover\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        <List>\n          {expandablePages.map((pageLink, index) => (\n            <ListItem key={index} button>\n              <StyledBox clone>{pageLink}</StyledBox>\n            </ListItem>\n          ))}\n        </List>\n      </Popover>\n    </Fragment>\n  );\n}\n"],"names":["React"],"mappings":"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"}