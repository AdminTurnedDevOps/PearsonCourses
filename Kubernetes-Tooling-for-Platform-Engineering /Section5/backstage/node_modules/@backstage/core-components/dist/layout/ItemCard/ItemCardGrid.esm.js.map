{"version":3,"file":"ItemCardGrid.esm.js","sources":["../../../src/layout/ItemCard/ItemCardGrid.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport Box from '@material-ui/core/Box';\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  WithStyles,\n} from '@material-ui/core/styles';\nimport React from 'react';\n\n/** @public */\nexport type ItemCardGridClassKey = 'root';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(auto-fill, minmax(22em, 1fr))',\n      gridAutoRows: '1fr',\n      gridGap: theme.spacing(2),\n    },\n  });\n\nconst useStyles = makeStyles(styles, { name: 'BackstageItemCardGrid' });\n\n/** @public */\nexport type ItemCardGridProps = Partial<WithStyles<typeof styles>> & {\n  /**\n   * The Card items of the grid.\n   */\n  children?: React.ReactNode;\n};\n\n/**\n * A default grid to use when arranging \"item cards\" - cards that let users\n * select among several options.\n *\n * @remarks\n * The immediate children are expected to be Material UI Card components.\n *\n * Styles for the grid can be overridden using the `classes` prop, e.g.:\n *\n * `<ItemCardGrid title=\"Hello\" classes={{ root: myClassName }} />`\n *\n * This can be useful for e.g. overriding gridTemplateColumns to adapt the\n * minimum size of the cells to fit the content better.\n *\n * @public\n */\nexport function ItemCardGrid(props: ItemCardGridProps) {\n  const { children, ...otherProps } = props;\n  const classes = useStyles(otherProps);\n  return (\n    <Box className={classes.root} {...otherProps}>\n      {children}\n    </Box>\n  );\n}\n"],"names":[],"mappings":";;;;AA2BA,MAAM,MAAA,GAAS,CAAC,KAAA,KACd,YAAa,CAAA;AAAA,EACX,IAAM,EAAA;AAAA,IACJ,OAAS,EAAA,MAAA;AAAA,IACT,mBAAqB,EAAA,sCAAA;AAAA,IACrB,YAAc,EAAA,KAAA;AAAA,IACd,OAAA,EAAS,KAAM,CAAA,OAAA,CAAQ,CAAC;AAAA;AAE5B,CAAC,CAAA;AAEH,MAAM,YAAY,UAAW,CAAA,MAAA,EAAQ,EAAE,IAAA,EAAM,yBAAyB,CAAA;AA0B/D,SAAS,aAAa,KAA0B,EAAA;AACrD,EAAA,MAAM,EAAE,QAAA,EAAU,GAAG,UAAA,EAAe,GAAA,KAAA;AACpC,EAAM,MAAA,OAAA,GAAU,UAAU,UAAU,CAAA;AACpC,EAAA,oDACG,GAAI,EAAA,EAAA,SAAA,EAAW,QAAQ,IAAO,EAAA,GAAG,cAC/B,QACH,CAAA;AAEJ;;;;"}