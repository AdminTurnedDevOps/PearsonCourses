import { createContext } from 'react';

const drawerWidthClosed = 72;
const iconPadding = 24;
const userBadgePadding = 18;
const sidebarConfig = {
  drawerWidthClosed,
  drawerWidthOpen: 224,
  // As per NN/g's guidance on timing for exposing hidden content
  // See https://www.nngroup.com/articles/timing-exposing-content/
  defaultOpenDelayMs: 100,
  defaultCloseDelayMs: 0,
  defaultFadeDuration: 200,
  logoHeight: 32,
  iconContainerWidth: drawerWidthClosed,
  iconSize: drawerWidthClosed - iconPadding * 2,
  iconPadding,
  selectedIndicatorWidth: 3,
  userBadgePadding,
  userBadgeDiameter: drawerWidthClosed - userBadgePadding * 2,
  mobileSidebarHeight: 56
};
const makeSidebarConfig = (customSidebarConfig) => ({
  ...sidebarConfig,
  ...customSidebarConfig,
  iconContainerWidth: sidebarConfig.drawerWidthClosed,
  iconSize: sidebarConfig.drawerWidthClosed - sidebarConfig.iconPadding * 2,
  userBadgeDiameter: sidebarConfig.drawerWidthClosed - sidebarConfig.userBadgePadding * 2
});
const submenuConfig = {
  drawerWidthClosed: 0,
  drawerWidthOpen: 202,
  defaultOpenDelayMs: sidebarConfig.defaultOpenDelayMs + 200
};
const makeSidebarSubmenuConfig = (customSubmenuConfig) => ({
  ...submenuConfig,
  ...customSubmenuConfig
});
const SIDEBAR_INTRO_LOCAL_STORAGE = "@backstage/core/sidebar-intro-dismissed";
const SidebarConfigContext = createContext({
  sidebarConfig,
  submenuConfig
});
const SidebarItemWithSubmenuContext = createContext({
  isHoveredOn: false,
  setIsHoveredOn: () => {
  }
});

export { SIDEBAR_INTRO_LOCAL_STORAGE, SidebarConfigContext, SidebarItemWithSubmenuContext, makeSidebarConfig, makeSidebarSubmenuConfig, sidebarConfig, submenuConfig };
//# sourceMappingURL=config.esm.js.map
