'use strict';

async function parseErrorResponseBody(response) {
  try {
    const text = await response.text();
    if (text) {
      if (response.headers.get("content-type")?.startsWith("application/json")) {
        try {
          const body = JSON.parse(text);
          if (body.error && body.response) {
            return body;
          }
        } catch {
        }
      }
      return {
        error: {
          name: "Error",
          message: `Request failed with status ${response.status} ${response.statusText}, ${text}`
        },
        response: {
          statusCode: response.status
        }
      };
    }
  } catch {
  }
  return {
    error: {
      name: "Error",
      message: `Request failed with status ${response.status} ${response.statusText}`
    },
    response: {
      statusCode: response.status
    }
  };
}

exports.parseErrorResponseBody = parseErrorResponseBody;
//# sourceMappingURL=response.cjs.js.map
