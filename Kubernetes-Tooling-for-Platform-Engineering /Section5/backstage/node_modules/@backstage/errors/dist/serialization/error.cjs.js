'use strict';

var serializeError$1 = require('serialize-error');
var assertion = require('../errors/assertion.cjs.js');

function serializeError(error, options) {
  const serialized = serializeError$1.serializeError(error);
  const result = {
    name: "Unknown",
    message: "<no reason given>",
    ...serialized
  };
  if (!options?.includeStack) {
    delete result.stack;
    if (result.cause && typeof result.cause === "object" && "stack" in result.cause) {
      delete result.cause.stack;
    }
  }
  return result;
}
function deserializeError(data) {
  const result = serializeError$1.deserializeError(data);
  if (!data.stack) {
    result.stack = void 0;
  }
  return result;
}
function stringifyError(error) {
  if (assertion.isError(error)) {
    const str = String(error);
    return str !== "[object Object]" ? str : `${error.name}: ${error.message}`;
  }
  return `unknown error '${error}'`;
}

exports.deserializeError = deserializeError;
exports.serializeError = serializeError;
exports.stringifyError = stringifyError;
//# sourceMappingURL=error.cjs.js.map
