'use strict';

var assertion = require('./assertion.cjs.js');
var CustomErrorBase = require('./CustomErrorBase.cjs.js');

class InputError extends CustomErrorBase.CustomErrorBase {
  name = "InputError";
}
class AuthenticationError extends CustomErrorBase.CustomErrorBase {
  name = "AuthenticationError";
}
class NotAllowedError extends CustomErrorBase.CustomErrorBase {
  name = "NotAllowedError";
}
class NotFoundError extends CustomErrorBase.CustomErrorBase {
  name = "NotFoundError";
}
class ConflictError extends CustomErrorBase.CustomErrorBase {
  name = "ConflictError";
}
class NotModifiedError extends CustomErrorBase.CustomErrorBase {
  name = "NotModifiedError";
}
class NotImplementedError extends CustomErrorBase.CustomErrorBase {
  name = "NotImplementedError";
}
class ServiceUnavailableError extends CustomErrorBase.CustomErrorBase {
}
class ForwardedError extends CustomErrorBase.CustomErrorBase {
  constructor(message, cause) {
    super(message, cause);
    this.name = assertion.isError(cause) ? cause.name : "Error";
  }
}

exports.AuthenticationError = AuthenticationError;
exports.ConflictError = ConflictError;
exports.ForwardedError = ForwardedError;
exports.InputError = InputError;
exports.NotAllowedError = NotAllowedError;
exports.NotFoundError = NotFoundError;
exports.NotImplementedError = NotImplementedError;
exports.NotModifiedError = NotModifiedError;
exports.ServiceUnavailableError = ServiceUnavailableError;
//# sourceMappingURL=common.cjs.js.map
