function isError(value) {
  if (typeof value !== "object" || value === null || Array.isArray(value)) {
    return false;
  }
  const maybe = value;
  if (typeof maybe.name !== "string" || maybe.name === "") {
    return false;
  }
  if (typeof maybe.message !== "string") {
    return false;
  }
  return true;
}
function assertError(value) {
  if (typeof value !== "object" || value === null || Array.isArray(value)) {
    throw new Error(`Encountered invalid error, not an object, got '${value}'`);
  }
  const maybe = value;
  if (typeof maybe.name !== "string" || maybe.name === "") {
    throw new Error(`Encountered error object without a name, got '${value}'`);
  }
  if (typeof maybe.message !== "string") {
    throw new Error(
      `Encountered error object without a message, got '${value}'`
    );
  }
}

export { assertError, isError };
//# sourceMappingURL=assertion.esm.js.map
