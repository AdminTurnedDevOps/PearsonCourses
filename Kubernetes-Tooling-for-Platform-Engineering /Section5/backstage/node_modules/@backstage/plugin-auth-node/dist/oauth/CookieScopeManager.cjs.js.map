{"version":3,"file":"CookieScopeManager.cjs.js","sources":["../../src/oauth/CookieScopeManager.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport express from 'express';\nimport {\n  OAuthAuthenticator,\n  OAuthAuthenticatorResult,\n  OAuthAuthenticatorScopeOptions,\n} from './types';\nimport { OAuthCookieManager } from './OAuthCookieManager';\nimport { OAuthState } from './state';\nimport { AuthenticationError } from '@backstage/errors';\nimport { Config } from '@backstage/config';\n\nfunction reqRes(req: express.Request): express.Response {\n  const res = req.res;\n  if (!res) {\n    throw new Error('No response object found in request');\n  }\n  return res;\n}\n\nconst defaultTransform: Required<OAuthAuthenticatorScopeOptions>['transform'] =\n  ({ requested, granted, required, additional }) => {\n    return [...requested, ...granted, ...required, ...additional];\n  };\n\nfunction splitScope(scope?: string): Iterable<string> {\n  if (!scope) {\n    return [];\n  }\n\n  return scope.split(/[\\s|,]/).filter(Boolean);\n}\n\nexport class CookieScopeManager {\n  static create(options: {\n    config?: Config;\n    additionalScopes?: string[];\n    authenticator: OAuthAuthenticator<any, any>;\n    cookieManager: OAuthCookieManager;\n  }) {\n    const { authenticator, config } = options;\n\n    const shouldPersistScopes =\n      authenticator.scopes?.persist ??\n      authenticator.shouldPersistScopes ??\n      false;\n\n    const configScopes =\n      typeof config?.getOptional('additionalScopes') === 'string'\n        ? splitScope(config.getString('additionalScopes'))\n        : config?.getOptionalStringArray('additionalScopes') ?? [];\n\n    const transform = authenticator?.scopes?.transform ?? defaultTransform;\n    const additional = [...configScopes, ...(options.additionalScopes ?? [])];\n    const required = authenticator?.scopes?.required ?? [];\n\n    return new CookieScopeManager(\n      (requested, granted) =>\n        Array.from(\n          new Set(transform({ required, additional, requested, granted })),\n        ).join(' '),\n      shouldPersistScopes ? options.cookieManager : undefined,\n    );\n  }\n\n  private constructor(\n    private readonly scopeTransform: (\n      requested: Iterable<string>,\n      granted: Iterable<string>,\n    ) => string,\n    private readonly cookieManager?: OAuthCookieManager,\n  ) {}\n\n  async start(\n    req: express.Request,\n  ): Promise<{ scopeState?: Partial<OAuthState>; scope: string }> {\n    const requestScope = splitScope(req.query.scope?.toString());\n    const grantedScope = splitScope(this.cookieManager?.getGrantedScopes(req));\n\n    const scope = this.scopeTransform(requestScope, grantedScope);\n\n    if (this.cookieManager) {\n      // If scopes are persisted then we pass them through the state so that we\n      // can set the cookie on successful auth\n      return {\n        scope,\n        scopeState: { scope },\n      };\n    }\n    return { scope };\n  }\n\n  async handleCallback(\n    req: express.Request,\n    ctx: {\n      result: OAuthAuthenticatorResult<any>;\n      state: OAuthState;\n      origin?: string;\n    },\n  ): Promise<string> {\n    // If we are not persisting scopes we can forward the scope from the result\n    if (!this.cookieManager) {\n      return Array.from(splitScope(ctx.result.session.scope)).join(' ');\n    }\n\n    const scope = ctx.state.scope;\n    if (scope === undefined) {\n      throw new AuthenticationError('No scope found in OAuth state');\n    }\n\n    // Store the scope that we have been granted for this session. This is useful if\n    // the provider does not return granted scopes on refresh or if they are normalized.\n    this.cookieManager.setGrantedScopes(reqRes(req), scope, ctx.origin);\n\n    return scope;\n  }\n\n  async clear(req: express.Request): Promise<void> {\n    if (this.cookieManager) {\n      this.cookieManager.removeGrantedScopes(reqRes(req), req.get('origin'));\n    }\n  }\n\n  async refresh(req: express.Request): Promise<{\n    scope: string;\n    commit(result: OAuthAuthenticatorResult<any>): Promise<string>;\n  }> {\n    const requestScope = splitScope(req.query.scope?.toString());\n    const grantedScope = splitScope(this.cookieManager?.getGrantedScopes(req));\n\n    const scope = this.scopeTransform(requestScope, grantedScope);\n\n    return {\n      scope,\n      commit: async result => {\n        if (this.cookieManager) {\n          this.cookieManager.setGrantedScopes(\n            reqRes(req),\n            scope,\n            req.get('origin'),\n          );\n          return scope;\n        }\n\n        return Array.from(splitScope(result.session.scope)).join(' ');\n      },\n    };\n  }\n}\n"],"names":["AuthenticationError"],"mappings":"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"}