'use strict';

var conditions = require('./entity/conditions.cjs.js');
var constants = require('./entity/constants.cjs.js');
var DefaultNamespaceEntityPolicy = require('./entity/policies/DefaultNamespaceEntityPolicy.cjs.js');
var GroupDefaultParentEntityPolicy = require('./entity/policies/GroupDefaultParentEntityPolicy.cjs.js');
var FieldFormatEntityPolicy = require('./entity/policies/FieldFormatEntityPolicy.cjs.js');
var NoForeignRootFieldsEntityPolicy = require('./entity/policies/NoForeignRootFieldsEntityPolicy.cjs.js');
var SchemaValidEntityPolicy = require('./entity/policies/SchemaValidEntityPolicy.cjs.js');
var ref = require('./entity/ref.cjs.js');
var EntityPolicies = require('./EntityPolicies.cjs.js');
var ApiEntityV1alpha1 = require('./kinds/ApiEntityV1alpha1.cjs.js');
var ComponentEntityV1alpha1 = require('./kinds/ComponentEntityV1alpha1.cjs.js');
var DomainEntityV1alpha1 = require('./kinds/DomainEntityV1alpha1.cjs.js');
var GroupEntityV1alpha1 = require('./kinds/GroupEntityV1alpha1.cjs.js');
var LocationEntityV1alpha1 = require('./kinds/LocationEntityV1alpha1.cjs.js');
var relations = require('./kinds/relations.cjs.js');
var ResourceEntityV1alpha1 = require('./kinds/ResourceEntityV1alpha1.cjs.js');
var SystemEntityV1alpha1 = require('./kinds/SystemEntityV1alpha1.cjs.js');
var UserEntityV1alpha1 = require('./kinds/UserEntityV1alpha1.cjs.js');
var annotation = require('./location/annotation.cjs.js');
var helpers = require('./location/helpers.cjs.js');
var CommonValidatorFunctions = require('./validation/CommonValidatorFunctions.cjs.js');
var entityEnvelopeSchemaValidator = require('./validation/entityEnvelopeSchemaValidator.cjs.js');
var entityKindSchemaValidator = require('./validation/entityKindSchemaValidator.cjs.js');
var entitySchemaValidator = require('./validation/entitySchemaValidator.cjs.js');
var KubernetesValidatorFunctions = require('./validation/KubernetesValidatorFunctions.cjs.js');
var makeValidator = require('./validation/makeValidator.cjs.js');



exports.isApiEntity = conditions.isApiEntity;
exports.isComponentEntity = conditions.isComponentEntity;
exports.isDomainEntity = conditions.isDomainEntity;
exports.isGroupEntity = conditions.isGroupEntity;
exports.isLocationEntity = conditions.isLocationEntity;
exports.isResourceEntity = conditions.isResourceEntity;
exports.isSystemEntity = conditions.isSystemEntity;
exports.isUserEntity = conditions.isUserEntity;
exports.ANNOTATION_EDIT_URL = constants.ANNOTATION_EDIT_URL;
exports.ANNOTATION_KUBERNETES_API_SERVER = constants.ANNOTATION_KUBERNETES_API_SERVER;
exports.ANNOTATION_KUBERNETES_API_SERVER_CA = constants.ANNOTATION_KUBERNETES_API_SERVER_CA;
exports.ANNOTATION_KUBERNETES_AUTH_PROVIDER = constants.ANNOTATION_KUBERNETES_AUTH_PROVIDER;
exports.ANNOTATION_VIEW_URL = constants.ANNOTATION_VIEW_URL;
exports.DEFAULT_NAMESPACE = constants.DEFAULT_NAMESPACE;
exports.DefaultNamespaceEntityPolicy = DefaultNamespaceEntityPolicy.DefaultNamespaceEntityPolicy;
exports.GroupDefaultParentEntityPolicy = GroupDefaultParentEntityPolicy.GroupDefaultParentEntityPolicy;
exports.FieldFormatEntityPolicy = FieldFormatEntityPolicy.FieldFormatEntityPolicy;
exports.NoForeignRootFieldsEntityPolicy = NoForeignRootFieldsEntityPolicy.NoForeignRootFieldsEntityPolicy;
exports.SchemaValidEntityPolicy = SchemaValidEntityPolicy.SchemaValidEntityPolicy;
exports.getCompoundEntityRef = ref.getCompoundEntityRef;
exports.parseEntityRef = ref.parseEntityRef;
exports.stringifyEntityRef = ref.stringifyEntityRef;
exports.EntityPolicies = EntityPolicies.EntityPolicies;
exports.apiEntityV1alpha1Validator = ApiEntityV1alpha1.apiEntityV1alpha1Validator;
exports.componentEntityV1alpha1Validator = ComponentEntityV1alpha1.componentEntityV1alpha1Validator;
exports.domainEntityV1alpha1Validator = DomainEntityV1alpha1.domainEntityV1alpha1Validator;
exports.groupEntityV1alpha1Validator = GroupEntityV1alpha1.groupEntityV1alpha1Validator;
exports.locationEntityV1alpha1Validator = LocationEntityV1alpha1.locationEntityV1alpha1Validator;
exports.RELATION_API_CONSUMED_BY = relations.RELATION_API_CONSUMED_BY;
exports.RELATION_API_PROVIDED_BY = relations.RELATION_API_PROVIDED_BY;
exports.RELATION_CHILD_OF = relations.RELATION_CHILD_OF;
exports.RELATION_CONSUMES_API = relations.RELATION_CONSUMES_API;
exports.RELATION_DEPENDENCY_OF = relations.RELATION_DEPENDENCY_OF;
exports.RELATION_DEPENDS_ON = relations.RELATION_DEPENDS_ON;
exports.RELATION_HAS_MEMBER = relations.RELATION_HAS_MEMBER;
exports.RELATION_HAS_PART = relations.RELATION_HAS_PART;
exports.RELATION_MEMBER_OF = relations.RELATION_MEMBER_OF;
exports.RELATION_OWNED_BY = relations.RELATION_OWNED_BY;
exports.RELATION_OWNER_OF = relations.RELATION_OWNER_OF;
exports.RELATION_PARENT_OF = relations.RELATION_PARENT_OF;
exports.RELATION_PART_OF = relations.RELATION_PART_OF;
exports.RELATION_PROVIDES_API = relations.RELATION_PROVIDES_API;
exports.resourceEntityV1alpha1Validator = ResourceEntityV1alpha1.resourceEntityV1alpha1Validator;
exports.systemEntityV1alpha1Validator = SystemEntityV1alpha1.systemEntityV1alpha1Validator;
exports.userEntityV1alpha1Validator = UserEntityV1alpha1.userEntityV1alpha1Validator;
exports.ANNOTATION_LOCATION = annotation.ANNOTATION_LOCATION;
exports.ANNOTATION_ORIGIN_LOCATION = annotation.ANNOTATION_ORIGIN_LOCATION;
exports.ANNOTATION_SOURCE_LOCATION = annotation.ANNOTATION_SOURCE_LOCATION;
exports.getEntitySourceLocation = helpers.getEntitySourceLocation;
exports.parseLocationRef = helpers.parseLocationRef;
exports.stringifyLocationRef = helpers.stringifyLocationRef;
exports.CommonValidatorFunctions = CommonValidatorFunctions.CommonValidatorFunctions;
exports.entityEnvelopeSchemaValidator = entityEnvelopeSchemaValidator.entityEnvelopeSchemaValidator;
exports.entityKindSchemaValidator = entityKindSchemaValidator.entityKindSchemaValidator;
exports.entitySchemaValidator = entitySchemaValidator.entitySchemaValidator;
exports.KubernetesValidatorFunctions = KubernetesValidatorFunctions.KubernetesValidatorFunctions;
exports.makeValidator = makeValidator.makeValidator;
//# sourceMappingURL=index.cjs.js.map
