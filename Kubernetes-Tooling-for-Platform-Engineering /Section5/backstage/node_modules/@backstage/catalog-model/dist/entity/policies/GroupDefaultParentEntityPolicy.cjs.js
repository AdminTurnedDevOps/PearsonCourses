'use strict';

var constants = require('../constants.cjs.js');
var ref = require('../ref.cjs.js');

class GroupDefaultParentEntityPolicy {
  parentRef;
  constructor(parentEntityRef) {
    const { kind, namespace, name } = ref.parseEntityRef(parentEntityRef, {
      defaultKind: "Group",
      defaultNamespace: constants.DEFAULT_NAMESPACE
    });
    if (kind.toLocaleUpperCase("en-US") !== "GROUP") {
      throw new TypeError("group parent must be a group");
    }
    this.parentRef = ref.stringifyEntityRef({
      kind,
      namespace,
      name
    });
  }
  async enforce(entity) {
    if (entity.kind !== "Group") {
      return entity;
    }
    const group = entity;
    if (group.spec.parent) {
      return group;
    }
    if (ref.stringifyEntityRef(group) !== this.parentRef) {
      group.spec.parent = this.parentRef;
    }
    return group;
  }
}

exports.GroupDefaultParentEntityPolicy = GroupDefaultParentEntityPolicy;
//# sourceMappingURL=GroupDefaultParentEntityPolicy.cjs.js.map
