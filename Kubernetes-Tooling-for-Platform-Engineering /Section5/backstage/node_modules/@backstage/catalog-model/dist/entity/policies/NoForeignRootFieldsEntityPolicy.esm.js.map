{"version":3,"file":"NoForeignRootFieldsEntityPolicy.esm.js","sources":["../../../src/entity/policies/NoForeignRootFieldsEntityPolicy.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EntityPolicy } from './types';\nimport { Entity } from '../Entity';\n\nconst defaultKnownFields = ['apiVersion', 'kind', 'metadata', 'spec'];\n\n/**\n * Ensures that there are no foreign root fields in the entity.\n *\n * @public\n */\nexport class NoForeignRootFieldsEntityPolicy implements EntityPolicy {\n  private readonly knownFields: string[];\n\n  constructor(knownFields: string[] = defaultKnownFields) {\n    this.knownFields = knownFields;\n  }\n\n  async enforce(entity: Entity): Promise<Entity> {\n    for (const field of Object.keys(entity)) {\n      if (!this.knownFields.includes(field)) {\n        throw new Error(`Unknown field ${field}`);\n      }\n    }\n    return entity;\n  }\n}\n"],"names":[],"mappings":"AAmBA,MAAM,kBAAqB,GAAA,CAAC,YAAc,EAAA,MAAA,EAAQ,YAAY,MAAM,CAAA;AAO7D,MAAM,+BAAwD,CAAA;AAAA,EAClD,WAAA;AAAA,EAEjB,WAAA,CAAY,cAAwB,kBAAoB,EAAA;AACtD,IAAA,IAAA,CAAK,WAAc,GAAA,WAAA;AAAA;AACrB,EAEA,MAAM,QAAQ,MAAiC,EAAA;AAC7C,IAAA,KAAA,MAAW,KAAS,IAAA,MAAA,CAAO,IAAK,CAAA,MAAM,CAAG,EAAA;AACvC,MAAA,IAAI,CAAC,IAAA,CAAK,WAAY,CAAA,QAAA,CAAS,KAAK,CAAG,EAAA;AACrC,QAAA,MAAM,IAAI,KAAA,CAAM,CAAiB,cAAA,EAAA,KAAK,CAAE,CAAA,CAAA;AAAA;AAC1C;AAEF,IAAO,OAAA,MAAA;AAAA;AAEX;;;;"}