import { DEFAULT_NAMESPACE } from '../constants.esm.js';
import { parseEntityRef, stringifyEntityRef } from '../ref.esm.js';

class GroupDefaultParentEntityPolicy {
  parentRef;
  constructor(parentEntityRef) {
    const { kind, namespace, name } = parseEntityRef(parentEntityRef, {
      defaultKind: "Group",
      defaultNamespace: DEFAULT_NAMESPACE
    });
    if (kind.toLocaleUpperCase("en-US") !== "GROUP") {
      throw new TypeError("group parent must be a group");
    }
    this.parentRef = stringifyEntityRef({
      kind,
      namespace,
      name
    });
  }
  async enforce(entity) {
    if (entity.kind !== "Group") {
      return entity;
    }
    const group = entity;
    if (group.spec.parent) {
      return group;
    }
    if (stringifyEntityRef(group) !== this.parentRef) {
      group.spec.parent = this.parentRef;
    }
    return group;
  }
}

export { GroupDefaultParentEntityPolicy };
//# sourceMappingURL=GroupDefaultParentEntityPolicy.esm.js.map
