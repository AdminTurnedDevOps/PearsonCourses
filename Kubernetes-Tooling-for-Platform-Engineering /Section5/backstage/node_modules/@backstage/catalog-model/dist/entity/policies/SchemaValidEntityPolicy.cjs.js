'use strict';

var Ajv = require('ajv');
var Entity_schema = require('../../schema/Entity.schema.json.cjs.js');
var EntityMeta_schema = require('../../schema/EntityMeta.schema.json.cjs.js');
var common_schema = require('../../schema/shared/common.schema.json.cjs.js');

function _interopDefaultCompat (e) { return e && typeof e === 'object' && 'default' in e ? e : { default: e }; }

var Ajv__default = /*#__PURE__*/_interopDefaultCompat(Ajv);

class SchemaValidEntityPolicy {
  validate;
  async enforce(entity) {
    if (!this.validate) {
      const ajv = new Ajv__default.default({ allowUnionTypes: true });
      this.validate = ajv.addSchema([common_schema.default, EntityMeta_schema.default], void 0, void 0, true).compile(Entity_schema.default);
    }
    const result = this.validate(entity);
    if (result === true) {
      return entity;
    }
    const [error] = this.validate.errors || [];
    if (!error) {
      throw new Error(`Malformed envelope, Unknown error`);
    }
    throw new Error(
      `Malformed envelope, ${error.instancePath || "<root>"} ${error.message}`
    );
  }
}

exports.SchemaValidEntityPolicy = SchemaValidEntityPolicy;
//# sourceMappingURL=SchemaValidEntityPolicy.cjs.js.map
