{"version":3,"file":"FieldFormatEntityPolicy.cjs.js","sources":["../../../src/entity/policies/FieldFormatEntityPolicy.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EntityPolicy } from './types';\nimport {\n  CommonValidatorFunctions,\n  KubernetesValidatorFunctions,\n  makeValidator,\n  Validators,\n} from '../../validation';\nimport { Entity } from '../Entity';\n\n/**\n * Ensures that the format of individual fields of the entity envelope\n * is valid.\n *\n * @remarks\n *\n * This does not take into account machine generated fields such as uid and etag.\n *\n * @public\n */\nexport class FieldFormatEntityPolicy implements EntityPolicy {\n  private readonly validators: Validators;\n\n  constructor(validators: Validators = makeValidator()) {\n    this.validators = validators;\n  }\n\n  async enforce(entity: Entity): Promise<Entity> {\n    function require(\n      field: string,\n      value: any,\n      validator: (value: any) => boolean,\n    ) {\n      if (value === undefined || value === null) {\n        throw new Error(`${field} must have a value`);\n      }\n\n      let isValid: boolean;\n      try {\n        isValid = validator(value);\n      } catch (e) {\n        throw new Error(`${field} could not be validated, ${e}`);\n      }\n\n      if (!isValid) {\n        let expectation;\n        switch (\n          validator.name as\n            | keyof typeof KubernetesValidatorFunctions\n            | keyof typeof CommonValidatorFunctions\n        ) {\n          case 'isValidLabelValue':\n          case 'isValidObjectName':\n            expectation =\n              'a string that is sequences of [a-zA-Z0-9] separated by any of [-_.], at most 63 characters in total';\n            break;\n          case 'isValidLabelKey':\n          case 'isValidApiVersion':\n          case 'isValidAnnotationKey':\n            expectation = 'a valid prefix and/or suffix';\n            break;\n          case 'isValidNamespace':\n          case 'isValidDnsLabel':\n            expectation =\n              'a string that is sequences of [a-z0-9] separated by [-], at most 63 characters in total';\n            break;\n          case 'isValidTag':\n            expectation =\n              'a string that is sequences of [a-z0-9+#] separated by [-], at most 63 characters in total';\n            break;\n          case 'isValidAnnotationValue':\n            expectation = 'a string';\n            break;\n          case 'isValidKind':\n            expectation =\n              'a string that is a sequence of [a-zA-Z][a-z0-9A-Z], at most 63 characters in total';\n            break;\n          case 'isValidUrl':\n            expectation = 'a string that is a valid url';\n            break;\n          case 'isValidString':\n          case 'isNonEmptyString':\n            expectation = 'a non empty string';\n            break;\n          default:\n            expectation = undefined;\n            break;\n        }\n\n        // ensure that if there are other/future validators, the error message defaults to a general \"is not valid, visit link\"\n        const message = expectation\n          ? ` expected ${expectation} but found \"${value}\".`\n          : '';\n\n        throw new Error(\n          `\"${field}\" is not valid;${message} To learn more about catalog file format, visit: https://github.com/backstage/backstage/blob/master/docs/architecture-decisions/adr002-default-catalog-file-format.md`,\n        );\n      }\n    }\n\n    function optional(\n      field: string,\n      value: any,\n      validator: (value: any) => boolean,\n    ) {\n      return value === undefined || require(field, value, validator);\n    }\n\n    require('apiVersion', entity.apiVersion, this.validators.isValidApiVersion);\n    require('kind', entity.kind, this.validators.isValidKind);\n\n    require('metadata.name', entity.metadata.name, this.validators\n      .isValidEntityName);\n    optional(\n      'metadata.namespace',\n      entity.metadata.namespace,\n      this.validators.isValidNamespace,\n    );\n\n    for (const [k, v] of Object.entries(entity.metadata.labels ?? [])) {\n      require(`labels.${k}`, k, this.validators.isValidLabelKey);\n      require(`labels.${k}`, v, this.validators.isValidLabelValue);\n    }\n\n    for (const [k, v] of Object.entries(entity.metadata.annotations ?? [])) {\n      require(`annotations.${k}`, k, this.validators.isValidAnnotationKey);\n      require(`annotations.${k}`, v, this.validators.isValidAnnotationValue);\n    }\n\n    const tags = entity.metadata.tags ?? [];\n\n    for (let i = 0; i < tags.length; ++i) {\n      require(`tags.${i}`, tags[i], this.validators.isValidTag);\n    }\n\n    const links = entity.metadata.links ?? [];\n\n    for (let i = 0; i < links.length; ++i) {\n      require(`links.${i}.url`, links[i]\n        ?.url, CommonValidatorFunctions.isValidUrl);\n      optional(\n        `links.${i}.title`,\n        links[i]?.title,\n        CommonValidatorFunctions.isNonEmptyString,\n      );\n      optional(\n        `links.${i}.icon`,\n        links[i]?.icon,\n        KubernetesValidatorFunctions.isValidObjectName,\n      );\n    }\n\n    return entity;\n  }\n}\n"],"names":["makeValidator","CommonValidatorFunctions","KubernetesValidatorFunctions"],"mappings":"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"}