'use strict';

var pluginAuthNode = require('@backstage/plugin-auth-node');
var errors = require('@backstage/errors');

const guestAuthenticator = pluginAuthNode.createProxyAuthenticator({
  defaultProfileTransform: async () => {
    return { profile: {} };
  },
  initialize({ config }) {
    const allowOutsideDev = config.getOptionalBoolean(
      "dangerouslyAllowOutsideDevelopment"
    );
    return process.env.NODE_ENV !== "development" && allowOutsideDev !== true;
  },
  async authenticate(_, disabled) {
    if (disabled) {
      throw new errors.NotAllowedError(
        "The guest provider cannot be used outside of a development environment unless 'auth.providers.guest.dangerouslyAllowOutsideDevelopment' is enabled"
      );
    }
    return { result: {} };
  }
});

exports.guestAuthenticator = guestAuthenticator;
//# sourceMappingURL=authenticator.cjs.js.map
