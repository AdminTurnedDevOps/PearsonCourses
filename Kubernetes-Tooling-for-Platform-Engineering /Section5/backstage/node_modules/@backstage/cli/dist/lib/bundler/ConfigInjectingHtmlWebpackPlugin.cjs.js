'use strict';

var HtmlWebpackPlugin = require('html-webpack-plugin');

function _interopDefaultCompat (e) { return e && typeof e === 'object' && 'default' in e ? e : { default: e }; }

var HtmlWebpackPlugin__default = /*#__PURE__*/_interopDefaultCompat(HtmlWebpackPlugin);

class ConfigInjectingHtmlWebpackPlugin extends HtmlWebpackPlugin__default.default {
  name = "ConfigInjectingHtmlWebpackPlugin";
  #getFrontendAppConfigs;
  constructor(options, getFrontendAppConfigs) {
    super(options);
    this.#getFrontendAppConfigs = getFrontendAppConfigs;
  }
  apply = (compiler) => {
    super.apply(compiler);
    compiler.hooks.compilation.tap(this.name, (compilation) => {
      const hooks = HtmlWebpackPlugin__default.default.getCompilationHooks(compilation);
      hooks.alterAssetTagGroups.tap(this.name, (ctx) => {
        if (ctx.plugin !== this) {
          return ctx;
        }
        return {
          ...ctx,
          headTags: [
            ...ctx.headTags,
            HtmlWebpackPlugin__default.default.createHtmlTagObject(
              "script",
              { type: "backstage.io/config" },
              `
${JSON.stringify(this.#getFrontendAppConfigs(), null, 2)}
`
            )
          ]
        };
      });
    });
  };
}

exports.ConfigInjectingHtmlWebpackPlugin = ConfigInjectingHtmlWebpackPlugin;
//# sourceMappingURL=ConfigInjectingHtmlWebpackPlugin.cjs.js.map
