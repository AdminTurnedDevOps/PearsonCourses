'use strict';

var fs = require('fs-extra');
var paths = require('../../lib/paths.cjs.js');
var runBackend = require('../../lib/runner/runBackend.cjs.js');

function _interopDefaultCompat (e) { return e && typeof e === 'object' && 'default' in e ? e : { default: e }; }

var fs__default = /*#__PURE__*/_interopDefaultCompat(fs);

async function startBackend(options) {
  const waitForExit = await runBackend.runBackend({
    entry: "src/index",
    inspectEnabled: options.inspectEnabled,
    inspectBrkEnabled: options.inspectBrkEnabled,
    linkedWorkspace: options.linkedWorkspace,
    require: options.require
  });
  await waitForExit();
}
async function startBackendPlugin(options) {
  const hasDevIndexEntry = await fs__default.default.pathExists(
    paths.paths.resolveTarget("dev", "index.ts")
  );
  if (!hasDevIndexEntry) {
    console.warn(
      `The 'dev' directory is missing. Please create a proper dev/index.ts in order to start the plugin.`
    );
    return;
  }
  const waitForExit = await runBackend.runBackend({
    entry: "dev/index",
    inspectEnabled: options.inspectEnabled,
    inspectBrkEnabled: options.inspectBrkEnabled,
    require: options.require,
    linkedWorkspace: options.linkedWorkspace
  });
  await waitForExit();
}

exports.startBackend = startBackend;
exports.startBackendPlugin = startBackendPlugin;
//# sourceMappingURL=startBackend.cjs.js.map
