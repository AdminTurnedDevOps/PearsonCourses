{"version":3,"file":"schema.cjs.js","sources":["../src/schema.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs-extra';\nimport { resolve as resolvePath } from 'path';\nimport { ConfigSchema, loadConfigSchema } from '@backstage/config-loader';\n\n/**\n * Loads the config schema that is embedded in the frontend build.\n *\n * @public\n */\nexport async function loadCompiledConfigSchema(\n  appDistDir: string,\n): Promise<ConfigSchema | undefined> {\n  const schemaPath = resolvePath(appDistDir, '.config-schema.json');\n  if (await fs.pathExists(schemaPath)) {\n    const serializedSchema = await fs.readJson(schemaPath);\n\n    return await loadConfigSchema({\n      serialized: serializedSchema,\n    });\n  }\n\n  return undefined;\n}\n"],"names":["resolvePath","fs","loadConfigSchema"],"mappings":";;;;;;;;;;AAyBA,eAAsB,yBACpB,UACmC,EAAA;AACnC,EAAM,MAAA,UAAA,GAAaA,YAAY,CAAA,UAAA,EAAY,qBAAqB,CAAA;AAChE,EAAA,IAAI,MAAMC,mBAAA,CAAG,UAAW,CAAA,UAAU,CAAG,EAAA;AACnC,IAAA,MAAM,gBAAmB,GAAA,MAAMA,mBAAG,CAAA,QAAA,CAAS,UAAU,CAAA;AAErD,IAAA,OAAO,MAAMC,6BAAiB,CAAA;AAAA,MAC5B,UAAY,EAAA;AAAA,KACb,CAAA;AAAA;AAGH,EAAO,OAAA,KAAA,CAAA;AACT;;;;"}