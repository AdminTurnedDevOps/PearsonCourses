{"version":3,"file":"createScaffolderFieldExtension.esm.js","sources":["../../src/extensions/createScaffolderFieldExtension.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CustomFieldValidator,\n  FieldExtensionOptions,\n  FieldExtensionComponentProps,\n  FieldExtensionUiSchema,\n  CustomFieldExtensionSchema,\n} from './types';\nimport { Extension, attachComponentData } from '@backstage/core-plugin-api';\nimport { UIOptionsType } from '@rjsf/utils';\nimport { FIELD_EXTENSION_KEY, FIELD_EXTENSION_WRAPPER_KEY } from './keys';\n\n/**\n * Method for creating field extensions that can be used in the scaffolder\n * frontend form.\n * @public\n */\nexport function createScaffolderFieldExtension<\n  TReturnValue = unknown,\n  TInputProps extends UIOptionsType = {},\n>(\n  options: FieldExtensionOptions<TReturnValue, TInputProps>,\n): Extension<FieldExtensionComponent<TReturnValue, TInputProps>> {\n  return {\n    expose() {\n      const FieldExtensionDataHolder: any = () => null;\n\n      attachComponentData(\n        FieldExtensionDataHolder,\n        FIELD_EXTENSION_KEY,\n        options,\n      );\n\n      return FieldExtensionDataHolder;\n    },\n  };\n}\n\n/**\n * The Wrapping component for defining fields extensions inside\n *\n * @public\n */\nexport const ScaffolderFieldExtensions: React.ComponentType<\n  React.PropsWithChildren<{}>\n> = (): JSX.Element | null => null;\n\nattachComponentData(\n  ScaffolderFieldExtensions,\n  FIELD_EXTENSION_WRAPPER_KEY,\n  true,\n);\n\n/**\n * The type used to wrap up the Layout and embed the input props\n *\n * @public\n */\nexport type FieldExtensionComponent<_TReturnValue, _TInputProps> = () => null;\n\nexport type {\n  CustomFieldValidator,\n  FieldExtensionOptions,\n  FieldExtensionComponentProps,\n  FieldExtensionUiSchema,\n  CustomFieldExtensionSchema,\n};\n\nexport * from './rjsf';\n"],"names":[],"mappings":";;;AAgCO,SAAS,+BAId,OAC+D,EAAA;AAC/D,EAAO,OAAA;AAAA,IACL,MAAS,GAAA;AACP,MAAA,MAAM,2BAAgC,MAAM,IAAA;AAE5C,MAAA,mBAAA;AAAA,QACE,wBAAA;AAAA,QACA,mBAAA;AAAA,QACA;AAAA,OACF;AAEA,MAAO,OAAA,wBAAA;AAAA;AACT,GACF;AACF;AAOO,MAAM,4BAET,MAA0B;AAE9B,mBAAA;AAAA,EACE,yBAAA;AAAA,EACA,2BAAA;AAAA,EACA;AACF,CAAA;;;;"}