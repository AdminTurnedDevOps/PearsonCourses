import { useAsync, useMountEffect } from '@react-hookz/web';
import { useApi, useElementFilter } from '@backstage/core-plugin-api';
import '../next/api/FormFieldsApi.esm.js';
import { formFieldsApiRef } from '../next/api/ref.esm.js';
import '../next/components/Stepper/Stepper.esm.js';
import 'json-schema-library';
import 'flatted';
import '../next/components/TemplateCard/TemplateCard.esm.js';
import 'react';
import '@backstage/core-components';
import 'lodash';
import '@backstage/catalog-model';
import '@backstage/plugin-catalog-react';
import '@backstage/plugin-scaffolder-common';
import '@material-ui/core/Typography';
import '../next/components/Workflow/Workflow.esm.js';
import '@material-ui/core/Box';
import '@material-ui/core/Paper';
import '../next/components/TemplateOutputs/LinkOutputs.esm.js';
import '@material-ui/core/Button';
import '@material-ui/icons/Description';
import '../next/components/Form/Form.esm.js';
import '@material-ui/core/Stepper';
import '@material-ui/core/Step';
import '@material-ui/core/StepButton';
import '@material-ui/core/StepLabel';
import '../next/components/TaskSteps/StepIcon.esm.js';
import 'react-use/esm/useInterval';
import 'luxon';
import 'humanize-duration';
import '../next/components/TaskSteps/TaskBorder.esm.js';
import '../next/components/TaskLogStream/TaskLogStream.esm.js';
import '../next/components/TemplateCategoryPicker/TemplateCategoryPicker.esm.js';
import '../next/components/ScaffolderPageContextMenu/ScaffolderPageContextMenu.esm.js';
import '../next/components/ScaffolderField/ScaffolderField.esm.js';
import '@backstage/plugin-scaffolder-react';
import '@material-ui/core/TextField';
import 'lodash/debounce';
import 'qs';
import 'react-use/esm/useAsync';
import '../api/ref.esm.js';
import 'lodash/cloneDeep';
import '../next/blueprints/FormFieldBlueprint.esm.js';
import { FIELD_EXTENSION_WRAPPER_KEY, FIELD_EXTENSION_KEY } from '../extensions/keys.esm.js';

const useCustomFieldExtensions = (outlet) => {
  const formFieldsApi = useApi(formFieldsApiRef);
  const [{ result: blueprintFields }, methods] = useAsync(
    formFieldsApi.getFormFields,
    []
  );
  useMountEffect(methods.execute);
  const outletFields = useElementFilter(
    outlet,
    (elements) => elements.selectByComponentData({
      key: FIELD_EXTENSION_WRAPPER_KEY
    }).findComponentData({
      key: FIELD_EXTENSION_KEY
    })
  );
  const blueprintsToLegacy = blueprintFields?.map(
    (field) => ({
      component: field.component,
      name: field.name,
      validation: field.validation,
      schema: field.schema?.schema
    })
  );
  return [...blueprintsToLegacy, ...outletFields];
};

export { useCustomFieldExtensions };
//# sourceMappingURL=useCustomFieldExtensions.esm.js.map
