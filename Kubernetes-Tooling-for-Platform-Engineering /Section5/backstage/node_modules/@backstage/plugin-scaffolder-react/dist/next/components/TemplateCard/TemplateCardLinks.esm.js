import { useApp } from '@backstage/core-plugin-api';
import Divider from '@material-ui/core/Divider';
import Grid from '@material-ui/core/Grid';
import { makeStyles } from '@material-ui/core/styles';
import LanguageIcon from '@material-ui/icons/Language';
import React from 'react';
import { CardLink } from './CardLink.esm.js';

const useStyles = makeStyles({});
const TemplateCardLinks = ({
  template,
  additionalLinks
}) => {
  const styles = useStyles();
  const app = useApp();
  const iconResolver = (key) => key ? app.getSystemIcon(key) ?? LanguageIcon : LanguageIcon;
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(Grid, { item: true, xs: 12 }, /* @__PURE__ */ React.createElement(Divider, { "data-testid": "template-card-separator--links" })), /* @__PURE__ */ React.createElement(Grid, { item: true, xs: 12 }, /* @__PURE__ */ React.createElement(Grid, { container: true, spacing: 2, "data-testid": "template-card-links" }, additionalLinks?.map(({ icon, text, url }, index) => /* @__PURE__ */ React.createElement(
    Grid,
    {
      className: styles.linkText,
      item: true,
      xs: 6,
      key: index,
      "data-testid": "template-card-links--item"
    },
    /* @__PURE__ */ React.createElement(CardLink, { icon, text, url })
  )), template.metadata.links?.map(({ url, icon, title }, index) => /* @__PURE__ */ React.createElement(
    Grid,
    {
      className: styles.linkText,
      item: true,
      xs: 6,
      key: index,
      "data-testid": "template-card-links--metalink"
    },
    /* @__PURE__ */ React.createElement(
      CardLink,
      {
        icon: iconResolver(icon),
        text: title || url,
        url
      }
    )
  )))));
};

export { TemplateCardLinks };
//# sourceMappingURL=TemplateCardLinks.esm.js.map
