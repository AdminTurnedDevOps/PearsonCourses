{"version":3,"file":"useFilteredSchemaProperties.esm.js","sources":["../../../src/next/hooks/useFilteredSchemaProperties.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport cloneDeep from 'lodash/cloneDeep';\nimport { useApi, featureFlagsApiRef } from '@backstage/core-plugin-api';\nimport { TemplateParameterSchema } from '@backstage/plugin-scaffolder-react';\n\n/**\n * Returns manifest of software templates with steps without a featureFlag tag.\n * @alpha\n */\n\nexport const useFilteredSchemaProperties = (\n  manifest: TemplateParameterSchema | undefined,\n): TemplateParameterSchema | undefined => {\n  const featureFlagKey = 'backstage:featureFlag';\n  const featureFlagApi = useApi(featureFlagsApiRef);\n\n  if (!manifest) {\n    return undefined;\n  }\n\n  const filteredSteps = manifest?.steps\n    .filter(step => {\n      const featureFlag = step.schema[featureFlagKey];\n      return (\n        typeof featureFlag !== 'string' || featureFlagApi.isActive(featureFlag)\n      );\n    })\n    .map(step => {\n      const filteredStep = cloneDeep(step);\n      const removedPropertyKeys: Array<string> = [];\n      if (filteredStep.schema.properties) {\n        filteredStep.schema.properties = Object.fromEntries(\n          Object.entries(filteredStep.schema.properties).filter(\n            ([key, value]) => {\n              if (value[featureFlagKey]) {\n                if (featureFlagApi.isActive(value[featureFlagKey])) {\n                  return true;\n                }\n\n                removedPropertyKeys.push(key);\n                return false;\n              }\n              return true;\n            },\n          ),\n        );\n\n        // remove the feature flag property key from required if they are not active\n        filteredStep.schema.required = Array.isArray(\n          filteredStep.schema.required,\n        )\n          ? filteredStep.schema.required?.filter(\n              r => !removedPropertyKeys.includes(r as string),\n            )\n          : filteredStep.schema.required;\n      }\n\n      return filteredStep;\n    });\n\n  return { ...manifest, steps: filteredSteps };\n};\n"],"names":[],"mappings":";;;AAwBa,MAAA,2BAAA,GAA8B,CACzC,QACwC,KAAA;AACxC,EAAA,MAAM,cAAiB,GAAA,uBAAA;AACvB,EAAM,MAAA,cAAA,GAAiB,OAAO,kBAAkB,CAAA;AAEhD,EAAA,IAAI,CAAC,QAAU,EAAA;AACb,IAAO,OAAA,KAAA,CAAA;AAAA;AAGT,EAAA,MAAM,aAAgB,GAAA,QAAA,EAAU,KAC7B,CAAA,MAAA,CAAO,CAAQ,IAAA,KAAA;AACd,IAAM,MAAA,WAAA,GAAc,IAAK,CAAA,MAAA,CAAO,cAAc,CAAA;AAC9C,IAAA,OACE,OAAO,WAAA,KAAgB,QAAY,IAAA,cAAA,CAAe,SAAS,WAAW,CAAA;AAAA,GAEzE,CACA,CAAA,GAAA,CAAI,CAAQ,IAAA,KAAA;AACX,IAAM,MAAA,YAAA,GAAe,UAAU,IAAI,CAAA;AACnC,IAAA,MAAM,sBAAqC,EAAC;AAC5C,IAAI,IAAA,YAAA,CAAa,OAAO,UAAY,EAAA;AAClC,MAAa,YAAA,CAAA,MAAA,CAAO,aAAa,MAAO,CAAA,WAAA;AAAA,QACtC,MAAO,CAAA,OAAA,CAAQ,YAAa,CAAA,MAAA,CAAO,UAAU,CAAE,CAAA,MAAA;AAAA,UAC7C,CAAC,CAAC,GAAK,EAAA,KAAK,CAAM,KAAA;AAChB,YAAI,IAAA,KAAA,CAAM,cAAc,CAAG,EAAA;AACzB,cAAA,IAAI,cAAe,CAAA,QAAA,CAAS,KAAM,CAAA,cAAc,CAAC,CAAG,EAAA;AAClD,gBAAO,OAAA,IAAA;AAAA;AAGT,cAAA,mBAAA,CAAoB,KAAK,GAAG,CAAA;AAC5B,cAAO,OAAA,KAAA;AAAA;AAET,YAAO,OAAA,IAAA;AAAA;AACT;AACF,OACF;AAGA,MAAa,YAAA,CAAA,MAAA,CAAO,WAAW,KAAM,CAAA,OAAA;AAAA,QACnC,aAAa,MAAO,CAAA;AAAA,OACtB,GACI,YAAa,CAAA,MAAA,CAAO,QAAU,EAAA,MAAA;AAAA,QAC5B,CAAK,CAAA,KAAA,CAAC,mBAAoB,CAAA,QAAA,CAAS,CAAW;AAAA,OAChD,GACA,aAAa,MAAO,CAAA,QAAA;AAAA;AAG1B,IAAO,OAAA,YAAA;AAAA,GACR,CAAA;AAEH,EAAA,OAAO,EAAE,GAAG,QAAU,EAAA,KAAA,EAAO,aAAc,EAAA;AAC7C;;;;"}