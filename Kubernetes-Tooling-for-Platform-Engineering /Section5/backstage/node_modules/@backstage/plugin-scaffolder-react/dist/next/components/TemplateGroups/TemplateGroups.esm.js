import React, { useCallback } from 'react';
import { useEntityList } from '@backstage/plugin-catalog-react';
import { isTemplateEntityV1beta3 } from '@backstage/plugin-scaffolder-common';
import { Progress, Link } from '@backstage/core-components';
import Typography from '@material-ui/core/Typography';
import { useApi, errorApiRef } from '@backstage/core-plugin-api';
import { TemplateGroup } from '../TemplateGroup/TemplateGroup.esm.js';

const TemplateGroups = (props) => {
  const { loading, error, entities } = useEntityList();
  const { groups, templateFilter, TemplateCardComponent, onTemplateSelected } = props;
  const errorApi = useApi(errorApiRef);
  const onSelected = useCallback(
    (template) => {
      onTemplateSelected?.(template);
    },
    [onTemplateSelected]
  );
  if (loading) {
    return /* @__PURE__ */ React.createElement(Progress, null);
  }
  if (error) {
    errorApi.post(error);
    return null;
  }
  if (!entities || !entities.length) {
    return /* @__PURE__ */ React.createElement(Typography, { variant: "body2" }, "No templates found that match your filter. Learn more about", " ", /* @__PURE__ */ React.createElement(Link, { to: "https://backstage.io/docs/features/software-templates/adding-templates" }, "adding templates"), ".");
  }
  return /* @__PURE__ */ React.createElement(React.Fragment, null, groups.map(({ title, filter }, index) => {
    const templates = entities.filter(isTemplateEntityV1beta3).filter((e) => templateFilter ? templateFilter(e) : true).filter(filter).map((template) => {
      const additionalLinks = props.additionalLinksForEntity?.(template) ?? [];
      return {
        template,
        additionalLinks
      };
    });
    return /* @__PURE__ */ React.createElement(
      TemplateGroup,
      {
        key: index,
        templates,
        title,
        components: { CardComponent: TemplateCardComponent },
        onSelected
      }
    );
  }));
};

export { TemplateGroups };
//# sourceMappingURL=TemplateGroups.esm.js.map
