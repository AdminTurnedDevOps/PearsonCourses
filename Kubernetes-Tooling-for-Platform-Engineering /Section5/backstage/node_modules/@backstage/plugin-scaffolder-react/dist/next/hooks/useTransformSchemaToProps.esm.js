import { useMemo } from 'react';

const useTransformSchemaToProps = (step, options = {}) => {
  const { layouts = [] } = options;
  const objectFieldTemplate = step?.uiSchema["ui:ObjectFieldTemplate"];
  return useMemo(() => {
    if (typeof objectFieldTemplate !== "string") {
      return step;
    }
    const Layout = layouts.find(
      (layout) => layout.name === objectFieldTemplate
    )?.component;
    if (!Layout) {
      return step;
    }
    return {
      ...step,
      uiSchema: {
        ...step.uiSchema,
        ["ui:ObjectFieldTemplate"]: Layout
      }
    };
  }, [layouts, objectFieldTemplate, step]);
};

export { useTransformSchemaToProps };
//# sourceMappingURL=useTransformSchemaToProps.esm.js.map
