import React from 'react';
import List from '@material-ui/core/List';
import ListItem from '@material-ui/core/ListItem';
import ListItemIcon from '@material-ui/core/ListItemIcon';
import ListItemText from '@material-ui/core/ListItemText';
import Paper from '@material-ui/core/Paper';
import { makeStyles, createStyles } from '@material-ui/core/styles';
import ErrorIcon from '@material-ui/icons/Error';
import startCase from 'lodash/startCase';

const useStyles = makeStyles(
  (_theme) => createStyles({
    list: {
      width: "100%"
    },
    text: {
      textWrap: "wrap"
    }
  })
);
const ErrorListTemplate = ({ errors, schema }) => {
  const classes = useStyles();
  function formatErrorMessage(error) {
    if (error.property && error.message) {
      const propertyName = error.property.startsWith(".") ? error.property.substring(1) : error.property;
      if (schema.properties && propertyName in schema.properties) {
        const property = schema.properties[propertyName];
        if (typeof property === "object" && "title" in property) {
          return `'${property.title}' ${error.message}`;
        }
      }
      return `'${startCase(propertyName)}' ${error.message}`;
    }
    return error.stack;
  }
  return /* @__PURE__ */ React.createElement(Paper, null, /* @__PURE__ */ React.createElement(List, { dense: true, className: classes.list }, errors.map((error, index) => /* @__PURE__ */ React.createElement(ListItem, { key: index }, /* @__PURE__ */ React.createElement(ListItemIcon, null, /* @__PURE__ */ React.createElement(ErrorIcon, { color: "error" })), /* @__PURE__ */ React.createElement(
    ListItemText,
    {
      classes: { primary: classes.text },
      primary: formatErrorMessage(error)
    }
  )))));
};

export { ErrorListTemplate };
//# sourceMappingURL=errorListTemplate.esm.js.map
