import { useTemplateSecrets } from '@backstage/plugin-scaffolder-react';
import TextField from '@material-ui/core/TextField';
import React, { useState, useMemo } from 'react';
import debounce from 'lodash/debounce';

const SecretWidget = (props) => {
  const { setSecrets, secrets } = useTemplateSecrets();
  const {
    name,
    onChange,
    schema: { title, minLength, maxLength },
    required,
    disabled
  } = props;
  const [localValue, setLocalValue] = useState(secrets[name] ?? "");
  const debouncedSetSecrets = useMemo(
    () => debounce((value) => {
      setSecrets({ [name]: value });
    }, 300),
    [setSecrets, name]
  );
  const handleChange = (e) => {
    const newValue = e.target.value;
    setLocalValue(newValue);
    onChange(Array(newValue.length).fill("*").join(""));
    debouncedSetSecrets(newValue);
  };
  return /* @__PURE__ */ React.createElement(
    TextField,
    {
      id: title,
      label: title,
      "aria-describedby": title,
      onChange: handleChange,
      value: localValue,
      type: "password",
      autoComplete: "off",
      required,
      disabled,
      inputProps: {
        minLength,
        maxLength
      }
    }
  );
};

export { SecretWidget };
//# sourceMappingURL=SecretWidget.esm.js.map
