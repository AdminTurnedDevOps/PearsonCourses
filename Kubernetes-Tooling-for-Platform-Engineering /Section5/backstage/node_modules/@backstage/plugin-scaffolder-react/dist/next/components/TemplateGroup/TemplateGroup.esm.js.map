{"version":3,"file":"TemplateGroup.esm.js","sources":["../../../../src/next/components/TemplateGroup/TemplateGroup.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TemplateEntityV1beta3 } from '@backstage/plugin-scaffolder-common';\nimport React from 'react';\nimport {\n  Content,\n  ContentHeader,\n  ItemCardGrid,\n} from '@backstage/core-components';\nimport { stringifyEntityRef } from '@backstage/catalog-model';\nimport { TemplateCardProps, TemplateCard } from '../TemplateCard';\nimport { IconComponent } from '@backstage/core-plugin-api';\n\n/**\n * The props for the {@link TemplateGroup} component.\n * @alpha\n */\nexport interface TemplateGroupProps {\n  templates: {\n    template: TemplateEntityV1beta3;\n    additionalLinks?: {\n      icon: IconComponent;\n      text: string;\n      url: string;\n    }[];\n  }[];\n  onSelected: (template: TemplateEntityV1beta3) => void;\n  title: React.ReactNode;\n  components?: {\n    CardComponent?: React.ComponentType<TemplateCardProps>;\n  };\n}\n\n/**\n * The `TemplateGroup` component is used to display a group of templates with a title.\n * @alpha\n */\nexport const TemplateGroup = (props: TemplateGroupProps) => {\n  const {\n    templates,\n    title,\n    components: { CardComponent } = {},\n    onSelected,\n  } = props;\n  const titleComponent =\n    typeof title === 'string' ? <ContentHeader title={title} /> : title;\n\n  if (templates.length === 0) {\n    return null;\n  }\n\n  const Card = CardComponent || TemplateCard;\n\n  return (\n    <Content>\n      {titleComponent}\n      <ItemCardGrid>\n        {templates.map(({ template, additionalLinks }) => (\n          <Card\n            key={stringifyEntityRef(template)}\n            additionalLinks={additionalLinks}\n            template={template}\n            onSelected={onSelected}\n          />\n        ))}\n      </ItemCardGrid>\n    </Content>\n  );\n};\n"],"names":[],"mappings":";;;;;AAkDa,MAAA,aAAA,GAAgB,CAAC,KAA8B,KAAA;AAC1D,EAAM,MAAA;AAAA,IACJ,SAAA;AAAA,IACA,KAAA;AAAA,IACA,UAAY,EAAA,EAAE,aAAc,EAAA,GAAI,EAAC;AAAA,IACjC;AAAA,GACE,GAAA,KAAA;AACJ,EAAA,MAAM,iBACJ,OAAO,KAAA,KAAU,2BAAY,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA,EAAc,OAAc,CAAK,GAAA,KAAA;AAEhE,EAAI,IAAA,SAAA,CAAU,WAAW,CAAG,EAAA;AAC1B,IAAO,OAAA,IAAA;AAAA;AAGT,EAAA,MAAM,OAAO,aAAiB,IAAA,YAAA;AAE9B,EACE,uBAAA,KAAA,CAAA,aAAA,CAAC,OACE,EAAA,IAAA,EAAA,cAAA,kBACA,KAAA,CAAA,aAAA,CAAA,YAAA,EAAA,IAAA,EACE,SAAU,CAAA,GAAA,CAAI,CAAC,EAAE,QAAU,EAAA,eAAA,EAC1B,qBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,IAAA;AAAA,IAAA;AAAA,MACC,GAAA,EAAK,mBAAmB,QAAQ,CAAA;AAAA,MAChC,eAAA;AAAA,MACA,QAAA;AAAA,MACA;AAAA;AAAA,GAEH,CACH,CACF,CAAA;AAEJ;;;;"}