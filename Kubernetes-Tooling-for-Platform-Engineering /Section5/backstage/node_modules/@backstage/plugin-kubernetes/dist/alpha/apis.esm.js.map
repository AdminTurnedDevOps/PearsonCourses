{"version":3,"file":"apis.esm.js","sources":["../../src/alpha/apis.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ApiBlueprint,\n  createApiFactory,\n  discoveryApiRef,\n  fetchApiRef,\n} from '@backstage/frontend-plugin-api';\nimport {\n  KubernetesBackendClient,\n  kubernetesApiRef,\n  kubernetesProxyApiRef,\n  kubernetesAuthProvidersApiRef,\n  KubernetesAuthProviders,\n  KubernetesProxyClient,\n  kubernetesClusterLinkFormatterApiRef,\n  getDefaultFormatters,\n  KubernetesClusterLinkFormatter,\n  DEFAULT_FORMATTER_NAME,\n} from '@backstage/plugin-kubernetes-react';\nimport {\n  gitlabAuthApiRef,\n  googleAuthApiRef,\n  microsoftAuthApiRef,\n  oktaAuthApiRef,\n  oneloginAuthApiRef,\n} from '@backstage/core-plugin-api';\n\nexport const kubernetesApiExtension = ApiBlueprint.make({\n  params: {\n    factory: createApiFactory({\n      api: kubernetesApiRef,\n      deps: {\n        discoveryApi: discoveryApiRef,\n        fetchApi: fetchApiRef,\n        kubernetesAuthProvidersApi: kubernetesAuthProvidersApiRef,\n      },\n      factory: ({ discoveryApi, fetchApi, kubernetesAuthProvidersApi }) =>\n        new KubernetesBackendClient({\n          discoveryApi,\n          fetchApi,\n          kubernetesAuthProvidersApi,\n        }),\n    }),\n  },\n});\n\nexport const kubernetesProxyApi = ApiBlueprint.make({\n  name: 'proxy',\n  params: {\n    factory: createApiFactory({\n      api: kubernetesProxyApiRef,\n      deps: {\n        kubernetesApi: kubernetesApiRef,\n      },\n      factory: ({ kubernetesApi }) =>\n        new KubernetesProxyClient({\n          kubernetesApi,\n        }),\n    }),\n  },\n});\n\nexport const kubernetesAuthProvidersApi = ApiBlueprint.make({\n  name: 'auth-providers',\n  params: {\n    factory: createApiFactory({\n      api: kubernetesAuthProvidersApiRef,\n      deps: {\n        gitlabAuthApi: gitlabAuthApiRef,\n        googleAuthApi: googleAuthApiRef,\n        microsoftAuthApi: microsoftAuthApiRef,\n        oktaAuthApi: oktaAuthApiRef,\n        oneloginAuthApi: oneloginAuthApiRef,\n      },\n      factory: ({\n        gitlabAuthApi,\n        googleAuthApi,\n        microsoftAuthApi,\n        oktaAuthApi,\n        oneloginAuthApi,\n      }) => {\n        const oidcProviders = {\n          gitlab: gitlabAuthApi,\n          google: googleAuthApi,\n          microsoft: microsoftAuthApi,\n          okta: oktaAuthApi,\n          onelogin: oneloginAuthApi,\n        };\n\n        return new KubernetesAuthProviders({\n          microsoftAuthApi,\n          googleAuthApi,\n          oidcProviders,\n        });\n      },\n    }),\n  },\n});\n\nexport const kubernetesClusterLinkFormatterApi = ApiBlueprint.make({\n  name: 'cluster-link-formatter',\n  params: {\n    factory: createApiFactory({\n      api: kubernetesClusterLinkFormatterApiRef,\n      deps: { googleAuthApi: googleAuthApiRef },\n      factory: deps => {\n        const formatters = getDefaultFormatters(deps);\n        return new KubernetesClusterLinkFormatter({\n          formatters,\n          defaultFormatterName: DEFAULT_FORMATTER_NAME,\n        });\n      },\n    }),\n  },\n});\n"],"names":["kubernetesAuthProvidersApi"],"mappings":";;;;AA0Ca,MAAA,sBAAA,GAAyB,aAAa,IAAK,CAAA;AAAA,EACtD,MAAQ,EAAA;AAAA,IACN,SAAS,gBAAiB,CAAA;AAAA,MACxB,GAAK,EAAA,gBAAA;AAAA,MACL,IAAM,EAAA;AAAA,QACJ,YAAc,EAAA,eAAA;AAAA,QACd,QAAU,EAAA,WAAA;AAAA,QACV,0BAA4B,EAAA;AAAA,OAC9B;AAAA,MACA,OAAA,EAAS,CAAC,EAAE,YAAA,EAAc,UAAU,0BAAAA,EAAAA,2BAAAA,EAClC,KAAA,IAAI,uBAAwB,CAAA;AAAA,QAC1B,YAAA;AAAA,QACA,QAAA;AAAA,QACA,0BAAAA,EAAAA;AAAA,OACD;AAAA,KACJ;AAAA;AAEL,CAAC;AAEY,MAAA,kBAAA,GAAqB,aAAa,IAAK,CAAA;AAAA,EAClD,IAAM,EAAA,OAAA;AAAA,EACN,MAAQ,EAAA;AAAA,IACN,SAAS,gBAAiB,CAAA;AAAA,MACxB,GAAK,EAAA,qBAAA;AAAA,MACL,IAAM,EAAA;AAAA,QACJ,aAAe,EAAA;AAAA,OACjB;AAAA,MACA,SAAS,CAAC,EAAE,aAAc,EAAA,KACxB,IAAI,qBAAsB,CAAA;AAAA,QACxB;AAAA,OACD;AAAA,KACJ;AAAA;AAEL,CAAC;AAEY,MAAA,0BAAA,GAA6B,aAAa,IAAK,CAAA;AAAA,EAC1D,IAAM,EAAA,gBAAA;AAAA,EACN,MAAQ,EAAA;AAAA,IACN,SAAS,gBAAiB,CAAA;AAAA,MACxB,GAAK,EAAA,6BAAA;AAAA,MACL,IAAM,EAAA;AAAA,QACJ,aAAe,EAAA,gBAAA;AAAA,QACf,aAAe,EAAA,gBAAA;AAAA,QACf,gBAAkB,EAAA,mBAAA;AAAA,QAClB,WAAa,EAAA,cAAA;AAAA,QACb,eAAiB,EAAA;AAAA,OACnB;AAAA,MACA,SAAS,CAAC;AAAA,QACR,aAAA;AAAA,QACA,aAAA;AAAA,QACA,gBAAA;AAAA,QACA,WAAA;AAAA,QACA;AAAA,OACI,KAAA;AACJ,QAAA,MAAM,aAAgB,GAAA;AAAA,UACpB,MAAQ,EAAA,aAAA;AAAA,UACR,MAAQ,EAAA,aAAA;AAAA,UACR,SAAW,EAAA,gBAAA;AAAA,UACX,IAAM,EAAA,WAAA;AAAA,UACN,QAAU,EAAA;AAAA,SACZ;AAEA,QAAA,OAAO,IAAI,uBAAwB,CAAA;AAAA,UACjC,gBAAA;AAAA,UACA,aAAA;AAAA,UACA;AAAA,SACD,CAAA;AAAA;AACH,KACD;AAAA;AAEL,CAAC;AAEY,MAAA,iCAAA,GAAoC,aAAa,IAAK,CAAA;AAAA,EACjE,IAAM,EAAA,wBAAA;AAAA,EACN,MAAQ,EAAA;AAAA,IACN,SAAS,gBAAiB,CAAA;AAAA,MACxB,GAAK,EAAA,oCAAA;AAAA,MACL,IAAA,EAAM,EAAE,aAAA,EAAe,gBAAiB,EAAA;AAAA,MACxC,SAAS,CAAQ,IAAA,KAAA;AACf,QAAM,MAAA,UAAA,GAAa,qBAAqB,IAAI,CAAA;AAC5C,QAAA,OAAO,IAAI,8BAA+B,CAAA;AAAA,UACxC,UAAA;AAAA,UACA,oBAAsB,EAAA;AAAA,SACvB,CAAA;AAAA;AACH,KACD;AAAA;AAEL,CAAC;;;;"}