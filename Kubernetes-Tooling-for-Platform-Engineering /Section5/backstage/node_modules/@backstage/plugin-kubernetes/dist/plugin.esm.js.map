{"version":3,"file":"plugin.esm.js","sources":["../src/plugin.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  KubernetesBackendClient,\n  kubernetesApiRef,\n  kubernetesProxyApiRef,\n  kubernetesAuthProvidersApiRef,\n  KubernetesAuthProviders,\n  KubernetesProxyClient,\n  kubernetesClusterLinkFormatterApiRef,\n  getDefaultFormatters,\n  KubernetesClusterLinkFormatter,\n  DEFAULT_FORMATTER_NAME,\n} from '@backstage/plugin-kubernetes-react';\nimport {\n  createApiFactory,\n  createPlugin,\n  createRouteRef,\n  discoveryApiRef,\n  gitlabAuthApiRef,\n  googleAuthApiRef,\n  microsoftAuthApiRef,\n  oktaAuthApiRef,\n  oneloginAuthApiRef,\n  createRoutableExtension,\n  fetchApiRef,\n} from '@backstage/core-plugin-api';\n\nexport const rootCatalogKubernetesRouteRef = createRouteRef({\n  id: 'kubernetes',\n});\n\nexport const kubernetesPlugin = createPlugin({\n  id: 'kubernetes',\n  apis: [\n    createApiFactory({\n      api: kubernetesApiRef,\n      deps: {\n        discoveryApi: discoveryApiRef,\n        fetchApi: fetchApiRef,\n        kubernetesAuthProvidersApi: kubernetesAuthProvidersApiRef,\n      },\n      factory: ({ discoveryApi, fetchApi, kubernetesAuthProvidersApi }) =>\n        new KubernetesBackendClient({\n          discoveryApi,\n          fetchApi,\n          kubernetesAuthProvidersApi,\n        }),\n    }),\n    createApiFactory({\n      api: kubernetesProxyApiRef,\n      deps: {\n        kubernetesApi: kubernetesApiRef,\n      },\n      factory: ({ kubernetesApi }) =>\n        new KubernetesProxyClient({\n          kubernetesApi,\n        }),\n    }),\n    createApiFactory({\n      api: kubernetesAuthProvidersApiRef,\n      deps: {\n        gitlabAuthApi: gitlabAuthApiRef,\n        googleAuthApi: googleAuthApiRef,\n        microsoftAuthApi: microsoftAuthApiRef,\n        oktaAuthApi: oktaAuthApiRef,\n        oneloginAuthApi: oneloginAuthApiRef,\n      },\n      factory: ({\n        gitlabAuthApi,\n        googleAuthApi,\n        microsoftAuthApi,\n        oktaAuthApi,\n        oneloginAuthApi,\n      }) => {\n        const oidcProviders = {\n          gitlab: gitlabAuthApi,\n          google: googleAuthApi,\n          microsoft: microsoftAuthApi,\n          okta: oktaAuthApi,\n          onelogin: oneloginAuthApi,\n        };\n\n        return new KubernetesAuthProviders({\n          microsoftAuthApi,\n          googleAuthApi,\n          oidcProviders,\n        });\n      },\n    }),\n    createApiFactory({\n      api: kubernetesClusterLinkFormatterApiRef,\n      deps: { googleAuthApi: googleAuthApiRef },\n      factory: deps => {\n        const formatters = getDefaultFormatters(deps);\n        return new KubernetesClusterLinkFormatter({\n          formatters,\n          defaultFormatterName: DEFAULT_FORMATTER_NAME,\n        });\n      },\n    }),\n  ],\n  routes: {\n    entityContent: rootCatalogKubernetesRouteRef,\n  },\n});\n\n/**\n * Props of EntityKubernetesContent\n *\n * @public\n */\nexport type EntityKubernetesContentProps = {\n  /**\n   * Sets the refresh interval in milliseconds. The default value is 10000 (10 seconds)\n   */\n  refreshIntervalMs?: number;\n};\n\nexport const EntityKubernetesContent: (\n  props: EntityKubernetesContentProps,\n) => JSX.Element = kubernetesPlugin.provide(\n  createRoutableExtension({\n    name: 'EntityKubernetesContent',\n    component: () => import('./Router').then(m => m.Router),\n    mountPoint: rootCatalogKubernetesRouteRef,\n  }),\n);\n"],"names":[],"mappings":";;;AAyCO,MAAM,gCAAgC,cAAe,CAAA;AAAA,EAC1D,EAAI,EAAA;AACN,CAAC;AAEM,MAAM,mBAAmB,YAAa,CAAA;AAAA,EAC3C,EAAI,EAAA,YAAA;AAAA,EACJ,IAAM,EAAA;AAAA,IACJ,gBAAiB,CAAA;AAAA,MACf,GAAK,EAAA,gBAAA;AAAA,MACL,IAAM,EAAA;AAAA,QACJ,YAAc,EAAA,eAAA;AAAA,QACd,QAAU,EAAA,WAAA;AAAA,QACV,0BAA4B,EAAA;AAAA,OAC9B;AAAA,MACA,OAAA,EAAS,CAAC,EAAE,YAAA,EAAc,UAAU,0BAA2B,EAAA,KAC7D,IAAI,uBAAwB,CAAA;AAAA,QAC1B,YAAA;AAAA,QACA,QAAA;AAAA,QACA;AAAA,OACD;AAAA,KACJ,CAAA;AAAA,IACD,gBAAiB,CAAA;AAAA,MACf,GAAK,EAAA,qBAAA;AAAA,MACL,IAAM,EAAA;AAAA,QACJ,aAAe,EAAA;AAAA,OACjB;AAAA,MACA,SAAS,CAAC,EAAE,aAAc,EAAA,KACxB,IAAI,qBAAsB,CAAA;AAAA,QACxB;AAAA,OACD;AAAA,KACJ,CAAA;AAAA,IACD,gBAAiB,CAAA;AAAA,MACf,GAAK,EAAA,6BAAA;AAAA,MACL,IAAM,EAAA;AAAA,QACJ,aAAe,EAAA,gBAAA;AAAA,QACf,aAAe,EAAA,gBAAA;AAAA,QACf,gBAAkB,EAAA,mBAAA;AAAA,QAClB,WAAa,EAAA,cAAA;AAAA,QACb,eAAiB,EAAA;AAAA,OACnB;AAAA,MACA,SAAS,CAAC;AAAA,QACR,aAAA;AAAA,QACA,aAAA;AAAA,QACA,gBAAA;AAAA,QACA,WAAA;AAAA,QACA;AAAA,OACI,KAAA;AACJ,QAAA,MAAM,aAAgB,GAAA;AAAA,UACpB,MAAQ,EAAA,aAAA;AAAA,UACR,MAAQ,EAAA,aAAA;AAAA,UACR,SAAW,EAAA,gBAAA;AAAA,UACX,IAAM,EAAA,WAAA;AAAA,UACN,QAAU,EAAA;AAAA,SACZ;AAEA,QAAA,OAAO,IAAI,uBAAwB,CAAA;AAAA,UACjC,gBAAA;AAAA,UACA,aAAA;AAAA,UACA;AAAA,SACD,CAAA;AAAA;AACH,KACD,CAAA;AAAA,IACD,gBAAiB,CAAA;AAAA,MACf,GAAK,EAAA,oCAAA;AAAA,MACL,IAAA,EAAM,EAAE,aAAA,EAAe,gBAAiB,EAAA;AAAA,MACxC,SAAS,CAAQ,IAAA,KAAA;AACf,QAAM,MAAA,UAAA,GAAa,qBAAqB,IAAI,CAAA;AAC5C,QAAA,OAAO,IAAI,8BAA+B,CAAA;AAAA,UACxC,UAAA;AAAA,UACA,oBAAsB,EAAA;AAAA,SACvB,CAAA;AAAA;AACH,KACD;AAAA,GACH;AAAA,EACA,MAAQ,EAAA;AAAA,IACN,aAAe,EAAA;AAAA;AAEnB,CAAC;AAcM,MAAM,0BAEM,gBAAiB,CAAA,OAAA;AAAA,EAClC,uBAAwB,CAAA;AAAA,IACtB,IAAM,EAAA,yBAAA;AAAA,IACN,SAAA,EAAW,MAAM,OAAO,iBAAU,EAAE,IAAK,CAAA,CAAA,CAAA,KAAK,EAAE,MAAM,CAAA;AAAA,IACtD,UAAY,EAAA;AAAA,GACb;AACH;;;;"}