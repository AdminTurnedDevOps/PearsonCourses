{"version":3,"file":"KubernetesContent.esm.js","sources":["../src/KubernetesContent.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Entity } from '@backstage/catalog-model';\nimport {\n  ErrorPanel,\n  ErrorReporting,\n  Cluster,\n  useKubernetesObjects,\n  DetectedErrorsContext,\n} from '@backstage/plugin-kubernetes-react';\nimport {\n  DetectedError,\n  detectErrors,\n} from '@backstage/plugin-kubernetes-common';\nimport {\n  Content,\n  EmptyState,\n  Page,\n  Progress,\n} from '@backstage/core-components';\n\ntype KubernetesContentProps = {\n  entity: Entity;\n  refreshIntervalMs?: number;\n  children?: React.ReactNode;\n};\n\nexport const KubernetesContent = ({\n  entity,\n  refreshIntervalMs,\n}: KubernetesContentProps) => {\n  const { kubernetesObjects, error } = useKubernetesObjects(\n    entity,\n    refreshIntervalMs,\n  );\n\n  const clusters = kubernetesObjects?.items.map(item => item.cluster) ?? [];\n\n  const clustersWithErrors =\n    kubernetesObjects?.items.filter(r => r.errors.length > 0) ?? [];\n\n  const detectedErrors =\n    kubernetesObjects !== undefined\n      ? detectErrors(kubernetesObjects)\n      : new Map<string, DetectedError[]>();\n\n  return (\n    <DetectedErrorsContext.Provider value={[...detectedErrors.values()].flat()}>\n      <Page themeId=\"tool\">\n        <Content>\n          {kubernetesObjects === undefined && error === undefined && (\n            <Progress />\n          )}\n\n          {/* errors retrieved from the kubernetes clusters */}\n          {clustersWithErrors.length > 0 && (\n            <Grid container spacing={3} direction=\"column\">\n              <Grid item>\n                <ErrorPanel\n                  entityName={entity.metadata.name}\n                  clustersWithErrors={clustersWithErrors}\n                />\n              </Grid>\n            </Grid>\n          )}\n\n          {/* other errors */}\n          {error !== undefined && (\n            <Grid container spacing={3} direction=\"column\">\n              <Grid item>\n                <ErrorPanel\n                  entityName={entity.metadata.name}\n                  errorMessage={error}\n                />\n              </Grid>\n            </Grid>\n          )}\n\n          {kubernetesObjects && (\n            <Grid container spacing={3} direction=\"column\">\n              <Grid item>\n                <ErrorReporting\n                  detectedErrors={detectedErrors}\n                  clusters={clusters}\n                />\n              </Grid>\n              <Grid item>\n                <Typography variant=\"h3\">Your Clusters</Typography>\n              </Grid>\n              <Grid item container>\n                {kubernetesObjects?.items.length <= 0 && (\n                  <Grid\n                    container\n                    justifyContent=\"space-around\"\n                    direction=\"row\"\n                    alignItems=\"center\"\n                    spacing={2}\n                  >\n                    <Grid item xs={8}>\n                      <EmptyState\n                        missing=\"data\"\n                        title=\"No Kubernetes resources\"\n                        description={`No resources on any known clusters for ${entity.metadata.name}`}\n                      />\n                    </Grid>\n                  </Grid>\n                )}\n                {kubernetesObjects?.items.length > 0 &&\n                  kubernetesObjects?.items.map((item, i) => {\n                    const podsWithErrors = new Set<string>(\n                      detectedErrors\n                        .get(item.cluster.name)\n                        ?.filter(de => de.sourceRef.kind === 'Pod')\n                        .map(de => de.sourceRef.name),\n                    );\n\n                    return (\n                      <Grid item key={i} xs={12}>\n                        <Cluster\n                          clusterObjects={item}\n                          podsWithErrors={podsWithErrors}\n                        />\n                      </Grid>\n                    );\n                  })}\n              </Grid>\n            </Grid>\n          )}\n        </Content>\n      </Page>\n    </DetectedErrorsContext.Provider>\n  );\n};\n"],"names":[],"mappings":"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"}