{"version":3,"file":"authenticator.cjs.js","sources":["../src/authenticator.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport crypto from 'crypto';\nimport {\n  custom,\n  CustomHttpOptionsProvider,\n  Issuer,\n  ClientAuthMethod,\n  TokenSet,\n  UserinfoResponse,\n  Strategy as OidcStrategy,\n} from 'openid-client';\nimport {\n  createOAuthAuthenticator,\n  OAuthAuthenticatorResult,\n  PassportDoneCallback,\n  PassportHelpers,\n  PassportOAuthAuthenticatorHelper,\n  PassportOAuthPrivateInfo,\n} from '@backstage/plugin-auth-node';\n\nconst HTTP_OPTION_TIMEOUT = 10000;\nconst httpOptionsProvider: CustomHttpOptionsProvider = (_url, options) => {\n  return {\n    ...options,\n    timeout: HTTP_OPTION_TIMEOUT,\n  };\n};\n\n/**\n * authentication result for the OIDC which includes the token set and user\n * profile response\n * @public\n */\nexport type OidcAuthResult = {\n  tokenset: TokenSet;\n  userinfo: UserinfoResponse;\n};\n\n/** @public */\nexport const oidcAuthenticator = createOAuthAuthenticator({\n  defaultProfileTransform: async (\n    input: OAuthAuthenticatorResult<OidcAuthResult>,\n  ) => ({\n    profile: {\n      email: input.fullProfile.userinfo.email,\n      picture: input.fullProfile.userinfo.picture,\n      displayName: input.fullProfile.userinfo.name,\n    },\n  }),\n  scopes: {\n    persist: true,\n    required: ['openid', 'profile', 'email'],\n  },\n  initialize({ callbackUrl, config }) {\n    const clientId = config.getString('clientId');\n    const clientSecret = config.getString('clientSecret');\n    const metadataUrl = config.getString('metadataUrl');\n    const customCallbackUrl = config.getOptionalString('callbackUrl');\n    const tokenEndpointAuthMethod = config.getOptionalString(\n      'tokenEndpointAuthMethod',\n    ) as ClientAuthMethod;\n    const tokenSignedResponseAlg = config.getOptionalString(\n      'tokenSignedResponseAlg',\n    );\n    const initializedPrompt = config.getOptionalString('prompt');\n\n    if (config.has('scope')) {\n      throw new Error(\n        'The oidc provider no longer supports the \"scope\" configuration option. Please use the \"additionalScopes\" option instead.',\n      );\n    }\n\n    Issuer[custom.http_options] = httpOptionsProvider;\n    const promise = Issuer.discover(metadataUrl).then(issuer => {\n      issuer[custom.http_options] = httpOptionsProvider;\n      issuer.Client[custom.http_options] = httpOptionsProvider;\n\n      const client = new issuer.Client({\n        access_type: 'offline', // this option must be passed to provider to receive a refresh token\n        client_id: clientId,\n        client_secret: clientSecret,\n        redirect_uris: [customCallbackUrl || callbackUrl],\n        response_types: ['code'],\n        token_endpoint_auth_method:\n          tokenEndpointAuthMethod || 'client_secret_basic',\n        id_token_signed_response_alg: tokenSignedResponseAlg || 'RS256',\n      });\n      client[custom.http_options] = httpOptionsProvider;\n\n      const strategy = new OidcStrategy(\n        {\n          client,\n          passReqToCallback: false,\n        },\n        (\n          tokenset: TokenSet,\n          userinfo: UserinfoResponse,\n          done: PassportDoneCallback<OidcAuthResult, PassportOAuthPrivateInfo>,\n        ) => {\n          if (typeof done !== 'function') {\n            throw new Error(\n              'OIDC IdP must provide a userinfo_endpoint in the metadata response',\n            );\n          }\n\n          done(\n            undefined,\n            { tokenset, userinfo },\n            { refreshToken: tokenset.refresh_token },\n          );\n        },\n      );\n\n      const helper = PassportOAuthAuthenticatorHelper.from(strategy);\n      return { helper, client, strategy };\n    });\n\n    return { initializedPrompt, promise };\n  },\n\n  async start(input, ctx) {\n    const { initializedPrompt, promise } = ctx;\n    const { helper, strategy } = await promise;\n    const options: Record<string, string> = {\n      scope: input.scope,\n      state: input.state,\n      nonce: crypto.randomBytes(16).toString('base64'),\n    };\n    const prompt = initializedPrompt || 'none';\n    if (prompt !== 'auto') {\n      options.prompt = prompt;\n    }\n\n    return new Promise((resolve, reject) => {\n      strategy.error = reject;\n\n      return helper\n        .start(input, {\n          ...options,\n        })\n        .then(resolve);\n    });\n  },\n\n  async authenticate(\n    input,\n    ctx,\n  ): Promise<OAuthAuthenticatorResult<OidcAuthResult>> {\n    const { strategy } = await ctx.promise;\n    const { result, privateInfo } =\n      await PassportHelpers.executeFrameHandlerStrategy<\n        OidcAuthResult,\n        PassportOAuthPrivateInfo\n      >(input.req, strategy);\n\n    return {\n      fullProfile: result,\n      session: {\n        accessToken: result.tokenset.access_token!,\n        tokenType: result.tokenset.token_type ?? 'bearer',\n        scope: result.tokenset.scope!,\n        expiresInSeconds: result.tokenset.expires_in,\n        idToken: result.tokenset.id_token,\n        refreshToken: privateInfo.refreshToken,\n      },\n    };\n  },\n\n  async refresh(input, ctx) {\n    const { client } = await ctx.promise;\n    const tokenset = await client.refresh(input.refreshToken);\n    if (!tokenset.access_token) {\n      throw new Error('Refresh failed');\n    }\n    const userinfo = await client.userinfo(tokenset.access_token);\n\n    return new Promise((resolve, reject) => {\n      if (!tokenset.access_token) {\n        reject(new Error('Refresh Failed'));\n      }\n      resolve({\n        fullProfile: { userinfo, tokenset },\n        session: {\n          accessToken: tokenset.access_token!,\n          tokenType: tokenset.token_type ?? 'bearer',\n          scope: tokenset.scope!,\n          expiresInSeconds: tokenset.expires_in,\n          idToken: tokenset.id_token,\n          refreshToken: tokenset.refresh_token,\n        },\n      });\n    });\n  },\n\n  async logout(input, ctx) {\n    const { client } = await ctx.promise;\n    const issuer = client.issuer;\n    /**\n     * https://github.com/panva/node-openid-client/blob/main/lib/client.js#L1398\n     * client.revoke will check revocation_endpoint and if undefined throw error。\n     *\n     * if oidc server do not provide revocation_endpoint，we should not call revoke function\n     */\n\n    if (input.refreshToken && issuer.revocation_endpoint) {\n      await client.revoke(input.refreshToken);\n    }\n  },\n});\n"],"names":["createOAuthAuthenticator","Issuer","custom","OidcStrategy","PassportOAuthAuthenticatorHelper","crypto","PassportHelpers"],"mappings":"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"}