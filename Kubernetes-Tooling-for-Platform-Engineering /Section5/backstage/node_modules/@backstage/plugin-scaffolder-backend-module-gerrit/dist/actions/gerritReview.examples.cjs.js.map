{"version":3,"file":"gerritReview.examples.cjs.js","sources":["../../src/actions/gerritReview.examples.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description: 'Creates a new Gerrit review with minimal options',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gerrit:review',\n          name: 'Publish new gerrit review',\n          input: {\n            repoUrl: 'gerrithost.org?repo=repo&owner=owner',\n            gitCommitMessage: 'Initial Commit Message',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Creates a new Gerrit review with gitAuthorName',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gerrit:review',\n          name: 'Publish new gerrit review',\n          input: {\n            repoUrl: 'gerrithost.org?repo=repo&owner=owner',\n            gitCommitMessage: 'Initial Commit Message',\n            gitAuthorName: 'Test User',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Creates a new Gerrit review with gitAuthorEmail',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gerrit:review',\n          name: 'Publish new gerrit review',\n          input: {\n            repoUrl: 'gerrithost.org?repo=repo&owner=owner',\n            gitCommitMessage: 'Initial Commit Message',\n            gitAuthorName: 'Test User',\n            gitAuthorEmail: 'test.user@example.com',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Creates a new Gerrit review with custom branch',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gerrit:review',\n          name: 'Publish new gerrit review',\n          input: {\n            repoUrl: 'gerrithost.org?repo=repo&owner=owner',\n            gitCommitMessage: 'Initial Commit Message',\n            branch: 'develop',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Creates a new Gerrit review with custom sourcePath',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gerrit:review',\n          name: 'Publish new gerrit review',\n          input: {\n            repoUrl: 'gerrithost.org?repo=repo&owner=owner',\n            gitCommitMessage: 'Initial Commit Message',\n            sourcePath: './src',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Creates a new Gerrit review with all properties',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gerrit:review',\n          name: 'Publish new gerrit review',\n          input: {\n            repoUrl: 'gerrithost.org?repo=repo&owner=owner',\n            gitCommitMessage: 'Initial Commit Message',\n            gitAuthorName: 'Test User',\n            gitAuthorEmail: 'test.user@example.com',\n            branch: 'develop',\n            sourcePath: './src',\n          },\n        },\n      ],\n    }),\n  },\n];\n"],"names":["yaml"],"mappings":";;;;;;;;AAmBO,MAAM,QAA8B,GAAA;AAAA,EACzC;AAAA,IACE,WAAa,EAAA,kDAAA;AAAA,IACb,OAAA,EAASA,sBAAK,SAAU,CAAA;AAAA,MACtB,KAAO,EAAA;AAAA,QACL;AAAA,UACE,EAAI,EAAA,SAAA;AAAA,UACJ,MAAQ,EAAA,uBAAA;AAAA,UACR,IAAM,EAAA,2BAAA;AAAA,UACN,KAAO,EAAA;AAAA,YACL,OAAS,EAAA,sCAAA;AAAA,YACT,gBAAkB,EAAA;AAAA;AACpB;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAa,EAAA,gDAAA;AAAA,IACb,OAAA,EAASA,sBAAK,SAAU,CAAA;AAAA,MACtB,KAAO,EAAA;AAAA,QACL;AAAA,UACE,EAAI,EAAA,SAAA;AAAA,UACJ,MAAQ,EAAA,uBAAA;AAAA,UACR,IAAM,EAAA,2BAAA;AAAA,UACN,KAAO,EAAA;AAAA,YACL,OAAS,EAAA,sCAAA;AAAA,YACT,gBAAkB,EAAA,wBAAA;AAAA,YAClB,aAAe,EAAA;AAAA;AACjB;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAa,EAAA,iDAAA;AAAA,IACb,OAAA,EAASA,sBAAK,SAAU,CAAA;AAAA,MACtB,KAAO,EAAA;AAAA,QACL;AAAA,UACE,EAAI,EAAA,SAAA;AAAA,UACJ,MAAQ,EAAA,uBAAA;AAAA,UACR,IAAM,EAAA,2BAAA;AAAA,UACN,KAAO,EAAA;AAAA,YACL,OAAS,EAAA,sCAAA;AAAA,YACT,gBAAkB,EAAA,wBAAA;AAAA,YAClB,aAAe,EAAA,WAAA;AAAA,YACf,cAAgB,EAAA;AAAA;AAClB;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAa,EAAA,gDAAA;AAAA,IACb,OAAA,EAASA,sBAAK,SAAU,CAAA;AAAA,MACtB,KAAO,EAAA;AAAA,QACL;AAAA,UACE,EAAI,EAAA,SAAA;AAAA,UACJ,MAAQ,EAAA,uBAAA;AAAA,UACR,IAAM,EAAA,2BAAA;AAAA,UACN,KAAO,EAAA;AAAA,YACL,OAAS,EAAA,sCAAA;AAAA,YACT,gBAAkB,EAAA,wBAAA;AAAA,YAClB,MAAQ,EAAA;AAAA;AACV;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAa,EAAA,oDAAA;AAAA,IACb,OAAA,EAASA,sBAAK,SAAU,CAAA;AAAA,MACtB,KAAO,EAAA;AAAA,QACL;AAAA,UACE,EAAI,EAAA,SAAA;AAAA,UACJ,MAAQ,EAAA,uBAAA;AAAA,UACR,IAAM,EAAA,2BAAA;AAAA,UACN,KAAO,EAAA;AAAA,YACL,OAAS,EAAA,sCAAA;AAAA,YACT,gBAAkB,EAAA,wBAAA;AAAA,YAClB,UAAY,EAAA;AAAA;AACd;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAa,EAAA,iDAAA;AAAA,IACb,OAAA,EAASA,sBAAK,SAAU,CAAA;AAAA,MACtB,KAAO,EAAA;AAAA,QACL;AAAA,UACE,EAAI,EAAA,SAAA;AAAA,UACJ,MAAQ,EAAA,uBAAA;AAAA,UACR,IAAM,EAAA,2BAAA;AAAA,UACN,KAAO,EAAA;AAAA,YACL,OAAS,EAAA,sCAAA;AAAA,YACT,gBAAkB,EAAA,wBAAA;AAAA,YAClB,aAAe,EAAA,WAAA;AAAA,YACf,cAAgB,EAAA,uBAAA;AAAA,YAChB,MAAQ,EAAA,SAAA;AAAA,YACR,UAAY,EAAA;AAAA;AACd;AACF;AACF,KACD;AAAA;AAEL;;;;"}