{"version":3,"file":"gerrit.examples.cjs.js","sources":["../../src/actions/gerrit.examples.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description:\n      'Initializes a Gerrit repository of contents in workspace and publish it to Gerrit with default configuration.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gerrit',\n          name: 'Publish to Gerrit',\n          input: {\n            repoUrl: 'gerrit.com?repo=repo&owner=owner',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Initializes a Gerrit repository with a description.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gerrit',\n          name: 'Publish to Gerrit',\n          input: {\n            repoUrl: 'gerrit.com?repo=repo&owner=owner',\n            description: 'Initialize a gerrit repository',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initializes a Gerrit repository with a default Branch, if not set defaults to master',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gerrit',\n          name: 'Publish to Gerrit',\n          input: {\n            repoUrl: 'gerrit.com?repo=repo&owner=owner',\n            defaultBranch: 'staging',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initializes a Gerrit repository with an initial commit message, if not set defaults to initial commit',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gerrit',\n          name: 'Publish to Gerrit',\n          input: {\n            repoUrl: 'gerrit.com?repo=repo&owner=owner',\n            gitCommitMessage: 'Initial Commit Message',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initializes a Gerrit repository with a repo Author Name, if not set defaults to Scaffolder',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gerrit',\n          name: 'Publish to Gerrit',\n          input: {\n            repoUrl: 'gerrit.com?repo=repo&owner=owner',\n            gitAuthorName: 'John Doe',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Initializes a Gerrit repository with a repo Author Email',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gerrit',\n          name: 'Publish to Gerrit',\n          input: {\n            repoUrl: 'gerrit.com?repo=repo&owner=owner',\n            gitAuthorEmail: 'johndoe@email.com',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Path within the workspace that will be used as the repository root. If omitted, the entire workspace will be published as the repository',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gerrit',\n          name: 'Publish to Gerrit',\n          input: {\n            repoUrl: 'gerrit.com?repo=repo&owner=owner',\n            sourcePath: 'repository/',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initializes a Gerrit repository with all proporties being set',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gerrit',\n          name: 'Publish to Gerrit',\n          input: {\n            repoUrl: 'gerrit.com?repo=repo&owner=owner',\n            description: 'Initialize a gerrit repository',\n            defaultBranch: 'staging',\n            gitCommitMessage: 'Initial Commit Message',\n            gitAuthorName: 'John Doe',\n            gitAuthorEmail: 'johndoe@email.com',\n            sourcePath: 'repository/',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initialize a Gerrit Repository with Custom Default Branch and Commit Message',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gerrit',\n          name: 'Publish to Gerrit',\n          input: {\n            repoUrl: 'gerrit.com?repo=repo&owner=owner',\n            defaultBranch: 'feature-branch',\n            gitCommitMessage: 'Feature branch initialized',\n          },\n        },\n      ],\n    }),\n  },\n];\n"],"names":["yaml"],"mappings":"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"}