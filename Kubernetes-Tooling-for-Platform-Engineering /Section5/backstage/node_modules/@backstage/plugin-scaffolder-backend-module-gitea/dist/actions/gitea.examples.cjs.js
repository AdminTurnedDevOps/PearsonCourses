'use strict';

var yaml = require('yaml');

function _interopDefaultCompat (e) { return e && typeof e === 'object' && 'default' in e ? e : { default: e }; }

var yaml__default = /*#__PURE__*/_interopDefaultCompat(yaml);

const examples = [
  {
    description: "Initializes a git repository with the content in the workspace, and publishes it to Gitea with the default configuration.",
    example: yaml__default.default.stringify({
      steps: [
        {
          id: "publish",
          action: "publish:gitea",
          name: "Publish to Gitea",
          input: {
            repoUrl: "gitea.com?repo=repo&owner=owner"
          }
        }
      ]
    })
  },
  {
    description: "Initializes a Gitea repository with a description.",
    example: yaml__default.default.stringify({
      steps: [
        {
          id: "publish",
          action: "publish:gitea",
          name: "Publish to Gitea",
          input: {
            repoUrl: "gitea.com?repo=repo&owner=owner",
            description: "Initialize a gitea repository"
          }
        }
      ]
    })
  },
  {
    description: "Initializes a private Gitea repository ",
    example: yaml__default.default.stringify({
      steps: [
        {
          id: "publish",
          action: "publish:gitea",
          name: "Publish to Gitea",
          input: {
            repoUrl: "gitea.com?repo=repo&owner=owner",
            defaultBranch: "main",
            repoVisibility: "private"
          }
        }
      ]
    })
  },
  {
    description: "Initializes a Gitea repository with a default Branch, if not set defaults to main",
    example: yaml__default.default.stringify({
      steps: [
        {
          id: "publish",
          action: "publish:gitea",
          name: "Publish to Gitea",
          input: {
            repoUrl: "gitea.com?repo=repo&owner=owner",
            defaultBranch: "staging"
          }
        }
      ]
    })
  },
  {
    description: "Initializes a Gitea repository with an initial commit message, if not set defaults to `initial commit`",
    example: yaml__default.default.stringify({
      steps: [
        {
          id: "publish",
          action: "publish:gitea",
          name: "Publish to Gitea",
          input: {
            repoUrl: "gitea.com?repo=repo&owner=owner",
            gitCommitMessage: "Initial Commit Message"
          }
        }
      ]
    })
  },
  {
    description: "Initializes a Gitea repository with a repo Author Name, if not set defaults to Scaffolder",
    example: yaml__default.default.stringify({
      steps: [
        {
          id: "publish",
          action: "publish:gitea",
          name: "Publish to Gitea",
          input: {
            repoUrl: "gitea.com?repo=repo&owner=owner",
            gitAuthorName: "John Doe"
          }
        }
      ]
    })
  },
  {
    description: "Initializes a Gitea repository with a repo Author Email",
    example: yaml__default.default.stringify({
      steps: [
        {
          id: "publish",
          action: "publish:gitea",
          name: "Publish to Gitea",
          input: {
            repoUrl: "gitea.com?repo=repo&owner=owner",
            gitAuthorEmail: "johndoe@email.com"
          }
        }
      ]
    })
  },
  {
    description: "Path within the workspace that will be used as the repository root. If omitted, the entire workspace will be published as the repository",
    example: yaml__default.default.stringify({
      steps: [
        {
          id: "publish",
          action: "publish:gitea",
          name: "Publish to Gitea",
          input: {
            repoUrl: "gitea.com?repo=repo&owner=owner",
            sourcePath: "repository/"
          }
        }
      ]
    })
  },
  {
    description: "Initializes a Gitea repository with all properties being set",
    example: yaml__default.default.stringify({
      steps: [
        {
          id: "publish",
          action: "publish:gitea",
          name: "Publish to Gitea",
          input: {
            repoUrl: "gitea.com?repo=repo&owner=owner",
            description: "Initialize a gitea repository",
            defaultBranch: "staging",
            gitCommitMessage: "Initial Commit Message",
            gitAuthorName: "John Doe",
            gitAuthorEmail: "johndoe@email.com",
            sourcePath: "repository/",
            repoVisibility: "public"
          }
        }
      ]
    })
  }
];

exports.examples = examples;
//# sourceMappingURL=gitea.examples.cjs.js.map
