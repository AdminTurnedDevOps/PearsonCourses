import { useApp } from '@backstage/core-plugin-api';
import LanguageIcon from '@material-ui/icons/Language';
import ListItem from '@material-ui/core/ListItem';
import ListItemIcon from '@material-ui/core/ListItemIcon';
import ListItemText from '@material-ui/core/ListItemText';
import Divider from '@material-ui/core/Divider';
import React from 'react';
import { Link } from '@backstage/core-components';

const WebLink = ({
  href,
  Icon,
  text
}) => /* @__PURE__ */ React.createElement(ListItem, { key: href }, /* @__PURE__ */ React.createElement(ListItemIcon, null, Icon ? /* @__PURE__ */ React.createElement(Icon, null) : /* @__PURE__ */ React.createElement(LanguageIcon, null)), /* @__PURE__ */ React.createElement(ListItemText, null, /* @__PURE__ */ React.createElement(Link, { to: href }, text)));
const LinksGroup = ({ links }) => {
  const app = useApp();
  const iconResolver = (key) => key ? app.getSystemIcon(key) ?? LanguageIcon : LanguageIcon;
  if (links === void 0) {
    return null;
  }
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(Divider, null), links.map((link) => {
    return /* @__PURE__ */ React.createElement(
      WebLink,
      {
        key: link.url,
        href: link.url,
        text: link.title,
        Icon: iconResolver(link.icon)
      }
    );
  }));
};

export { LinksGroup };
//# sourceMappingURL=LinksGroup.esm.js.map
