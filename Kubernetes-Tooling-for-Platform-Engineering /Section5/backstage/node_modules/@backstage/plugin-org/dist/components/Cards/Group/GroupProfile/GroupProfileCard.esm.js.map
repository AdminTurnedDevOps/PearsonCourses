{"version":3,"file":"GroupProfileCard.esm.js","sources":["../../../../../src/components/Cards/Group/GroupProfile/GroupProfileCard.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ANNOTATION_EDIT_URL,\n  ANNOTATION_LOCATION,\n  GroupEntity,\n  RELATION_CHILD_OF,\n  RELATION_PARENT_OF,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport {\n  Avatar,\n  InfoCard,\n  InfoCardVariants,\n  Link,\n} from '@backstage/core-components';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport {\n  EntityRefLinks,\n  catalogApiRef,\n  getEntityRelations,\n  useEntity,\n} from '@backstage/plugin-catalog-react';\nimport React, { useCallback } from 'react';\nimport { alertApiRef, useApi } from '@backstage/core-plugin-api';\n\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport Alert from '@material-ui/lab/Alert';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EmailIcon from '@material-ui/icons/Email';\nimport GroupIcon from '@material-ui/icons/Group';\nimport { LinksGroup } from '../../Meta';\nimport { useEntityPermission } from '@backstage/plugin-catalog-react/alpha';\nimport { catalogEntityRefreshPermission } from '@backstage/plugin-catalog-common/alpha';\n\nconst CardTitle = (props: { title: string }) => (\n  <Box display=\"flex\" alignItems=\"center\">\n    <GroupIcon fontSize=\"inherit\" />\n    <Box ml={1}>{props.title}</Box>\n  </Box>\n);\n\n/** @public */\nexport const GroupProfileCard = (props: {\n  variant?: InfoCardVariants;\n  showLinks?: boolean;\n}) => {\n  const catalogApi = useApi(catalogApiRef);\n  const alertApi = useApi(alertApiRef);\n  const { entity: group } = useEntity<GroupEntity>();\n  const { allowed: canRefresh } = useEntityPermission(\n    catalogEntityRefreshPermission,\n  );\n\n  const refreshEntity = useCallback(async () => {\n    await catalogApi.refreshEntity(stringifyEntityRef(group));\n    alertApi.post({\n      message: 'Refresh scheduled',\n      severity: 'info',\n      display: 'transient',\n    });\n  }, [catalogApi, alertApi, group]);\n\n  if (!group) {\n    return <Alert severity=\"error\">Group not found</Alert>;\n  }\n\n  const {\n    metadata: { name, description, title, annotations, links },\n    spec: { profile },\n  } = group;\n\n  const childRelations = getEntityRelations(group, RELATION_PARENT_OF, {\n    kind: 'Group',\n  });\n  const parentRelations = getEntityRelations(group, RELATION_CHILD_OF, {\n    kind: 'group',\n  });\n\n  const entityLocation = annotations?.[ANNOTATION_LOCATION];\n  const allowRefresh =\n    entityLocation?.startsWith('url:') || entityLocation?.startsWith('file:');\n\n  const entityMetadataEditUrl =\n    group.metadata.annotations?.[ANNOTATION_EDIT_URL];\n\n  const displayName = profile?.displayName ?? title ?? name;\n  const emailHref = profile?.email ? `mailto:${profile.email}` : '#';\n  const infoCardAction = entityMetadataEditUrl ? (\n    <IconButton\n      aria-label=\"Edit\"\n      title=\"Edit Metadata\"\n      component={Link}\n      to={entityMetadataEditUrl}\n    >\n      <EditIcon />\n    </IconButton>\n  ) : (\n    <IconButton aria-label=\"Edit\" disabled title=\"Edit Metadata\">\n      <EditIcon />\n    </IconButton>\n  );\n\n  return (\n    <InfoCard\n      title={<CardTitle title={displayName} />}\n      subheader={description}\n      variant={props.variant}\n      action={\n        <>\n          {allowRefresh && canRefresh && (\n            <IconButton\n              aria-label=\"Refresh\"\n              title=\"Schedule entity refresh\"\n              onClick={refreshEntity}\n            >\n              <CachedIcon />\n            </IconButton>\n          )}\n          {infoCardAction}\n        </>\n      }\n    >\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={2} xl={1}>\n          <Avatar displayName={displayName} picture={profile?.picture} />\n        </Grid>\n        <Grid item md={10} xl={11}>\n          <List>\n            {profile?.email && (\n              <ListItem>\n                <ListItemIcon>\n                  <Tooltip title=\"Email\">\n                    <EmailIcon />\n                  </Tooltip>\n                </ListItemIcon>\n                <ListItemText\n                  primary={<Link to={emailHref}>{profile.email}</Link>}\n                  secondary=\"Email\"\n                />\n              </ListItem>\n            )}\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Parent Group\">\n                  <AccountTreeIcon />\n                </Tooltip>\n              </ListItemIcon>\n              <ListItemText\n                primary={\n                  parentRelations.length ? (\n                    <EntityRefLinks\n                      entityRefs={parentRelations}\n                      defaultKind=\"Group\"\n                    />\n                  ) : (\n                    'N/A'\n                  )\n                }\n                secondary=\"Parent Group\"\n              />\n            </ListItem>\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Child Groups\">\n                  <GroupIcon />\n                </Tooltip>\n              </ListItemIcon>\n              <ListItemText\n                primary={\n                  childRelations.length ? (\n                    <EntityRefLinks\n                      entityRefs={childRelations}\n                      defaultKind=\"Group\"\n                    />\n                  ) : (\n                    'N/A'\n                  )\n                }\n                secondary=\"Child Groups\"\n              />\n            </ListItem>\n            {props?.showLinks && <LinksGroup links={links} />}\n          </List>\n        </Grid>\n      </Grid>\n    </InfoCard>\n  );\n};\n"],"names":[],"mappings":"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"}