import React from 'react';
import { getCompoundEntityRef, DEFAULT_NAMESPACE, stringifyEntityRef } from '@backstage/catalog-model';
import { SidebarItem, SidebarSubmenu, SidebarSubmenuItem } from '@backstage/core-components';
import { useApi, identityApiRef, useRouteRef } from '@backstage/core-plugin-api';
import useAsync from 'react-use/esm/useAsync';
import { catalogApiRef, entityRouteRef } from '@backstage/plugin-catalog-react';

const MyGroupsSidebarItem = (props) => {
  const { singularTitle, pluralTitle, icon, filter } = props;
  const identityApi = useApi(identityApiRef);
  const catalogApi = useApi(catalogApiRef);
  const catalogEntityRoute = useRouteRef(entityRouteRef);
  const { value: groups } = useAsync(async () => {
    const profile = await identityApi.getBackstageIdentity();
    const response = await catalogApi.getEntities({
      filter: [
        {
          kind: "group",
          "relations.hasMember": profile.userEntityRef,
          ...filter ?? {}
        }
      ],
      fields: ["metadata", "kind"]
    });
    return response.items;
  }, []);
  if (!groups?.length) {
    return null;
  }
  if (groups.length === 1) {
    const group = groups[0];
    return /* @__PURE__ */ React.createElement(
      SidebarItem,
      {
        text: singularTitle,
        to: catalogEntityRoute(getCompoundEntityRef(group)),
        icon
      }
    );
  }
  return /* @__PURE__ */ React.createElement(SidebarItem, { icon, text: pluralTitle }, /* @__PURE__ */ React.createElement(SidebarSubmenu, { title: pluralTitle }, groups?.map(function groupsMap(group) {
    return /* @__PURE__ */ React.createElement(
      SidebarSubmenuItem,
      {
        title: group.metadata.title || group.metadata.name,
        subtitle: group.metadata.namespace !== DEFAULT_NAMESPACE ? group.metadata.namespace : void 0,
        to: catalogEntityRoute(getCompoundEntityRef(group)),
        icon,
        key: stringifyEntityRef(group)
      }
    );
  })));
};

export { MyGroupsSidebarItem };
//# sourceMappingURL=MyGroupsSidebarItem.esm.js.map
