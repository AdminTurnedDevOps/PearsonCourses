/// <reference types="react" />
import * as React from 'react';
import React__default from 'react';
import * as _backstage_core_components from '@backstage/core-components';
import { InfoCardVariants } from '@backstage/core-components';
import * as _backstage_core_plugin_api from '@backstage/core-plugin-api';
import { IconComponent } from '@backstage/core-plugin-api';

/** @public */
type EntityRelationAggregation = 'direct' | 'aggregated';

/** @public */
type MemberComponentClassKey = 'card' | 'avatar';
/** @public */
type MembersListCardClassKey = 'root' | 'cardContent' | 'memberList';
/** @public */
declare const MembersListCard: (props: {
    memberDisplayTitle?: string;
    pageSize?: number;
    showAggregateMembersToggle?: boolean;
    relationType?: string;
    /** @deprecated Please use `relationAggregation` instead */
    relationsType?: EntityRelationAggregation;
    relationAggregation?: EntityRelationAggregation;
}) => React__default.JSX.Element;

/** @public */
declare const GroupProfileCard: (props: {
    variant?: InfoCardVariants;
    showLinks?: boolean;
}) => React__default.JSX.Element;

/** @public */
declare const UserProfileCard: (props: {
    variant?: InfoCardVariants;
    showLinks?: boolean;
}) => React__default.JSX.Element;

/** @public */
declare const OwnershipCard: (props: {
    variant?: InfoCardVariants;
    entityFilterKind?: string[];
    hideRelationsToggle?: boolean;
    /** @deprecated Please use relationAggregation instead */
    relationsType?: EntityRelationAggregation;
    relationAggregation?: EntityRelationAggregation;
    entityLimit?: number;
}) => React__default.JSX.Element;

/**
 * MyGroupsSidebarItem can be added to your sidebar providing quick access to groups the logged in user is a member of
 *
 * @public
 */
declare const MyGroupsSidebarItem: (props: {
    singularTitle: string;
    pluralTitle: string;
    icon: IconComponent;
    filter?: Record<string, string | symbol | (string | symbol)[]>;
}) => React__default.JSX.Element | null;

/** @public */
declare const orgPlugin: _backstage_core_plugin_api.BackstagePlugin<{}, {
    catalogIndex: _backstage_core_plugin_api.ExternalRouteRef<undefined, true>;
}>;
/** @public */
declare const EntityGroupProfileCard: (props: {
    variant?: _backstage_core_components.InfoCardVariants | undefined;
    showLinks?: boolean | undefined;
}) => React.JSX.Element;
/** @public */
declare const EntityMembersListCard: (props: {
    memberDisplayTitle?: string | undefined;
    pageSize?: number | undefined;
    showAggregateMembersToggle?: boolean | undefined;
    relationType?: string | undefined;
    relationsType?: EntityRelationAggregation | undefined;
    relationAggregation?: EntityRelationAggregation | undefined;
}) => React.JSX.Element;
/** @public */
declare const EntityOwnershipCard: (props: {
    variant?: _backstage_core_components.InfoCardVariants | undefined;
    entityFilterKind?: string[] | undefined;
    hideRelationsToggle?: boolean | undefined;
    relationsType?: EntityRelationAggregation | undefined;
    relationAggregation?: EntityRelationAggregation | undefined;
    entityLimit?: number | undefined;
}) => React.JSX.Element;
/** @public */
declare const EntityUserProfileCard: (props: {
    variant?: _backstage_core_components.InfoCardVariants | undefined;
    showLinks?: boolean | undefined;
}) => React.JSX.Element;

export { EntityGroupProfileCard, EntityMembersListCard, EntityOwnershipCard, type EntityRelationAggregation, EntityUserProfileCard, GroupProfileCard, type MemberComponentClassKey, MembersListCard, type MembersListCardClassKey, MyGroupsSidebarItem, OwnershipCard, UserProfileCard, orgPlugin, orgPlugin as plugin };
