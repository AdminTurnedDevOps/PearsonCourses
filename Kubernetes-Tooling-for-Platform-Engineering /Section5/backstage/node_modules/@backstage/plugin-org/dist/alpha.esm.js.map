{"version":3,"file":"alpha.esm.js","sources":["../src/alpha.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  compatWrapper,\n  convertLegacyRouteRefs,\n} from '@backstage/core-compat-api';\nimport { createFrontendPlugin } from '@backstage/frontend-plugin-api';\nimport React from 'react';\nimport { catalogIndexRouteRef } from './routes';\nimport { EntityCardBlueprint } from '@backstage/plugin-catalog-react/alpha';\n\n/** @alpha */\nconst EntityGroupProfileCard = EntityCardBlueprint.make({\n  name: 'group-profile',\n  params: {\n    filter: 'kind:group',\n    loader: async () =>\n      import('./components/Cards/Group/GroupProfile/GroupProfileCard').then(m =>\n        compatWrapper(<m.GroupProfileCard />),\n      ),\n  },\n});\n\n/** @alpha */\nconst EntityMembersListCard = EntityCardBlueprint.make({\n  name: 'members-list',\n  params: {\n    filter: 'kind:group',\n    loader: async () =>\n      import('./components/Cards/Group/MembersList/MembersListCard').then(m =>\n        compatWrapper(<m.MembersListCard />),\n      ),\n  },\n});\n\n/** @alpha */\nconst EntityOwnershipCard = EntityCardBlueprint.make({\n  name: 'ownership',\n  params: {\n    filter: 'kind:group,user',\n    loader: async () =>\n      import('./components/Cards/OwnershipCard/OwnershipCard').then(m =>\n        compatWrapper(<m.OwnershipCard />),\n      ),\n  },\n});\n\n/** @alpha */\nconst EntityUserProfileCard = EntityCardBlueprint.make({\n  name: 'user-profile',\n  params: {\n    filter: 'kind:user',\n    loader: async () =>\n      import('./components/Cards/User/UserProfileCard/UserProfileCard').then(\n        m => compatWrapper(<m.UserProfileCard />),\n      ),\n  },\n});\n\n/** @alpha */\nexport default createFrontendPlugin({\n  id: 'org',\n  extensions: [\n    EntityGroupProfileCard,\n    EntityMembersListCard,\n    EntityOwnershipCard,\n    EntityUserProfileCard,\n  ],\n  externalRoutes: convertLegacyRouteRefs({\n    catalogIndex: catalogIndexRouteRef,\n  }),\n});\n"],"names":[],"mappings":";;;;;;AA0BA,MAAM,sBAAA,GAAyB,oBAAoB,IAAK,CAAA;AAAA,EACtD,IAAM,EAAA,eAAA;AAAA,EACN,MAAQ,EAAA;AAAA,IACN,MAAQ,EAAA,YAAA;AAAA,IACR,MAAQ,EAAA,YACN,OAAO,+DAAwD,CAAE,CAAA,IAAA;AAAA,MAAK,OACpE,aAAc,iBAAA,KAAA,CAAA,aAAA,CAAC,CAAE,CAAA,gBAAA,EAAF,IAAmB,CAAE;AAAA;AACtC;AAEN,CAAC,CAAA;AAGD,MAAM,qBAAA,GAAwB,oBAAoB,IAAK,CAAA;AAAA,EACrD,IAAM,EAAA,cAAA;AAAA,EACN,MAAQ,EAAA;AAAA,IACN,MAAQ,EAAA,YAAA;AAAA,IACR,MAAQ,EAAA,YACN,OAAO,6DAAsD,CAAE,CAAA,IAAA;AAAA,MAAK,OAClE,aAAc,iBAAA,KAAA,CAAA,aAAA,CAAC,CAAE,CAAA,eAAA,EAAF,IAAkB,CAAE;AAAA;AACrC;AAEN,CAAC,CAAA;AAGD,MAAM,mBAAA,GAAsB,oBAAoB,IAAK,CAAA;AAAA,EACnD,IAAM,EAAA,WAAA;AAAA,EACN,MAAQ,EAAA;AAAA,IACN,MAAQ,EAAA,iBAAA;AAAA,IACR,MAAQ,EAAA,YACN,OAAO,uDAAgD,CAAE,CAAA,IAAA;AAAA,MAAK,OAC5D,aAAc,iBAAA,KAAA,CAAA,aAAA,CAAC,CAAE,CAAA,aAAA,EAAF,IAAgB,CAAE;AAAA;AACnC;AAEN,CAAC,CAAA;AAGD,MAAM,qBAAA,GAAwB,oBAAoB,IAAK,CAAA;AAAA,EACrD,IAAM,EAAA,cAAA;AAAA,EACN,MAAQ,EAAA;AAAA,IACN,MAAQ,EAAA,WAAA;AAAA,IACR,MAAQ,EAAA,YACN,OAAO,gEAAyD,CAAE,CAAA,IAAA;AAAA,MAChE,OAAK,aAAc,iBAAA,KAAA,CAAA,aAAA,CAAC,CAAE,CAAA,eAAA,EAAF,IAAkB,CAAE;AAAA;AAC1C;AAEN,CAAC,CAAA;AAGD,YAAe,oBAAqB,CAAA;AAAA,EAClC,EAAI,EAAA,KAAA;AAAA,EACJ,UAAY,EAAA;AAAA,IACV,sBAAA;AAAA,IACA,qBAAA;AAAA,IACA,mBAAA;AAAA,IACA;AAAA,GACF;AAAA,EACA,gBAAgB,sBAAuB,CAAA;AAAA,IACrC,YAAc,EAAA;AAAA,GACf;AACH,CAAC,CAAA;;;;"}