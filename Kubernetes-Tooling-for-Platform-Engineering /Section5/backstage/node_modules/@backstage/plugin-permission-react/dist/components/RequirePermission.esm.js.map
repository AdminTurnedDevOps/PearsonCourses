{"version":3,"file":"RequirePermission.esm.js","sources":["../../src/components/RequirePermission.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactNode } from 'react';\nimport { useApp } from '@backstage/core-plugin-api';\nimport { usePermission } from '../hooks';\nimport {\n  isResourcePermission,\n  Permission,\n  ResourcePermission,\n} from '@backstage/plugin-permission-common';\n\n/**\n * Properties for {@link RequirePermission}\n *\n * @public\n */\nexport type RequirePermissionProps = (\n  | {\n      permission: Exclude<Permission, ResourcePermission>;\n      resourceRef?: never;\n    }\n  | {\n      permission: ResourcePermission;\n      resourceRef: string | undefined;\n    }\n) & {\n  /**\n   * The error page to be displayed if the user is not allowed access.\n   *\n   * Defaults to the `NotFoundErrorPage` app component.\n   */\n  errorPage?: ReactNode;\n  children: ReactNode;\n};\n\n/**\n * A boundary that only renders its child elements if the user has the specified permission.\n *\n * While loading, nothing will be rendered. If the user does not have\n * permission, the `errorPage` element will be rendered, falling back\n * to the `NotFoundErrorPage` app component if no `errorPage` is provider.\n *\n * @public\n */\nexport function RequirePermission(\n  props: RequirePermissionProps,\n): JSX.Element | null {\n  const { permission, resourceRef } = props;\n  const permissionResult = usePermission(\n    isResourcePermission(permission)\n      ? { permission, resourceRef }\n      : { permission },\n  );\n  const app = useApp();\n\n  if (permissionResult.loading) {\n    return null;\n  } else if (permissionResult.allowed) {\n    return <>{props.children}</>;\n  }\n\n  if (props.errorPage) {\n    return <>{props.errorPage}</>;\n  }\n  // If no explicit error element is provided, the not found page is used as fallback.\n  const { NotFoundErrorPage } = app.getComponents();\n  return <NotFoundErrorPage />;\n}\n"],"names":[],"mappings":";;;;;AA0DO,SAAS,kBACd,KACoB,EAAA;AACpB,EAAM,MAAA,EAAE,UAAY,EAAA,WAAA,EAAgB,GAAA,KAAA;AACpC,EAAA,MAAM,gBAAmB,GAAA,aAAA;AAAA,IACvB,oBAAA,CAAqB,UAAU,CAC3B,GAAA,EAAE,YAAY,WAAY,EAAA,GAC1B,EAAE,UAAW;AAAA,GACnB;AACA,EAAA,MAAM,MAAM,MAAO,EAAA;AAEnB,EAAA,IAAI,iBAAiB,OAAS,EAAA;AAC5B,IAAO,OAAA,IAAA;AAAA,GACT,MAAA,IAAW,iBAAiB,OAAS,EAAA;AACnC,IAAO,uBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAG,MAAM,QAAS,CAAA;AAAA;AAG3B,EAAA,IAAI,MAAM,SAAW,EAAA;AACnB,IAAO,uBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAG,MAAM,SAAU,CAAA;AAAA;AAG5B,EAAA,MAAM,EAAE,iBAAA,EAAsB,GAAA,GAAA,CAAI,aAAc,EAAA;AAChD,EAAA,2CAAQ,iBAAkB,EAAA,IAAA,CAAA;AAC5B;;;;"}