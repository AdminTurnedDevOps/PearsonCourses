{"version":3,"file":"PermissionedRoute.esm.js","sources":["../../src/components/PermissionedRoute.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement, ReactNode } from 'react';\nimport { Route } from 'react-router-dom';\nimport { useApp } from '@backstage/core-plugin-api';\nimport { usePermission } from '../hooks';\nimport {\n  isResourcePermission,\n  Permission,\n  ResourcePermission,\n} from '@backstage/plugin-permission-common';\n\n/**\n * Returns a React Router Route which only renders the element when authorized. If unauthorized, the Route will render a\n * NotFoundErrorPage (see {@link @backstage/core-app-api#AppComponents}).\n *\n * @public\n * @deprecated This component no longer works with the most recent version of `@backstage/core-app-api` and react-router v6, use {@link RequirePermission} instead.\n */\nexport const PermissionedRoute = (\n  props: {\n    caseSensitive?: boolean;\n    children?: ReactNode;\n    element?: ReactElement | null;\n    path?: string;\n    errorComponent?: ReactElement | null;\n  } & (\n    | {\n        permission: Exclude<Permission, ResourcePermission>;\n        resourceRef?: never;\n      }\n    | {\n        permission: ResourcePermission;\n        resourceRef: string | undefined;\n      }\n  ),\n) => {\n  const { permission, resourceRef, errorComponent, ...otherProps } = props;\n\n  const permissionResult = usePermission(\n    isResourcePermission(permission)\n      ? { permission, resourceRef }\n      : { permission },\n  );\n  const app = useApp();\n  const { NotFoundErrorPage } = app.getComponents();\n\n  let shownElement: ReactElement | null | undefined =\n    errorComponent === undefined ? <NotFoundErrorPage /> : errorComponent;\n\n  if (permissionResult.loading) {\n    shownElement = null;\n  } else if (permissionResult.allowed) {\n    shownElement = props.element;\n  }\n\n  return <Route {...otherProps} element={shownElement} />;\n};\n"],"names":[],"mappings":";;;;;;AAiCa,MAAA,iBAAA,GAAoB,CAC/B,KAgBG,KAAA;AACH,EAAA,MAAM,EAAE,UAAY,EAAA,WAAA,EAAa,cAAgB,EAAA,GAAG,YAAe,GAAA,KAAA;AAEnE,EAAA,MAAM,gBAAmB,GAAA,aAAA;AAAA,IACvB,oBAAA,CAAqB,UAAU,CAC3B,GAAA,EAAE,YAAY,WAAY,EAAA,GAC1B,EAAE,UAAW;AAAA,GACnB;AACA,EAAA,MAAM,MAAM,MAAO,EAAA;AACnB,EAAA,MAAM,EAAE,iBAAA,EAAsB,GAAA,GAAA,CAAI,aAAc,EAAA;AAEhD,EAAA,IAAI,YACF,GAAA,cAAA,KAAmB,KAAY,CAAA,mBAAA,KAAA,CAAA,aAAA,CAAC,uBAAkB,CAAK,GAAA,cAAA;AAEzD,EAAA,IAAI,iBAAiB,OAAS,EAAA;AAC5B,IAAe,YAAA,GAAA,IAAA;AAAA,GACjB,MAAA,IAAW,iBAAiB,OAAS,EAAA;AACnC,IAAA,YAAA,GAAe,KAAM,CAAA,OAAA;AAAA;AAGvB,EAAA,uBAAQ,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAO,GAAG,UAAA,EAAY,SAAS,YAAc,EAAA,CAAA;AACvD;;;;"}