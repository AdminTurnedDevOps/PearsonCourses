{"version":3,"file":"catalogServiceMock.cjs.js","sources":["../../src/testUtils/catalogServiceMock.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ServiceFactory,\n  ServiceRef,\n  createServiceFactory,\n} from '@backstage/backend-plugin-api';\nimport { InMemoryCatalogClient } from '@backstage/catalog-client/testUtils';\nimport { Entity } from '@backstage/catalog-model';\nimport { catalogServiceRef } from '@backstage/plugin-catalog-node';\n// eslint-disable-next-line @backstage/no-undeclared-imports\nimport { ServiceMock } from '@backstage/backend-test-utils';\nimport { CatalogServiceMock } from './types';\n\n/** @internal */\nfunction simpleMock<TService>(\n  ref: ServiceRef<TService, any>,\n  mockFactory: () => jest.Mocked<TService>,\n): (partialImpl?: Partial<TService>) => ServiceMock<TService> {\n  return partialImpl => {\n    const mock = mockFactory();\n    if (partialImpl) {\n      for (const [key, impl] of Object.entries(partialImpl)) {\n        if (typeof impl === 'function') {\n          (mock as any)[key].mockImplementation(impl);\n        } else {\n          (mock as any)[key] = impl;\n        }\n      }\n    }\n    return Object.assign(mock, {\n      factory: createServiceFactory({\n        service: ref,\n        deps: {},\n        factory: () => mock,\n      }),\n    }) as ServiceMock<TService>;\n  };\n}\n\n/**\n * Creates a fake catalog client that handles entities in memory storage. Note\n * that this client may be severely limited in functionality, and advanced\n * functions may not be available at all.\n *\n * @public\n */\nexport function catalogServiceMock(options?: {\n  entities?: Entity[];\n}): CatalogServiceMock {\n  return new InMemoryCatalogClient(options);\n}\n\n/**\n * A collection of mock functionality for the catalog service.\n *\n * @public\n */\nexport namespace catalogServiceMock {\n  /**\n   * Creates a fake catalog client that handles entities in memory storage. Note\n   * that this client may be severely limited in functionality, and advanced\n   * functions may not be available at all.\n   */\n  export const factory = (options?: { entities?: Entity[] }) =>\n    createServiceFactory({\n      service: catalogServiceRef,\n      deps: {},\n      factory: () => new InMemoryCatalogClient(options),\n    }) as ServiceFactory<CatalogServiceMock, 'plugin', 'singleton'>;\n  /**\n   * Creates a catalog client whose methods are mock functions, possibly with\n   * some of them overloaded by the caller.\n   */\n  export const mock = simpleMock<CatalogServiceMock>(catalogServiceRef, () => ({\n    getEntities: jest.fn(),\n    getEntitiesByRefs: jest.fn(),\n    queryEntities: jest.fn(),\n    getEntityAncestors: jest.fn(),\n    getEntityByRef: jest.fn(),\n    removeEntityByUid: jest.fn(),\n    refreshEntity: jest.fn(),\n    getEntityFacets: jest.fn(),\n    getLocationById: jest.fn(),\n    getLocationByRef: jest.fn(),\n    addLocation: jest.fn(),\n    removeLocationById: jest.fn(),\n    getLocationByEntity: jest.fn(),\n    validateEntity: jest.fn(),\n  }));\n}\n"],"names":["createServiceFactory","InMemoryCatalogClient","catalogServiceMock","catalogServiceRef"],"mappings":";;;;;;AA6BA,SAAS,UAAA,CACP,KACA,WAC4D,EAAA;AAC5D,EAAA,OAAO,CAAe,WAAA,KAAA;AACpB,IAAA,MAAM,OAAO,WAAY,EAAA;AACzB,IAAA,IAAI,WAAa,EAAA;AACf,MAAA,KAAA,MAAW,CAAC,GAAK,EAAA,IAAI,KAAK,MAAO,CAAA,OAAA,CAAQ,WAAW,CAAG,EAAA;AACrD,QAAI,IAAA,OAAO,SAAS,UAAY,EAAA;AAC9B,UAAC,IAAa,CAAA,GAAG,CAAE,CAAA,kBAAA,CAAmB,IAAI,CAAA;AAAA,SACrC,MAAA;AACL,UAAC,IAAA,CAAa,GAAG,CAAI,GAAA,IAAA;AAAA;AACvB;AACF;AAEF,IAAO,OAAA,MAAA,CAAO,OAAO,IAAM,EAAA;AAAA,MACzB,SAASA,qCAAqB,CAAA;AAAA,QAC5B,OAAS,EAAA,GAAA;AAAA,QACT,MAAM,EAAC;AAAA,QACP,SAAS,MAAM;AAAA,OAChB;AAAA,KACF,CAAA;AAAA,GACH;AACF;AASO,SAAS,mBAAmB,OAEZ,EAAA;AACrB,EAAO,OAAA,IAAIC,gCAAsB,OAAO,CAAA;AAC1C;AAAA,CAOO,CAAUC,mBAAV,KAAA;AAME,EAAMA,mBAAA,CAAA,OAAA,GAAU,CAAC,OAAA,KACtBF,qCAAqB,CAAA;AAAA,IACnB,OAAS,EAAAG,mCAAA;AAAA,IACT,MAAM,EAAC;AAAA,IACP,OAAS,EAAA,MAAM,IAAIF,+BAAA,CAAsB,OAAO;AAAA,GACjD,CAAA;AAKI,EAAMC,mBAAA,CAAA,IAAA,GAAO,UAA+B,CAAAC,mCAAA,EAAmB,OAAO;AAAA,IAC3E,WAAA,EAAa,KAAK,EAAG,EAAA;AAAA,IACrB,iBAAA,EAAmB,KAAK,EAAG,EAAA;AAAA,IAC3B,aAAA,EAAe,KAAK,EAAG,EAAA;AAAA,IACvB,kBAAA,EAAoB,KAAK,EAAG,EAAA;AAAA,IAC5B,cAAA,EAAgB,KAAK,EAAG,EAAA;AAAA,IACxB,iBAAA,EAAmB,KAAK,EAAG,EAAA;AAAA,IAC3B,aAAA,EAAe,KAAK,EAAG,EAAA;AAAA,IACvB,eAAA,EAAiB,KAAK,EAAG,EAAA;AAAA,IACzB,eAAA,EAAiB,KAAK,EAAG,EAAA;AAAA,IACzB,gBAAA,EAAkB,KAAK,EAAG,EAAA;AAAA,IAC1B,WAAA,EAAa,KAAK,EAAG,EAAA;AAAA,IACrB,kBAAA,EAAoB,KAAK,EAAG,EAAA;AAAA,IAC5B,mBAAA,EAAqB,KAAK,EAAG,EAAA;AAAA,IAC7B,cAAA,EAAgB,KAAK,EAAG;AAAA,GACxB,CAAA,CAAA;AAAA,CA/Ba,EAAA,kBAAA,KAAA,kBAAA,GAAA,EAAA,CAAA,CAAA;;;;"}