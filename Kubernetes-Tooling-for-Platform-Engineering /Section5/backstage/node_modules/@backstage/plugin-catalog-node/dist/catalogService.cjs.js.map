{"version":3,"file":"catalogService.cjs.js","sources":["../src/catalogService.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  createServiceFactory,\n  createServiceRef,\n  coreServices,\n  BackstageCredentials,\n  AuthService,\n} from '@backstage/backend-plugin-api';\nimport {\n  AddLocationRequest,\n  AddLocationResponse,\n  CatalogApi,\n  CatalogClient,\n  CatalogRequestOptions,\n  GetEntitiesByRefsRequest,\n  GetEntitiesByRefsResponse,\n  GetEntitiesRequest,\n  GetEntitiesResponse,\n  GetEntityAncestorsRequest,\n  GetEntityAncestorsResponse,\n  GetEntityFacetsRequest,\n  GetEntityFacetsResponse,\n  Location,\n  QueryEntitiesRequest,\n  QueryEntitiesResponse,\n  ValidateEntityResponse,\n} from '@backstage/catalog-client';\nimport { CompoundEntityRef, Entity } from '@backstage/catalog-model';\n\n/**\n * @public\n */\nexport interface CatalogServiceRequestOptions {\n  credentials: BackstageCredentials;\n}\n\n/**\n * A version of the {@link @backstage/catalog-client#CatalogApi | CatalogApi} that\n * requires backend credentials to be passed instead of a token.\n *\n * @public\n */\nexport interface CatalogService {\n  getEntities(\n    request: GetEntitiesRequest | undefined,\n    options: CatalogServiceRequestOptions,\n  ): Promise<GetEntitiesResponse>;\n\n  getEntitiesByRefs(\n    request: GetEntitiesByRefsRequest,\n    options: CatalogServiceRequestOptions,\n  ): Promise<GetEntitiesByRefsResponse>;\n\n  queryEntities(\n    request: QueryEntitiesRequest | undefined,\n    options: CatalogServiceRequestOptions,\n  ): Promise<QueryEntitiesResponse>;\n\n  getEntityAncestors(\n    request: GetEntityAncestorsRequest,\n    options: CatalogServiceRequestOptions,\n  ): Promise<GetEntityAncestorsResponse>;\n\n  getEntityByRef(\n    entityRef: string | CompoundEntityRef,\n    options: CatalogServiceRequestOptions,\n  ): Promise<Entity | undefined>;\n\n  removeEntityByUid(\n    uid: string,\n    options: CatalogServiceRequestOptions,\n  ): Promise<void>;\n\n  refreshEntity(\n    entityRef: string,\n    options: CatalogServiceRequestOptions,\n  ): Promise<void>;\n\n  getEntityFacets(\n    request: GetEntityFacetsRequest,\n    options: CatalogServiceRequestOptions,\n  ): Promise<GetEntityFacetsResponse>;\n\n  getLocationById(\n    id: string,\n    options: CatalogServiceRequestOptions,\n  ): Promise<Location | undefined>;\n\n  getLocationByRef(\n    locationRef: string,\n    options: CatalogServiceRequestOptions,\n  ): Promise<Location | undefined>;\n\n  addLocation(\n    location: AddLocationRequest,\n    options: CatalogServiceRequestOptions,\n  ): Promise<AddLocationResponse>;\n\n  removeLocationById(\n    id: string,\n    options: CatalogServiceRequestOptions,\n  ): Promise<void>;\n\n  getLocationByEntity(\n    entityRef: string | CompoundEntityRef,\n    options: CatalogServiceRequestOptions,\n  ): Promise<Location | undefined>;\n\n  validateEntity(\n    entity: Entity,\n    locationRef: string,\n    options: CatalogServiceRequestOptions,\n  ): Promise<ValidateEntityResponse>;\n}\n\nclass DefaultCatalogService implements CatalogService {\n  readonly #auth: AuthService;\n  readonly #catalogApi: CatalogApi;\n\n  constructor({\n    catalogApi,\n    auth,\n  }: {\n    catalogApi: CatalogApi;\n    auth: AuthService;\n  }) {\n    this.#catalogApi = catalogApi;\n    this.#auth = auth;\n  }\n\n  async getEntities(\n    request: GetEntitiesRequest | undefined,\n    options: CatalogServiceRequestOptions,\n  ): Promise<GetEntitiesResponse> {\n    return this.#catalogApi.getEntities(\n      request,\n      await this.#getOptions(options),\n    );\n  }\n\n  async getEntitiesByRefs(\n    request: GetEntitiesByRefsRequest,\n    options: CatalogServiceRequestOptions,\n  ): Promise<GetEntitiesByRefsResponse> {\n    return this.#catalogApi.getEntitiesByRefs(\n      request,\n      await this.#getOptions(options),\n    );\n  }\n\n  async queryEntities(\n    request: QueryEntitiesRequest | undefined,\n    options: CatalogServiceRequestOptions,\n  ): Promise<QueryEntitiesResponse> {\n    return this.#catalogApi.queryEntities(\n      request,\n      await this.#getOptions(options),\n    );\n  }\n\n  async getEntityAncestors(\n    request: GetEntityAncestorsRequest,\n    options: CatalogServiceRequestOptions,\n  ): Promise<GetEntityAncestorsResponse> {\n    return this.#catalogApi.getEntityAncestors(\n      request,\n      await this.#getOptions(options),\n    );\n  }\n\n  async getEntityByRef(\n    entityRef: string | CompoundEntityRef,\n    options: CatalogServiceRequestOptions,\n  ): Promise<Entity | undefined> {\n    return this.#catalogApi.getEntityByRef(\n      entityRef,\n      await this.#getOptions(options),\n    );\n  }\n\n  async removeEntityByUid(\n    uid: string,\n    options: CatalogServiceRequestOptions,\n  ): Promise<void> {\n    return this.#catalogApi.removeEntityByUid(\n      uid,\n      await this.#getOptions(options),\n    );\n  }\n\n  async refreshEntity(\n    entityRef: string,\n    options: CatalogServiceRequestOptions,\n  ): Promise<void> {\n    return this.#catalogApi.refreshEntity(\n      entityRef,\n      await this.#getOptions(options),\n    );\n  }\n\n  async getEntityFacets(\n    request: GetEntityFacetsRequest,\n    options: CatalogServiceRequestOptions,\n  ): Promise<GetEntityFacetsResponse> {\n    return this.#catalogApi.getEntityFacets(\n      request,\n      await this.#getOptions(options),\n    );\n  }\n\n  async getLocationById(\n    id: string,\n    options: CatalogServiceRequestOptions,\n  ): Promise<Location | undefined> {\n    return this.#catalogApi.getLocationById(\n      id,\n      await this.#getOptions(options),\n    );\n  }\n\n  async getLocationByRef(\n    locationRef: string,\n    options: CatalogServiceRequestOptions,\n  ): Promise<Location | undefined> {\n    return this.#catalogApi.getLocationByRef(\n      locationRef,\n      await this.#getOptions(options),\n    );\n  }\n\n  async addLocation(\n    location: AddLocationRequest,\n    options: CatalogServiceRequestOptions,\n  ): Promise<AddLocationResponse> {\n    return this.#catalogApi.addLocation(\n      location,\n      await this.#getOptions(options),\n    );\n  }\n\n  async removeLocationById(\n    id: string,\n    options: CatalogServiceRequestOptions,\n  ): Promise<void> {\n    return this.#catalogApi.removeLocationById(\n      id,\n      await this.#getOptions(options),\n    );\n  }\n\n  async getLocationByEntity(\n    entityRef: string | CompoundEntityRef,\n    options: CatalogServiceRequestOptions,\n  ): Promise<Location | undefined> {\n    return this.#catalogApi.getLocationByEntity(\n      entityRef,\n      await this.#getOptions(options),\n    );\n  }\n\n  async validateEntity(\n    entity: Entity,\n    locationRef: string,\n    options: CatalogServiceRequestOptions,\n  ): Promise<ValidateEntityResponse> {\n    return this.#catalogApi.validateEntity(\n      entity,\n      locationRef,\n      await this.#getOptions(options),\n    );\n  }\n\n  async #getOptions(\n    options: CatalogServiceRequestOptions,\n  ): Promise<CatalogRequestOptions> {\n    return this.#auth.getPluginRequestToken({\n      onBehalfOf: options.credentials,\n      targetPluginId: 'catalog',\n    });\n  }\n}\n\n/**\n * The catalogService provides the catalog API.\n *\n * @public\n */\nexport const catalogServiceRef = createServiceRef<CatalogService>({\n  id: 'catalog-client',\n  defaultFactory: async service =>\n    createServiceFactory({\n      service,\n      deps: {\n        auth: coreServices.auth,\n        discoveryApi: coreServices.discovery,\n      },\n      async factory({ auth, discoveryApi }) {\n        return new DefaultCatalogService({\n          auth,\n          catalogApi: new CatalogClient({ discoveryApi }),\n        });\n      },\n    }),\n});\n"],"names":["createServiceRef","createServiceFactory","coreServices","CatalogClient"],"mappings":"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"}