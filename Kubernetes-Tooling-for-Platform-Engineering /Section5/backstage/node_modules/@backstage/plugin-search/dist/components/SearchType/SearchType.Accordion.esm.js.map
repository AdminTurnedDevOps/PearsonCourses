{"version":3,"file":"SearchType.Accordion.esm.js","sources":["../../../src/components/SearchType/SearchType.Accordion.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { cloneElement, Fragment, useEffect, useState } from 'react';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { searchApiRef, useSearch } from '@backstage/plugin-search-react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport AllIcon from '@material-ui/icons/FontDownload';\nimport useAsync from 'react-use/esm/useAsync';\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    color: theme.palette.text.primary,\n  },\n  list: {\n    width: '100%',\n  },\n  listItemIcon: {\n    width: '24px',\n    height: '24px',\n  },\n  accordion: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  accordionSummary: {\n    minHeight: 'auto',\n    '&.Mui-expanded': {\n      minHeight: 'auto',\n    },\n  },\n  accordionSummaryContent: {\n    margin: theme.spacing(2, 0),\n    '&.Mui-expanded': {\n      margin: theme.spacing(2, 0),\n    },\n  },\n  accordionDetails: {\n    padding: theme.spacing(0, 0, 1),\n  },\n}));\n\n/**\n * @public\n */\nexport type SearchTypeAccordionProps = {\n  name: string;\n  types: Array<{\n    value: string;\n    name: string;\n    icon: JSX.Element;\n  }>;\n  defaultValue?: string;\n  showCounts?: boolean;\n};\n\nexport const SearchTypeAccordion = (props: SearchTypeAccordionProps) => {\n  const classes = useStyles();\n  const { filters, setPageCursor, setTypes, term, types } = useSearch();\n  const searchApi = useApi(searchApiRef);\n  const [expanded, setExpanded] = useState(true);\n  const { defaultValue, name, showCounts, types: givenTypes } = props;\n\n  const toggleExpanded = () => setExpanded(prevState => !prevState);\n  const handleClick = (type: string) => {\n    return () => {\n      setTypes(type !== '' ? [type] : []);\n      setPageCursor(undefined);\n    };\n  };\n\n  // Handle any provided defaultValue\n  useEffect(() => {\n    if (defaultValue) {\n      setTypes([defaultValue]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const definedTypes = [\n    {\n      value: '',\n      name: 'All',\n      icon: <AllIcon />,\n    },\n    ...givenTypes,\n  ];\n  const selected = types[0] || '';\n\n  const { value: resultCounts } = useAsync(async () => {\n    if (!showCounts) {\n      return {};\n    }\n\n    const counts = await Promise.all(\n      definedTypes\n        .map(t => t.value)\n        .map(async type => {\n          const { numberOfResults } = await searchApi.query({\n            term,\n            types: type ? [type] : [],\n            filters:\n              types.includes(type) || (!types.length && !type) ? filters : {},\n            pageLimit: 0,\n          });\n\n          return [\n            type,\n            numberOfResults !== undefined\n              ? `${\n                  numberOfResults >= 10000 ? `>10000` : numberOfResults\n                } results`\n              : ' -- ',\n          ];\n        }),\n    );\n\n    return Object.fromEntries(counts);\n  }, [filters, showCounts, term, types]);\n\n  return (\n    <Box>\n      <Typography variant=\"body2\" component=\"h2\">\n        {name}\n      </Typography>\n      <Accordion\n        className={classes.accordion}\n        expanded={expanded}\n        onChange={toggleExpanded}\n      >\n        <AccordionSummary\n          classes={{\n            root: classes.accordionSummary,\n            content: classes.accordionSummaryContent,\n          }}\n          expandIcon={<ExpandMoreIcon className={classes.icon} />}\n          IconButtonProps={{ size: 'small' }}\n        >\n          {expanded\n            ? 'Collapse'\n            : definedTypes.filter(t => t.value === selected)[0]!.name}\n        </AccordionSummary>\n        <AccordionDetails classes={{ root: classes.accordionDetails }}>\n          <List\n            className={classes.list}\n            component=\"nav\"\n            aria-label=\"filter by type\"\n            disablePadding\n            dense\n          >\n            {definedTypes.map(type => (\n              <Fragment key={type.value}>\n                <Divider />\n                <ListItem\n                  selected={\n                    types[0] === type.value ||\n                    (types.length === 0 && type.value === '')\n                  }\n                  onClick={handleClick(type.value)}\n                  button\n                >\n                  <ListItemIcon>\n                    {cloneElement(type.icon, {\n                      className: classes.listItemIcon,\n                    })}\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={type.name}\n                    secondary={resultCounts && resultCounts[type.value]}\n                  />\n                </ListItem>\n              </Fragment>\n            ))}\n          </List>\n        </AccordionDetails>\n      </Accordion>\n    </Box>\n  );\n};\n"],"names":[],"mappings":"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"}