import React, { useEffect } from 'react';
import { useSearch } from '@backstage/plugin-search-react';
import Tab from '@material-ui/core/Tab';
import Tabs from '@material-ui/core/Tabs';
import { makeStyles } from '@material-ui/core/styles';

const useStyles = makeStyles((theme) => ({
  tabs: {
    borderBottom: `1px solid ${theme.palette.textVerySubtle}`
  },
  tab: {
    height: "50px",
    fontWeight: theme.typography.fontWeightBold,
    fontSize: theme.typography.pxToRem(13),
    color: theme.palette.text.primary,
    minWidth: "130px"
  }
}));
const SearchTypeTabs = (props) => {
  const classes = useStyles();
  const { setPageCursor, setTypes, types } = useSearch();
  const { defaultValue, types: givenTypes } = props;
  const changeTab = (_, newType) => {
    setTypes(newType !== "" ? [newType] : []);
    setPageCursor(void 0);
  };
  useEffect(() => {
    if (defaultValue) {
      setTypes([defaultValue]);
    }
  }, []);
  const definedTypes = [
    {
      value: "",
      name: "All"
    },
    ...givenTypes
  ];
  return /* @__PURE__ */ React.createElement(
    Tabs,
    {
      "aria-label": "List of search types tabs",
      className: classes.tabs,
      indicatorColor: "primary",
      value: types.length === 0 ? "" : types[0],
      onChange: changeTab
    },
    definedTypes.map((type, idx) => /* @__PURE__ */ React.createElement(
      Tab,
      {
        key: idx,
        className: classes.tab,
        label: type.name,
        value: type.value
      }
    ))
  );
};

export { SearchTypeTabs };
//# sourceMappingURL=SearchType.Tabs.esm.js.map
