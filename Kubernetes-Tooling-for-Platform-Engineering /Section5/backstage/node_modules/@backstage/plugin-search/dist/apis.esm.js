import { ResponseError } from '@backstage/errors';
import qs from 'qs';

class SearchClient {
  discoveryApi;
  fetchApi;
  constructor(options) {
    this.discoveryApi = options.discoveryApi;
    this.fetchApi = options.fetchApi;
  }
  async query(query) {
    const queryString = qs.stringify(query);
    const url = `${await this.discoveryApi.getBaseUrl(
      "search"
    )}/query?${queryString}`;
    const response = await this.fetchApi.fetch(url);
    if (!response.ok) {
      throw await ResponseError.fromResponse(response);
    }
    return response.json();
  }
}

export { SearchClient };
//# sourceMappingURL=apis.esm.js.map
