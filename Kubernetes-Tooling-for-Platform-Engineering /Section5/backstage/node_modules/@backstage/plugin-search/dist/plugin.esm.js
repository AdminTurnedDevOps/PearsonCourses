import { SearchClient } from './apis.esm.js';
import { searchApiRef } from '@backstage/plugin-search-react';
import { createRouteRef, createPlugin, createApiFactory, discoveryApiRef, fetchApiRef, createRoutableExtension, createComponentExtension } from '@backstage/core-plugin-api';

const rootRouteRef = createRouteRef({
  id: "search"
});
const searchPlugin = createPlugin({
  id: "search",
  apis: [
    createApiFactory({
      api: searchApiRef,
      deps: { discoveryApi: discoveryApiRef, fetchApi: fetchApiRef },
      factory: ({ discoveryApi, fetchApi }) => {
        return new SearchClient({ discoveryApi, fetchApi });
      }
    })
  ],
  routes: {
    root: rootRouteRef
  }
});
const SearchPage = searchPlugin.provide(
  createRoutableExtension({
    name: "SearchPage",
    component: () => import('./components/SearchPage/index.esm.js').then((m) => m.SearchPage),
    mountPoint: rootRouteRef
  })
);
const SidebarSearchModal = searchPlugin.provide(
  createComponentExtension({
    name: "SidebarSearchModal",
    component: {
      lazy: () => import('./components/SidebarSearchModal/index.esm.js').then(
        (m) => m.SidebarSearchModal
      )
    }
  })
);
const HomePageSearchBar = searchPlugin.provide(
  createComponentExtension({
    name: "HomePageSearchBar",
    component: {
      lazy: () => import('./components/HomePageComponent/index.esm.js').then((m) => m.HomePageSearchBar)
    }
  })
);

export { HomePageSearchBar, SearchPage, SidebarSearchModal, rootRouteRef, searchPlugin };
//# sourceMappingURL=plugin.esm.js.map
