import * as _backstage_plugin_search_react_alpha from '@backstage/plugin-search-react/alpha';
import * as _backstage_frontend_plugin_api from '@backstage/frontend-plugin-api';
import * as _backstage_core_plugin_api from '@backstage/core-plugin-api';
import React__default from 'react';

/** @alpha */
declare const searchApi: _backstage_frontend_plugin_api.ExtensionDefinition<{
    kind: "api";
    name: undefined;
    config: {};
    configInput: {};
    output: _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<_backstage_core_plugin_api.AnyApiFactory, "core.api.factory", {}>;
    inputs: {};
    params: {
        factory: _backstage_core_plugin_api.AnyApiFactory;
    };
}>;
/** @alpha */
declare const searchPage: _backstage_frontend_plugin_api.ExtensionDefinition<{
    config: {
        noTrack: boolean;
    } & {
        path: string | undefined;
    };
    configInput: {
        noTrack?: boolean | undefined;
    } & {
        path?: string | undefined;
    };
    output: _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<React__default.JSX.Element, "core.reactElement", {}> | _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<string, "core.routing.path", {}> | _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<_backstage_frontend_plugin_api.RouteRef<_backstage_frontend_plugin_api.AnyRouteRefParams>, "core.routing.ref", {
        optional: true;
    }>;
    inputs: {
        items: _backstage_frontend_plugin_api.ExtensionInput<_backstage_frontend_plugin_api.ConfigurableExtensionDataRef<{
            predicate?: _backstage_plugin_search_react_alpha.SearchResultItemExtensionPredicate | undefined;
            component: _backstage_plugin_search_react_alpha.SearchResultItemExtensionComponent;
        }, "search.search-result-list-item.item", {}>, {
            singleton: false;
            optional: false;
        }>;
    };
    kind: "page";
    name: undefined;
    params: {
        defaultPath: string;
        loader: () => Promise<JSX.Element>;
        routeRef?: _backstage_frontend_plugin_api.RouteRef<_backstage_frontend_plugin_api.AnyRouteRefParams> | undefined;
    };
}>;
/** @alpha */
declare const searchNavItem: _backstage_frontend_plugin_api.ExtensionDefinition<{
    kind: "nav-item";
    name: undefined;
    config: {};
    configInput: {};
    output: _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<{
        title: string;
        icon: _backstage_core_plugin_api.IconComponent;
        routeRef: _backstage_frontend_plugin_api.RouteRef<undefined>;
    }, "core.nav-item.target", {}>;
    inputs: {};
    params: {
        title: string;
        icon: _backstage_core_plugin_api.IconComponent;
        routeRef: _backstage_frontend_plugin_api.RouteRef<undefined>;
    };
}>;
/** @alpha */
declare const _default: _backstage_frontend_plugin_api.FrontendPlugin<{
    root: _backstage_frontend_plugin_api.RouteRef<undefined>;
}, {}, {
    "nav-item:search": _backstage_frontend_plugin_api.ExtensionDefinition<{
        kind: "nav-item";
        name: undefined;
        config: {};
        configInput: {};
        output: _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<{
            title: string;
            icon: _backstage_core_plugin_api.IconComponent;
            routeRef: _backstage_frontend_plugin_api.RouteRef<undefined>;
        }, "core.nav-item.target", {}>;
        inputs: {};
        params: {
            title: string;
            icon: _backstage_core_plugin_api.IconComponent;
            routeRef: _backstage_frontend_plugin_api.RouteRef<undefined>;
        };
    }>;
    "api:search": _backstage_frontend_plugin_api.ExtensionDefinition<{
        kind: "api";
        name: undefined;
        config: {};
        configInput: {};
        output: _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<_backstage_core_plugin_api.AnyApiFactory, "core.api.factory", {}>;
        inputs: {};
        params: {
            factory: _backstage_core_plugin_api.AnyApiFactory;
        };
    }>;
    "page:search": _backstage_frontend_plugin_api.ExtensionDefinition<{
        config: {
            noTrack: boolean;
        } & {
            path: string | undefined;
        };
        configInput: {
            noTrack?: boolean | undefined;
        } & {
            path?: string | undefined;
        };
        output: _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<React__default.JSX.Element, "core.reactElement", {}> | _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<string, "core.routing.path", {}> | _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<_backstage_frontend_plugin_api.RouteRef<_backstage_frontend_plugin_api.AnyRouteRefParams>, "core.routing.ref", {
            optional: true;
        }>;
        inputs: {
            items: _backstage_frontend_plugin_api.ExtensionInput<_backstage_frontend_plugin_api.ConfigurableExtensionDataRef<{
                predicate?: _backstage_plugin_search_react_alpha.SearchResultItemExtensionPredicate | undefined;
                component: _backstage_plugin_search_react_alpha.SearchResultItemExtensionComponent;
            }, "search.search-result-list-item.item", {}>, {
                singleton: false;
                optional: false;
            }>;
        };
        kind: "page";
        name: undefined;
        params: {
            defaultPath: string;
            loader: () => Promise<JSX.Element>;
            routeRef?: _backstage_frontend_plugin_api.RouteRef<_backstage_frontend_plugin_api.AnyRouteRefParams> | undefined;
        };
    }>;
}>;

export { _default as default, searchApi, searchNavItem, searchPage };
