'use strict';

var pluginAuthNode = require('@backstage/plugin-auth-node');

exports.githubSignInResolvers = void 0;
((githubSignInResolvers2) => {
  githubSignInResolvers2.usernameMatchingUserEntityName = pluginAuthNode.createSignInResolverFactory({
    create() {
      return async (info, ctx) => {
        const { fullProfile } = info.result;
        const userId = fullProfile.username;
        if (!userId) {
          throw new Error(`GitHub user profile does not contain a username`);
        }
        return ctx.signInWithCatalogUser({ entityRef: { name: userId } });
      };
    }
  });
})(exports.githubSignInResolvers || (exports.githubSignInResolvers = {}));
//# sourceMappingURL=resolvers.cjs.js.map
