"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VoidAuth = exports.OAuth = exports.ApiKeyAuth = exports.HttpBearerAuth = exports.HttpBasicAuth = exports.ObjectSerializer = void 0;
const tslib_1 = require("tslib");
tslib_1.__exportStar(require("./admissionregistrationV1ServiceReference"), exports);
tslib_1.__exportStar(require("./admissionregistrationV1WebhookClientConfig"), exports);
tslib_1.__exportStar(require("./apiextensionsV1ServiceReference"), exports);
tslib_1.__exportStar(require("./apiextensionsV1WebhookClientConfig"), exports);
tslib_1.__exportStar(require("./apiregistrationV1ServiceReference"), exports);
tslib_1.__exportStar(require("./authenticationV1TokenRequest"), exports);
tslib_1.__exportStar(require("./coreV1EndpointPort"), exports);
tslib_1.__exportStar(require("./coreV1Event"), exports);
tslib_1.__exportStar(require("./coreV1EventList"), exports);
tslib_1.__exportStar(require("./coreV1EventSeries"), exports);
tslib_1.__exportStar(require("./discoveryV1EndpointPort"), exports);
tslib_1.__exportStar(require("./eventsV1Event"), exports);
tslib_1.__exportStar(require("./eventsV1EventList"), exports);
tslib_1.__exportStar(require("./eventsV1EventSeries"), exports);
tslib_1.__exportStar(require("./storageV1TokenRequest"), exports);
tslib_1.__exportStar(require("./v1APIGroup"), exports);
tslib_1.__exportStar(require("./v1APIGroupList"), exports);
tslib_1.__exportStar(require("./v1APIResource"), exports);
tslib_1.__exportStar(require("./v1APIResourceList"), exports);
tslib_1.__exportStar(require("./v1APIService"), exports);
tslib_1.__exportStar(require("./v1APIServiceCondition"), exports);
tslib_1.__exportStar(require("./v1APIServiceList"), exports);
tslib_1.__exportStar(require("./v1APIServiceSpec"), exports);
tslib_1.__exportStar(require("./v1APIServiceStatus"), exports);
tslib_1.__exportStar(require("./v1APIVersions"), exports);
tslib_1.__exportStar(require("./v1AWSElasticBlockStoreVolumeSource"), exports);
tslib_1.__exportStar(require("./v1Affinity"), exports);
tslib_1.__exportStar(require("./v1AggregationRule"), exports);
tslib_1.__exportStar(require("./v1AttachedVolume"), exports);
tslib_1.__exportStar(require("./v1AzureDiskVolumeSource"), exports);
tslib_1.__exportStar(require("./v1AzureFilePersistentVolumeSource"), exports);
tslib_1.__exportStar(require("./v1AzureFileVolumeSource"), exports);
tslib_1.__exportStar(require("./v1Binding"), exports);
tslib_1.__exportStar(require("./v1BoundObjectReference"), exports);
tslib_1.__exportStar(require("./v1CSIDriver"), exports);
tslib_1.__exportStar(require("./v1CSIDriverList"), exports);
tslib_1.__exportStar(require("./v1CSIDriverSpec"), exports);
tslib_1.__exportStar(require("./v1CSINode"), exports);
tslib_1.__exportStar(require("./v1CSINodeDriver"), exports);
tslib_1.__exportStar(require("./v1CSINodeList"), exports);
tslib_1.__exportStar(require("./v1CSINodeSpec"), exports);
tslib_1.__exportStar(require("./v1CSIPersistentVolumeSource"), exports);
tslib_1.__exportStar(require("./v1CSIStorageCapacity"), exports);
tslib_1.__exportStar(require("./v1CSIStorageCapacityList"), exports);
tslib_1.__exportStar(require("./v1CSIVolumeSource"), exports);
tslib_1.__exportStar(require("./v1Capabilities"), exports);
tslib_1.__exportStar(require("./v1CephFSPersistentVolumeSource"), exports);
tslib_1.__exportStar(require("./v1CephFSVolumeSource"), exports);
tslib_1.__exportStar(require("./v1CertificateSigningRequest"), exports);
tslib_1.__exportStar(require("./v1CertificateSigningRequestCondition"), exports);
tslib_1.__exportStar(require("./v1CertificateSigningRequestList"), exports);
tslib_1.__exportStar(require("./v1CertificateSigningRequestSpec"), exports);
tslib_1.__exportStar(require("./v1CertificateSigningRequestStatus"), exports);
tslib_1.__exportStar(require("./v1CinderPersistentVolumeSource"), exports);
tslib_1.__exportStar(require("./v1CinderVolumeSource"), exports);
tslib_1.__exportStar(require("./v1ClaimSource"), exports);
tslib_1.__exportStar(require("./v1ClientIPConfig"), exports);
tslib_1.__exportStar(require("./v1ClusterRole"), exports);
tslib_1.__exportStar(require("./v1ClusterRoleBinding"), exports);
tslib_1.__exportStar(require("./v1ClusterRoleBindingList"), exports);
tslib_1.__exportStar(require("./v1ClusterRoleList"), exports);
tslib_1.__exportStar(require("./v1ComponentCondition"), exports);
tslib_1.__exportStar(require("./v1ComponentStatus"), exports);
tslib_1.__exportStar(require("./v1ComponentStatusList"), exports);
tslib_1.__exportStar(require("./v1Condition"), exports);
tslib_1.__exportStar(require("./v1ConfigMap"), exports);
tslib_1.__exportStar(require("./v1ConfigMapEnvSource"), exports);
tslib_1.__exportStar(require("./v1ConfigMapKeySelector"), exports);
tslib_1.__exportStar(require("./v1ConfigMapList"), exports);
tslib_1.__exportStar(require("./v1ConfigMapNodeConfigSource"), exports);
tslib_1.__exportStar(require("./v1ConfigMapProjection"), exports);
tslib_1.__exportStar(require("./v1ConfigMapVolumeSource"), exports);
tslib_1.__exportStar(require("./v1Container"), exports);
tslib_1.__exportStar(require("./v1ContainerImage"), exports);
tslib_1.__exportStar(require("./v1ContainerPort"), exports);
tslib_1.__exportStar(require("./v1ContainerResizePolicy"), exports);
tslib_1.__exportStar(require("./v1ContainerState"), exports);
tslib_1.__exportStar(require("./v1ContainerStateRunning"), exports);
tslib_1.__exportStar(require("./v1ContainerStateTerminated"), exports);
tslib_1.__exportStar(require("./v1ContainerStateWaiting"), exports);
tslib_1.__exportStar(require("./v1ContainerStatus"), exports);
tslib_1.__exportStar(require("./v1ControllerRevision"), exports);
tslib_1.__exportStar(require("./v1ControllerRevisionList"), exports);
tslib_1.__exportStar(require("./v1CronJob"), exports);
tslib_1.__exportStar(require("./v1CronJobList"), exports);
tslib_1.__exportStar(require("./v1CronJobSpec"), exports);
tslib_1.__exportStar(require("./v1CronJobStatus"), exports);
tslib_1.__exportStar(require("./v1CrossVersionObjectReference"), exports);
tslib_1.__exportStar(require("./v1CustomResourceColumnDefinition"), exports);
tslib_1.__exportStar(require("./v1CustomResourceConversion"), exports);
tslib_1.__exportStar(require("./v1CustomResourceDefinition"), exports);
tslib_1.__exportStar(require("./v1CustomResourceDefinitionCondition"), exports);
tslib_1.__exportStar(require("./v1CustomResourceDefinitionList"), exports);
tslib_1.__exportStar(require("./v1CustomResourceDefinitionNames"), exports);
tslib_1.__exportStar(require("./v1CustomResourceDefinitionSpec"), exports);
tslib_1.__exportStar(require("./v1CustomResourceDefinitionStatus"), exports);
tslib_1.__exportStar(require("./v1CustomResourceDefinitionVersion"), exports);
tslib_1.__exportStar(require("./v1CustomResourceSubresourceScale"), exports);
tslib_1.__exportStar(require("./v1CustomResourceSubresources"), exports);
tslib_1.__exportStar(require("./v1CustomResourceValidation"), exports);
tslib_1.__exportStar(require("./v1DaemonEndpoint"), exports);
tslib_1.__exportStar(require("./v1DaemonSet"), exports);
tslib_1.__exportStar(require("./v1DaemonSetCondition"), exports);
tslib_1.__exportStar(require("./v1DaemonSetList"), exports);
tslib_1.__exportStar(require("./v1DaemonSetSpec"), exports);
tslib_1.__exportStar(require("./v1DaemonSetStatus"), exports);
tslib_1.__exportStar(require("./v1DaemonSetUpdateStrategy"), exports);
tslib_1.__exportStar(require("./v1DeleteOptions"), exports);
tslib_1.__exportStar(require("./v1Deployment"), exports);
tslib_1.__exportStar(require("./v1DeploymentCondition"), exports);
tslib_1.__exportStar(require("./v1DeploymentList"), exports);
tslib_1.__exportStar(require("./v1DeploymentSpec"), exports);
tslib_1.__exportStar(require("./v1DeploymentStatus"), exports);
tslib_1.__exportStar(require("./v1DeploymentStrategy"), exports);
tslib_1.__exportStar(require("./v1DownwardAPIProjection"), exports);
tslib_1.__exportStar(require("./v1DownwardAPIVolumeFile"), exports);
tslib_1.__exportStar(require("./v1DownwardAPIVolumeSource"), exports);
tslib_1.__exportStar(require("./v1EmptyDirVolumeSource"), exports);
tslib_1.__exportStar(require("./v1Endpoint"), exports);
tslib_1.__exportStar(require("./v1EndpointAddress"), exports);
tslib_1.__exportStar(require("./v1EndpointConditions"), exports);
tslib_1.__exportStar(require("./v1EndpointHints"), exports);
tslib_1.__exportStar(require("./v1EndpointSlice"), exports);
tslib_1.__exportStar(require("./v1EndpointSliceList"), exports);
tslib_1.__exportStar(require("./v1EndpointSubset"), exports);
tslib_1.__exportStar(require("./v1Endpoints"), exports);
tslib_1.__exportStar(require("./v1EndpointsList"), exports);
tslib_1.__exportStar(require("./v1EnvFromSource"), exports);
tslib_1.__exportStar(require("./v1EnvVar"), exports);
tslib_1.__exportStar(require("./v1EnvVarSource"), exports);
tslib_1.__exportStar(require("./v1EphemeralContainer"), exports);
tslib_1.__exportStar(require("./v1EphemeralVolumeSource"), exports);
tslib_1.__exportStar(require("./v1EventSource"), exports);
tslib_1.__exportStar(require("./v1Eviction"), exports);
tslib_1.__exportStar(require("./v1ExecAction"), exports);
tslib_1.__exportStar(require("./v1ExternalDocumentation"), exports);
tslib_1.__exportStar(require("./v1FCVolumeSource"), exports);
tslib_1.__exportStar(require("./v1FlexPersistentVolumeSource"), exports);
tslib_1.__exportStar(require("./v1FlexVolumeSource"), exports);
tslib_1.__exportStar(require("./v1FlockerVolumeSource"), exports);
tslib_1.__exportStar(require("./v1ForZone"), exports);
tslib_1.__exportStar(require("./v1GCEPersistentDiskVolumeSource"), exports);
tslib_1.__exportStar(require("./v1GRPCAction"), exports);
tslib_1.__exportStar(require("./v1GitRepoVolumeSource"), exports);
tslib_1.__exportStar(require("./v1GlusterfsPersistentVolumeSource"), exports);
tslib_1.__exportStar(require("./v1GlusterfsVolumeSource"), exports);
tslib_1.__exportStar(require("./v1GroupVersionForDiscovery"), exports);
tslib_1.__exportStar(require("./v1HTTPGetAction"), exports);
tslib_1.__exportStar(require("./v1HTTPHeader"), exports);
tslib_1.__exportStar(require("./v1HTTPIngressPath"), exports);
tslib_1.__exportStar(require("./v1HTTPIngressRuleValue"), exports);
tslib_1.__exportStar(require("./v1HorizontalPodAutoscaler"), exports);
tslib_1.__exportStar(require("./v1HorizontalPodAutoscalerList"), exports);
tslib_1.__exportStar(require("./v1HorizontalPodAutoscalerSpec"), exports);
tslib_1.__exportStar(require("./v1HorizontalPodAutoscalerStatus"), exports);
tslib_1.__exportStar(require("./v1HostAlias"), exports);
tslib_1.__exportStar(require("./v1HostIP"), exports);
tslib_1.__exportStar(require("./v1HostPathVolumeSource"), exports);
tslib_1.__exportStar(require("./v1IPBlock"), exports);
tslib_1.__exportStar(require("./v1ISCSIPersistentVolumeSource"), exports);
tslib_1.__exportStar(require("./v1ISCSIVolumeSource"), exports);
tslib_1.__exportStar(require("./v1Ingress"), exports);
tslib_1.__exportStar(require("./v1IngressBackend"), exports);
tslib_1.__exportStar(require("./v1IngressClass"), exports);
tslib_1.__exportStar(require("./v1IngressClassList"), exports);
tslib_1.__exportStar(require("./v1IngressClassParametersReference"), exports);
tslib_1.__exportStar(require("./v1IngressClassSpec"), exports);
tslib_1.__exportStar(require("./v1IngressList"), exports);
tslib_1.__exportStar(require("./v1IngressLoadBalancerIngress"), exports);
tslib_1.__exportStar(require("./v1IngressLoadBalancerStatus"), exports);
tslib_1.__exportStar(require("./v1IngressPortStatus"), exports);
tslib_1.__exportStar(require("./v1IngressRule"), exports);
tslib_1.__exportStar(require("./v1IngressServiceBackend"), exports);
tslib_1.__exportStar(require("./v1IngressSpec"), exports);
tslib_1.__exportStar(require("./v1IngressStatus"), exports);
tslib_1.__exportStar(require("./v1IngressTLS"), exports);
tslib_1.__exportStar(require("./v1JSONSchemaProps"), exports);
tslib_1.__exportStar(require("./v1Job"), exports);
tslib_1.__exportStar(require("./v1JobCondition"), exports);
tslib_1.__exportStar(require("./v1JobList"), exports);
tslib_1.__exportStar(require("./v1JobSpec"), exports);
tslib_1.__exportStar(require("./v1JobStatus"), exports);
tslib_1.__exportStar(require("./v1JobTemplateSpec"), exports);
tslib_1.__exportStar(require("./v1KeyToPath"), exports);
tslib_1.__exportStar(require("./v1LabelSelector"), exports);
tslib_1.__exportStar(require("./v1LabelSelectorRequirement"), exports);
tslib_1.__exportStar(require("./v1Lease"), exports);
tslib_1.__exportStar(require("./v1LeaseList"), exports);
tslib_1.__exportStar(require("./v1LeaseSpec"), exports);
tslib_1.__exportStar(require("./v1Lifecycle"), exports);
tslib_1.__exportStar(require("./v1LifecycleHandler"), exports);
tslib_1.__exportStar(require("./v1LimitRange"), exports);
tslib_1.__exportStar(require("./v1LimitRangeItem"), exports);
tslib_1.__exportStar(require("./v1LimitRangeList"), exports);
tslib_1.__exportStar(require("./v1LimitRangeSpec"), exports);
tslib_1.__exportStar(require("./v1ListMeta"), exports);
tslib_1.__exportStar(require("./v1LoadBalancerIngress"), exports);
tslib_1.__exportStar(require("./v1LoadBalancerStatus"), exports);
tslib_1.__exportStar(require("./v1LocalObjectReference"), exports);
tslib_1.__exportStar(require("./v1LocalSubjectAccessReview"), exports);
tslib_1.__exportStar(require("./v1LocalVolumeSource"), exports);
tslib_1.__exportStar(require("./v1ManagedFieldsEntry"), exports);
tslib_1.__exportStar(require("./v1MatchCondition"), exports);
tslib_1.__exportStar(require("./v1MutatingWebhook"), exports);
tslib_1.__exportStar(require("./v1MutatingWebhookConfiguration"), exports);
tslib_1.__exportStar(require("./v1MutatingWebhookConfigurationList"), exports);
tslib_1.__exportStar(require("./v1NFSVolumeSource"), exports);
tslib_1.__exportStar(require("./v1Namespace"), exports);
tslib_1.__exportStar(require("./v1NamespaceCondition"), exports);
tslib_1.__exportStar(require("./v1NamespaceList"), exports);
tslib_1.__exportStar(require("./v1NamespaceSpec"), exports);
tslib_1.__exportStar(require("./v1NamespaceStatus"), exports);
tslib_1.__exportStar(require("./v1NetworkPolicy"), exports);
tslib_1.__exportStar(require("./v1NetworkPolicyEgressRule"), exports);
tslib_1.__exportStar(require("./v1NetworkPolicyIngressRule"), exports);
tslib_1.__exportStar(require("./v1NetworkPolicyList"), exports);
tslib_1.__exportStar(require("./v1NetworkPolicyPeer"), exports);
tslib_1.__exportStar(require("./v1NetworkPolicyPort"), exports);
tslib_1.__exportStar(require("./v1NetworkPolicySpec"), exports);
tslib_1.__exportStar(require("./v1Node"), exports);
tslib_1.__exportStar(require("./v1NodeAddress"), exports);
tslib_1.__exportStar(require("./v1NodeAffinity"), exports);
tslib_1.__exportStar(require("./v1NodeCondition"), exports);
tslib_1.__exportStar(require("./v1NodeConfigSource"), exports);
tslib_1.__exportStar(require("./v1NodeConfigStatus"), exports);
tslib_1.__exportStar(require("./v1NodeDaemonEndpoints"), exports);
tslib_1.__exportStar(require("./v1NodeList"), exports);
tslib_1.__exportStar(require("./v1NodeSelector"), exports);
tslib_1.__exportStar(require("./v1NodeSelectorRequirement"), exports);
tslib_1.__exportStar(require("./v1NodeSelectorTerm"), exports);
tslib_1.__exportStar(require("./v1NodeSpec"), exports);
tslib_1.__exportStar(require("./v1NodeStatus"), exports);
tslib_1.__exportStar(require("./v1NodeSystemInfo"), exports);
tslib_1.__exportStar(require("./v1NonResourceAttributes"), exports);
tslib_1.__exportStar(require("./v1NonResourceRule"), exports);
tslib_1.__exportStar(require("./v1ObjectFieldSelector"), exports);
tslib_1.__exportStar(require("./v1ObjectMeta"), exports);
tslib_1.__exportStar(require("./v1ObjectReference"), exports);
tslib_1.__exportStar(require("./v1Overhead"), exports);
tslib_1.__exportStar(require("./v1OwnerReference"), exports);
tslib_1.__exportStar(require("./v1PersistentVolume"), exports);
tslib_1.__exportStar(require("./v1PersistentVolumeClaim"), exports);
tslib_1.__exportStar(require("./v1PersistentVolumeClaimCondition"), exports);
tslib_1.__exportStar(require("./v1PersistentVolumeClaimList"), exports);
tslib_1.__exportStar(require("./v1PersistentVolumeClaimSpec"), exports);
tslib_1.__exportStar(require("./v1PersistentVolumeClaimStatus"), exports);
tslib_1.__exportStar(require("./v1PersistentVolumeClaimTemplate"), exports);
tslib_1.__exportStar(require("./v1PersistentVolumeClaimVolumeSource"), exports);
tslib_1.__exportStar(require("./v1PersistentVolumeList"), exports);
tslib_1.__exportStar(require("./v1PersistentVolumeSpec"), exports);
tslib_1.__exportStar(require("./v1PersistentVolumeStatus"), exports);
tslib_1.__exportStar(require("./v1PhotonPersistentDiskVolumeSource"), exports);
tslib_1.__exportStar(require("./v1Pod"), exports);
tslib_1.__exportStar(require("./v1PodAffinity"), exports);
tslib_1.__exportStar(require("./v1PodAffinityTerm"), exports);
tslib_1.__exportStar(require("./v1PodAntiAffinity"), exports);
tslib_1.__exportStar(require("./v1PodCondition"), exports);
tslib_1.__exportStar(require("./v1PodDNSConfig"), exports);
tslib_1.__exportStar(require("./v1PodDNSConfigOption"), exports);
tslib_1.__exportStar(require("./v1PodDisruptionBudget"), exports);
tslib_1.__exportStar(require("./v1PodDisruptionBudgetList"), exports);
tslib_1.__exportStar(require("./v1PodDisruptionBudgetSpec"), exports);
tslib_1.__exportStar(require("./v1PodDisruptionBudgetStatus"), exports);
tslib_1.__exportStar(require("./v1PodFailurePolicy"), exports);
tslib_1.__exportStar(require("./v1PodFailurePolicyOnExitCodesRequirement"), exports);
tslib_1.__exportStar(require("./v1PodFailurePolicyOnPodConditionsPattern"), exports);
tslib_1.__exportStar(require("./v1PodFailurePolicyRule"), exports);
tslib_1.__exportStar(require("./v1PodIP"), exports);
tslib_1.__exportStar(require("./v1PodList"), exports);
tslib_1.__exportStar(require("./v1PodOS"), exports);
tslib_1.__exportStar(require("./v1PodReadinessGate"), exports);
tslib_1.__exportStar(require("./v1PodResourceClaim"), exports);
tslib_1.__exportStar(require("./v1PodResourceClaimStatus"), exports);
tslib_1.__exportStar(require("./v1PodSchedulingGate"), exports);
tslib_1.__exportStar(require("./v1PodSecurityContext"), exports);
tslib_1.__exportStar(require("./v1PodSpec"), exports);
tslib_1.__exportStar(require("./v1PodStatus"), exports);
tslib_1.__exportStar(require("./v1PodTemplate"), exports);
tslib_1.__exportStar(require("./v1PodTemplateList"), exports);
tslib_1.__exportStar(require("./v1PodTemplateSpec"), exports);
tslib_1.__exportStar(require("./v1PolicyRule"), exports);
tslib_1.__exportStar(require("./v1PortStatus"), exports);
tslib_1.__exportStar(require("./v1PortworxVolumeSource"), exports);
tslib_1.__exportStar(require("./v1Preconditions"), exports);
tslib_1.__exportStar(require("./v1PreferredSchedulingTerm"), exports);
tslib_1.__exportStar(require("./v1PriorityClass"), exports);
tslib_1.__exportStar(require("./v1PriorityClassList"), exports);
tslib_1.__exportStar(require("./v1Probe"), exports);
tslib_1.__exportStar(require("./v1ProjectedVolumeSource"), exports);
tslib_1.__exportStar(require("./v1QuobyteVolumeSource"), exports);
tslib_1.__exportStar(require("./v1RBDPersistentVolumeSource"), exports);
tslib_1.__exportStar(require("./v1RBDVolumeSource"), exports);
tslib_1.__exportStar(require("./v1ReplicaSet"), exports);
tslib_1.__exportStar(require("./v1ReplicaSetCondition"), exports);
tslib_1.__exportStar(require("./v1ReplicaSetList"), exports);
tslib_1.__exportStar(require("./v1ReplicaSetSpec"), exports);
tslib_1.__exportStar(require("./v1ReplicaSetStatus"), exports);
tslib_1.__exportStar(require("./v1ReplicationController"), exports);
tslib_1.__exportStar(require("./v1ReplicationControllerCondition"), exports);
tslib_1.__exportStar(require("./v1ReplicationControllerList"), exports);
tslib_1.__exportStar(require("./v1ReplicationControllerSpec"), exports);
tslib_1.__exportStar(require("./v1ReplicationControllerStatus"), exports);
tslib_1.__exportStar(require("./v1ResourceAttributes"), exports);
tslib_1.__exportStar(require("./v1ResourceClaim"), exports);
tslib_1.__exportStar(require("./v1ResourceFieldSelector"), exports);
tslib_1.__exportStar(require("./v1ResourceQuota"), exports);
tslib_1.__exportStar(require("./v1ResourceQuotaList"), exports);
tslib_1.__exportStar(require("./v1ResourceQuotaSpec"), exports);
tslib_1.__exportStar(require("./v1ResourceQuotaStatus"), exports);
tslib_1.__exportStar(require("./v1ResourceRequirements"), exports);
tslib_1.__exportStar(require("./v1ResourceRule"), exports);
tslib_1.__exportStar(require("./v1Role"), exports);
tslib_1.__exportStar(require("./v1RoleBinding"), exports);
tslib_1.__exportStar(require("./v1RoleBindingList"), exports);
tslib_1.__exportStar(require("./v1RoleList"), exports);
tslib_1.__exportStar(require("./v1RoleRef"), exports);
tslib_1.__exportStar(require("./v1RollingUpdateDaemonSet"), exports);
tslib_1.__exportStar(require("./v1RollingUpdateDeployment"), exports);
tslib_1.__exportStar(require("./v1RollingUpdateStatefulSetStrategy"), exports);
tslib_1.__exportStar(require("./v1RuleWithOperations"), exports);
tslib_1.__exportStar(require("./v1RuntimeClass"), exports);
tslib_1.__exportStar(require("./v1RuntimeClassList"), exports);
tslib_1.__exportStar(require("./v1SELinuxOptions"), exports);
tslib_1.__exportStar(require("./v1Scale"), exports);
tslib_1.__exportStar(require("./v1ScaleIOPersistentVolumeSource"), exports);
tslib_1.__exportStar(require("./v1ScaleIOVolumeSource"), exports);
tslib_1.__exportStar(require("./v1ScaleSpec"), exports);
tslib_1.__exportStar(require("./v1ScaleStatus"), exports);
tslib_1.__exportStar(require("./v1Scheduling"), exports);
tslib_1.__exportStar(require("./v1ScopeSelector"), exports);
tslib_1.__exportStar(require("./v1ScopedResourceSelectorRequirement"), exports);
tslib_1.__exportStar(require("./v1SeccompProfile"), exports);
tslib_1.__exportStar(require("./v1Secret"), exports);
tslib_1.__exportStar(require("./v1SecretEnvSource"), exports);
tslib_1.__exportStar(require("./v1SecretKeySelector"), exports);
tslib_1.__exportStar(require("./v1SecretList"), exports);
tslib_1.__exportStar(require("./v1SecretProjection"), exports);
tslib_1.__exportStar(require("./v1SecretReference"), exports);
tslib_1.__exportStar(require("./v1SecretVolumeSource"), exports);
tslib_1.__exportStar(require("./v1SecurityContext"), exports);
tslib_1.__exportStar(require("./v1SelfSubjectAccessReview"), exports);
tslib_1.__exportStar(require("./v1SelfSubjectAccessReviewSpec"), exports);
tslib_1.__exportStar(require("./v1SelfSubjectReview"), exports);
tslib_1.__exportStar(require("./v1SelfSubjectReviewStatus"), exports);
tslib_1.__exportStar(require("./v1SelfSubjectRulesReview"), exports);
tslib_1.__exportStar(require("./v1SelfSubjectRulesReviewSpec"), exports);
tslib_1.__exportStar(require("./v1ServerAddressByClientCIDR"), exports);
tslib_1.__exportStar(require("./v1Service"), exports);
tslib_1.__exportStar(require("./v1ServiceAccount"), exports);
tslib_1.__exportStar(require("./v1ServiceAccountList"), exports);
tslib_1.__exportStar(require("./v1ServiceAccountTokenProjection"), exports);
tslib_1.__exportStar(require("./v1ServiceBackendPort"), exports);
tslib_1.__exportStar(require("./v1ServiceList"), exports);
tslib_1.__exportStar(require("./v1ServicePort"), exports);
tslib_1.__exportStar(require("./v1ServiceSpec"), exports);
tslib_1.__exportStar(require("./v1ServiceStatus"), exports);
tslib_1.__exportStar(require("./v1SessionAffinityConfig"), exports);
tslib_1.__exportStar(require("./v1StatefulSet"), exports);
tslib_1.__exportStar(require("./v1StatefulSetCondition"), exports);
tslib_1.__exportStar(require("./v1StatefulSetList"), exports);
tslib_1.__exportStar(require("./v1StatefulSetOrdinals"), exports);
tslib_1.__exportStar(require("./v1StatefulSetPersistentVolumeClaimRetentionPolicy"), exports);
tslib_1.__exportStar(require("./v1StatefulSetSpec"), exports);
tslib_1.__exportStar(require("./v1StatefulSetStatus"), exports);
tslib_1.__exportStar(require("./v1StatefulSetUpdateStrategy"), exports);
tslib_1.__exportStar(require("./v1Status"), exports);
tslib_1.__exportStar(require("./v1StatusCause"), exports);
tslib_1.__exportStar(require("./v1StatusDetails"), exports);
tslib_1.__exportStar(require("./v1StorageClass"), exports);
tslib_1.__exportStar(require("./v1StorageClassList"), exports);
tslib_1.__exportStar(require("./v1StorageOSPersistentVolumeSource"), exports);
tslib_1.__exportStar(require("./v1StorageOSVolumeSource"), exports);
tslib_1.__exportStar(require("./v1Subject"), exports);
tslib_1.__exportStar(require("./v1SubjectAccessReview"), exports);
tslib_1.__exportStar(require("./v1SubjectAccessReviewSpec"), exports);
tslib_1.__exportStar(require("./v1SubjectAccessReviewStatus"), exports);
tslib_1.__exportStar(require("./v1SubjectRulesReviewStatus"), exports);
tslib_1.__exportStar(require("./v1Sysctl"), exports);
tslib_1.__exportStar(require("./v1TCPSocketAction"), exports);
tslib_1.__exportStar(require("./v1Taint"), exports);
tslib_1.__exportStar(require("./v1TokenRequestSpec"), exports);
tslib_1.__exportStar(require("./v1TokenRequestStatus"), exports);
tslib_1.__exportStar(require("./v1TokenReview"), exports);
tslib_1.__exportStar(require("./v1TokenReviewSpec"), exports);
tslib_1.__exportStar(require("./v1TokenReviewStatus"), exports);
tslib_1.__exportStar(require("./v1Toleration"), exports);
tslib_1.__exportStar(require("./v1TopologySelectorLabelRequirement"), exports);
tslib_1.__exportStar(require("./v1TopologySelectorTerm"), exports);
tslib_1.__exportStar(require("./v1TopologySpreadConstraint"), exports);
tslib_1.__exportStar(require("./v1TypedLocalObjectReference"), exports);
tslib_1.__exportStar(require("./v1TypedObjectReference"), exports);
tslib_1.__exportStar(require("./v1UncountedTerminatedPods"), exports);
tslib_1.__exportStar(require("./v1UserInfo"), exports);
tslib_1.__exportStar(require("./v1ValidatingWebhook"), exports);
tslib_1.__exportStar(require("./v1ValidatingWebhookConfiguration"), exports);
tslib_1.__exportStar(require("./v1ValidatingWebhookConfigurationList"), exports);
tslib_1.__exportStar(require("./v1ValidationRule"), exports);
tslib_1.__exportStar(require("./v1Volume"), exports);
tslib_1.__exportStar(require("./v1VolumeAttachment"), exports);
tslib_1.__exportStar(require("./v1VolumeAttachmentList"), exports);
tslib_1.__exportStar(require("./v1VolumeAttachmentSource"), exports);
tslib_1.__exportStar(require("./v1VolumeAttachmentSpec"), exports);
tslib_1.__exportStar(require("./v1VolumeAttachmentStatus"), exports);
tslib_1.__exportStar(require("./v1VolumeDevice"), exports);
tslib_1.__exportStar(require("./v1VolumeError"), exports);
tslib_1.__exportStar(require("./v1VolumeMount"), exports);
tslib_1.__exportStar(require("./v1VolumeNodeAffinity"), exports);
tslib_1.__exportStar(require("./v1VolumeNodeResources"), exports);
tslib_1.__exportStar(require("./v1VolumeProjection"), exports);
tslib_1.__exportStar(require("./v1VsphereVirtualDiskVolumeSource"), exports);
tslib_1.__exportStar(require("./v1WatchEvent"), exports);
tslib_1.__exportStar(require("./v1WebhookConversion"), exports);
tslib_1.__exportStar(require("./v1WeightedPodAffinityTerm"), exports);
tslib_1.__exportStar(require("./v1WindowsSecurityContextOptions"), exports);
tslib_1.__exportStar(require("./v1alpha1AuditAnnotation"), exports);
tslib_1.__exportStar(require("./v1alpha1ClusterCIDR"), exports);
tslib_1.__exportStar(require("./v1alpha1ClusterCIDRList"), exports);
tslib_1.__exportStar(require("./v1alpha1ClusterCIDRSpec"), exports);
tslib_1.__exportStar(require("./v1alpha1ClusterTrustBundle"), exports);
tslib_1.__exportStar(require("./v1alpha1ClusterTrustBundleList"), exports);
tslib_1.__exportStar(require("./v1alpha1ClusterTrustBundleSpec"), exports);
tslib_1.__exportStar(require("./v1alpha1ExpressionWarning"), exports);
tslib_1.__exportStar(require("./v1alpha1IPAddress"), exports);
tslib_1.__exportStar(require("./v1alpha1IPAddressList"), exports);
tslib_1.__exportStar(require("./v1alpha1IPAddressSpec"), exports);
tslib_1.__exportStar(require("./v1alpha1MatchCondition"), exports);
tslib_1.__exportStar(require("./v1alpha1MatchResources"), exports);
tslib_1.__exportStar(require("./v1alpha1NamedRuleWithOperations"), exports);
tslib_1.__exportStar(require("./v1alpha1ParamKind"), exports);
tslib_1.__exportStar(require("./v1alpha1ParamRef"), exports);
tslib_1.__exportStar(require("./v1alpha1ParentReference"), exports);
tslib_1.__exportStar(require("./v1alpha1SelfSubjectReview"), exports);
tslib_1.__exportStar(require("./v1alpha1SelfSubjectReviewStatus"), exports);
tslib_1.__exportStar(require("./v1alpha1ServerStorageVersion"), exports);
tslib_1.__exportStar(require("./v1alpha1StorageVersion"), exports);
tslib_1.__exportStar(require("./v1alpha1StorageVersionCondition"), exports);
tslib_1.__exportStar(require("./v1alpha1StorageVersionList"), exports);
tslib_1.__exportStar(require("./v1alpha1StorageVersionStatus"), exports);
tslib_1.__exportStar(require("./v1alpha1TypeChecking"), exports);
tslib_1.__exportStar(require("./v1alpha1ValidatingAdmissionPolicy"), exports);
tslib_1.__exportStar(require("./v1alpha1ValidatingAdmissionPolicyBinding"), exports);
tslib_1.__exportStar(require("./v1alpha1ValidatingAdmissionPolicyBindingList"), exports);
tslib_1.__exportStar(require("./v1alpha1ValidatingAdmissionPolicyBindingSpec"), exports);
tslib_1.__exportStar(require("./v1alpha1ValidatingAdmissionPolicyList"), exports);
tslib_1.__exportStar(require("./v1alpha1ValidatingAdmissionPolicySpec"), exports);
tslib_1.__exportStar(require("./v1alpha1ValidatingAdmissionPolicyStatus"), exports);
tslib_1.__exportStar(require("./v1alpha1Validation"), exports);
tslib_1.__exportStar(require("./v1alpha1Variable"), exports);
tslib_1.__exportStar(require("./v1alpha2AllocationResult"), exports);
tslib_1.__exportStar(require("./v1alpha2PodSchedulingContext"), exports);
tslib_1.__exportStar(require("./v1alpha2PodSchedulingContextList"), exports);
tslib_1.__exportStar(require("./v1alpha2PodSchedulingContextSpec"), exports);
tslib_1.__exportStar(require("./v1alpha2PodSchedulingContextStatus"), exports);
tslib_1.__exportStar(require("./v1alpha2ResourceClaim"), exports);
tslib_1.__exportStar(require("./v1alpha2ResourceClaimConsumerReference"), exports);
tslib_1.__exportStar(require("./v1alpha2ResourceClaimList"), exports);
tslib_1.__exportStar(require("./v1alpha2ResourceClaimParametersReference"), exports);
tslib_1.__exportStar(require("./v1alpha2ResourceClaimSchedulingStatus"), exports);
tslib_1.__exportStar(require("./v1alpha2ResourceClaimSpec"), exports);
tslib_1.__exportStar(require("./v1alpha2ResourceClaimStatus"), exports);
tslib_1.__exportStar(require("./v1alpha2ResourceClaimTemplate"), exports);
tslib_1.__exportStar(require("./v1alpha2ResourceClaimTemplateList"), exports);
tslib_1.__exportStar(require("./v1alpha2ResourceClaimTemplateSpec"), exports);
tslib_1.__exportStar(require("./v1alpha2ResourceClass"), exports);
tslib_1.__exportStar(require("./v1alpha2ResourceClassList"), exports);
tslib_1.__exportStar(require("./v1alpha2ResourceClassParametersReference"), exports);
tslib_1.__exportStar(require("./v1alpha2ResourceHandle"), exports);
tslib_1.__exportStar(require("./v1beta1AuditAnnotation"), exports);
tslib_1.__exportStar(require("./v1beta1ExpressionWarning"), exports);
tslib_1.__exportStar(require("./v1beta1MatchCondition"), exports);
tslib_1.__exportStar(require("./v1beta1MatchResources"), exports);
tslib_1.__exportStar(require("./v1beta1NamedRuleWithOperations"), exports);
tslib_1.__exportStar(require("./v1beta1ParamKind"), exports);
tslib_1.__exportStar(require("./v1beta1ParamRef"), exports);
tslib_1.__exportStar(require("./v1beta1SelfSubjectReview"), exports);
tslib_1.__exportStar(require("./v1beta1SelfSubjectReviewStatus"), exports);
tslib_1.__exportStar(require("./v1beta1TypeChecking"), exports);
tslib_1.__exportStar(require("./v1beta1ValidatingAdmissionPolicy"), exports);
tslib_1.__exportStar(require("./v1beta1ValidatingAdmissionPolicyBinding"), exports);
tslib_1.__exportStar(require("./v1beta1ValidatingAdmissionPolicyBindingList"), exports);
tslib_1.__exportStar(require("./v1beta1ValidatingAdmissionPolicyBindingSpec"), exports);
tslib_1.__exportStar(require("./v1beta1ValidatingAdmissionPolicyList"), exports);
tslib_1.__exportStar(require("./v1beta1ValidatingAdmissionPolicySpec"), exports);
tslib_1.__exportStar(require("./v1beta1ValidatingAdmissionPolicyStatus"), exports);
tslib_1.__exportStar(require("./v1beta1Validation"), exports);
tslib_1.__exportStar(require("./v1beta1Variable"), exports);
tslib_1.__exportStar(require("./v1beta2ExemptPriorityLevelConfiguration"), exports);
tslib_1.__exportStar(require("./v1beta2FlowDistinguisherMethod"), exports);
tslib_1.__exportStar(require("./v1beta2FlowSchema"), exports);
tslib_1.__exportStar(require("./v1beta2FlowSchemaCondition"), exports);
tslib_1.__exportStar(require("./v1beta2FlowSchemaList"), exports);
tslib_1.__exportStar(require("./v1beta2FlowSchemaSpec"), exports);
tslib_1.__exportStar(require("./v1beta2FlowSchemaStatus"), exports);
tslib_1.__exportStar(require("./v1beta2GroupSubject"), exports);
tslib_1.__exportStar(require("./v1beta2LimitResponse"), exports);
tslib_1.__exportStar(require("./v1beta2LimitedPriorityLevelConfiguration"), exports);
tslib_1.__exportStar(require("./v1beta2NonResourcePolicyRule"), exports);
tslib_1.__exportStar(require("./v1beta2PolicyRulesWithSubjects"), exports);
tslib_1.__exportStar(require("./v1beta2PriorityLevelConfiguration"), exports);
tslib_1.__exportStar(require("./v1beta2PriorityLevelConfigurationCondition"), exports);
tslib_1.__exportStar(require("./v1beta2PriorityLevelConfigurationList"), exports);
tslib_1.__exportStar(require("./v1beta2PriorityLevelConfigurationReference"), exports);
tslib_1.__exportStar(require("./v1beta2PriorityLevelConfigurationSpec"), exports);
tslib_1.__exportStar(require("./v1beta2PriorityLevelConfigurationStatus"), exports);
tslib_1.__exportStar(require("./v1beta2QueuingConfiguration"), exports);
tslib_1.__exportStar(require("./v1beta2ResourcePolicyRule"), exports);
tslib_1.__exportStar(require("./v1beta2ServiceAccountSubject"), exports);
tslib_1.__exportStar(require("./v1beta2Subject"), exports);
tslib_1.__exportStar(require("./v1beta2UserSubject"), exports);
tslib_1.__exportStar(require("./v1beta3ExemptPriorityLevelConfiguration"), exports);
tslib_1.__exportStar(require("./v1beta3FlowDistinguisherMethod"), exports);
tslib_1.__exportStar(require("./v1beta3FlowSchema"), exports);
tslib_1.__exportStar(require("./v1beta3FlowSchemaCondition"), exports);
tslib_1.__exportStar(require("./v1beta3FlowSchemaList"), exports);
tslib_1.__exportStar(require("./v1beta3FlowSchemaSpec"), exports);
tslib_1.__exportStar(require("./v1beta3FlowSchemaStatus"), exports);
tslib_1.__exportStar(require("./v1beta3GroupSubject"), exports);
tslib_1.__exportStar(require("./v1beta3LimitResponse"), exports);
tslib_1.__exportStar(require("./v1beta3LimitedPriorityLevelConfiguration"), exports);
tslib_1.__exportStar(require("./v1beta3NonResourcePolicyRule"), exports);
tslib_1.__exportStar(require("./v1beta3PolicyRulesWithSubjects"), exports);
tslib_1.__exportStar(require("./v1beta3PriorityLevelConfiguration"), exports);
tslib_1.__exportStar(require("./v1beta3PriorityLevelConfigurationCondition"), exports);
tslib_1.__exportStar(require("./v1beta3PriorityLevelConfigurationList"), exports);
tslib_1.__exportStar(require("./v1beta3PriorityLevelConfigurationReference"), exports);
tslib_1.__exportStar(require("./v1beta3PriorityLevelConfigurationSpec"), exports);
tslib_1.__exportStar(require("./v1beta3PriorityLevelConfigurationStatus"), exports);
tslib_1.__exportStar(require("./v1beta3QueuingConfiguration"), exports);
tslib_1.__exportStar(require("./v1beta3ResourcePolicyRule"), exports);
tslib_1.__exportStar(require("./v1beta3ServiceAccountSubject"), exports);
tslib_1.__exportStar(require("./v1beta3Subject"), exports);
tslib_1.__exportStar(require("./v1beta3UserSubject"), exports);
tslib_1.__exportStar(require("./v2ContainerResourceMetricSource"), exports);
tslib_1.__exportStar(require("./v2ContainerResourceMetricStatus"), exports);
tslib_1.__exportStar(require("./v2CrossVersionObjectReference"), exports);
tslib_1.__exportStar(require("./v2ExternalMetricSource"), exports);
tslib_1.__exportStar(require("./v2ExternalMetricStatus"), exports);
tslib_1.__exportStar(require("./v2HPAScalingPolicy"), exports);
tslib_1.__exportStar(require("./v2HPAScalingRules"), exports);
tslib_1.__exportStar(require("./v2HorizontalPodAutoscaler"), exports);
tslib_1.__exportStar(require("./v2HorizontalPodAutoscalerBehavior"), exports);
tslib_1.__exportStar(require("./v2HorizontalPodAutoscalerCondition"), exports);
tslib_1.__exportStar(require("./v2HorizontalPodAutoscalerList"), exports);
tslib_1.__exportStar(require("./v2HorizontalPodAutoscalerSpec"), exports);
tslib_1.__exportStar(require("./v2HorizontalPodAutoscalerStatus"), exports);
tslib_1.__exportStar(require("./v2MetricIdentifier"), exports);
tslib_1.__exportStar(require("./v2MetricSpec"), exports);
tslib_1.__exportStar(require("./v2MetricStatus"), exports);
tslib_1.__exportStar(require("./v2MetricTarget"), exports);
tslib_1.__exportStar(require("./v2MetricValueStatus"), exports);
tslib_1.__exportStar(require("./v2ObjectMetricSource"), exports);
tslib_1.__exportStar(require("./v2ObjectMetricStatus"), exports);
tslib_1.__exportStar(require("./v2PodsMetricSource"), exports);
tslib_1.__exportStar(require("./v2PodsMetricStatus"), exports);
tslib_1.__exportStar(require("./v2ResourceMetricSource"), exports);
tslib_1.__exportStar(require("./v2ResourceMetricStatus"), exports);
tslib_1.__exportStar(require("./versionInfo"), exports);
const admissionregistrationV1ServiceReference_1 = require("./admissionregistrationV1ServiceReference");
const admissionregistrationV1WebhookClientConfig_1 = require("./admissionregistrationV1WebhookClientConfig");
const apiextensionsV1ServiceReference_1 = require("./apiextensionsV1ServiceReference");
const apiextensionsV1WebhookClientConfig_1 = require("./apiextensionsV1WebhookClientConfig");
const apiregistrationV1ServiceReference_1 = require("./apiregistrationV1ServiceReference");
const authenticationV1TokenRequest_1 = require("./authenticationV1TokenRequest");
const coreV1EndpointPort_1 = require("./coreV1EndpointPort");
const coreV1Event_1 = require("./coreV1Event");
const coreV1EventList_1 = require("./coreV1EventList");
const coreV1EventSeries_1 = require("./coreV1EventSeries");
const discoveryV1EndpointPort_1 = require("./discoveryV1EndpointPort");
const eventsV1Event_1 = require("./eventsV1Event");
const eventsV1EventList_1 = require("./eventsV1EventList");
const eventsV1EventSeries_1 = require("./eventsV1EventSeries");
const storageV1TokenRequest_1 = require("./storageV1TokenRequest");
const v1APIGroup_1 = require("./v1APIGroup");
const v1APIGroupList_1 = require("./v1APIGroupList");
const v1APIResource_1 = require("./v1APIResource");
const v1APIResourceList_1 = require("./v1APIResourceList");
const v1APIService_1 = require("./v1APIService");
const v1APIServiceCondition_1 = require("./v1APIServiceCondition");
const v1APIServiceList_1 = require("./v1APIServiceList");
const v1APIServiceSpec_1 = require("./v1APIServiceSpec");
const v1APIServiceStatus_1 = require("./v1APIServiceStatus");
const v1APIVersions_1 = require("./v1APIVersions");
const v1AWSElasticBlockStoreVolumeSource_1 = require("./v1AWSElasticBlockStoreVolumeSource");
const v1Affinity_1 = require("./v1Affinity");
const v1AggregationRule_1 = require("./v1AggregationRule");
const v1AttachedVolume_1 = require("./v1AttachedVolume");
const v1AzureDiskVolumeSource_1 = require("./v1AzureDiskVolumeSource");
const v1AzureFilePersistentVolumeSource_1 = require("./v1AzureFilePersistentVolumeSource");
const v1AzureFileVolumeSource_1 = require("./v1AzureFileVolumeSource");
const v1Binding_1 = require("./v1Binding");
const v1BoundObjectReference_1 = require("./v1BoundObjectReference");
const v1CSIDriver_1 = require("./v1CSIDriver");
const v1CSIDriverList_1 = require("./v1CSIDriverList");
const v1CSIDriverSpec_1 = require("./v1CSIDriverSpec");
const v1CSINode_1 = require("./v1CSINode");
const v1CSINodeDriver_1 = require("./v1CSINodeDriver");
const v1CSINodeList_1 = require("./v1CSINodeList");
const v1CSINodeSpec_1 = require("./v1CSINodeSpec");
const v1CSIPersistentVolumeSource_1 = require("./v1CSIPersistentVolumeSource");
const v1CSIStorageCapacity_1 = require("./v1CSIStorageCapacity");
const v1CSIStorageCapacityList_1 = require("./v1CSIStorageCapacityList");
const v1CSIVolumeSource_1 = require("./v1CSIVolumeSource");
const v1Capabilities_1 = require("./v1Capabilities");
const v1CephFSPersistentVolumeSource_1 = require("./v1CephFSPersistentVolumeSource");
const v1CephFSVolumeSource_1 = require("./v1CephFSVolumeSource");
const v1CertificateSigningRequest_1 = require("./v1CertificateSigningRequest");
const v1CertificateSigningRequestCondition_1 = require("./v1CertificateSigningRequestCondition");
const v1CertificateSigningRequestList_1 = require("./v1CertificateSigningRequestList");
const v1CertificateSigningRequestSpec_1 = require("./v1CertificateSigningRequestSpec");
const v1CertificateSigningRequestStatus_1 = require("./v1CertificateSigningRequestStatus");
const v1CinderPersistentVolumeSource_1 = require("./v1CinderPersistentVolumeSource");
const v1CinderVolumeSource_1 = require("./v1CinderVolumeSource");
const v1ClaimSource_1 = require("./v1ClaimSource");
const v1ClientIPConfig_1 = require("./v1ClientIPConfig");
const v1ClusterRole_1 = require("./v1ClusterRole");
const v1ClusterRoleBinding_1 = require("./v1ClusterRoleBinding");
const v1ClusterRoleBindingList_1 = require("./v1ClusterRoleBindingList");
const v1ClusterRoleList_1 = require("./v1ClusterRoleList");
const v1ComponentCondition_1 = require("./v1ComponentCondition");
const v1ComponentStatus_1 = require("./v1ComponentStatus");
const v1ComponentStatusList_1 = require("./v1ComponentStatusList");
const v1Condition_1 = require("./v1Condition");
const v1ConfigMap_1 = require("./v1ConfigMap");
const v1ConfigMapEnvSource_1 = require("./v1ConfigMapEnvSource");
const v1ConfigMapKeySelector_1 = require("./v1ConfigMapKeySelector");
const v1ConfigMapList_1 = require("./v1ConfigMapList");
const v1ConfigMapNodeConfigSource_1 = require("./v1ConfigMapNodeConfigSource");
const v1ConfigMapProjection_1 = require("./v1ConfigMapProjection");
const v1ConfigMapVolumeSource_1 = require("./v1ConfigMapVolumeSource");
const v1Container_1 = require("./v1Container");
const v1ContainerImage_1 = require("./v1ContainerImage");
const v1ContainerPort_1 = require("./v1ContainerPort");
const v1ContainerResizePolicy_1 = require("./v1ContainerResizePolicy");
const v1ContainerState_1 = require("./v1ContainerState");
const v1ContainerStateRunning_1 = require("./v1ContainerStateRunning");
const v1ContainerStateTerminated_1 = require("./v1ContainerStateTerminated");
const v1ContainerStateWaiting_1 = require("./v1ContainerStateWaiting");
const v1ContainerStatus_1 = require("./v1ContainerStatus");
const v1ControllerRevision_1 = require("./v1ControllerRevision");
const v1ControllerRevisionList_1 = require("./v1ControllerRevisionList");
const v1CronJob_1 = require("./v1CronJob");
const v1CronJobList_1 = require("./v1CronJobList");
const v1CronJobSpec_1 = require("./v1CronJobSpec");
const v1CronJobStatus_1 = require("./v1CronJobStatus");
const v1CrossVersionObjectReference_1 = require("./v1CrossVersionObjectReference");
const v1CustomResourceColumnDefinition_1 = require("./v1CustomResourceColumnDefinition");
const v1CustomResourceConversion_1 = require("./v1CustomResourceConversion");
const v1CustomResourceDefinition_1 = require("./v1CustomResourceDefinition");
const v1CustomResourceDefinitionCondition_1 = require("./v1CustomResourceDefinitionCondition");
const v1CustomResourceDefinitionList_1 = require("./v1CustomResourceDefinitionList");
const v1CustomResourceDefinitionNames_1 = require("./v1CustomResourceDefinitionNames");
const v1CustomResourceDefinitionSpec_1 = require("./v1CustomResourceDefinitionSpec");
const v1CustomResourceDefinitionStatus_1 = require("./v1CustomResourceDefinitionStatus");
const v1CustomResourceDefinitionVersion_1 = require("./v1CustomResourceDefinitionVersion");
const v1CustomResourceSubresourceScale_1 = require("./v1CustomResourceSubresourceScale");
const v1CustomResourceSubresources_1 = require("./v1CustomResourceSubresources");
const v1CustomResourceValidation_1 = require("./v1CustomResourceValidation");
const v1DaemonEndpoint_1 = require("./v1DaemonEndpoint");
const v1DaemonSet_1 = require("./v1DaemonSet");
const v1DaemonSetCondition_1 = require("./v1DaemonSetCondition");
const v1DaemonSetList_1 = require("./v1DaemonSetList");
const v1DaemonSetSpec_1 = require("./v1DaemonSetSpec");
const v1DaemonSetStatus_1 = require("./v1DaemonSetStatus");
const v1DaemonSetUpdateStrategy_1 = require("./v1DaemonSetUpdateStrategy");
const v1DeleteOptions_1 = require("./v1DeleteOptions");
const v1Deployment_1 = require("./v1Deployment");
const v1DeploymentCondition_1 = require("./v1DeploymentCondition");
const v1DeploymentList_1 = require("./v1DeploymentList");
const v1DeploymentSpec_1 = require("./v1DeploymentSpec");
const v1DeploymentStatus_1 = require("./v1DeploymentStatus");
const v1DeploymentStrategy_1 = require("./v1DeploymentStrategy");
const v1DownwardAPIProjection_1 = require("./v1DownwardAPIProjection");
const v1DownwardAPIVolumeFile_1 = require("./v1DownwardAPIVolumeFile");
const v1DownwardAPIVolumeSource_1 = require("./v1DownwardAPIVolumeSource");
const v1EmptyDirVolumeSource_1 = require("./v1EmptyDirVolumeSource");
const v1Endpoint_1 = require("./v1Endpoint");
const v1EndpointAddress_1 = require("./v1EndpointAddress");
const v1EndpointConditions_1 = require("./v1EndpointConditions");
const v1EndpointHints_1 = require("./v1EndpointHints");
const v1EndpointSlice_1 = require("./v1EndpointSlice");
const v1EndpointSliceList_1 = require("./v1EndpointSliceList");
const v1EndpointSubset_1 = require("./v1EndpointSubset");
const v1Endpoints_1 = require("./v1Endpoints");
const v1EndpointsList_1 = require("./v1EndpointsList");
const v1EnvFromSource_1 = require("./v1EnvFromSource");
const v1EnvVar_1 = require("./v1EnvVar");
const v1EnvVarSource_1 = require("./v1EnvVarSource");
const v1EphemeralContainer_1 = require("./v1EphemeralContainer");
const v1EphemeralVolumeSource_1 = require("./v1EphemeralVolumeSource");
const v1EventSource_1 = require("./v1EventSource");
const v1Eviction_1 = require("./v1Eviction");
const v1ExecAction_1 = require("./v1ExecAction");
const v1ExternalDocumentation_1 = require("./v1ExternalDocumentation");
const v1FCVolumeSource_1 = require("./v1FCVolumeSource");
const v1FlexPersistentVolumeSource_1 = require("./v1FlexPersistentVolumeSource");
const v1FlexVolumeSource_1 = require("./v1FlexVolumeSource");
const v1FlockerVolumeSource_1 = require("./v1FlockerVolumeSource");
const v1ForZone_1 = require("./v1ForZone");
const v1GCEPersistentDiskVolumeSource_1 = require("./v1GCEPersistentDiskVolumeSource");
const v1GRPCAction_1 = require("./v1GRPCAction");
const v1GitRepoVolumeSource_1 = require("./v1GitRepoVolumeSource");
const v1GlusterfsPersistentVolumeSource_1 = require("./v1GlusterfsPersistentVolumeSource");
const v1GlusterfsVolumeSource_1 = require("./v1GlusterfsVolumeSource");
const v1GroupVersionForDiscovery_1 = require("./v1GroupVersionForDiscovery");
const v1HTTPGetAction_1 = require("./v1HTTPGetAction");
const v1HTTPHeader_1 = require("./v1HTTPHeader");
const v1HTTPIngressPath_1 = require("./v1HTTPIngressPath");
const v1HTTPIngressRuleValue_1 = require("./v1HTTPIngressRuleValue");
const v1HorizontalPodAutoscaler_1 = require("./v1HorizontalPodAutoscaler");
const v1HorizontalPodAutoscalerList_1 = require("./v1HorizontalPodAutoscalerList");
const v1HorizontalPodAutoscalerSpec_1 = require("./v1HorizontalPodAutoscalerSpec");
const v1HorizontalPodAutoscalerStatus_1 = require("./v1HorizontalPodAutoscalerStatus");
const v1HostAlias_1 = require("./v1HostAlias");
const v1HostIP_1 = require("./v1HostIP");
const v1HostPathVolumeSource_1 = require("./v1HostPathVolumeSource");
const v1IPBlock_1 = require("./v1IPBlock");
const v1ISCSIPersistentVolumeSource_1 = require("./v1ISCSIPersistentVolumeSource");
const v1ISCSIVolumeSource_1 = require("./v1ISCSIVolumeSource");
const v1Ingress_1 = require("./v1Ingress");
const v1IngressBackend_1 = require("./v1IngressBackend");
const v1IngressClass_1 = require("./v1IngressClass");
const v1IngressClassList_1 = require("./v1IngressClassList");
const v1IngressClassParametersReference_1 = require("./v1IngressClassParametersReference");
const v1IngressClassSpec_1 = require("./v1IngressClassSpec");
const v1IngressList_1 = require("./v1IngressList");
const v1IngressLoadBalancerIngress_1 = require("./v1IngressLoadBalancerIngress");
const v1IngressLoadBalancerStatus_1 = require("./v1IngressLoadBalancerStatus");
const v1IngressPortStatus_1 = require("./v1IngressPortStatus");
const v1IngressRule_1 = require("./v1IngressRule");
const v1IngressServiceBackend_1 = require("./v1IngressServiceBackend");
const v1IngressSpec_1 = require("./v1IngressSpec");
const v1IngressStatus_1 = require("./v1IngressStatus");
const v1IngressTLS_1 = require("./v1IngressTLS");
const v1JSONSchemaProps_1 = require("./v1JSONSchemaProps");
const v1Job_1 = require("./v1Job");
const v1JobCondition_1 = require("./v1JobCondition");
const v1JobList_1 = require("./v1JobList");
const v1JobSpec_1 = require("./v1JobSpec");
const v1JobStatus_1 = require("./v1JobStatus");
const v1JobTemplateSpec_1 = require("./v1JobTemplateSpec");
const v1KeyToPath_1 = require("./v1KeyToPath");
const v1LabelSelector_1 = require("./v1LabelSelector");
const v1LabelSelectorRequirement_1 = require("./v1LabelSelectorRequirement");
const v1Lease_1 = require("./v1Lease");
const v1LeaseList_1 = require("./v1LeaseList");
const v1LeaseSpec_1 = require("./v1LeaseSpec");
const v1Lifecycle_1 = require("./v1Lifecycle");
const v1LifecycleHandler_1 = require("./v1LifecycleHandler");
const v1LimitRange_1 = require("./v1LimitRange");
const v1LimitRangeItem_1 = require("./v1LimitRangeItem");
const v1LimitRangeList_1 = require("./v1LimitRangeList");
const v1LimitRangeSpec_1 = require("./v1LimitRangeSpec");
const v1ListMeta_1 = require("./v1ListMeta");
const v1LoadBalancerIngress_1 = require("./v1LoadBalancerIngress");
const v1LoadBalancerStatus_1 = require("./v1LoadBalancerStatus");
const v1LocalObjectReference_1 = require("./v1LocalObjectReference");
const v1LocalSubjectAccessReview_1 = require("./v1LocalSubjectAccessReview");
const v1LocalVolumeSource_1 = require("./v1LocalVolumeSource");
const v1ManagedFieldsEntry_1 = require("./v1ManagedFieldsEntry");
const v1MatchCondition_1 = require("./v1MatchCondition");
const v1MutatingWebhook_1 = require("./v1MutatingWebhook");
const v1MutatingWebhookConfiguration_1 = require("./v1MutatingWebhookConfiguration");
const v1MutatingWebhookConfigurationList_1 = require("./v1MutatingWebhookConfigurationList");
const v1NFSVolumeSource_1 = require("./v1NFSVolumeSource");
const v1Namespace_1 = require("./v1Namespace");
const v1NamespaceCondition_1 = require("./v1NamespaceCondition");
const v1NamespaceList_1 = require("./v1NamespaceList");
const v1NamespaceSpec_1 = require("./v1NamespaceSpec");
const v1NamespaceStatus_1 = require("./v1NamespaceStatus");
const v1NetworkPolicy_1 = require("./v1NetworkPolicy");
const v1NetworkPolicyEgressRule_1 = require("./v1NetworkPolicyEgressRule");
const v1NetworkPolicyIngressRule_1 = require("./v1NetworkPolicyIngressRule");
const v1NetworkPolicyList_1 = require("./v1NetworkPolicyList");
const v1NetworkPolicyPeer_1 = require("./v1NetworkPolicyPeer");
const v1NetworkPolicyPort_1 = require("./v1NetworkPolicyPort");
const v1NetworkPolicySpec_1 = require("./v1NetworkPolicySpec");
const v1Node_1 = require("./v1Node");
const v1NodeAddress_1 = require("./v1NodeAddress");
const v1NodeAffinity_1 = require("./v1NodeAffinity");
const v1NodeCondition_1 = require("./v1NodeCondition");
const v1NodeConfigSource_1 = require("./v1NodeConfigSource");
const v1NodeConfigStatus_1 = require("./v1NodeConfigStatus");
const v1NodeDaemonEndpoints_1 = require("./v1NodeDaemonEndpoints");
const v1NodeList_1 = require("./v1NodeList");
const v1NodeSelector_1 = require("./v1NodeSelector");
const v1NodeSelectorRequirement_1 = require("./v1NodeSelectorRequirement");
const v1NodeSelectorTerm_1 = require("./v1NodeSelectorTerm");
const v1NodeSpec_1 = require("./v1NodeSpec");
const v1NodeStatus_1 = require("./v1NodeStatus");
const v1NodeSystemInfo_1 = require("./v1NodeSystemInfo");
const v1NonResourceAttributes_1 = require("./v1NonResourceAttributes");
const v1NonResourceRule_1 = require("./v1NonResourceRule");
const v1ObjectFieldSelector_1 = require("./v1ObjectFieldSelector");
const v1ObjectMeta_1 = require("./v1ObjectMeta");
const v1ObjectReference_1 = require("./v1ObjectReference");
const v1Overhead_1 = require("./v1Overhead");
const v1OwnerReference_1 = require("./v1OwnerReference");
const v1PersistentVolume_1 = require("./v1PersistentVolume");
const v1PersistentVolumeClaim_1 = require("./v1PersistentVolumeClaim");
const v1PersistentVolumeClaimCondition_1 = require("./v1PersistentVolumeClaimCondition");
const v1PersistentVolumeClaimList_1 = require("./v1PersistentVolumeClaimList");
const v1PersistentVolumeClaimSpec_1 = require("./v1PersistentVolumeClaimSpec");
const v1PersistentVolumeClaimStatus_1 = require("./v1PersistentVolumeClaimStatus");
const v1PersistentVolumeClaimTemplate_1 = require("./v1PersistentVolumeClaimTemplate");
const v1PersistentVolumeClaimVolumeSource_1 = require("./v1PersistentVolumeClaimVolumeSource");
const v1PersistentVolumeList_1 = require("./v1PersistentVolumeList");
const v1PersistentVolumeSpec_1 = require("./v1PersistentVolumeSpec");
const v1PersistentVolumeStatus_1 = require("./v1PersistentVolumeStatus");
const v1PhotonPersistentDiskVolumeSource_1 = require("./v1PhotonPersistentDiskVolumeSource");
const v1Pod_1 = require("./v1Pod");
const v1PodAffinity_1 = require("./v1PodAffinity");
const v1PodAffinityTerm_1 = require("./v1PodAffinityTerm");
const v1PodAntiAffinity_1 = require("./v1PodAntiAffinity");
const v1PodCondition_1 = require("./v1PodCondition");
const v1PodDNSConfig_1 = require("./v1PodDNSConfig");
const v1PodDNSConfigOption_1 = require("./v1PodDNSConfigOption");
const v1PodDisruptionBudget_1 = require("./v1PodDisruptionBudget");
const v1PodDisruptionBudgetList_1 = require("./v1PodDisruptionBudgetList");
const v1PodDisruptionBudgetSpec_1 = require("./v1PodDisruptionBudgetSpec");
const v1PodDisruptionBudgetStatus_1 = require("./v1PodDisruptionBudgetStatus");
const v1PodFailurePolicy_1 = require("./v1PodFailurePolicy");
const v1PodFailurePolicyOnExitCodesRequirement_1 = require("./v1PodFailurePolicyOnExitCodesRequirement");
const v1PodFailurePolicyOnPodConditionsPattern_1 = require("./v1PodFailurePolicyOnPodConditionsPattern");
const v1PodFailurePolicyRule_1 = require("./v1PodFailurePolicyRule");
const v1PodIP_1 = require("./v1PodIP");
const v1PodList_1 = require("./v1PodList");
const v1PodOS_1 = require("./v1PodOS");
const v1PodReadinessGate_1 = require("./v1PodReadinessGate");
const v1PodResourceClaim_1 = require("./v1PodResourceClaim");
const v1PodResourceClaimStatus_1 = require("./v1PodResourceClaimStatus");
const v1PodSchedulingGate_1 = require("./v1PodSchedulingGate");
const v1PodSecurityContext_1 = require("./v1PodSecurityContext");
const v1PodSpec_1 = require("./v1PodSpec");
const v1PodStatus_1 = require("./v1PodStatus");
const v1PodTemplate_1 = require("./v1PodTemplate");
const v1PodTemplateList_1 = require("./v1PodTemplateList");
const v1PodTemplateSpec_1 = require("./v1PodTemplateSpec");
const v1PolicyRule_1 = require("./v1PolicyRule");
const v1PortStatus_1 = require("./v1PortStatus");
const v1PortworxVolumeSource_1 = require("./v1PortworxVolumeSource");
const v1Preconditions_1 = require("./v1Preconditions");
const v1PreferredSchedulingTerm_1 = require("./v1PreferredSchedulingTerm");
const v1PriorityClass_1 = require("./v1PriorityClass");
const v1PriorityClassList_1 = require("./v1PriorityClassList");
const v1Probe_1 = require("./v1Probe");
const v1ProjectedVolumeSource_1 = require("./v1ProjectedVolumeSource");
const v1QuobyteVolumeSource_1 = require("./v1QuobyteVolumeSource");
const v1RBDPersistentVolumeSource_1 = require("./v1RBDPersistentVolumeSource");
const v1RBDVolumeSource_1 = require("./v1RBDVolumeSource");
const v1ReplicaSet_1 = require("./v1ReplicaSet");
const v1ReplicaSetCondition_1 = require("./v1ReplicaSetCondition");
const v1ReplicaSetList_1 = require("./v1ReplicaSetList");
const v1ReplicaSetSpec_1 = require("./v1ReplicaSetSpec");
const v1ReplicaSetStatus_1 = require("./v1ReplicaSetStatus");
const v1ReplicationController_1 = require("./v1ReplicationController");
const v1ReplicationControllerCondition_1 = require("./v1ReplicationControllerCondition");
const v1ReplicationControllerList_1 = require("./v1ReplicationControllerList");
const v1ReplicationControllerSpec_1 = require("./v1ReplicationControllerSpec");
const v1ReplicationControllerStatus_1 = require("./v1ReplicationControllerStatus");
const v1ResourceAttributes_1 = require("./v1ResourceAttributes");
const v1ResourceClaim_1 = require("./v1ResourceClaim");
const v1ResourceFieldSelector_1 = require("./v1ResourceFieldSelector");
const v1ResourceQuota_1 = require("./v1ResourceQuota");
const v1ResourceQuotaList_1 = require("./v1ResourceQuotaList");
const v1ResourceQuotaSpec_1 = require("./v1ResourceQuotaSpec");
const v1ResourceQuotaStatus_1 = require("./v1ResourceQuotaStatus");
const v1ResourceRequirements_1 = require("./v1ResourceRequirements");
const v1ResourceRule_1 = require("./v1ResourceRule");
const v1Role_1 = require("./v1Role");
const v1RoleBinding_1 = require("./v1RoleBinding");
const v1RoleBindingList_1 = require("./v1RoleBindingList");
const v1RoleList_1 = require("./v1RoleList");
const v1RoleRef_1 = require("./v1RoleRef");
const v1RollingUpdateDaemonSet_1 = require("./v1RollingUpdateDaemonSet");
const v1RollingUpdateDeployment_1 = require("./v1RollingUpdateDeployment");
const v1RollingUpdateStatefulSetStrategy_1 = require("./v1RollingUpdateStatefulSetStrategy");
const v1RuleWithOperations_1 = require("./v1RuleWithOperations");
const v1RuntimeClass_1 = require("./v1RuntimeClass");
const v1RuntimeClassList_1 = require("./v1RuntimeClassList");
const v1SELinuxOptions_1 = require("./v1SELinuxOptions");
const v1Scale_1 = require("./v1Scale");
const v1ScaleIOPersistentVolumeSource_1 = require("./v1ScaleIOPersistentVolumeSource");
const v1ScaleIOVolumeSource_1 = require("./v1ScaleIOVolumeSource");
const v1ScaleSpec_1 = require("./v1ScaleSpec");
const v1ScaleStatus_1 = require("./v1ScaleStatus");
const v1Scheduling_1 = require("./v1Scheduling");
const v1ScopeSelector_1 = require("./v1ScopeSelector");
const v1ScopedResourceSelectorRequirement_1 = require("./v1ScopedResourceSelectorRequirement");
const v1SeccompProfile_1 = require("./v1SeccompProfile");
const v1Secret_1 = require("./v1Secret");
const v1SecretEnvSource_1 = require("./v1SecretEnvSource");
const v1SecretKeySelector_1 = require("./v1SecretKeySelector");
const v1SecretList_1 = require("./v1SecretList");
const v1SecretProjection_1 = require("./v1SecretProjection");
const v1SecretReference_1 = require("./v1SecretReference");
const v1SecretVolumeSource_1 = require("./v1SecretVolumeSource");
const v1SecurityContext_1 = require("./v1SecurityContext");
const v1SelfSubjectAccessReview_1 = require("./v1SelfSubjectAccessReview");
const v1SelfSubjectAccessReviewSpec_1 = require("./v1SelfSubjectAccessReviewSpec");
const v1SelfSubjectReview_1 = require("./v1SelfSubjectReview");
const v1SelfSubjectReviewStatus_1 = require("./v1SelfSubjectReviewStatus");
const v1SelfSubjectRulesReview_1 = require("./v1SelfSubjectRulesReview");
const v1SelfSubjectRulesReviewSpec_1 = require("./v1SelfSubjectRulesReviewSpec");
const v1ServerAddressByClientCIDR_1 = require("./v1ServerAddressByClientCIDR");
const v1Service_1 = require("./v1Service");
const v1ServiceAccount_1 = require("./v1ServiceAccount");
const v1ServiceAccountList_1 = require("./v1ServiceAccountList");
const v1ServiceAccountTokenProjection_1 = require("./v1ServiceAccountTokenProjection");
const v1ServiceBackendPort_1 = require("./v1ServiceBackendPort");
const v1ServiceList_1 = require("./v1ServiceList");
const v1ServicePort_1 = require("./v1ServicePort");
const v1ServiceSpec_1 = require("./v1ServiceSpec");
const v1ServiceStatus_1 = require("./v1ServiceStatus");
const v1SessionAffinityConfig_1 = require("./v1SessionAffinityConfig");
const v1StatefulSet_1 = require("./v1StatefulSet");
const v1StatefulSetCondition_1 = require("./v1StatefulSetCondition");
const v1StatefulSetList_1 = require("./v1StatefulSetList");
const v1StatefulSetOrdinals_1 = require("./v1StatefulSetOrdinals");
const v1StatefulSetPersistentVolumeClaimRetentionPolicy_1 = require("./v1StatefulSetPersistentVolumeClaimRetentionPolicy");
const v1StatefulSetSpec_1 = require("./v1StatefulSetSpec");
const v1StatefulSetStatus_1 = require("./v1StatefulSetStatus");
const v1StatefulSetUpdateStrategy_1 = require("./v1StatefulSetUpdateStrategy");
const v1Status_1 = require("./v1Status");
const v1StatusCause_1 = require("./v1StatusCause");
const v1StatusDetails_1 = require("./v1StatusDetails");
const v1StorageClass_1 = require("./v1StorageClass");
const v1StorageClassList_1 = require("./v1StorageClassList");
const v1StorageOSPersistentVolumeSource_1 = require("./v1StorageOSPersistentVolumeSource");
const v1StorageOSVolumeSource_1 = require("./v1StorageOSVolumeSource");
const v1Subject_1 = require("./v1Subject");
const v1SubjectAccessReview_1 = require("./v1SubjectAccessReview");
const v1SubjectAccessReviewSpec_1 = require("./v1SubjectAccessReviewSpec");
const v1SubjectAccessReviewStatus_1 = require("./v1SubjectAccessReviewStatus");
const v1SubjectRulesReviewStatus_1 = require("./v1SubjectRulesReviewStatus");
const v1Sysctl_1 = require("./v1Sysctl");
const v1TCPSocketAction_1 = require("./v1TCPSocketAction");
const v1Taint_1 = require("./v1Taint");
const v1TokenRequestSpec_1 = require("./v1TokenRequestSpec");
const v1TokenRequestStatus_1 = require("./v1TokenRequestStatus");
const v1TokenReview_1 = require("./v1TokenReview");
const v1TokenReviewSpec_1 = require("./v1TokenReviewSpec");
const v1TokenReviewStatus_1 = require("./v1TokenReviewStatus");
const v1Toleration_1 = require("./v1Toleration");
const v1TopologySelectorLabelRequirement_1 = require("./v1TopologySelectorLabelRequirement");
const v1TopologySelectorTerm_1 = require("./v1TopologySelectorTerm");
const v1TopologySpreadConstraint_1 = require("./v1TopologySpreadConstraint");
const v1TypedLocalObjectReference_1 = require("./v1TypedLocalObjectReference");
const v1TypedObjectReference_1 = require("./v1TypedObjectReference");
const v1UncountedTerminatedPods_1 = require("./v1UncountedTerminatedPods");
const v1UserInfo_1 = require("./v1UserInfo");
const v1ValidatingWebhook_1 = require("./v1ValidatingWebhook");
const v1ValidatingWebhookConfiguration_1 = require("./v1ValidatingWebhookConfiguration");
const v1ValidatingWebhookConfigurationList_1 = require("./v1ValidatingWebhookConfigurationList");
const v1ValidationRule_1 = require("./v1ValidationRule");
const v1Volume_1 = require("./v1Volume");
const v1VolumeAttachment_1 = require("./v1VolumeAttachment");
const v1VolumeAttachmentList_1 = require("./v1VolumeAttachmentList");
const v1VolumeAttachmentSource_1 = require("./v1VolumeAttachmentSource");
const v1VolumeAttachmentSpec_1 = require("./v1VolumeAttachmentSpec");
const v1VolumeAttachmentStatus_1 = require("./v1VolumeAttachmentStatus");
const v1VolumeDevice_1 = require("./v1VolumeDevice");
const v1VolumeError_1 = require("./v1VolumeError");
const v1VolumeMount_1 = require("./v1VolumeMount");
const v1VolumeNodeAffinity_1 = require("./v1VolumeNodeAffinity");
const v1VolumeNodeResources_1 = require("./v1VolumeNodeResources");
const v1VolumeProjection_1 = require("./v1VolumeProjection");
const v1VsphereVirtualDiskVolumeSource_1 = require("./v1VsphereVirtualDiskVolumeSource");
const v1WatchEvent_1 = require("./v1WatchEvent");
const v1WebhookConversion_1 = require("./v1WebhookConversion");
const v1WeightedPodAffinityTerm_1 = require("./v1WeightedPodAffinityTerm");
const v1WindowsSecurityContextOptions_1 = require("./v1WindowsSecurityContextOptions");
const v1alpha1AuditAnnotation_1 = require("./v1alpha1AuditAnnotation");
const v1alpha1ClusterCIDR_1 = require("./v1alpha1ClusterCIDR");
const v1alpha1ClusterCIDRList_1 = require("./v1alpha1ClusterCIDRList");
const v1alpha1ClusterCIDRSpec_1 = require("./v1alpha1ClusterCIDRSpec");
const v1alpha1ClusterTrustBundle_1 = require("./v1alpha1ClusterTrustBundle");
const v1alpha1ClusterTrustBundleList_1 = require("./v1alpha1ClusterTrustBundleList");
const v1alpha1ClusterTrustBundleSpec_1 = require("./v1alpha1ClusterTrustBundleSpec");
const v1alpha1ExpressionWarning_1 = require("./v1alpha1ExpressionWarning");
const v1alpha1IPAddress_1 = require("./v1alpha1IPAddress");
const v1alpha1IPAddressList_1 = require("./v1alpha1IPAddressList");
const v1alpha1IPAddressSpec_1 = require("./v1alpha1IPAddressSpec");
const v1alpha1MatchCondition_1 = require("./v1alpha1MatchCondition");
const v1alpha1MatchResources_1 = require("./v1alpha1MatchResources");
const v1alpha1NamedRuleWithOperations_1 = require("./v1alpha1NamedRuleWithOperations");
const v1alpha1ParamKind_1 = require("./v1alpha1ParamKind");
const v1alpha1ParamRef_1 = require("./v1alpha1ParamRef");
const v1alpha1ParentReference_1 = require("./v1alpha1ParentReference");
const v1alpha1SelfSubjectReview_1 = require("./v1alpha1SelfSubjectReview");
const v1alpha1SelfSubjectReviewStatus_1 = require("./v1alpha1SelfSubjectReviewStatus");
const v1alpha1ServerStorageVersion_1 = require("./v1alpha1ServerStorageVersion");
const v1alpha1StorageVersion_1 = require("./v1alpha1StorageVersion");
const v1alpha1StorageVersionCondition_1 = require("./v1alpha1StorageVersionCondition");
const v1alpha1StorageVersionList_1 = require("./v1alpha1StorageVersionList");
const v1alpha1StorageVersionStatus_1 = require("./v1alpha1StorageVersionStatus");
const v1alpha1TypeChecking_1 = require("./v1alpha1TypeChecking");
const v1alpha1ValidatingAdmissionPolicy_1 = require("./v1alpha1ValidatingAdmissionPolicy");
const v1alpha1ValidatingAdmissionPolicyBinding_1 = require("./v1alpha1ValidatingAdmissionPolicyBinding");
const v1alpha1ValidatingAdmissionPolicyBindingList_1 = require("./v1alpha1ValidatingAdmissionPolicyBindingList");
const v1alpha1ValidatingAdmissionPolicyBindingSpec_1 = require("./v1alpha1ValidatingAdmissionPolicyBindingSpec");
const v1alpha1ValidatingAdmissionPolicyList_1 = require("./v1alpha1ValidatingAdmissionPolicyList");
const v1alpha1ValidatingAdmissionPolicySpec_1 = require("./v1alpha1ValidatingAdmissionPolicySpec");
const v1alpha1ValidatingAdmissionPolicyStatus_1 = require("./v1alpha1ValidatingAdmissionPolicyStatus");
const v1alpha1Validation_1 = require("./v1alpha1Validation");
const v1alpha1Variable_1 = require("./v1alpha1Variable");
const v1alpha2AllocationResult_1 = require("./v1alpha2AllocationResult");
const v1alpha2PodSchedulingContext_1 = require("./v1alpha2PodSchedulingContext");
const v1alpha2PodSchedulingContextList_1 = require("./v1alpha2PodSchedulingContextList");
const v1alpha2PodSchedulingContextSpec_1 = require("./v1alpha2PodSchedulingContextSpec");
const v1alpha2PodSchedulingContextStatus_1 = require("./v1alpha2PodSchedulingContextStatus");
const v1alpha2ResourceClaim_1 = require("./v1alpha2ResourceClaim");
const v1alpha2ResourceClaimConsumerReference_1 = require("./v1alpha2ResourceClaimConsumerReference");
const v1alpha2ResourceClaimList_1 = require("./v1alpha2ResourceClaimList");
const v1alpha2ResourceClaimParametersReference_1 = require("./v1alpha2ResourceClaimParametersReference");
const v1alpha2ResourceClaimSchedulingStatus_1 = require("./v1alpha2ResourceClaimSchedulingStatus");
const v1alpha2ResourceClaimSpec_1 = require("./v1alpha2ResourceClaimSpec");
const v1alpha2ResourceClaimStatus_1 = require("./v1alpha2ResourceClaimStatus");
const v1alpha2ResourceClaimTemplate_1 = require("./v1alpha2ResourceClaimTemplate");
const v1alpha2ResourceClaimTemplateList_1 = require("./v1alpha2ResourceClaimTemplateList");
const v1alpha2ResourceClaimTemplateSpec_1 = require("./v1alpha2ResourceClaimTemplateSpec");
const v1alpha2ResourceClass_1 = require("./v1alpha2ResourceClass");
const v1alpha2ResourceClassList_1 = require("./v1alpha2ResourceClassList");
const v1alpha2ResourceClassParametersReference_1 = require("./v1alpha2ResourceClassParametersReference");
const v1alpha2ResourceHandle_1 = require("./v1alpha2ResourceHandle");
const v1beta1AuditAnnotation_1 = require("./v1beta1AuditAnnotation");
const v1beta1ExpressionWarning_1 = require("./v1beta1ExpressionWarning");
const v1beta1MatchCondition_1 = require("./v1beta1MatchCondition");
const v1beta1MatchResources_1 = require("./v1beta1MatchResources");
const v1beta1NamedRuleWithOperations_1 = require("./v1beta1NamedRuleWithOperations");
const v1beta1ParamKind_1 = require("./v1beta1ParamKind");
const v1beta1ParamRef_1 = require("./v1beta1ParamRef");
const v1beta1SelfSubjectReview_1 = require("./v1beta1SelfSubjectReview");
const v1beta1SelfSubjectReviewStatus_1 = require("./v1beta1SelfSubjectReviewStatus");
const v1beta1TypeChecking_1 = require("./v1beta1TypeChecking");
const v1beta1ValidatingAdmissionPolicy_1 = require("./v1beta1ValidatingAdmissionPolicy");
const v1beta1ValidatingAdmissionPolicyBinding_1 = require("./v1beta1ValidatingAdmissionPolicyBinding");
const v1beta1ValidatingAdmissionPolicyBindingList_1 = require("./v1beta1ValidatingAdmissionPolicyBindingList");
const v1beta1ValidatingAdmissionPolicyBindingSpec_1 = require("./v1beta1ValidatingAdmissionPolicyBindingSpec");
const v1beta1ValidatingAdmissionPolicyList_1 = require("./v1beta1ValidatingAdmissionPolicyList");
const v1beta1ValidatingAdmissionPolicySpec_1 = require("./v1beta1ValidatingAdmissionPolicySpec");
const v1beta1ValidatingAdmissionPolicyStatus_1 = require("./v1beta1ValidatingAdmissionPolicyStatus");
const v1beta1Validation_1 = require("./v1beta1Validation");
const v1beta1Variable_1 = require("./v1beta1Variable");
const v1beta2ExemptPriorityLevelConfiguration_1 = require("./v1beta2ExemptPriorityLevelConfiguration");
const v1beta2FlowDistinguisherMethod_1 = require("./v1beta2FlowDistinguisherMethod");
const v1beta2FlowSchema_1 = require("./v1beta2FlowSchema");
const v1beta2FlowSchemaCondition_1 = require("./v1beta2FlowSchemaCondition");
const v1beta2FlowSchemaList_1 = require("./v1beta2FlowSchemaList");
const v1beta2FlowSchemaSpec_1 = require("./v1beta2FlowSchemaSpec");
const v1beta2FlowSchemaStatus_1 = require("./v1beta2FlowSchemaStatus");
const v1beta2GroupSubject_1 = require("./v1beta2GroupSubject");
const v1beta2LimitResponse_1 = require("./v1beta2LimitResponse");
const v1beta2LimitedPriorityLevelConfiguration_1 = require("./v1beta2LimitedPriorityLevelConfiguration");
const v1beta2NonResourcePolicyRule_1 = require("./v1beta2NonResourcePolicyRule");
const v1beta2PolicyRulesWithSubjects_1 = require("./v1beta2PolicyRulesWithSubjects");
const v1beta2PriorityLevelConfiguration_1 = require("./v1beta2PriorityLevelConfiguration");
const v1beta2PriorityLevelConfigurationCondition_1 = require("./v1beta2PriorityLevelConfigurationCondition");
const v1beta2PriorityLevelConfigurationList_1 = require("./v1beta2PriorityLevelConfigurationList");
const v1beta2PriorityLevelConfigurationReference_1 = require("./v1beta2PriorityLevelConfigurationReference");
const v1beta2PriorityLevelConfigurationSpec_1 = require("./v1beta2PriorityLevelConfigurationSpec");
const v1beta2PriorityLevelConfigurationStatus_1 = require("./v1beta2PriorityLevelConfigurationStatus");
const v1beta2QueuingConfiguration_1 = require("./v1beta2QueuingConfiguration");
const v1beta2ResourcePolicyRule_1 = require("./v1beta2ResourcePolicyRule");
const v1beta2ServiceAccountSubject_1 = require("./v1beta2ServiceAccountSubject");
const v1beta2Subject_1 = require("./v1beta2Subject");
const v1beta2UserSubject_1 = require("./v1beta2UserSubject");
const v1beta3ExemptPriorityLevelConfiguration_1 = require("./v1beta3ExemptPriorityLevelConfiguration");
const v1beta3FlowDistinguisherMethod_1 = require("./v1beta3FlowDistinguisherMethod");
const v1beta3FlowSchema_1 = require("./v1beta3FlowSchema");
const v1beta3FlowSchemaCondition_1 = require("./v1beta3FlowSchemaCondition");
const v1beta3FlowSchemaList_1 = require("./v1beta3FlowSchemaList");
const v1beta3FlowSchemaSpec_1 = require("./v1beta3FlowSchemaSpec");
const v1beta3FlowSchemaStatus_1 = require("./v1beta3FlowSchemaStatus");
const v1beta3GroupSubject_1 = require("./v1beta3GroupSubject");
const v1beta3LimitResponse_1 = require("./v1beta3LimitResponse");
const v1beta3LimitedPriorityLevelConfiguration_1 = require("./v1beta3LimitedPriorityLevelConfiguration");
const v1beta3NonResourcePolicyRule_1 = require("./v1beta3NonResourcePolicyRule");
const v1beta3PolicyRulesWithSubjects_1 = require("./v1beta3PolicyRulesWithSubjects");
const v1beta3PriorityLevelConfiguration_1 = require("./v1beta3PriorityLevelConfiguration");
const v1beta3PriorityLevelConfigurationCondition_1 = require("./v1beta3PriorityLevelConfigurationCondition");
const v1beta3PriorityLevelConfigurationList_1 = require("./v1beta3PriorityLevelConfigurationList");
const v1beta3PriorityLevelConfigurationReference_1 = require("./v1beta3PriorityLevelConfigurationReference");
const v1beta3PriorityLevelConfigurationSpec_1 = require("./v1beta3PriorityLevelConfigurationSpec");
const v1beta3PriorityLevelConfigurationStatus_1 = require("./v1beta3PriorityLevelConfigurationStatus");
const v1beta3QueuingConfiguration_1 = require("./v1beta3QueuingConfiguration");
const v1beta3ResourcePolicyRule_1 = require("./v1beta3ResourcePolicyRule");
const v1beta3ServiceAccountSubject_1 = require("./v1beta3ServiceAccountSubject");
const v1beta3Subject_1 = require("./v1beta3Subject");
const v1beta3UserSubject_1 = require("./v1beta3UserSubject");
const v2ContainerResourceMetricSource_1 = require("./v2ContainerResourceMetricSource");
const v2ContainerResourceMetricStatus_1 = require("./v2ContainerResourceMetricStatus");
const v2CrossVersionObjectReference_1 = require("./v2CrossVersionObjectReference");
const v2ExternalMetricSource_1 = require("./v2ExternalMetricSource");
const v2ExternalMetricStatus_1 = require("./v2ExternalMetricStatus");
const v2HPAScalingPolicy_1 = require("./v2HPAScalingPolicy");
const v2HPAScalingRules_1 = require("./v2HPAScalingRules");
const v2HorizontalPodAutoscaler_1 = require("./v2HorizontalPodAutoscaler");
const v2HorizontalPodAutoscalerBehavior_1 = require("./v2HorizontalPodAutoscalerBehavior");
const v2HorizontalPodAutoscalerCondition_1 = require("./v2HorizontalPodAutoscalerCondition");
const v2HorizontalPodAutoscalerList_1 = require("./v2HorizontalPodAutoscalerList");
const v2HorizontalPodAutoscalerSpec_1 = require("./v2HorizontalPodAutoscalerSpec");
const v2HorizontalPodAutoscalerStatus_1 = require("./v2HorizontalPodAutoscalerStatus");
const v2MetricIdentifier_1 = require("./v2MetricIdentifier");
const v2MetricSpec_1 = require("./v2MetricSpec");
const v2MetricStatus_1 = require("./v2MetricStatus");
const v2MetricTarget_1 = require("./v2MetricTarget");
const v2MetricValueStatus_1 = require("./v2MetricValueStatus");
const v2ObjectMetricSource_1 = require("./v2ObjectMetricSource");
const v2ObjectMetricStatus_1 = require("./v2ObjectMetricStatus");
const v2PodsMetricSource_1 = require("./v2PodsMetricSource");
const v2PodsMetricStatus_1 = require("./v2PodsMetricStatus");
const v2ResourceMetricSource_1 = require("./v2ResourceMetricSource");
const v2ResourceMetricStatus_1 = require("./v2ResourceMetricStatus");
const versionInfo_1 = require("./versionInfo");
/* tslint:disable:no-unused-variable */
let primitives = [
    "string",
    "boolean",
    "double",
    "integer",
    "long",
    "float",
    "number",
    "any"
];
let enumsMap = {};
let typeMap = {
    "AdmissionregistrationV1ServiceReference": admissionregistrationV1ServiceReference_1.AdmissionregistrationV1ServiceReference,
    "AdmissionregistrationV1WebhookClientConfig": admissionregistrationV1WebhookClientConfig_1.AdmissionregistrationV1WebhookClientConfig,
    "ApiextensionsV1ServiceReference": apiextensionsV1ServiceReference_1.ApiextensionsV1ServiceReference,
    "ApiextensionsV1WebhookClientConfig": apiextensionsV1WebhookClientConfig_1.ApiextensionsV1WebhookClientConfig,
    "ApiregistrationV1ServiceReference": apiregistrationV1ServiceReference_1.ApiregistrationV1ServiceReference,
    "AuthenticationV1TokenRequest": authenticationV1TokenRequest_1.AuthenticationV1TokenRequest,
    "CoreV1EndpointPort": coreV1EndpointPort_1.CoreV1EndpointPort,
    "CoreV1Event": coreV1Event_1.CoreV1Event,
    "CoreV1EventList": coreV1EventList_1.CoreV1EventList,
    "CoreV1EventSeries": coreV1EventSeries_1.CoreV1EventSeries,
    "DiscoveryV1EndpointPort": discoveryV1EndpointPort_1.DiscoveryV1EndpointPort,
    "EventsV1Event": eventsV1Event_1.EventsV1Event,
    "EventsV1EventList": eventsV1EventList_1.EventsV1EventList,
    "EventsV1EventSeries": eventsV1EventSeries_1.EventsV1EventSeries,
    "StorageV1TokenRequest": storageV1TokenRequest_1.StorageV1TokenRequest,
    "V1APIGroup": v1APIGroup_1.V1APIGroup,
    "V1APIGroupList": v1APIGroupList_1.V1APIGroupList,
    "V1APIResource": v1APIResource_1.V1APIResource,
    "V1APIResourceList": v1APIResourceList_1.V1APIResourceList,
    "V1APIService": v1APIService_1.V1APIService,
    "V1APIServiceCondition": v1APIServiceCondition_1.V1APIServiceCondition,
    "V1APIServiceList": v1APIServiceList_1.V1APIServiceList,
    "V1APIServiceSpec": v1APIServiceSpec_1.V1APIServiceSpec,
    "V1APIServiceStatus": v1APIServiceStatus_1.V1APIServiceStatus,
    "V1APIVersions": v1APIVersions_1.V1APIVersions,
    "V1AWSElasticBlockStoreVolumeSource": v1AWSElasticBlockStoreVolumeSource_1.V1AWSElasticBlockStoreVolumeSource,
    "V1Affinity": v1Affinity_1.V1Affinity,
    "V1AggregationRule": v1AggregationRule_1.V1AggregationRule,
    "V1AttachedVolume": v1AttachedVolume_1.V1AttachedVolume,
    "V1AzureDiskVolumeSource": v1AzureDiskVolumeSource_1.V1AzureDiskVolumeSource,
    "V1AzureFilePersistentVolumeSource": v1AzureFilePersistentVolumeSource_1.V1AzureFilePersistentVolumeSource,
    "V1AzureFileVolumeSource": v1AzureFileVolumeSource_1.V1AzureFileVolumeSource,
    "V1Binding": v1Binding_1.V1Binding,
    "V1BoundObjectReference": v1BoundObjectReference_1.V1BoundObjectReference,
    "V1CSIDriver": v1CSIDriver_1.V1CSIDriver,
    "V1CSIDriverList": v1CSIDriverList_1.V1CSIDriverList,
    "V1CSIDriverSpec": v1CSIDriverSpec_1.V1CSIDriverSpec,
    "V1CSINode": v1CSINode_1.V1CSINode,
    "V1CSINodeDriver": v1CSINodeDriver_1.V1CSINodeDriver,
    "V1CSINodeList": v1CSINodeList_1.V1CSINodeList,
    "V1CSINodeSpec": v1CSINodeSpec_1.V1CSINodeSpec,
    "V1CSIPersistentVolumeSource": v1CSIPersistentVolumeSource_1.V1CSIPersistentVolumeSource,
    "V1CSIStorageCapacity": v1CSIStorageCapacity_1.V1CSIStorageCapacity,
    "V1CSIStorageCapacityList": v1CSIStorageCapacityList_1.V1CSIStorageCapacityList,
    "V1CSIVolumeSource": v1CSIVolumeSource_1.V1CSIVolumeSource,
    "V1Capabilities": v1Capabilities_1.V1Capabilities,
    "V1CephFSPersistentVolumeSource": v1CephFSPersistentVolumeSource_1.V1CephFSPersistentVolumeSource,
    "V1CephFSVolumeSource": v1CephFSVolumeSource_1.V1CephFSVolumeSource,
    "V1CertificateSigningRequest": v1CertificateSigningRequest_1.V1CertificateSigningRequest,
    "V1CertificateSigningRequestCondition": v1CertificateSigningRequestCondition_1.V1CertificateSigningRequestCondition,
    "V1CertificateSigningRequestList": v1CertificateSigningRequestList_1.V1CertificateSigningRequestList,
    "V1CertificateSigningRequestSpec": v1CertificateSigningRequestSpec_1.V1CertificateSigningRequestSpec,
    "V1CertificateSigningRequestStatus": v1CertificateSigningRequestStatus_1.V1CertificateSigningRequestStatus,
    "V1CinderPersistentVolumeSource": v1CinderPersistentVolumeSource_1.V1CinderPersistentVolumeSource,
    "V1CinderVolumeSource": v1CinderVolumeSource_1.V1CinderVolumeSource,
    "V1ClaimSource": v1ClaimSource_1.V1ClaimSource,
    "V1ClientIPConfig": v1ClientIPConfig_1.V1ClientIPConfig,
    "V1ClusterRole": v1ClusterRole_1.V1ClusterRole,
    "V1ClusterRoleBinding": v1ClusterRoleBinding_1.V1ClusterRoleBinding,
    "V1ClusterRoleBindingList": v1ClusterRoleBindingList_1.V1ClusterRoleBindingList,
    "V1ClusterRoleList": v1ClusterRoleList_1.V1ClusterRoleList,
    "V1ComponentCondition": v1ComponentCondition_1.V1ComponentCondition,
    "V1ComponentStatus": v1ComponentStatus_1.V1ComponentStatus,
    "V1ComponentStatusList": v1ComponentStatusList_1.V1ComponentStatusList,
    "V1Condition": v1Condition_1.V1Condition,
    "V1ConfigMap": v1ConfigMap_1.V1ConfigMap,
    "V1ConfigMapEnvSource": v1ConfigMapEnvSource_1.V1ConfigMapEnvSource,
    "V1ConfigMapKeySelector": v1ConfigMapKeySelector_1.V1ConfigMapKeySelector,
    "V1ConfigMapList": v1ConfigMapList_1.V1ConfigMapList,
    "V1ConfigMapNodeConfigSource": v1ConfigMapNodeConfigSource_1.V1ConfigMapNodeConfigSource,
    "V1ConfigMapProjection": v1ConfigMapProjection_1.V1ConfigMapProjection,
    "V1ConfigMapVolumeSource": v1ConfigMapVolumeSource_1.V1ConfigMapVolumeSource,
    "V1Container": v1Container_1.V1Container,
    "V1ContainerImage": v1ContainerImage_1.V1ContainerImage,
    "V1ContainerPort": v1ContainerPort_1.V1ContainerPort,
    "V1ContainerResizePolicy": v1ContainerResizePolicy_1.V1ContainerResizePolicy,
    "V1ContainerState": v1ContainerState_1.V1ContainerState,
    "V1ContainerStateRunning": v1ContainerStateRunning_1.V1ContainerStateRunning,
    "V1ContainerStateTerminated": v1ContainerStateTerminated_1.V1ContainerStateTerminated,
    "V1ContainerStateWaiting": v1ContainerStateWaiting_1.V1ContainerStateWaiting,
    "V1ContainerStatus": v1ContainerStatus_1.V1ContainerStatus,
    "V1ControllerRevision": v1ControllerRevision_1.V1ControllerRevision,
    "V1ControllerRevisionList": v1ControllerRevisionList_1.V1ControllerRevisionList,
    "V1CronJob": v1CronJob_1.V1CronJob,
    "V1CronJobList": v1CronJobList_1.V1CronJobList,
    "V1CronJobSpec": v1CronJobSpec_1.V1CronJobSpec,
    "V1CronJobStatus": v1CronJobStatus_1.V1CronJobStatus,
    "V1CrossVersionObjectReference": v1CrossVersionObjectReference_1.V1CrossVersionObjectReference,
    "V1CustomResourceColumnDefinition": v1CustomResourceColumnDefinition_1.V1CustomResourceColumnDefinition,
    "V1CustomResourceConversion": v1CustomResourceConversion_1.V1CustomResourceConversion,
    "V1CustomResourceDefinition": v1CustomResourceDefinition_1.V1CustomResourceDefinition,
    "V1CustomResourceDefinitionCondition": v1CustomResourceDefinitionCondition_1.V1CustomResourceDefinitionCondition,
    "V1CustomResourceDefinitionList": v1CustomResourceDefinitionList_1.V1CustomResourceDefinitionList,
    "V1CustomResourceDefinitionNames": v1CustomResourceDefinitionNames_1.V1CustomResourceDefinitionNames,
    "V1CustomResourceDefinitionSpec": v1CustomResourceDefinitionSpec_1.V1CustomResourceDefinitionSpec,
    "V1CustomResourceDefinitionStatus": v1CustomResourceDefinitionStatus_1.V1CustomResourceDefinitionStatus,
    "V1CustomResourceDefinitionVersion": v1CustomResourceDefinitionVersion_1.V1CustomResourceDefinitionVersion,
    "V1CustomResourceSubresourceScale": v1CustomResourceSubresourceScale_1.V1CustomResourceSubresourceScale,
    "V1CustomResourceSubresources": v1CustomResourceSubresources_1.V1CustomResourceSubresources,
    "V1CustomResourceValidation": v1CustomResourceValidation_1.V1CustomResourceValidation,
    "V1DaemonEndpoint": v1DaemonEndpoint_1.V1DaemonEndpoint,
    "V1DaemonSet": v1DaemonSet_1.V1DaemonSet,
    "V1DaemonSetCondition": v1DaemonSetCondition_1.V1DaemonSetCondition,
    "V1DaemonSetList": v1DaemonSetList_1.V1DaemonSetList,
    "V1DaemonSetSpec": v1DaemonSetSpec_1.V1DaemonSetSpec,
    "V1DaemonSetStatus": v1DaemonSetStatus_1.V1DaemonSetStatus,
    "V1DaemonSetUpdateStrategy": v1DaemonSetUpdateStrategy_1.V1DaemonSetUpdateStrategy,
    "V1DeleteOptions": v1DeleteOptions_1.V1DeleteOptions,
    "V1Deployment": v1Deployment_1.V1Deployment,
    "V1DeploymentCondition": v1DeploymentCondition_1.V1DeploymentCondition,
    "V1DeploymentList": v1DeploymentList_1.V1DeploymentList,
    "V1DeploymentSpec": v1DeploymentSpec_1.V1DeploymentSpec,
    "V1DeploymentStatus": v1DeploymentStatus_1.V1DeploymentStatus,
    "V1DeploymentStrategy": v1DeploymentStrategy_1.V1DeploymentStrategy,
    "V1DownwardAPIProjection": v1DownwardAPIProjection_1.V1DownwardAPIProjection,
    "V1DownwardAPIVolumeFile": v1DownwardAPIVolumeFile_1.V1DownwardAPIVolumeFile,
    "V1DownwardAPIVolumeSource": v1DownwardAPIVolumeSource_1.V1DownwardAPIVolumeSource,
    "V1EmptyDirVolumeSource": v1EmptyDirVolumeSource_1.V1EmptyDirVolumeSource,
    "V1Endpoint": v1Endpoint_1.V1Endpoint,
    "V1EndpointAddress": v1EndpointAddress_1.V1EndpointAddress,
    "V1EndpointConditions": v1EndpointConditions_1.V1EndpointConditions,
    "V1EndpointHints": v1EndpointHints_1.V1EndpointHints,
    "V1EndpointSlice": v1EndpointSlice_1.V1EndpointSlice,
    "V1EndpointSliceList": v1EndpointSliceList_1.V1EndpointSliceList,
    "V1EndpointSubset": v1EndpointSubset_1.V1EndpointSubset,
    "V1Endpoints": v1Endpoints_1.V1Endpoints,
    "V1EndpointsList": v1EndpointsList_1.V1EndpointsList,
    "V1EnvFromSource": v1EnvFromSource_1.V1EnvFromSource,
    "V1EnvVar": v1EnvVar_1.V1EnvVar,
    "V1EnvVarSource": v1EnvVarSource_1.V1EnvVarSource,
    "V1EphemeralContainer": v1EphemeralContainer_1.V1EphemeralContainer,
    "V1EphemeralVolumeSource": v1EphemeralVolumeSource_1.V1EphemeralVolumeSource,
    "V1EventSource": v1EventSource_1.V1EventSource,
    "V1Eviction": v1Eviction_1.V1Eviction,
    "V1ExecAction": v1ExecAction_1.V1ExecAction,
    "V1ExternalDocumentation": v1ExternalDocumentation_1.V1ExternalDocumentation,
    "V1FCVolumeSource": v1FCVolumeSource_1.V1FCVolumeSource,
    "V1FlexPersistentVolumeSource": v1FlexPersistentVolumeSource_1.V1FlexPersistentVolumeSource,
    "V1FlexVolumeSource": v1FlexVolumeSource_1.V1FlexVolumeSource,
    "V1FlockerVolumeSource": v1FlockerVolumeSource_1.V1FlockerVolumeSource,
    "V1ForZone": v1ForZone_1.V1ForZone,
    "V1GCEPersistentDiskVolumeSource": v1GCEPersistentDiskVolumeSource_1.V1GCEPersistentDiskVolumeSource,
    "V1GRPCAction": v1GRPCAction_1.V1GRPCAction,
    "V1GitRepoVolumeSource": v1GitRepoVolumeSource_1.V1GitRepoVolumeSource,
    "V1GlusterfsPersistentVolumeSource": v1GlusterfsPersistentVolumeSource_1.V1GlusterfsPersistentVolumeSource,
    "V1GlusterfsVolumeSource": v1GlusterfsVolumeSource_1.V1GlusterfsVolumeSource,
    "V1GroupVersionForDiscovery": v1GroupVersionForDiscovery_1.V1GroupVersionForDiscovery,
    "V1HTTPGetAction": v1HTTPGetAction_1.V1HTTPGetAction,
    "V1HTTPHeader": v1HTTPHeader_1.V1HTTPHeader,
    "V1HTTPIngressPath": v1HTTPIngressPath_1.V1HTTPIngressPath,
    "V1HTTPIngressRuleValue": v1HTTPIngressRuleValue_1.V1HTTPIngressRuleValue,
    "V1HorizontalPodAutoscaler": v1HorizontalPodAutoscaler_1.V1HorizontalPodAutoscaler,
    "V1HorizontalPodAutoscalerList": v1HorizontalPodAutoscalerList_1.V1HorizontalPodAutoscalerList,
    "V1HorizontalPodAutoscalerSpec": v1HorizontalPodAutoscalerSpec_1.V1HorizontalPodAutoscalerSpec,
    "V1HorizontalPodAutoscalerStatus": v1HorizontalPodAutoscalerStatus_1.V1HorizontalPodAutoscalerStatus,
    "V1HostAlias": v1HostAlias_1.V1HostAlias,
    "V1HostIP": v1HostIP_1.V1HostIP,
    "V1HostPathVolumeSource": v1HostPathVolumeSource_1.V1HostPathVolumeSource,
    "V1IPBlock": v1IPBlock_1.V1IPBlock,
    "V1ISCSIPersistentVolumeSource": v1ISCSIPersistentVolumeSource_1.V1ISCSIPersistentVolumeSource,
    "V1ISCSIVolumeSource": v1ISCSIVolumeSource_1.V1ISCSIVolumeSource,
    "V1Ingress": v1Ingress_1.V1Ingress,
    "V1IngressBackend": v1IngressBackend_1.V1IngressBackend,
    "V1IngressClass": v1IngressClass_1.V1IngressClass,
    "V1IngressClassList": v1IngressClassList_1.V1IngressClassList,
    "V1IngressClassParametersReference": v1IngressClassParametersReference_1.V1IngressClassParametersReference,
    "V1IngressClassSpec": v1IngressClassSpec_1.V1IngressClassSpec,
    "V1IngressList": v1IngressList_1.V1IngressList,
    "V1IngressLoadBalancerIngress": v1IngressLoadBalancerIngress_1.V1IngressLoadBalancerIngress,
    "V1IngressLoadBalancerStatus": v1IngressLoadBalancerStatus_1.V1IngressLoadBalancerStatus,
    "V1IngressPortStatus": v1IngressPortStatus_1.V1IngressPortStatus,
    "V1IngressRule": v1IngressRule_1.V1IngressRule,
    "V1IngressServiceBackend": v1IngressServiceBackend_1.V1IngressServiceBackend,
    "V1IngressSpec": v1IngressSpec_1.V1IngressSpec,
    "V1IngressStatus": v1IngressStatus_1.V1IngressStatus,
    "V1IngressTLS": v1IngressTLS_1.V1IngressTLS,
    "V1JSONSchemaProps": v1JSONSchemaProps_1.V1JSONSchemaProps,
    "V1Job": v1Job_1.V1Job,
    "V1JobCondition": v1JobCondition_1.V1JobCondition,
    "V1JobList": v1JobList_1.V1JobList,
    "V1JobSpec": v1JobSpec_1.V1JobSpec,
    "V1JobStatus": v1JobStatus_1.V1JobStatus,
    "V1JobTemplateSpec": v1JobTemplateSpec_1.V1JobTemplateSpec,
    "V1KeyToPath": v1KeyToPath_1.V1KeyToPath,
    "V1LabelSelector": v1LabelSelector_1.V1LabelSelector,
    "V1LabelSelectorRequirement": v1LabelSelectorRequirement_1.V1LabelSelectorRequirement,
    "V1Lease": v1Lease_1.V1Lease,
    "V1LeaseList": v1LeaseList_1.V1LeaseList,
    "V1LeaseSpec": v1LeaseSpec_1.V1LeaseSpec,
    "V1Lifecycle": v1Lifecycle_1.V1Lifecycle,
    "V1LifecycleHandler": v1LifecycleHandler_1.V1LifecycleHandler,
    "V1LimitRange": v1LimitRange_1.V1LimitRange,
    "V1LimitRangeItem": v1LimitRangeItem_1.V1LimitRangeItem,
    "V1LimitRangeList": v1LimitRangeList_1.V1LimitRangeList,
    "V1LimitRangeSpec": v1LimitRangeSpec_1.V1LimitRangeSpec,
    "V1ListMeta": v1ListMeta_1.V1ListMeta,
    "V1LoadBalancerIngress": v1LoadBalancerIngress_1.V1LoadBalancerIngress,
    "V1LoadBalancerStatus": v1LoadBalancerStatus_1.V1LoadBalancerStatus,
    "V1LocalObjectReference": v1LocalObjectReference_1.V1LocalObjectReference,
    "V1LocalSubjectAccessReview": v1LocalSubjectAccessReview_1.V1LocalSubjectAccessReview,
    "V1LocalVolumeSource": v1LocalVolumeSource_1.V1LocalVolumeSource,
    "V1ManagedFieldsEntry": v1ManagedFieldsEntry_1.V1ManagedFieldsEntry,
    "V1MatchCondition": v1MatchCondition_1.V1MatchCondition,
    "V1MutatingWebhook": v1MutatingWebhook_1.V1MutatingWebhook,
    "V1MutatingWebhookConfiguration": v1MutatingWebhookConfiguration_1.V1MutatingWebhookConfiguration,
    "V1MutatingWebhookConfigurationList": v1MutatingWebhookConfigurationList_1.V1MutatingWebhookConfigurationList,
    "V1NFSVolumeSource": v1NFSVolumeSource_1.V1NFSVolumeSource,
    "V1Namespace": v1Namespace_1.V1Namespace,
    "V1NamespaceCondition": v1NamespaceCondition_1.V1NamespaceCondition,
    "V1NamespaceList": v1NamespaceList_1.V1NamespaceList,
    "V1NamespaceSpec": v1NamespaceSpec_1.V1NamespaceSpec,
    "V1NamespaceStatus": v1NamespaceStatus_1.V1NamespaceStatus,
    "V1NetworkPolicy": v1NetworkPolicy_1.V1NetworkPolicy,
    "V1NetworkPolicyEgressRule": v1NetworkPolicyEgressRule_1.V1NetworkPolicyEgressRule,
    "V1NetworkPolicyIngressRule": v1NetworkPolicyIngressRule_1.V1NetworkPolicyIngressRule,
    "V1NetworkPolicyList": v1NetworkPolicyList_1.V1NetworkPolicyList,
    "V1NetworkPolicyPeer": v1NetworkPolicyPeer_1.V1NetworkPolicyPeer,
    "V1NetworkPolicyPort": v1NetworkPolicyPort_1.V1NetworkPolicyPort,
    "V1NetworkPolicySpec": v1NetworkPolicySpec_1.V1NetworkPolicySpec,
    "V1Node": v1Node_1.V1Node,
    "V1NodeAddress": v1NodeAddress_1.V1NodeAddress,
    "V1NodeAffinity": v1NodeAffinity_1.V1NodeAffinity,
    "V1NodeCondition": v1NodeCondition_1.V1NodeCondition,
    "V1NodeConfigSource": v1NodeConfigSource_1.V1NodeConfigSource,
    "V1NodeConfigStatus": v1NodeConfigStatus_1.V1NodeConfigStatus,
    "V1NodeDaemonEndpoints": v1NodeDaemonEndpoints_1.V1NodeDaemonEndpoints,
    "V1NodeList": v1NodeList_1.V1NodeList,
    "V1NodeSelector": v1NodeSelector_1.V1NodeSelector,
    "V1NodeSelectorRequirement": v1NodeSelectorRequirement_1.V1NodeSelectorRequirement,
    "V1NodeSelectorTerm": v1NodeSelectorTerm_1.V1NodeSelectorTerm,
    "V1NodeSpec": v1NodeSpec_1.V1NodeSpec,
    "V1NodeStatus": v1NodeStatus_1.V1NodeStatus,
    "V1NodeSystemInfo": v1NodeSystemInfo_1.V1NodeSystemInfo,
    "V1NonResourceAttributes": v1NonResourceAttributes_1.V1NonResourceAttributes,
    "V1NonResourceRule": v1NonResourceRule_1.V1NonResourceRule,
    "V1ObjectFieldSelector": v1ObjectFieldSelector_1.V1ObjectFieldSelector,
    "V1ObjectMeta": v1ObjectMeta_1.V1ObjectMeta,
    "V1ObjectReference": v1ObjectReference_1.V1ObjectReference,
    "V1Overhead": v1Overhead_1.V1Overhead,
    "V1OwnerReference": v1OwnerReference_1.V1OwnerReference,
    "V1PersistentVolume": v1PersistentVolume_1.V1PersistentVolume,
    "V1PersistentVolumeClaim": v1PersistentVolumeClaim_1.V1PersistentVolumeClaim,
    "V1PersistentVolumeClaimCondition": v1PersistentVolumeClaimCondition_1.V1PersistentVolumeClaimCondition,
    "V1PersistentVolumeClaimList": v1PersistentVolumeClaimList_1.V1PersistentVolumeClaimList,
    "V1PersistentVolumeClaimSpec": v1PersistentVolumeClaimSpec_1.V1PersistentVolumeClaimSpec,
    "V1PersistentVolumeClaimStatus": v1PersistentVolumeClaimStatus_1.V1PersistentVolumeClaimStatus,
    "V1PersistentVolumeClaimTemplate": v1PersistentVolumeClaimTemplate_1.V1PersistentVolumeClaimTemplate,
    "V1PersistentVolumeClaimVolumeSource": v1PersistentVolumeClaimVolumeSource_1.V1PersistentVolumeClaimVolumeSource,
    "V1PersistentVolumeList": v1PersistentVolumeList_1.V1PersistentVolumeList,
    "V1PersistentVolumeSpec": v1PersistentVolumeSpec_1.V1PersistentVolumeSpec,
    "V1PersistentVolumeStatus": v1PersistentVolumeStatus_1.V1PersistentVolumeStatus,
    "V1PhotonPersistentDiskVolumeSource": v1PhotonPersistentDiskVolumeSource_1.V1PhotonPersistentDiskVolumeSource,
    "V1Pod": v1Pod_1.V1Pod,
    "V1PodAffinity": v1PodAffinity_1.V1PodAffinity,
    "V1PodAffinityTerm": v1PodAffinityTerm_1.V1PodAffinityTerm,
    "V1PodAntiAffinity": v1PodAntiAffinity_1.V1PodAntiAffinity,
    "V1PodCondition": v1PodCondition_1.V1PodCondition,
    "V1PodDNSConfig": v1PodDNSConfig_1.V1PodDNSConfig,
    "V1PodDNSConfigOption": v1PodDNSConfigOption_1.V1PodDNSConfigOption,
    "V1PodDisruptionBudget": v1PodDisruptionBudget_1.V1PodDisruptionBudget,
    "V1PodDisruptionBudgetList": v1PodDisruptionBudgetList_1.V1PodDisruptionBudgetList,
    "V1PodDisruptionBudgetSpec": v1PodDisruptionBudgetSpec_1.V1PodDisruptionBudgetSpec,
    "V1PodDisruptionBudgetStatus": v1PodDisruptionBudgetStatus_1.V1PodDisruptionBudgetStatus,
    "V1PodFailurePolicy": v1PodFailurePolicy_1.V1PodFailurePolicy,
    "V1PodFailurePolicyOnExitCodesRequirement": v1PodFailurePolicyOnExitCodesRequirement_1.V1PodFailurePolicyOnExitCodesRequirement,
    "V1PodFailurePolicyOnPodConditionsPattern": v1PodFailurePolicyOnPodConditionsPattern_1.V1PodFailurePolicyOnPodConditionsPattern,
    "V1PodFailurePolicyRule": v1PodFailurePolicyRule_1.V1PodFailurePolicyRule,
    "V1PodIP": v1PodIP_1.V1PodIP,
    "V1PodList": v1PodList_1.V1PodList,
    "V1PodOS": v1PodOS_1.V1PodOS,
    "V1PodReadinessGate": v1PodReadinessGate_1.V1PodReadinessGate,
    "V1PodResourceClaim": v1PodResourceClaim_1.V1PodResourceClaim,
    "V1PodResourceClaimStatus": v1PodResourceClaimStatus_1.V1PodResourceClaimStatus,
    "V1PodSchedulingGate": v1PodSchedulingGate_1.V1PodSchedulingGate,
    "V1PodSecurityContext": v1PodSecurityContext_1.V1PodSecurityContext,
    "V1PodSpec": v1PodSpec_1.V1PodSpec,
    "V1PodStatus": v1PodStatus_1.V1PodStatus,
    "V1PodTemplate": v1PodTemplate_1.V1PodTemplate,
    "V1PodTemplateList": v1PodTemplateList_1.V1PodTemplateList,
    "V1PodTemplateSpec": v1PodTemplateSpec_1.V1PodTemplateSpec,
    "V1PolicyRule": v1PolicyRule_1.V1PolicyRule,
    "V1PortStatus": v1PortStatus_1.V1PortStatus,
    "V1PortworxVolumeSource": v1PortworxVolumeSource_1.V1PortworxVolumeSource,
    "V1Preconditions": v1Preconditions_1.V1Preconditions,
    "V1PreferredSchedulingTerm": v1PreferredSchedulingTerm_1.V1PreferredSchedulingTerm,
    "V1PriorityClass": v1PriorityClass_1.V1PriorityClass,
    "V1PriorityClassList": v1PriorityClassList_1.V1PriorityClassList,
    "V1Probe": v1Probe_1.V1Probe,
    "V1ProjectedVolumeSource": v1ProjectedVolumeSource_1.V1ProjectedVolumeSource,
    "V1QuobyteVolumeSource": v1QuobyteVolumeSource_1.V1QuobyteVolumeSource,
    "V1RBDPersistentVolumeSource": v1RBDPersistentVolumeSource_1.V1RBDPersistentVolumeSource,
    "V1RBDVolumeSource": v1RBDVolumeSource_1.V1RBDVolumeSource,
    "V1ReplicaSet": v1ReplicaSet_1.V1ReplicaSet,
    "V1ReplicaSetCondition": v1ReplicaSetCondition_1.V1ReplicaSetCondition,
    "V1ReplicaSetList": v1ReplicaSetList_1.V1ReplicaSetList,
    "V1ReplicaSetSpec": v1ReplicaSetSpec_1.V1ReplicaSetSpec,
    "V1ReplicaSetStatus": v1ReplicaSetStatus_1.V1ReplicaSetStatus,
    "V1ReplicationController": v1ReplicationController_1.V1ReplicationController,
    "V1ReplicationControllerCondition": v1ReplicationControllerCondition_1.V1ReplicationControllerCondition,
    "V1ReplicationControllerList": v1ReplicationControllerList_1.V1ReplicationControllerList,
    "V1ReplicationControllerSpec": v1ReplicationControllerSpec_1.V1ReplicationControllerSpec,
    "V1ReplicationControllerStatus": v1ReplicationControllerStatus_1.V1ReplicationControllerStatus,
    "V1ResourceAttributes": v1ResourceAttributes_1.V1ResourceAttributes,
    "V1ResourceClaim": v1ResourceClaim_1.V1ResourceClaim,
    "V1ResourceFieldSelector": v1ResourceFieldSelector_1.V1ResourceFieldSelector,
    "V1ResourceQuota": v1ResourceQuota_1.V1ResourceQuota,
    "V1ResourceQuotaList": v1ResourceQuotaList_1.V1ResourceQuotaList,
    "V1ResourceQuotaSpec": v1ResourceQuotaSpec_1.V1ResourceQuotaSpec,
    "V1ResourceQuotaStatus": v1ResourceQuotaStatus_1.V1ResourceQuotaStatus,
    "V1ResourceRequirements": v1ResourceRequirements_1.V1ResourceRequirements,
    "V1ResourceRule": v1ResourceRule_1.V1ResourceRule,
    "V1Role": v1Role_1.V1Role,
    "V1RoleBinding": v1RoleBinding_1.V1RoleBinding,
    "V1RoleBindingList": v1RoleBindingList_1.V1RoleBindingList,
    "V1RoleList": v1RoleList_1.V1RoleList,
    "V1RoleRef": v1RoleRef_1.V1RoleRef,
    "V1RollingUpdateDaemonSet": v1RollingUpdateDaemonSet_1.V1RollingUpdateDaemonSet,
    "V1RollingUpdateDeployment": v1RollingUpdateDeployment_1.V1RollingUpdateDeployment,
    "V1RollingUpdateStatefulSetStrategy": v1RollingUpdateStatefulSetStrategy_1.V1RollingUpdateStatefulSetStrategy,
    "V1RuleWithOperations": v1RuleWithOperations_1.V1RuleWithOperations,
    "V1RuntimeClass": v1RuntimeClass_1.V1RuntimeClass,
    "V1RuntimeClassList": v1RuntimeClassList_1.V1RuntimeClassList,
    "V1SELinuxOptions": v1SELinuxOptions_1.V1SELinuxOptions,
    "V1Scale": v1Scale_1.V1Scale,
    "V1ScaleIOPersistentVolumeSource": v1ScaleIOPersistentVolumeSource_1.V1ScaleIOPersistentVolumeSource,
    "V1ScaleIOVolumeSource": v1ScaleIOVolumeSource_1.V1ScaleIOVolumeSource,
    "V1ScaleSpec": v1ScaleSpec_1.V1ScaleSpec,
    "V1ScaleStatus": v1ScaleStatus_1.V1ScaleStatus,
    "V1Scheduling": v1Scheduling_1.V1Scheduling,
    "V1ScopeSelector": v1ScopeSelector_1.V1ScopeSelector,
    "V1ScopedResourceSelectorRequirement": v1ScopedResourceSelectorRequirement_1.V1ScopedResourceSelectorRequirement,
    "V1SeccompProfile": v1SeccompProfile_1.V1SeccompProfile,
    "V1Secret": v1Secret_1.V1Secret,
    "V1SecretEnvSource": v1SecretEnvSource_1.V1SecretEnvSource,
    "V1SecretKeySelector": v1SecretKeySelector_1.V1SecretKeySelector,
    "V1SecretList": v1SecretList_1.V1SecretList,
    "V1SecretProjection": v1SecretProjection_1.V1SecretProjection,
    "V1SecretReference": v1SecretReference_1.V1SecretReference,
    "V1SecretVolumeSource": v1SecretVolumeSource_1.V1SecretVolumeSource,
    "V1SecurityContext": v1SecurityContext_1.V1SecurityContext,
    "V1SelfSubjectAccessReview": v1SelfSubjectAccessReview_1.V1SelfSubjectAccessReview,
    "V1SelfSubjectAccessReviewSpec": v1SelfSubjectAccessReviewSpec_1.V1SelfSubjectAccessReviewSpec,
    "V1SelfSubjectReview": v1SelfSubjectReview_1.V1SelfSubjectReview,
    "V1SelfSubjectReviewStatus": v1SelfSubjectReviewStatus_1.V1SelfSubjectReviewStatus,
    "V1SelfSubjectRulesReview": v1SelfSubjectRulesReview_1.V1SelfSubjectRulesReview,
    "V1SelfSubjectRulesReviewSpec": v1SelfSubjectRulesReviewSpec_1.V1SelfSubjectRulesReviewSpec,
    "V1ServerAddressByClientCIDR": v1ServerAddressByClientCIDR_1.V1ServerAddressByClientCIDR,
    "V1Service": v1Service_1.V1Service,
    "V1ServiceAccount": v1ServiceAccount_1.V1ServiceAccount,
    "V1ServiceAccountList": v1ServiceAccountList_1.V1ServiceAccountList,
    "V1ServiceAccountTokenProjection": v1ServiceAccountTokenProjection_1.V1ServiceAccountTokenProjection,
    "V1ServiceBackendPort": v1ServiceBackendPort_1.V1ServiceBackendPort,
    "V1ServiceList": v1ServiceList_1.V1ServiceList,
    "V1ServicePort": v1ServicePort_1.V1ServicePort,
    "V1ServiceSpec": v1ServiceSpec_1.V1ServiceSpec,
    "V1ServiceStatus": v1ServiceStatus_1.V1ServiceStatus,
    "V1SessionAffinityConfig": v1SessionAffinityConfig_1.V1SessionAffinityConfig,
    "V1StatefulSet": v1StatefulSet_1.V1StatefulSet,
    "V1StatefulSetCondition": v1StatefulSetCondition_1.V1StatefulSetCondition,
    "V1StatefulSetList": v1StatefulSetList_1.V1StatefulSetList,
    "V1StatefulSetOrdinals": v1StatefulSetOrdinals_1.V1StatefulSetOrdinals,
    "V1StatefulSetPersistentVolumeClaimRetentionPolicy": v1StatefulSetPersistentVolumeClaimRetentionPolicy_1.V1StatefulSetPersistentVolumeClaimRetentionPolicy,
    "V1StatefulSetSpec": v1StatefulSetSpec_1.V1StatefulSetSpec,
    "V1StatefulSetStatus": v1StatefulSetStatus_1.V1StatefulSetStatus,
    "V1StatefulSetUpdateStrategy": v1StatefulSetUpdateStrategy_1.V1StatefulSetUpdateStrategy,
    "V1Status": v1Status_1.V1Status,
    "V1StatusCause": v1StatusCause_1.V1StatusCause,
    "V1StatusDetails": v1StatusDetails_1.V1StatusDetails,
    "V1StorageClass": v1StorageClass_1.V1StorageClass,
    "V1StorageClassList": v1StorageClassList_1.V1StorageClassList,
    "V1StorageOSPersistentVolumeSource": v1StorageOSPersistentVolumeSource_1.V1StorageOSPersistentVolumeSource,
    "V1StorageOSVolumeSource": v1StorageOSVolumeSource_1.V1StorageOSVolumeSource,
    "V1Subject": v1Subject_1.V1Subject,
    "V1SubjectAccessReview": v1SubjectAccessReview_1.V1SubjectAccessReview,
    "V1SubjectAccessReviewSpec": v1SubjectAccessReviewSpec_1.V1SubjectAccessReviewSpec,
    "V1SubjectAccessReviewStatus": v1SubjectAccessReviewStatus_1.V1SubjectAccessReviewStatus,
    "V1SubjectRulesReviewStatus": v1SubjectRulesReviewStatus_1.V1SubjectRulesReviewStatus,
    "V1Sysctl": v1Sysctl_1.V1Sysctl,
    "V1TCPSocketAction": v1TCPSocketAction_1.V1TCPSocketAction,
    "V1Taint": v1Taint_1.V1Taint,
    "V1TokenRequestSpec": v1TokenRequestSpec_1.V1TokenRequestSpec,
    "V1TokenRequestStatus": v1TokenRequestStatus_1.V1TokenRequestStatus,
    "V1TokenReview": v1TokenReview_1.V1TokenReview,
    "V1TokenReviewSpec": v1TokenReviewSpec_1.V1TokenReviewSpec,
    "V1TokenReviewStatus": v1TokenReviewStatus_1.V1TokenReviewStatus,
    "V1Toleration": v1Toleration_1.V1Toleration,
    "V1TopologySelectorLabelRequirement": v1TopologySelectorLabelRequirement_1.V1TopologySelectorLabelRequirement,
    "V1TopologySelectorTerm": v1TopologySelectorTerm_1.V1TopologySelectorTerm,
    "V1TopologySpreadConstraint": v1TopologySpreadConstraint_1.V1TopologySpreadConstraint,
    "V1TypedLocalObjectReference": v1TypedLocalObjectReference_1.V1TypedLocalObjectReference,
    "V1TypedObjectReference": v1TypedObjectReference_1.V1TypedObjectReference,
    "V1UncountedTerminatedPods": v1UncountedTerminatedPods_1.V1UncountedTerminatedPods,
    "V1UserInfo": v1UserInfo_1.V1UserInfo,
    "V1ValidatingWebhook": v1ValidatingWebhook_1.V1ValidatingWebhook,
    "V1ValidatingWebhookConfiguration": v1ValidatingWebhookConfiguration_1.V1ValidatingWebhookConfiguration,
    "V1ValidatingWebhookConfigurationList": v1ValidatingWebhookConfigurationList_1.V1ValidatingWebhookConfigurationList,
    "V1ValidationRule": v1ValidationRule_1.V1ValidationRule,
    "V1Volume": v1Volume_1.V1Volume,
    "V1VolumeAttachment": v1VolumeAttachment_1.V1VolumeAttachment,
    "V1VolumeAttachmentList": v1VolumeAttachmentList_1.V1VolumeAttachmentList,
    "V1VolumeAttachmentSource": v1VolumeAttachmentSource_1.V1VolumeAttachmentSource,
    "V1VolumeAttachmentSpec": v1VolumeAttachmentSpec_1.V1VolumeAttachmentSpec,
    "V1VolumeAttachmentStatus": v1VolumeAttachmentStatus_1.V1VolumeAttachmentStatus,
    "V1VolumeDevice": v1VolumeDevice_1.V1VolumeDevice,
    "V1VolumeError": v1VolumeError_1.V1VolumeError,
    "V1VolumeMount": v1VolumeMount_1.V1VolumeMount,
    "V1VolumeNodeAffinity": v1VolumeNodeAffinity_1.V1VolumeNodeAffinity,
    "V1VolumeNodeResources": v1VolumeNodeResources_1.V1VolumeNodeResources,
    "V1VolumeProjection": v1VolumeProjection_1.V1VolumeProjection,
    "V1VsphereVirtualDiskVolumeSource": v1VsphereVirtualDiskVolumeSource_1.V1VsphereVirtualDiskVolumeSource,
    "V1WatchEvent": v1WatchEvent_1.V1WatchEvent,
    "V1WebhookConversion": v1WebhookConversion_1.V1WebhookConversion,
    "V1WeightedPodAffinityTerm": v1WeightedPodAffinityTerm_1.V1WeightedPodAffinityTerm,
    "V1WindowsSecurityContextOptions": v1WindowsSecurityContextOptions_1.V1WindowsSecurityContextOptions,
    "V1alpha1AuditAnnotation": v1alpha1AuditAnnotation_1.V1alpha1AuditAnnotation,
    "V1alpha1ClusterCIDR": v1alpha1ClusterCIDR_1.V1alpha1ClusterCIDR,
    "V1alpha1ClusterCIDRList": v1alpha1ClusterCIDRList_1.V1alpha1ClusterCIDRList,
    "V1alpha1ClusterCIDRSpec": v1alpha1ClusterCIDRSpec_1.V1alpha1ClusterCIDRSpec,
    "V1alpha1ClusterTrustBundle": v1alpha1ClusterTrustBundle_1.V1alpha1ClusterTrustBundle,
    "V1alpha1ClusterTrustBundleList": v1alpha1ClusterTrustBundleList_1.V1alpha1ClusterTrustBundleList,
    "V1alpha1ClusterTrustBundleSpec": v1alpha1ClusterTrustBundleSpec_1.V1alpha1ClusterTrustBundleSpec,
    "V1alpha1ExpressionWarning": v1alpha1ExpressionWarning_1.V1alpha1ExpressionWarning,
    "V1alpha1IPAddress": v1alpha1IPAddress_1.V1alpha1IPAddress,
    "V1alpha1IPAddressList": v1alpha1IPAddressList_1.V1alpha1IPAddressList,
    "V1alpha1IPAddressSpec": v1alpha1IPAddressSpec_1.V1alpha1IPAddressSpec,
    "V1alpha1MatchCondition": v1alpha1MatchCondition_1.V1alpha1MatchCondition,
    "V1alpha1MatchResources": v1alpha1MatchResources_1.V1alpha1MatchResources,
    "V1alpha1NamedRuleWithOperations": v1alpha1NamedRuleWithOperations_1.V1alpha1NamedRuleWithOperations,
    "V1alpha1ParamKind": v1alpha1ParamKind_1.V1alpha1ParamKind,
    "V1alpha1ParamRef": v1alpha1ParamRef_1.V1alpha1ParamRef,
    "V1alpha1ParentReference": v1alpha1ParentReference_1.V1alpha1ParentReference,
    "V1alpha1SelfSubjectReview": v1alpha1SelfSubjectReview_1.V1alpha1SelfSubjectReview,
    "V1alpha1SelfSubjectReviewStatus": v1alpha1SelfSubjectReviewStatus_1.V1alpha1SelfSubjectReviewStatus,
    "V1alpha1ServerStorageVersion": v1alpha1ServerStorageVersion_1.V1alpha1ServerStorageVersion,
    "V1alpha1StorageVersion": v1alpha1StorageVersion_1.V1alpha1StorageVersion,
    "V1alpha1StorageVersionCondition": v1alpha1StorageVersionCondition_1.V1alpha1StorageVersionCondition,
    "V1alpha1StorageVersionList": v1alpha1StorageVersionList_1.V1alpha1StorageVersionList,
    "V1alpha1StorageVersionStatus": v1alpha1StorageVersionStatus_1.V1alpha1StorageVersionStatus,
    "V1alpha1TypeChecking": v1alpha1TypeChecking_1.V1alpha1TypeChecking,
    "V1alpha1ValidatingAdmissionPolicy": v1alpha1ValidatingAdmissionPolicy_1.V1alpha1ValidatingAdmissionPolicy,
    "V1alpha1ValidatingAdmissionPolicyBinding": v1alpha1ValidatingAdmissionPolicyBinding_1.V1alpha1ValidatingAdmissionPolicyBinding,
    "V1alpha1ValidatingAdmissionPolicyBindingList": v1alpha1ValidatingAdmissionPolicyBindingList_1.V1alpha1ValidatingAdmissionPolicyBindingList,
    "V1alpha1ValidatingAdmissionPolicyBindingSpec": v1alpha1ValidatingAdmissionPolicyBindingSpec_1.V1alpha1ValidatingAdmissionPolicyBindingSpec,
    "V1alpha1ValidatingAdmissionPolicyList": v1alpha1ValidatingAdmissionPolicyList_1.V1alpha1ValidatingAdmissionPolicyList,
    "V1alpha1ValidatingAdmissionPolicySpec": v1alpha1ValidatingAdmissionPolicySpec_1.V1alpha1ValidatingAdmissionPolicySpec,
    "V1alpha1ValidatingAdmissionPolicyStatus": v1alpha1ValidatingAdmissionPolicyStatus_1.V1alpha1ValidatingAdmissionPolicyStatus,
    "V1alpha1Validation": v1alpha1Validation_1.V1alpha1Validation,
    "V1alpha1Variable": v1alpha1Variable_1.V1alpha1Variable,
    "V1alpha2AllocationResult": v1alpha2AllocationResult_1.V1alpha2AllocationResult,
    "V1alpha2PodSchedulingContext": v1alpha2PodSchedulingContext_1.V1alpha2PodSchedulingContext,
    "V1alpha2PodSchedulingContextList": v1alpha2PodSchedulingContextList_1.V1alpha2PodSchedulingContextList,
    "V1alpha2PodSchedulingContextSpec": v1alpha2PodSchedulingContextSpec_1.V1alpha2PodSchedulingContextSpec,
    "V1alpha2PodSchedulingContextStatus": v1alpha2PodSchedulingContextStatus_1.V1alpha2PodSchedulingContextStatus,
    "V1alpha2ResourceClaim": v1alpha2ResourceClaim_1.V1alpha2ResourceClaim,
    "V1alpha2ResourceClaimConsumerReference": v1alpha2ResourceClaimConsumerReference_1.V1alpha2ResourceClaimConsumerReference,
    "V1alpha2ResourceClaimList": v1alpha2ResourceClaimList_1.V1alpha2ResourceClaimList,
    "V1alpha2ResourceClaimParametersReference": v1alpha2ResourceClaimParametersReference_1.V1alpha2ResourceClaimParametersReference,
    "V1alpha2ResourceClaimSchedulingStatus": v1alpha2ResourceClaimSchedulingStatus_1.V1alpha2ResourceClaimSchedulingStatus,
    "V1alpha2ResourceClaimSpec": v1alpha2ResourceClaimSpec_1.V1alpha2ResourceClaimSpec,
    "V1alpha2ResourceClaimStatus": v1alpha2ResourceClaimStatus_1.V1alpha2ResourceClaimStatus,
    "V1alpha2ResourceClaimTemplate": v1alpha2ResourceClaimTemplate_1.V1alpha2ResourceClaimTemplate,
    "V1alpha2ResourceClaimTemplateList": v1alpha2ResourceClaimTemplateList_1.V1alpha2ResourceClaimTemplateList,
    "V1alpha2ResourceClaimTemplateSpec": v1alpha2ResourceClaimTemplateSpec_1.V1alpha2ResourceClaimTemplateSpec,
    "V1alpha2ResourceClass": v1alpha2ResourceClass_1.V1alpha2ResourceClass,
    "V1alpha2ResourceClassList": v1alpha2ResourceClassList_1.V1alpha2ResourceClassList,
    "V1alpha2ResourceClassParametersReference": v1alpha2ResourceClassParametersReference_1.V1alpha2ResourceClassParametersReference,
    "V1alpha2ResourceHandle": v1alpha2ResourceHandle_1.V1alpha2ResourceHandle,
    "V1beta1AuditAnnotation": v1beta1AuditAnnotation_1.V1beta1AuditAnnotation,
    "V1beta1ExpressionWarning": v1beta1ExpressionWarning_1.V1beta1ExpressionWarning,
    "V1beta1MatchCondition": v1beta1MatchCondition_1.V1beta1MatchCondition,
    "V1beta1MatchResources": v1beta1MatchResources_1.V1beta1MatchResources,
    "V1beta1NamedRuleWithOperations": v1beta1NamedRuleWithOperations_1.V1beta1NamedRuleWithOperations,
    "V1beta1ParamKind": v1beta1ParamKind_1.V1beta1ParamKind,
    "V1beta1ParamRef": v1beta1ParamRef_1.V1beta1ParamRef,
    "V1beta1SelfSubjectReview": v1beta1SelfSubjectReview_1.V1beta1SelfSubjectReview,
    "V1beta1SelfSubjectReviewStatus": v1beta1SelfSubjectReviewStatus_1.V1beta1SelfSubjectReviewStatus,
    "V1beta1TypeChecking": v1beta1TypeChecking_1.V1beta1TypeChecking,
    "V1beta1ValidatingAdmissionPolicy": v1beta1ValidatingAdmissionPolicy_1.V1beta1ValidatingAdmissionPolicy,
    "V1beta1ValidatingAdmissionPolicyBinding": v1beta1ValidatingAdmissionPolicyBinding_1.V1beta1ValidatingAdmissionPolicyBinding,
    "V1beta1ValidatingAdmissionPolicyBindingList": v1beta1ValidatingAdmissionPolicyBindingList_1.V1beta1ValidatingAdmissionPolicyBindingList,
    "V1beta1ValidatingAdmissionPolicyBindingSpec": v1beta1ValidatingAdmissionPolicyBindingSpec_1.V1beta1ValidatingAdmissionPolicyBindingSpec,
    "V1beta1ValidatingAdmissionPolicyList": v1beta1ValidatingAdmissionPolicyList_1.V1beta1ValidatingAdmissionPolicyList,
    "V1beta1ValidatingAdmissionPolicySpec": v1beta1ValidatingAdmissionPolicySpec_1.V1beta1ValidatingAdmissionPolicySpec,
    "V1beta1ValidatingAdmissionPolicyStatus": v1beta1ValidatingAdmissionPolicyStatus_1.V1beta1ValidatingAdmissionPolicyStatus,
    "V1beta1Validation": v1beta1Validation_1.V1beta1Validation,
    "V1beta1Variable": v1beta1Variable_1.V1beta1Variable,
    "V1beta2ExemptPriorityLevelConfiguration": v1beta2ExemptPriorityLevelConfiguration_1.V1beta2ExemptPriorityLevelConfiguration,
    "V1beta2FlowDistinguisherMethod": v1beta2FlowDistinguisherMethod_1.V1beta2FlowDistinguisherMethod,
    "V1beta2FlowSchema": v1beta2FlowSchema_1.V1beta2FlowSchema,
    "V1beta2FlowSchemaCondition": v1beta2FlowSchemaCondition_1.V1beta2FlowSchemaCondition,
    "V1beta2FlowSchemaList": v1beta2FlowSchemaList_1.V1beta2FlowSchemaList,
    "V1beta2FlowSchemaSpec": v1beta2FlowSchemaSpec_1.V1beta2FlowSchemaSpec,
    "V1beta2FlowSchemaStatus": v1beta2FlowSchemaStatus_1.V1beta2FlowSchemaStatus,
    "V1beta2GroupSubject": v1beta2GroupSubject_1.V1beta2GroupSubject,
    "V1beta2LimitResponse": v1beta2LimitResponse_1.V1beta2LimitResponse,
    "V1beta2LimitedPriorityLevelConfiguration": v1beta2LimitedPriorityLevelConfiguration_1.V1beta2LimitedPriorityLevelConfiguration,
    "V1beta2NonResourcePolicyRule": v1beta2NonResourcePolicyRule_1.V1beta2NonResourcePolicyRule,
    "V1beta2PolicyRulesWithSubjects": v1beta2PolicyRulesWithSubjects_1.V1beta2PolicyRulesWithSubjects,
    "V1beta2PriorityLevelConfiguration": v1beta2PriorityLevelConfiguration_1.V1beta2PriorityLevelConfiguration,
    "V1beta2PriorityLevelConfigurationCondition": v1beta2PriorityLevelConfigurationCondition_1.V1beta2PriorityLevelConfigurationCondition,
    "V1beta2PriorityLevelConfigurationList": v1beta2PriorityLevelConfigurationList_1.V1beta2PriorityLevelConfigurationList,
    "V1beta2PriorityLevelConfigurationReference": v1beta2PriorityLevelConfigurationReference_1.V1beta2PriorityLevelConfigurationReference,
    "V1beta2PriorityLevelConfigurationSpec": v1beta2PriorityLevelConfigurationSpec_1.V1beta2PriorityLevelConfigurationSpec,
    "V1beta2PriorityLevelConfigurationStatus": v1beta2PriorityLevelConfigurationStatus_1.V1beta2PriorityLevelConfigurationStatus,
    "V1beta2QueuingConfiguration": v1beta2QueuingConfiguration_1.V1beta2QueuingConfiguration,
    "V1beta2ResourcePolicyRule": v1beta2ResourcePolicyRule_1.V1beta2ResourcePolicyRule,
    "V1beta2ServiceAccountSubject": v1beta2ServiceAccountSubject_1.V1beta2ServiceAccountSubject,
    "V1beta2Subject": v1beta2Subject_1.V1beta2Subject,
    "V1beta2UserSubject": v1beta2UserSubject_1.V1beta2UserSubject,
    "V1beta3ExemptPriorityLevelConfiguration": v1beta3ExemptPriorityLevelConfiguration_1.V1beta3ExemptPriorityLevelConfiguration,
    "V1beta3FlowDistinguisherMethod": v1beta3FlowDistinguisherMethod_1.V1beta3FlowDistinguisherMethod,
    "V1beta3FlowSchema": v1beta3FlowSchema_1.V1beta3FlowSchema,
    "V1beta3FlowSchemaCondition": v1beta3FlowSchemaCondition_1.V1beta3FlowSchemaCondition,
    "V1beta3FlowSchemaList": v1beta3FlowSchemaList_1.V1beta3FlowSchemaList,
    "V1beta3FlowSchemaSpec": v1beta3FlowSchemaSpec_1.V1beta3FlowSchemaSpec,
    "V1beta3FlowSchemaStatus": v1beta3FlowSchemaStatus_1.V1beta3FlowSchemaStatus,
    "V1beta3GroupSubject": v1beta3GroupSubject_1.V1beta3GroupSubject,
    "V1beta3LimitResponse": v1beta3LimitResponse_1.V1beta3LimitResponse,
    "V1beta3LimitedPriorityLevelConfiguration": v1beta3LimitedPriorityLevelConfiguration_1.V1beta3LimitedPriorityLevelConfiguration,
    "V1beta3NonResourcePolicyRule": v1beta3NonResourcePolicyRule_1.V1beta3NonResourcePolicyRule,
    "V1beta3PolicyRulesWithSubjects": v1beta3PolicyRulesWithSubjects_1.V1beta3PolicyRulesWithSubjects,
    "V1beta3PriorityLevelConfiguration": v1beta3PriorityLevelConfiguration_1.V1beta3PriorityLevelConfiguration,
    "V1beta3PriorityLevelConfigurationCondition": v1beta3PriorityLevelConfigurationCondition_1.V1beta3PriorityLevelConfigurationCondition,
    "V1beta3PriorityLevelConfigurationList": v1beta3PriorityLevelConfigurationList_1.V1beta3PriorityLevelConfigurationList,
    "V1beta3PriorityLevelConfigurationReference": v1beta3PriorityLevelConfigurationReference_1.V1beta3PriorityLevelConfigurationReference,
    "V1beta3PriorityLevelConfigurationSpec": v1beta3PriorityLevelConfigurationSpec_1.V1beta3PriorityLevelConfigurationSpec,
    "V1beta3PriorityLevelConfigurationStatus": v1beta3PriorityLevelConfigurationStatus_1.V1beta3PriorityLevelConfigurationStatus,
    "V1beta3QueuingConfiguration": v1beta3QueuingConfiguration_1.V1beta3QueuingConfiguration,
    "V1beta3ResourcePolicyRule": v1beta3ResourcePolicyRule_1.V1beta3ResourcePolicyRule,
    "V1beta3ServiceAccountSubject": v1beta3ServiceAccountSubject_1.V1beta3ServiceAccountSubject,
    "V1beta3Subject": v1beta3Subject_1.V1beta3Subject,
    "V1beta3UserSubject": v1beta3UserSubject_1.V1beta3UserSubject,
    "V2ContainerResourceMetricSource": v2ContainerResourceMetricSource_1.V2ContainerResourceMetricSource,
    "V2ContainerResourceMetricStatus": v2ContainerResourceMetricStatus_1.V2ContainerResourceMetricStatus,
    "V2CrossVersionObjectReference": v2CrossVersionObjectReference_1.V2CrossVersionObjectReference,
    "V2ExternalMetricSource": v2ExternalMetricSource_1.V2ExternalMetricSource,
    "V2ExternalMetricStatus": v2ExternalMetricStatus_1.V2ExternalMetricStatus,
    "V2HPAScalingPolicy": v2HPAScalingPolicy_1.V2HPAScalingPolicy,
    "V2HPAScalingRules": v2HPAScalingRules_1.V2HPAScalingRules,
    "V2HorizontalPodAutoscaler": v2HorizontalPodAutoscaler_1.V2HorizontalPodAutoscaler,
    "V2HorizontalPodAutoscalerBehavior": v2HorizontalPodAutoscalerBehavior_1.V2HorizontalPodAutoscalerBehavior,
    "V2HorizontalPodAutoscalerCondition": v2HorizontalPodAutoscalerCondition_1.V2HorizontalPodAutoscalerCondition,
    "V2HorizontalPodAutoscalerList": v2HorizontalPodAutoscalerList_1.V2HorizontalPodAutoscalerList,
    "V2HorizontalPodAutoscalerSpec": v2HorizontalPodAutoscalerSpec_1.V2HorizontalPodAutoscalerSpec,
    "V2HorizontalPodAutoscalerStatus": v2HorizontalPodAutoscalerStatus_1.V2HorizontalPodAutoscalerStatus,
    "V2MetricIdentifier": v2MetricIdentifier_1.V2MetricIdentifier,
    "V2MetricSpec": v2MetricSpec_1.V2MetricSpec,
    "V2MetricStatus": v2MetricStatus_1.V2MetricStatus,
    "V2MetricTarget": v2MetricTarget_1.V2MetricTarget,
    "V2MetricValueStatus": v2MetricValueStatus_1.V2MetricValueStatus,
    "V2ObjectMetricSource": v2ObjectMetricSource_1.V2ObjectMetricSource,
    "V2ObjectMetricStatus": v2ObjectMetricStatus_1.V2ObjectMetricStatus,
    "V2PodsMetricSource": v2PodsMetricSource_1.V2PodsMetricSource,
    "V2PodsMetricStatus": v2PodsMetricStatus_1.V2PodsMetricStatus,
    "V2ResourceMetricSource": v2ResourceMetricSource_1.V2ResourceMetricSource,
    "V2ResourceMetricStatus": v2ResourceMetricStatus_1.V2ResourceMetricStatus,
    "VersionInfo": versionInfo_1.VersionInfo,
};
class ObjectSerializer {
    static findCorrectType(data, expectedType) {
        if (data == undefined) {
            return expectedType;
        }
        else if (primitives.indexOf(expectedType.toLowerCase()) !== -1) {
            return expectedType;
        }
        else if (expectedType === "Date") {
            return expectedType;
        }
        else {
            if (enumsMap[expectedType]) {
                return expectedType;
            }
            if (!typeMap[expectedType]) {
                return expectedType; // w/e we don't know the type
            }
            // Check the discriminator
            let discriminatorProperty = typeMap[expectedType].discriminator;
            if (discriminatorProperty == null) {
                return expectedType; // the type does not have a discriminator. use it.
            }
            else {
                if (data[discriminatorProperty]) {
                    var discriminatorType = data[discriminatorProperty];
                    if (typeMap[discriminatorType]) {
                        return discriminatorType; // use the type given in the discriminator
                    }
                    else {
                        return expectedType; // discriminator did not map to a type
                    }
                }
                else {
                    return expectedType; // discriminator was not present (or an empty string)
                }
            }
        }
    }
    static serialize(data, type) {
        if (data == undefined) {
            return data;
        }
        else if (primitives.indexOf(type.toLowerCase()) !== -1) {
            return data;
        }
        else if (type.lastIndexOf("Array<", 0) === 0) { // string.startsWith pre es6
            let subType = type.replace("Array<", ""); // Array<Type> => Type>
            subType = subType.substring(0, subType.length - 1); // Type> => Type
            let transformedData = [];
            for (let index = 0; index < data.length; index++) {
                let datum = data[index];
                transformedData.push(ObjectSerializer.serialize(datum, subType));
            }
            return transformedData;
        }
        else if (type === "Date") {
            return data.toISOString();
        }
        else {
            if (enumsMap[type]) {
                return data;
            }
            if (!typeMap[type]) { // in case we dont know the type
                return data;
            }
            // Get the actual type of this object
            type = this.findCorrectType(data, type);
            // get the map for the correct type.
            let attributeTypes = typeMap[type].getAttributeTypeMap();
            let instance = {};
            for (let index = 0; index < attributeTypes.length; index++) {
                let attributeType = attributeTypes[index];
                instance[attributeType.baseName] = ObjectSerializer.serialize(data[attributeType.name], attributeType.type);
            }
            return instance;
        }
    }
    static deserialize(data, type) {
        // polymorphism may change the actual type.
        type = ObjectSerializer.findCorrectType(data, type);
        if (data == undefined) {
            return data;
        }
        else if (primitives.indexOf(type.toLowerCase()) !== -1) {
            return data;
        }
        else if (type.lastIndexOf("Array<", 0) === 0) { // string.startsWith pre es6
            let subType = type.replace("Array<", ""); // Array<Type> => Type>
            subType = subType.substring(0, subType.length - 1); // Type> => Type
            let transformedData = [];
            for (let index = 0; index < data.length; index++) {
                let datum = data[index];
                transformedData.push(ObjectSerializer.deserialize(datum, subType));
            }
            return transformedData;
        }
        else if (type === "Date") {
            return new Date(data);
        }
        else {
            if (enumsMap[type]) { // is Enum
                return data;
            }
            if (!typeMap[type]) { // dont know the type
                return data;
            }
            let instance = new typeMap[type]();
            let attributeTypes = typeMap[type].getAttributeTypeMap();
            for (let index = 0; index < attributeTypes.length; index++) {
                let attributeType = attributeTypes[index];
                instance[attributeType.name] = ObjectSerializer.deserialize(data[attributeType.baseName], attributeType.type);
            }
            return instance;
        }
    }
}
exports.ObjectSerializer = ObjectSerializer;
class HttpBasicAuth {
    constructor() {
        this.username = '';
        this.password = '';
    }
    applyToRequest(requestOptions) {
        requestOptions.auth = {
            username: this.username, password: this.password
        };
    }
}
exports.HttpBasicAuth = HttpBasicAuth;
class HttpBearerAuth {
    constructor() {
        this.accessToken = '';
    }
    applyToRequest(requestOptions) {
        if (requestOptions && requestOptions.headers) {
            const accessToken = typeof this.accessToken === 'function'
                ? this.accessToken()
                : this.accessToken;
            requestOptions.headers["Authorization"] = "Bearer " + accessToken;
        }
    }
}
exports.HttpBearerAuth = HttpBearerAuth;
class ApiKeyAuth {
    constructor(location, paramName) {
        this.location = location;
        this.paramName = paramName;
        this.apiKey = '';
    }
    applyToRequest(requestOptions) {
        if (this.location == "query") {
            requestOptions.qs[this.paramName] = this.apiKey;
        }
        else if (this.location == "header" && requestOptions && requestOptions.headers) {
            requestOptions.headers[this.paramName] = this.apiKey;
        }
        else if (this.location == 'cookie' && requestOptions && requestOptions.headers) {
            if (requestOptions.headers['Cookie']) {
                requestOptions.headers['Cookie'] += '; ' + this.paramName + '=' + encodeURIComponent(this.apiKey);
            }
            else {
                requestOptions.headers['Cookie'] = this.paramName + '=' + encodeURIComponent(this.apiKey);
            }
        }
    }
}
exports.ApiKeyAuth = ApiKeyAuth;
class OAuth {
    constructor() {
        this.accessToken = '';
    }
    applyToRequest(requestOptions) {
        if (requestOptions && requestOptions.headers) {
            requestOptions.headers["Authorization"] = "Bearer " + this.accessToken;
        }
    }
}
exports.OAuth = OAuth;
class VoidAuth {
    constructor() {
        this.username = '';
        this.password = '';
    }
    applyToRequest(_) {
        // Do nothing
    }
}
exports.VoidAuth = VoidAuth;
//# sourceMappingURL=models.js.map