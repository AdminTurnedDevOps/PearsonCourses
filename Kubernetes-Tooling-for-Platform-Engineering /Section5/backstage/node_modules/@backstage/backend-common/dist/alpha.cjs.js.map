{"version":3,"file":"alpha.cjs.js","sources":["../src/deprecated/context/AbortContext.ts","../src/deprecated/context/RootContext.ts","../src/deprecated/context/ValueContext.ts","../src/deprecated/context/Contexts.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from './types';\n\n/**\n * A context that implements various abort related functionality.\n */\nexport class AbortContext implements Context {\n  /**\n   * Abort either when the parent aborts, or after the given timeout has\n   * expired.\n   *\n   * @param ctx - The parent context\n   * @param timeout - A timeout value, in milliseconds\n   * @returns A new context\n   */\n  static forTimeoutMillis(ctx: Context, timeout: number): Context {\n    const desiredDeadline = new Date(Date.now() + timeout);\n    const actualDeadline =\n      ctx.deadline && ctx.deadline < desiredDeadline\n        ? ctx.deadline\n        : desiredDeadline;\n\n    if (ctx.abortSignal.aborted) {\n      if (ctx.deadline && desiredDeadline === actualDeadline) {\n        return ctx;\n      }\n      return new AbortContext(ctx, ctx.abortSignal, actualDeadline);\n    }\n\n    const controller = new AbortController();\n    const timeoutHandle = setTimeout(abort, timeout);\n    ctx.abortSignal.addEventListener('abort', abort);\n\n    function abort() {\n      ctx.abortSignal.removeEventListener('abort', abort);\n      clearTimeout(timeoutHandle!);\n      controller.abort();\n    }\n\n    return new AbortContext(ctx, controller.signal, actualDeadline);\n  }\n\n  /**\n   * Abort either when the parent aborts, or when the given controller is\n   * triggered.\n   *\n   * @remarks\n   *\n   * If you have access to the controller, this function is more efficient than\n   * {@link AbortContext#forSignal}.\n   *\n   * @param ctx - The parent context\n   * @param controller - An abort controller\n   * @returns A new context\n   */\n  static forController(ctx: Context, controller: AbortController): Context {\n    // Already aborted context / signal are fine to reuse as-is\n    if (ctx.abortSignal.aborted) {\n      return ctx;\n    } else if (controller.signal.aborted) {\n      return new AbortContext(ctx, controller.signal, ctx.deadline);\n    }\n\n    function abort() {\n      ctx.abortSignal.removeEventListener('abort', abort);\n      controller.abort();\n    }\n\n    ctx.abortSignal.addEventListener('abort', abort);\n\n    return new AbortContext(ctx, controller.signal, ctx.deadline);\n  }\n\n  /**\n   * Abort either when the parent aborts, or when the given signal is triggered.\n   *\n   * @remarks\n   *\n   * If you have access to the controller and not just the signal,\n   * {@link AbortContext#forController} is slightly more efficient to use.\n   *\n   * @param ctx - The parent context\n   * @param signal - An abort signal\n   * @returns A new context\n   */\n  static forSignal(ctx: Context, signal: AbortSignal): Context {\n    // Already aborted context / signal are fine to reuse as-is\n    if (ctx.abortSignal.aborted) {\n      return ctx;\n    } else if (signal.aborted) {\n      return new AbortContext(ctx, signal, ctx.deadline);\n    }\n\n    const controller = new AbortController();\n\n    function abort() {\n      ctx.abortSignal.removeEventListener('abort', abort);\n      signal.removeEventListener('abort', abort);\n      controller.abort();\n    }\n\n    ctx.abortSignal.addEventListener('abort', abort);\n    signal.addEventListener('abort', abort);\n\n    return new AbortContext(ctx, controller.signal, ctx.deadline);\n  }\n\n  private constructor(\n    private readonly parent: Context,\n    readonly abortSignal: AbortSignal,\n    readonly deadline: Date | undefined,\n  ) {}\n\n  value<T = unknown>(key: string): T | undefined {\n    return this.parent.value(key);\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from './types';\n\n/**\n * Since the root context can never abort, and since nobody is ever meant to\n * dispatch events through it, we can use a static fake instance for efficiency.\n *\n * The reason that this was initially made for the root context is that due to\n * the way that we always chain contexts off of it, sometimes a huge number of\n * listeners want to add themselves to something that effectively never can be\n * aborted in the first place. This triggered warnings that the max listeners\n * limit was exceeded.\n */\nclass FakeAbortSignal implements AbortSignal {\n  readonly aborted = false;\n  readonly reason = undefined;\n  onabort() {}\n  throwIfAborted() {}\n  addEventListener() {}\n  removeEventListener() {}\n  dispatchEvent() {\n    return true;\n  }\n}\n\n/**\n * An empty root context.\n */\nexport class RootContext implements Context {\n  readonly abortSignal = new FakeAbortSignal();\n  readonly deadline = undefined;\n  value<T = unknown>(_key: string): T | undefined {\n    return undefined;\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from './types';\n\n/**\n * A context that just holds a single value, and delegates the rest to its\n * parent.\n */\nexport class ValueContext implements Context {\n  static forConstantValue(ctx: Context, key: string, value: unknown): Context {\n    return new ValueContext(ctx, key, value);\n  }\n\n  constructor(\n    private readonly _parent: Context,\n    private readonly _key: string,\n    private readonly _value: unknown,\n  ) {}\n\n  get abortSignal(): AbortSignal {\n    return this._parent.abortSignal;\n  }\n\n  get deadline(): Date | undefined {\n    return this._parent.deadline;\n  }\n\n  value<T = unknown>(key: string): T | undefined {\n    return key === this._key ? (this._value as T) : this._parent.value(key);\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Duration } from 'luxon';\nimport { AbortContext } from './AbortContext';\nimport { RootContext } from './RootContext';\nimport { Context } from './types';\nimport { ValueContext } from './ValueContext';\n\n/**\n * Common context decorators.\n *\n * @alpha\n * @deprecated This class is not used in the new Backend system, so it is going to be removed in a near future.\n */\nexport class Contexts {\n  /**\n   * Creates a root context.\n   *\n   * @remarks\n   *\n   * This should normally only be called near the root of an application. The\n   * created context is meant to be passed down into deeper levels, which may or\n   * may not make derived contexts out of it.\n   */\n  static root(): Context {\n    return new RootContext();\n  }\n\n  /**\n   * Creates a derived context, which signals to abort operations either when\n   * any parent context signals, or when the given source is aborted.\n   *\n   * @remarks\n   *\n   * If the parent context was already aborted, then it is returned as-is.\n   *\n   * If the given source was already aborted, then a new already-aborted context\n   * is returned.\n   *\n   * @param parentCtx - A parent context that shall be used as a base\n   * @param source - An abort controller or signal that you intend to perhaps\n   *                 trigger at some later point in time.\n   * @returns A new {@link Context}\n   */\n  static withAbort(\n    parentCtx: Context,\n    source: AbortController | AbortSignal,\n  ): Context {\n    return 'aborted' in source\n      ? AbortContext.forSignal(parentCtx, source)\n      : AbortContext.forController(parentCtx, source);\n  }\n\n  /**\n   * Creates a derived context, which signals to abort operations either when\n   * any parent context signals, or when the given amount of time has passed.\n   * This may affect the deadline.\n   *\n   * @param parentCtx - A parent context that shall be used as a base\n   * @param timeout - The duration of time, after which the derived context will\n   *                  signal to abort.\n   * @returns A new {@link Context}\n   */\n  static withTimeoutDuration(parentCtx: Context, timeout: Duration): Context {\n    return AbortContext.forTimeoutMillis(parentCtx, timeout.as('milliseconds'));\n  }\n\n  /**\n   * Creates a derived context, which signals to abort operations either when\n   * any parent context signals, or when the given amount of time has passed.\n   * This may affect the deadline.\n   *\n   * @param parentCtx - A parent context that shall be used as a base\n   * @param timeout - The number of milliseconds, after which the derived\n   *                  context will signal to abort.\n   * @returns A new {@link Context}\n   */\n  static withTimeoutMillis(parentCtx: Context, timeout: number): Context {\n    return AbortContext.forTimeoutMillis(parentCtx, timeout);\n  }\n\n  /**\n   * Creates a derived context, which has a specific key-value pair set as well\n   * as all key-value pairs that were set in the original context.\n   *\n   * @param parentCtx - A parent context that shall be used as a base\n   * @param key - The key of the value to set\n   * @param value - The value, or a function that accepts the previous value (or\n   *                undefined if not set yet) and computes the new value\n   * @returns A new {@link Context}\n   */\n  static withValue(\n    parentCtx: Context,\n    key: string,\n    value: unknown | ((previous: unknown | undefined) => unknown),\n  ): Context {\n    const v = typeof value === 'function' ? value(parentCtx.value(key)) : value;\n    return ValueContext.forConstantValue(parentCtx, key, v);\n  }\n}\n"],"names":[],"mappings":"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"}