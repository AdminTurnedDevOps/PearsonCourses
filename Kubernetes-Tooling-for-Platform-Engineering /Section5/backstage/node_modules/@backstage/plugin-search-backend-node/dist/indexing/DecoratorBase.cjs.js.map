{"version":3,"file":"DecoratorBase.cjs.js","sources":["../../src/indexing/DecoratorBase.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assertError } from '@backstage/errors';\nimport { IndexableDocument } from '@backstage/plugin-search-common';\nimport { Transform } from 'stream';\n\n/**\n * Base class encapsulating simple async transformations. Useful as a base\n * class for Backstage search decorators.\n * @public\n */\nexport abstract class DecoratorBase extends Transform {\n  constructor() {\n    super({ objectMode: true });\n  }\n\n  /**\n   * Any asynchronous setup tasks can be performed here.\n   */\n  public abstract initialize(): Promise<void>;\n\n  /**\n   * Receives a single indexable document. In your decorate method, you can:\n   *\n   * - Resolve `undefined` to indicate the record should be omitted.\n   * - Resolve a single modified document, which could contain new fields,\n   *   edited fields, or removed fields.\n   * - Resolve an array of indexable documents, if the purpose if the decorator\n   *   is to convert one document into multiple derivative documents.\n   */\n  public abstract decorate(\n    document: IndexableDocument,\n  ): Promise<IndexableDocument | IndexableDocument[] | undefined>;\n\n  /**\n   * Any asynchronous teardown tasks can be performed here.\n   */\n  public abstract finalize(): Promise<void>;\n\n  /**\n   * Encapsulates initialization logic.\n   * @internal\n   */\n  async _construct(done: (error?: Error | null | undefined) => void) {\n    try {\n      await this.initialize();\n      done();\n    } catch (e) {\n      assertError(e);\n      done(e);\n    }\n  }\n\n  /**\n   * Encapsulates simple transform stream logic.\n   * @internal\n   */\n  async _transform(\n    document: IndexableDocument,\n    _: any,\n    done: (error?: Error | null) => void,\n  ) {\n    try {\n      const decorated = await this.decorate(document);\n\n      // If undefined was returned, omit the record and move on.\n      if (decorated === undefined) {\n        done();\n        return;\n      }\n\n      // If an array of documents was given, push them all.\n      if (Array.isArray(decorated)) {\n        decorated.forEach(doc => {\n          this.push(doc);\n        });\n        done();\n        return;\n      }\n\n      // Otherwise, just push the decorated document.\n      this.push(decorated);\n      done();\n    } catch (e) {\n      assertError(e);\n      done(e);\n    }\n  }\n\n  /**\n   * Encapsulates finalization and final error handling logic.\n   * @internal\n   */\n  async _final(done: (error?: Error | null) => void) {\n    try {\n      await this.finalize();\n      done();\n    } catch (e) {\n      assertError(e);\n      done(e);\n    }\n  }\n}\n"],"names":["Transform","assertError"],"mappings":";;;;;AAyBO,MAAe,sBAAsBA,gBAAU,CAAA;AAAA,EACpD,WAAc,GAAA;AACZ,IAAM,KAAA,CAAA,EAAE,UAAY,EAAA,IAAA,EAAM,CAAA;AAAA;AAC5B;AAAA;AAAA;AAAA;AAAA,EA6BA,MAAM,WAAW,IAAkD,EAAA;AACjE,IAAI,IAAA;AACF,MAAA,MAAM,KAAK,UAAW,EAAA;AACtB,MAAK,IAAA,EAAA;AAAA,aACE,CAAG,EAAA;AACV,MAAAC,kBAAA,CAAY,CAAC,CAAA;AACb,MAAA,IAAA,CAAK,CAAC,CAAA;AAAA;AACR;AACF;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,UAAA,CACJ,QACA,EAAA,CAAA,EACA,IACA,EAAA;AACA,IAAI,IAAA;AACF,MAAA,MAAM,SAAY,GAAA,MAAM,IAAK,CAAA,QAAA,CAAS,QAAQ,CAAA;AAG9C,MAAA,IAAI,cAAc,KAAW,CAAA,EAAA;AAC3B,QAAK,IAAA,EAAA;AACL,QAAA;AAAA;AAIF,MAAI,IAAA,KAAA,CAAM,OAAQ,CAAA,SAAS,CAAG,EAAA;AAC5B,QAAA,SAAA,CAAU,QAAQ,CAAO,GAAA,KAAA;AACvB,UAAA,IAAA,CAAK,KAAK,GAAG,CAAA;AAAA,SACd,CAAA;AACD,QAAK,IAAA,EAAA;AACL,QAAA;AAAA;AAIF,MAAA,IAAA,CAAK,KAAK,SAAS,CAAA;AACnB,MAAK,IAAA,EAAA;AAAA,aACE,CAAG,EAAA;AACV,MAAAA,kBAAA,CAAY,CAAC,CAAA;AACb,MAAA,IAAA,CAAK,CAAC,CAAA;AAAA;AACR;AACF;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,OAAO,IAAsC,EAAA;AACjD,IAAI,IAAA;AACF,MAAA,MAAM,KAAK,QAAS,EAAA;AACpB,MAAK,IAAA,EAAA;AAAA,aACE,CAAG,EAAA;AACV,MAAAA,kBAAA,CAAY,CAAC,CAAA;AACb,MAAA,IAAA,CAAK,CAAC,CAAA;AAAA;AACR;AAEJ;;;;"}