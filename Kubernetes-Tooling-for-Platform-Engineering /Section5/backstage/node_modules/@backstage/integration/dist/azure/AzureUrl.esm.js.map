{"version":3,"file":"AzureUrl.esm.js","sources":["../../src/azure/AzureUrl.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst VERSION_PREFIX_GIT_BRANCH = 'GB';\n\nexport class AzureUrl {\n  /**\n   * Parses an azure URL as copied from the browser address bar.\n   *\n   * Throws an error if the URL is not a valid azure repo URL.\n   */\n  static fromRepoUrl(repoUrl: string): AzureUrl {\n    const url = new URL(repoUrl);\n\n    let owner;\n    let project;\n    let repo;\n\n    const parts = url.pathname.split('/').map(part => decodeURIComponent(part));\n    if (parts[2] === '_git') {\n      owner = parts[1];\n      project = repo = parts[3];\n    } else if (parts[3] === '_git') {\n      owner = parts[1];\n      project = parts[2];\n      repo = parts[4];\n    } else if (parts[4] === '_git') {\n      owner = `${parts[1]}/${parts[2]}`;\n      project = parts[3];\n      repo = parts[5];\n    }\n\n    if (!owner || !project || !repo) {\n      throw new Error('Azure URL must point to a git repository');\n    }\n\n    const path = url.searchParams.get('path') ?? undefined;\n\n    let ref;\n    const version = url.searchParams.get('version');\n    if (version) {\n      const prefix = version.slice(0, 2);\n      if (prefix !== 'GB') {\n        throw new Error('Azure URL version must point to a git branch');\n      }\n      ref = version.slice(2);\n    }\n\n    return new AzureUrl(url.origin, owner, project, repo, path, ref);\n  }\n\n  #origin: string;\n  #owner: string;\n  #project: string;\n  #repo: string;\n  #path?: string;\n  #ref?: string;\n\n  private constructor(\n    origin: string,\n    owner: string,\n    project: string,\n    repo: string,\n    path?: string,\n    ref?: string,\n  ) {\n    this.#origin = origin;\n    this.#owner = owner;\n    this.#project = project;\n    this.#repo = repo;\n    this.#path = path;\n    this.#ref = ref;\n  }\n\n  #baseUrl = (...parts: string[]): URL => {\n    const url = new URL(this.#origin);\n    url.pathname = parts.map(part => encodeURIComponent(part)).join('/');\n    return url;\n  };\n\n  /**\n   * Returns a repo URL that can be used to navigate to the resource in azure.\n   *\n   * Throws an error if the URL is not a valid azure repo URL.\n   */\n  toRepoUrl(): string {\n    let url;\n    if (this.#project === this.#repo) {\n      url = this.#baseUrl(this.#owner, '_git', this.#repo);\n    } else {\n      url = this.#baseUrl(this.#owner, this.#project, '_git', this.#repo);\n    }\n\n    if (this.#path) {\n      url.searchParams.set('path', this.#path);\n    }\n    if (this.#ref) {\n      url.searchParams.set('version', VERSION_PREFIX_GIT_BRANCH + this.#ref);\n    }\n\n    return url.toString();\n  }\n\n  /**\n   * Returns the file download URL for this azure resource.\n   *\n   * Throws an error if the URL does not point to a file.\n   */\n  toFileUrl(): string {\n    if (!this.#path) {\n      throw new Error(\n        'Azure URL must point to a specific path to be able to download a file',\n      );\n    }\n\n    const url = this.#baseUrl(\n      this.#owner,\n      this.#project,\n      '_apis',\n      'git',\n      'repositories',\n      this.#repo,\n      'items',\n    );\n    url.searchParams.set('api-version', '6.0');\n    url.searchParams.set('path', this.#path);\n\n    if (this.#ref) {\n      url.searchParams.set('version', this.#ref);\n    }\n\n    return url.toString();\n  }\n\n  /**\n   * Returns the archive download URL for this azure resource.\n   *\n   * Throws an error if the URL does not point to a repo.\n   */\n  toArchiveUrl(): string {\n    const url = this.#baseUrl(\n      this.#owner,\n      this.#project,\n      '_apis',\n      'git',\n      'repositories',\n      this.#repo,\n      'items',\n    );\n    url.searchParams.set('recursionLevel', 'full');\n    url.searchParams.set('download', 'true');\n    url.searchParams.set('api-version', '6.0');\n\n    if (this.#path) {\n      url.searchParams.set('scopePath', this.#path);\n    }\n    if (this.#ref) {\n      url.searchParams.set('version', this.#ref);\n    }\n\n    return url.toString();\n  }\n\n  /**\n   * Returns the API url for fetching commits from a branch for this azure resource.\n   *\n   * Throws an error if the URL does not point to a commit.\n   */\n  toCommitsUrl(): string {\n    const url = this.#baseUrl(\n      this.#owner,\n      this.#project,\n      '_apis',\n      'git',\n      'repositories',\n      this.#repo,\n      'commits',\n    );\n    url.searchParams.set('api-version', '6.0');\n\n    if (this.#ref) {\n      url.searchParams.set('searchCriteria.itemVersion.version', this.#ref);\n    }\n\n    return url.toString();\n  }\n\n  /**\n   * Returns the name of the owner, a user or an organization.\n   */\n  getOwner(): string {\n    return this.#owner;\n  }\n\n  /**\n   * Returns the name of the project.\n   */\n  getProject(): string {\n    return this.#project;\n  }\n\n  /**\n   * Returns the name of the repo.\n   */\n  getRepo(): string {\n    return this.#repo;\n  }\n\n  /**\n   * Returns the file path within the repo if the URL contains one.\n   */\n  getPath(): string | undefined {\n    return this.#path;\n  }\n\n  /**\n   * Returns the git ref in the repo if the URL contains one.\n   */\n  getRef(): string | undefined {\n    return this.#ref;\n  }\n}\n"],"names":[],"mappings":"AAgBA,MAAM,yBAA4B,GAAA,IAAA;AAE3B,MAAM,QAAS,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMpB,OAAO,YAAY,OAA2B,EAAA;AAC5C,IAAM,MAAA,GAAA,GAAM,IAAI,GAAA,CAAI,OAAO,CAAA;AAE3B,IAAI,IAAA,KAAA;AACJ,IAAI,IAAA,OAAA;AACJ,IAAI,IAAA,IAAA;AAEJ,IAAM,MAAA,KAAA,GAAQ,GAAI,CAAA,QAAA,CAAS,KAAM,CAAA,GAAG,EAAE,GAAI,CAAA,CAAA,IAAA,KAAQ,kBAAmB,CAAA,IAAI,CAAC,CAAA;AAC1E,IAAI,IAAA,KAAA,CAAM,CAAC,CAAA,KAAM,MAAQ,EAAA;AACvB,MAAA,KAAA,GAAQ,MAAM,CAAC,CAAA;AACf,MAAU,OAAA,GAAA,IAAA,GAAO,MAAM,CAAC,CAAA;AAAA,KACf,MAAA,IAAA,KAAA,CAAM,CAAC,CAAA,KAAM,MAAQ,EAAA;AAC9B,MAAA,KAAA,GAAQ,MAAM,CAAC,CAAA;AACf,MAAA,OAAA,GAAU,MAAM,CAAC,CAAA;AACjB,MAAA,IAAA,GAAO,MAAM,CAAC,CAAA;AAAA,KACL,MAAA,IAAA,KAAA,CAAM,CAAC,CAAA,KAAM,MAAQ,EAAA;AAC9B,MAAA,KAAA,GAAQ,GAAG,KAAM,CAAA,CAAC,CAAC,CAAI,CAAA,EAAA,KAAA,CAAM,CAAC,CAAC,CAAA,CAAA;AAC/B,MAAA,OAAA,GAAU,MAAM,CAAC,CAAA;AACjB,MAAA,IAAA,GAAO,MAAM,CAAC,CAAA;AAAA;AAGhB,IAAA,IAAI,CAAC,KAAA,IAAS,CAAC,OAAA,IAAW,CAAC,IAAM,EAAA;AAC/B,MAAM,MAAA,IAAI,MAAM,0CAA0C,CAAA;AAAA;AAG5D,IAAA,MAAM,IAAO,GAAA,GAAA,CAAI,YAAa,CAAA,GAAA,CAAI,MAAM,CAAK,IAAA,KAAA,CAAA;AAE7C,IAAI,IAAA,GAAA;AACJ,IAAA,MAAM,OAAU,GAAA,GAAA,CAAI,YAAa,CAAA,GAAA,CAAI,SAAS,CAAA;AAC9C,IAAA,IAAI,OAAS,EAAA;AACX,MAAA,MAAM,MAAS,GAAA,OAAA,CAAQ,KAAM,CAAA,CAAA,EAAG,CAAC,CAAA;AACjC,MAAA,IAAI,WAAW,IAAM,EAAA;AACnB,QAAM,MAAA,IAAI,MAAM,8CAA8C,CAAA;AAAA;AAEhE,MAAM,GAAA,GAAA,OAAA,CAAQ,MAAM,CAAC,CAAA;AAAA;AAGvB,IAAO,OAAA,IAAI,SAAS,GAAI,CAAA,MAAA,EAAQ,OAAO,OAAS,EAAA,IAAA,EAAM,MAAM,GAAG,CAAA;AAAA;AACjE,EAEA,OAAA;AAAA,EACA,MAAA;AAAA,EACA,QAAA;AAAA,EACA,KAAA;AAAA,EACA,KAAA;AAAA,EACA,IAAA;AAAA,EAEQ,YACN,MACA,EAAA,KAAA,EACA,OACA,EAAA,IAAA,EACA,MACA,GACA,EAAA;AACA,IAAA,IAAA,CAAK,OAAU,GAAA,MAAA;AACf,IAAA,IAAA,CAAK,MAAS,GAAA,KAAA;AACd,IAAA,IAAA,CAAK,QAAW,GAAA,OAAA;AAChB,IAAA,IAAA,CAAK,KAAQ,GAAA,IAAA;AACb,IAAA,IAAA,CAAK,KAAQ,GAAA,IAAA;AACb,IAAA,IAAA,CAAK,IAAO,GAAA,GAAA;AAAA;AACd,EAEA,QAAA,GAAW,IAAI,KAAyB,KAAA;AACtC,IAAA,MAAM,GAAM,GAAA,IAAI,GAAI,CAAA,IAAA,CAAK,OAAO,CAAA;AAChC,IAAI,GAAA,CAAA,QAAA,GAAW,MAAM,GAAI,CAAA,CAAA,IAAA,KAAQ,mBAAmB,IAAI,CAAC,CAAE,CAAA,IAAA,CAAK,GAAG,CAAA;AACnE,IAAO,OAAA,GAAA;AAAA,GACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,SAAoB,GAAA;AAClB,IAAI,IAAA,GAAA;AACJ,IAAI,IAAA,IAAA,CAAK,QAAa,KAAA,IAAA,CAAK,KAAO,EAAA;AAChC,MAAA,GAAA,GAAM,KAAK,QAAS,CAAA,IAAA,CAAK,MAAQ,EAAA,MAAA,EAAQ,KAAK,KAAK,CAAA;AAAA,KAC9C,MAAA;AACL,MAAM,GAAA,GAAA,IAAA,CAAK,SAAS,IAAK,CAAA,MAAA,EAAQ,KAAK,QAAU,EAAA,MAAA,EAAQ,KAAK,KAAK,CAAA;AAAA;AAGpE,IAAA,IAAI,KAAK,KAAO,EAAA;AACd,MAAA,GAAA,CAAI,YAAa,CAAA,GAAA,CAAI,MAAQ,EAAA,IAAA,CAAK,KAAK,CAAA;AAAA;AAEzC,IAAA,IAAI,KAAK,IAAM,EAAA;AACb,MAAA,GAAA,CAAI,YAAa,CAAA,GAAA,CAAI,SAAW,EAAA,yBAAA,GAA4B,KAAK,IAAI,CAAA;AAAA;AAGvE,IAAA,OAAO,IAAI,QAAS,EAAA;AAAA;AACtB;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,SAAoB,GAAA;AAClB,IAAI,IAAA,CAAC,KAAK,KAAO,EAAA;AACf,MAAA,MAAM,IAAI,KAAA;AAAA,QACR;AAAA,OACF;AAAA;AAGF,IAAA,MAAM,MAAM,IAAK,CAAA,QAAA;AAAA,MACf,IAAK,CAAA,MAAA;AAAA,MACL,IAAK,CAAA,QAAA;AAAA,MACL,OAAA;AAAA,MACA,KAAA;AAAA,MACA,cAAA;AAAA,MACA,IAAK,CAAA,KAAA;AAAA,MACL;AAAA,KACF;AACA,IAAI,GAAA,CAAA,YAAA,CAAa,GAAI,CAAA,aAAA,EAAe,KAAK,CAAA;AACzC,IAAA,GAAA,CAAI,YAAa,CAAA,GAAA,CAAI,MAAQ,EAAA,IAAA,CAAK,KAAK,CAAA;AAEvC,IAAA,IAAI,KAAK,IAAM,EAAA;AACb,MAAA,GAAA,CAAI,YAAa,CAAA,GAAA,CAAI,SAAW,EAAA,IAAA,CAAK,IAAI,CAAA;AAAA;AAG3C,IAAA,OAAO,IAAI,QAAS,EAAA;AAAA;AACtB;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAuB,GAAA;AACrB,IAAA,MAAM,MAAM,IAAK,CAAA,QAAA;AAAA,MACf,IAAK,CAAA,MAAA;AAAA,MACL,IAAK,CAAA,QAAA;AAAA,MACL,OAAA;AAAA,MACA,KAAA;AAAA,MACA,cAAA;AAAA,MACA,IAAK,CAAA,KAAA;AAAA,MACL;AAAA,KACF;AACA,IAAI,GAAA,CAAA,YAAA,CAAa,GAAI,CAAA,gBAAA,EAAkB,MAAM,CAAA;AAC7C,IAAI,GAAA,CAAA,YAAA,CAAa,GAAI,CAAA,UAAA,EAAY,MAAM,CAAA;AACvC,IAAI,GAAA,CAAA,YAAA,CAAa,GAAI,CAAA,aAAA,EAAe,KAAK,CAAA;AAEzC,IAAA,IAAI,KAAK,KAAO,EAAA;AACd,MAAA,GAAA,CAAI,YAAa,CAAA,GAAA,CAAI,WAAa,EAAA,IAAA,CAAK,KAAK,CAAA;AAAA;AAE9C,IAAA,IAAI,KAAK,IAAM,EAAA;AACb,MAAA,GAAA,CAAI,YAAa,CAAA,GAAA,CAAI,SAAW,EAAA,IAAA,CAAK,IAAI,CAAA;AAAA;AAG3C,IAAA,OAAO,IAAI,QAAS,EAAA;AAAA;AACtB;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAuB,GAAA;AACrB,IAAA,MAAM,MAAM,IAAK,CAAA,QAAA;AAAA,MACf,IAAK,CAAA,MAAA;AAAA,MACL,IAAK,CAAA,QAAA;AAAA,MACL,OAAA;AAAA,MACA,KAAA;AAAA,MACA,cAAA;AAAA,MACA,IAAK,CAAA,KAAA;AAAA,MACL;AAAA,KACF;AACA,IAAI,GAAA,CAAA,YAAA,CAAa,GAAI,CAAA,aAAA,EAAe,KAAK,CAAA;AAEzC,IAAA,IAAI,KAAK,IAAM,EAAA;AACb,MAAA,GAAA,CAAI,YAAa,CAAA,GAAA,CAAI,oCAAsC,EAAA,IAAA,CAAK,IAAI,CAAA;AAAA;AAGtE,IAAA,OAAO,IAAI,QAAS,EAAA;AAAA;AACtB;AAAA;AAAA;AAAA,EAKA,QAAmB,GAAA;AACjB,IAAA,OAAO,IAAK,CAAA,MAAA;AAAA;AACd;AAAA;AAAA;AAAA,EAKA,UAAqB,GAAA;AACnB,IAAA,OAAO,IAAK,CAAA,QAAA;AAAA;AACd;AAAA;AAAA;AAAA,EAKA,OAAkB,GAAA;AAChB,IAAA,OAAO,IAAK,CAAA,KAAA;AAAA;AACd;AAAA;AAAA;AAAA,EAKA,OAA8B,GAAA;AAC5B,IAAA,OAAO,IAAK,CAAA,KAAA;AAAA;AACd;AAAA;AAAA;AAAA,EAKA,MAA6B,GAAA;AAC3B,IAAA,OAAO,IAAK,CAAA,IAAA;AAAA;AAEhB;;;;"}