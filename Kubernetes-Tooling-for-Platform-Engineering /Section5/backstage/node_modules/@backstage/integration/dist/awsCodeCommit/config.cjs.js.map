{"version":3,"file":"config.cjs.js","sources":["../../src/awsCodeCommit/config.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\n\nconst AMAZON_AWS_CODECOMMIT_HOST = 'console.aws.amazon.com';\n\n/**\n * The configuration parameters for a single AWS CodeCommit provider.\n *\n * @public\n */\nexport type AwsCodeCommitIntegrationConfig = {\n  /**\n   * Host, git host derived from region\n   */\n  host: string;\n\n  /**\n   * (Optional) User access key id\n   */\n  accessKeyId?: string;\n\n  /**\n   * (Optional) User secret access key\n   */\n  secretAccessKey?: string;\n\n  /**\n   * (Optional) ARN of role to be assumed\n   */\n  roleArn?: string;\n\n  /**\n   * (Optional) External ID to use when assuming role\n   */\n  externalId?: string;\n\n  /**\n   * region to use for AWS (default: us-east-1)\n   */\n  region: string;\n};\n\n/**\n * Reads a single Aws CodeCommit integration config.\n *\n * @param config - The config object of a single integration\n * @public\n */\n\nexport function readAwsCodeCommitIntegrationConfig(\n  config: Config,\n): AwsCodeCommitIntegrationConfig {\n  const accessKeyId = config.getOptionalString('accessKeyId');\n  const secretAccessKey = config.getOptionalString('secretAccessKey')?.trim();\n  const roleArn = config.getOptionalString('roleArn');\n  const externalId = config.getOptionalString('externalId');\n  const region = config.getString('region');\n  const host =\n    config.getOptionalString('host') ||\n    `${region}.${AMAZON_AWS_CODECOMMIT_HOST}`;\n\n  return {\n    host,\n    accessKeyId,\n    secretAccessKey,\n    roleArn,\n    externalId,\n    region,\n  };\n}\n\n/**\n * Reads a set of AWS CodeCommit integration configs, and inserts some defaults for\n * public Amazon AWS if not specified.\n *\n * @param configs - The config objects of the integrations\n * @public\n */\nexport function readAwsCodeCommitIntegrationConfigs(\n  configs: Config[],\n): AwsCodeCommitIntegrationConfig[] {\n  return configs.map(readAwsCodeCommitIntegrationConfig);\n}\n"],"names":[],"mappings":";;AAkBA,MAAM,0BAA6B,GAAA,wBAAA;AA8C5B,SAAS,mCACd,MACgC,EAAA;AAChC,EAAM,MAAA,WAAA,GAAc,MAAO,CAAA,iBAAA,CAAkB,aAAa,CAAA;AAC1D,EAAA,MAAM,eAAkB,GAAA,MAAA,CAAO,iBAAkB,CAAA,iBAAiB,GAAG,IAAK,EAAA;AAC1E,EAAM,MAAA,OAAA,GAAU,MAAO,CAAA,iBAAA,CAAkB,SAAS,CAAA;AAClD,EAAM,MAAA,UAAA,GAAa,MAAO,CAAA,iBAAA,CAAkB,YAAY,CAAA;AACxD,EAAM,MAAA,MAAA,GAAS,MAAO,CAAA,SAAA,CAAU,QAAQ,CAAA;AACxC,EAAM,MAAA,IAAA,GACJ,OAAO,iBAAkB,CAAA,MAAM,KAC/B,CAAG,EAAA,MAAM,IAAI,0BAA0B,CAAA,CAAA;AAEzC,EAAO,OAAA;AAAA,IACL,IAAA;AAAA,IACA,WAAA;AAAA,IACA,eAAA;AAAA,IACA,OAAA;AAAA,IACA,UAAA;AAAA,IACA;AAAA,GACF;AACF;AASO,SAAS,oCACd,OACkC,EAAA;AAClC,EAAO,OAAA,OAAA,CAAQ,IAAI,kCAAkC,CAAA;AACvD;;;;;"}