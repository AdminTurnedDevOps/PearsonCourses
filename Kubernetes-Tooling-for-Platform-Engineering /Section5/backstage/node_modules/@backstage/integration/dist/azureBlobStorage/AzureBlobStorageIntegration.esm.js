import { basicIntegrations, defaultScmResolveUrl } from '../helpers.esm.js';
import { readAzureBlobStorageIntegrationConfigs } from './config.esm.js';

class AzureBlobStorageIntergation {
  constructor(integrationConfig) {
    this.integrationConfig = integrationConfig;
  }
  static factory = ({
    config
  }) => {
    const configs = readAzureBlobStorageIntegrationConfigs(
      config.getOptionalConfigArray("integrations.azureBlobStorage") ?? []
    );
    return basicIntegrations(
      configs.map((c) => new AzureBlobStorageIntergation(c)),
      (i) => i.config.host
    );
  };
  get type() {
    return "azureBlobStorage";
  }
  get title() {
    return this.integrationConfig.host;
  }
  get config() {
    return this.integrationConfig;
  }
  resolveUrl(options) {
    const resolved = defaultScmResolveUrl(options);
    return resolved;
  }
  resolveEditUrl(url) {
    return url;
  }
}

export { AzureBlobStorageIntergation };
//# sourceMappingURL=AzureBlobStorageIntegration.esm.js.map
