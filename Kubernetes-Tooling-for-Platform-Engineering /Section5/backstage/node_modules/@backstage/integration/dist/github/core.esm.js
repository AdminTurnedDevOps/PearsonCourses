import parseGitUrl from 'git-url-parse';

function getGithubFileFetchUrl(url, config, credentials) {
  try {
    const { owner, name, ref, filepathtype, filepath } = parseGitUrl(url);
    if (!owner || !name || !ref || // GitHub is automatically redirecting tree urls to blob urls so it's
    // fine to pass a tree url.
    filepathtype !== "blob" && filepathtype !== "raw" && filepathtype !== "tree") {
      throw new Error("Invalid GitHub URL or file path");
    }
    const pathWithoutSlash = filepath.replace(/^\//, "");
    if (chooseEndpoint(config, credentials) === "api") {
      return `${config.apiBaseUrl}/repos/${owner}/${name}/contents/${pathWithoutSlash}?ref=${ref}`;
    }
    return `${config.rawBaseUrl}/${owner}/${name}/${ref}/${pathWithoutSlash}`;
  } catch (e) {
    throw new Error(`Incorrect URL: ${url}, ${e}`);
  }
}
function getGitHubRequestOptions(config, credentials) {
  const headers = {};
  if (chooseEndpoint(config, credentials) === "api") {
    headers.Accept = "application/vnd.github.v3.raw";
  }
  if (credentials.token) {
    headers.Authorization = `token ${credentials.token}`;
  }
  return { headers };
}
function chooseEndpoint(config, credentials) {
  if (config.apiBaseUrl && (credentials.token || !config.rawBaseUrl)) {
    return "api";
  }
  return "raw";
}

export { chooseEndpoint, getGitHubRequestOptions, getGithubFileFetchUrl };
//# sourceMappingURL=core.esm.js.map
