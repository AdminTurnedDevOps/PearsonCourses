{"version":3,"file":"core.cjs.js","sources":["../../src/github/core.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport parseGitUrl from 'git-url-parse';\nimport { GithubIntegrationConfig } from './config';\nimport { GithubCredentials } from './types';\n\n/**\n * Given a URL pointing to a file on a provider, returns a URL that is suitable\n * for fetching the contents of the data.\n *\n * @remarks\n *\n * Converts\n * from: https://github.com/a/b/blob/branchname/path/to/c.yaml\n * to:   https://api.github.com/repos/a/b/contents/path/to/c.yaml?ref=branchname\n * or:   https://raw.githubusercontent.com/a/b/branchname/c.yaml\n *\n * @param url - A URL pointing to a file\n * @param config - The relevant provider config\n * @public\n */\nexport function getGithubFileFetchUrl(\n  url: string,\n  config: GithubIntegrationConfig,\n  credentials: GithubCredentials,\n): string {\n  try {\n    const { owner, name, ref, filepathtype, filepath } = parseGitUrl(url);\n    if (\n      !owner ||\n      !name ||\n      !ref ||\n      // GitHub is automatically redirecting tree urls to blob urls so it's\n      // fine to pass a tree url.\n      (filepathtype !== 'blob' &&\n        filepathtype !== 'raw' &&\n        filepathtype !== 'tree')\n    ) {\n      throw new Error('Invalid GitHub URL or file path');\n    }\n\n    const pathWithoutSlash = filepath.replace(/^\\//, '');\n    if (chooseEndpoint(config, credentials) === 'api') {\n      return `${config.apiBaseUrl}/repos/${owner}/${name}/contents/${pathWithoutSlash}?ref=${ref}`;\n    }\n    return `${config.rawBaseUrl}/${owner}/${name}/${ref}/${pathWithoutSlash}`;\n  } catch (e) {\n    throw new Error(`Incorrect URL: ${url}, ${e}`);\n  }\n}\n\n/**\n * Gets the request options necessary to make requests to a given provider.\n *\n * @deprecated This function is no longer used internally\n * @param config - The relevant provider config\n * @public\n */\nexport function getGitHubRequestOptions(\n  config: GithubIntegrationConfig,\n  credentials: GithubCredentials,\n): { headers: Record<string, string> } {\n  const headers: Record<string, string> = {};\n\n  if (chooseEndpoint(config, credentials) === 'api') {\n    headers.Accept = 'application/vnd.github.v3.raw';\n  }\n\n  if (credentials.token) {\n    headers.Authorization = `token ${credentials.token}`;\n  }\n\n  return { headers };\n}\n\nexport function chooseEndpoint(\n  config: GithubIntegrationConfig,\n  credentials: GithubCredentials,\n): 'api' | 'raw' {\n  if (config.apiBaseUrl && (credentials.token || !config.rawBaseUrl)) {\n    return 'api';\n  }\n  return 'raw';\n}\n"],"names":["parseGitUrl"],"mappings":";;;;;;;;AAmCgB,SAAA,qBAAA,CACd,GACA,EAAA,MAAA,EACA,WACQ,EAAA;AACR,EAAI,IAAA;AACF,IAAM,MAAA,EAAE,OAAO,IAAM,EAAA,GAAA,EAAK,cAAc,QAAS,EAAA,GAAIA,6BAAY,GAAG,CAAA;AACpE,IAAA,IACE,CAAC,KAAA,IACD,CAAC,IAAA,IACD,CAAC,GAAA;AAAA;AAAA,IAGA,YAAiB,KAAA,MAAA,IAChB,YAAiB,KAAA,KAAA,IACjB,iBAAiB,MACnB,EAAA;AACA,MAAM,MAAA,IAAI,MAAM,iCAAiC,CAAA;AAAA;AAGnD,IAAA,MAAM,gBAAmB,GAAA,QAAA,CAAS,OAAQ,CAAA,KAAA,EAAO,EAAE,CAAA;AACnD,IAAA,IAAI,cAAe,CAAA,MAAA,EAAQ,WAAW,CAAA,KAAM,KAAO,EAAA;AACjD,MAAO,OAAA,CAAA,EAAG,MAAO,CAAA,UAAU,CAAU,OAAA,EAAA,KAAK,IAAI,IAAI,CAAA,UAAA,EAAa,gBAAgB,CAAA,KAAA,EAAQ,GAAG,CAAA,CAAA;AAAA;AAE5F,IAAO,OAAA,CAAA,EAAG,MAAO,CAAA,UAAU,CAAI,CAAA,EAAA,KAAK,IAAI,IAAI,CAAA,CAAA,EAAI,GAAG,CAAA,CAAA,EAAI,gBAAgB,CAAA,CAAA;AAAA,WAChE,CAAG,EAAA;AACV,IAAA,MAAM,IAAI,KAAM,CAAA,CAAA,eAAA,EAAkB,GAAG,CAAA,EAAA,EAAK,CAAC,CAAE,CAAA,CAAA;AAAA;AAEjD;AASgB,SAAA,uBAAA,CACd,QACA,WACqC,EAAA;AACrC,EAAA,MAAM,UAAkC,EAAC;AAEzC,EAAA,IAAI,cAAe,CAAA,MAAA,EAAQ,WAAW,CAAA,KAAM,KAAO,EAAA;AACjD,IAAA,OAAA,CAAQ,MAAS,GAAA,+BAAA;AAAA;AAGnB,EAAA,IAAI,YAAY,KAAO,EAAA;AACrB,IAAQ,OAAA,CAAA,aAAA,GAAgB,CAAS,MAAA,EAAA,WAAA,CAAY,KAAK,CAAA,CAAA;AAAA;AAGpD,EAAA,OAAO,EAAE,OAAQ,EAAA;AACnB;AAEgB,SAAA,cAAA,CACd,QACA,WACe,EAAA;AACf,EAAA,IAAI,OAAO,UAAe,KAAA,WAAA,CAAY,KAAS,IAAA,CAAC,OAAO,UAAa,CAAA,EAAA;AAClE,IAAO,OAAA,KAAA;AAAA;AAET,EAAO,OAAA,KAAA;AACT;;;;;;"}