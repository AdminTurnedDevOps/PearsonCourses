'use strict';

var lodash = require('lodash');
var helpers = require('../helpers.cjs.js');

function readBitbucketServerIntegrationConfig(config) {
  const host = config.getString("host");
  let apiBaseUrl = config.getOptionalString("apiBaseUrl");
  const token = config.getOptionalString("token")?.trim();
  const username = config.getOptionalString("username");
  const password = config.getOptionalString("password");
  if (!helpers.isValidHost(host)) {
    throw new Error(
      `Invalid Bitbucket Server integration config, '${host}' is not a valid host`
    );
  }
  if (apiBaseUrl) {
    apiBaseUrl = lodash.trimEnd(apiBaseUrl, "/");
  } else {
    apiBaseUrl = `https://${host}/rest/api/1.0`;
  }
  return {
    host,
    apiBaseUrl,
    token,
    username,
    password
  };
}
function readBitbucketServerIntegrationConfigs(configs) {
  return configs.map(readBitbucketServerIntegrationConfig);
}

exports.readBitbucketServerIntegrationConfig = readBitbucketServerIntegrationConfig;
exports.readBitbucketServerIntegrationConfigs = readBitbucketServerIntegrationConfigs;
//# sourceMappingURL=config.cjs.js.map
