{"version":3,"file":"resolvers.cjs.js","sources":["../src/resolvers.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  createSignInResolverFactory,\n  SignInInfo,\n} from '@backstage/plugin-auth-node';\nimport { OAuth2ProxyResult } from './types';\n\n/**\n * @public\n */\nexport namespace oauth2ProxySignInResolvers {\n  export const forwardedUserMatchingUserEntityName =\n    createSignInResolverFactory({\n      create() {\n        return async (info: SignInInfo<OAuth2ProxyResult>, ctx) => {\n          const name = info.result.getHeader('x-forwarded-user');\n          if (!name) {\n            throw new Error('Request did not contain a user');\n          }\n          return ctx.signInWithCatalogUser({\n            entityRef: { name },\n          });\n        };\n      },\n    });\n}\n"],"names":["oauth2ProxySignInResolvers","createSignInResolverFactory"],"mappings":";;;;AAyBiBA;AAAA,CAAV,CAAUA,2BAAV,KAAA;AACE,EAAMA,2BAAAA,CAAA,sCACXC,0CAA4B,CAAA;AAAA,IAC1B,MAAS,GAAA;AACP,MAAO,OAAA,OAAO,MAAqC,GAAQ,KAAA;AACzD,QAAA,MAAM,IAAO,GAAA,IAAA,CAAK,MAAO,CAAA,SAAA,CAAU,kBAAkB,CAAA;AACrD,QAAA,IAAI,CAAC,IAAM,EAAA;AACT,UAAM,MAAA,IAAI,MAAM,gCAAgC,CAAA;AAAA;AAElD,QAAA,OAAO,IAAI,qBAAsB,CAAA;AAAA,UAC/B,SAAA,EAAW,EAAE,IAAK;AAAA,SACnB,CAAA;AAAA,OACH;AAAA;AACF,GACD,CAAA;AAAA,CAdY,EAAAD,kCAAA,KAAAA,kCAAA,GAAA,EAAA,CAAA,CAAA;;"}