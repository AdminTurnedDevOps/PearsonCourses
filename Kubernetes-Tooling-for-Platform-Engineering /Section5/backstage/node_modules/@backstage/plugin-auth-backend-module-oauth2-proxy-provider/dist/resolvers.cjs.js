'use strict';

var pluginAuthNode = require('@backstage/plugin-auth-node');

exports.oauth2ProxySignInResolvers = void 0;
((oauth2ProxySignInResolvers2) => {
  oauth2ProxySignInResolvers2.forwardedUserMatchingUserEntityName = pluginAuthNode.createSignInResolverFactory({
    create() {
      return async (info, ctx) => {
        const name = info.result.getHeader("x-forwarded-user");
        if (!name) {
          throw new Error("Request did not contain a user");
        }
        return ctx.signInWithCatalogUser({
          entityRef: { name }
        });
      };
    }
  });
})(exports.oauth2ProxySignInResolvers || (exports.oauth2ProxySignInResolvers = {}));
//# sourceMappingURL=resolvers.cjs.js.map
