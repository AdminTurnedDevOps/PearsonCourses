import * as _backstage_plugin_auth_node from '@backstage/plugin-auth-node';
import { PassportOAuthAuthenticatorHelper, PassportProfile, OAuthAuthenticatorResult } from '@backstage/plugin-auth-node';
import * as _backstage_backend_plugin_api from '@backstage/backend-plugin-api';

/** @public */
declare const microsoftAuthenticator: _backstage_plugin_auth_node.OAuthAuthenticator<{
    helper: PassportOAuthAuthenticatorHelper;
    domainHint: string | undefined;
}, PassportProfile>;

/** @public */
declare const authModuleMicrosoftProvider$1: _backstage_backend_plugin_api.BackendFeature;

/**
 * Available sign-in resolvers for the Microsoft auth provider.
 *
 * @public
 */
declare namespace microsoftSignInResolvers {
    /**
     * Looks up the user by matching their Microsoft email to the email entity annotation.
     */
    const emailMatchingUserEntityAnnotation: _backstage_plugin_auth_node.SignInResolverFactory<OAuthAuthenticatorResult<PassportProfile>, unknown>;
    /**
     * Looks up the user by matching their Microsoft user id to the user id entity annotation.
     */
    const userIdMatchingUserEntityAnnotation: _backstage_plugin_auth_node.SignInResolverFactory<OAuthAuthenticatorResult<PassportProfile>, unknown>;
}

/**
 * @public
 * @deprecated Use default import instead
 */
declare const authModuleMicrosoftProvider: _backstage_backend_plugin_api.BackendFeature;

export { authModuleMicrosoftProvider, authModuleMicrosoftProvider$1 as default, microsoftAuthenticator, microsoftSignInResolvers };
