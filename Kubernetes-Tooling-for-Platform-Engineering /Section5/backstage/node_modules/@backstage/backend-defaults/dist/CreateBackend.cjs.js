'use strict';

var backendAppApi = require('@backstage/backend-app-api');
var auth = require('@backstage/backend-defaults/auth');
var cache = require('@backstage/backend-defaults/cache');
var database = require('@backstage/backend-defaults/database');
var discovery = require('@backstage/backend-defaults/discovery');
var httpAuth = require('@backstage/backend-defaults/httpAuth');
var httpRouter = require('@backstage/backend-defaults/httpRouter');
var lifecycle = require('@backstage/backend-defaults/lifecycle');
var logger = require('@backstage/backend-defaults/logger');
var permissions = require('@backstage/backend-defaults/permissions');
var rootConfig = require('@backstage/backend-defaults/rootConfig');
var rootHealth = require('@backstage/backend-defaults/rootHealth');
var rootHttpRouter = require('@backstage/backend-defaults/rootHttpRouter');
var rootLifecycle = require('@backstage/backend-defaults/rootLifecycle');
var rootLogger = require('@backstage/backend-defaults/rootLogger');
var scheduler = require('@backstage/backend-defaults/scheduler');
var urlReader = require('@backstage/backend-defaults/urlReader');
var userInfo = require('@backstage/backend-defaults/userInfo');
var pluginEventsNode = require('@backstage/plugin-events-node');

const defaultServiceFactories = [
  auth.authServiceFactory,
  cache.cacheServiceFactory,
  rootConfig.rootConfigServiceFactory,
  database.databaseServiceFactory,
  discovery.discoveryServiceFactory,
  httpAuth.httpAuthServiceFactory,
  httpRouter.httpRouterServiceFactory,
  lifecycle.lifecycleServiceFactory,
  logger.loggerServiceFactory,
  permissions.permissionsServiceFactory,
  rootHealth.rootHealthServiceFactory,
  rootHttpRouter.rootHttpRouterServiceFactory,
  rootLifecycle.rootLifecycleServiceFactory,
  rootLogger.rootLoggerServiceFactory,
  scheduler.schedulerServiceFactory,
  userInfo.userInfoServiceFactory,
  urlReader.urlReaderServiceFactory,
  pluginEventsNode.eventsServiceFactory
];
function createBackend() {
  return backendAppApi.createSpecializedBackend({ defaultServiceFactories });
}

exports.createBackend = createBackend;
exports.defaultServiceFactories = defaultServiceFactories;
//# sourceMappingURL=CreateBackend.cjs.js.map
