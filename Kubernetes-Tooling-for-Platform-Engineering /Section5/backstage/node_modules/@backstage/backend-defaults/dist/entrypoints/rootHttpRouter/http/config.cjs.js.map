{"version":3,"file":"config.cjs.js","sources":["../../../../src/entrypoints/rootHttpRouter/http/config.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\nimport { HttpServerOptions } from './types';\n\nconst DEFAULT_PORT = 7007;\nconst DEFAULT_HOST = '';\n\n/**\n * Reads {@link HttpServerOptions} from a {@link @backstage/config#Config} object.\n *\n * @public\n * @remarks\n *\n * The provided configuration object should contain the `listen` and\n * additional keys directly.\n *\n * @example\n * ```ts\n * const opts = readHttpServerOptions(config.getConfig('backend'));\n * ```\n */\nexport function readHttpServerOptions(config?: Config): HttpServerOptions {\n  return {\n    listen: readHttpListenOptions(config),\n    https: readHttpsOptions(config),\n  };\n}\n\nfunction readHttpListenOptions(config?: Config): HttpServerOptions['listen'] {\n  const listen = config?.getOptional('listen');\n  if (typeof listen === 'string') {\n    const parts = String(listen).split(':');\n    const port = parseInt(parts[parts.length - 1], 10);\n    if (!isNaN(port)) {\n      if (parts.length === 1) {\n        return { port, host: DEFAULT_HOST };\n      }\n      if (parts.length === 2) {\n        return { host: parts[0], port };\n      }\n    }\n    throw new Error(\n      `Unable to parse listen address ${listen}, expected <port> or <host>:<port>`,\n    );\n  }\n\n  // Workaround to allow empty string\n  const host = config?.getOptional('listen.host') ?? DEFAULT_HOST;\n  if (typeof host !== 'string') {\n    config?.getOptionalString('listen.host'); // will throw\n    throw new Error('unreachable');\n  }\n\n  return {\n    port: config?.getOptionalNumber('listen.port') ?? DEFAULT_PORT,\n    host,\n  };\n}\n\nfunction readHttpsOptions(config?: Config): HttpServerOptions['https'] {\n  const https = config?.getOptional('https');\n  if (https === true) {\n    const baseUrl = config!.getString('baseUrl');\n    let hostname;\n    try {\n      hostname = new URL(baseUrl).hostname;\n    } catch (error) {\n      throw new Error(`Invalid baseUrl \"${baseUrl}\"`);\n    }\n\n    return { certificate: { type: 'generated', hostname } };\n  }\n\n  const cc = config?.getOptionalConfig('https');\n  if (!cc) {\n    return undefined;\n  }\n\n  return {\n    certificate: {\n      type: 'pem',\n      cert: cc.getString('certificate.cert'),\n      key: cc.getString('certificate.key'),\n    },\n  };\n}\n"],"names":[],"mappings":";;AAmBA,MAAM,YAAe,GAAA,IAAA;AACrB,MAAM,YAAe,GAAA,EAAA;AAgBd,SAAS,sBAAsB,MAAoC,EAAA;AACxE,EAAO,OAAA;AAAA,IACL,MAAA,EAAQ,sBAAsB,MAAM,CAAA;AAAA,IACpC,KAAA,EAAO,iBAAiB,MAAM;AAAA,GAChC;AACF;AAEA,SAAS,sBAAsB,MAA8C,EAAA;AAC3E,EAAM,MAAA,MAAA,GAAS,MAAQ,EAAA,WAAA,CAAY,QAAQ,CAAA;AAC3C,EAAI,IAAA,OAAO,WAAW,QAAU,EAAA;AAC9B,IAAA,MAAM,KAAQ,GAAA,MAAA,CAAO,MAAM,CAAA,CAAE,MAAM,GAAG,CAAA;AACtC,IAAA,MAAM,OAAO,QAAS,CAAA,KAAA,CAAM,MAAM,MAAS,GAAA,CAAC,GAAG,EAAE,CAAA;AACjD,IAAI,IAAA,CAAC,KAAM,CAAA,IAAI,CAAG,EAAA;AAChB,MAAI,IAAA,KAAA,CAAM,WAAW,CAAG,EAAA;AACtB,QAAO,OAAA,EAAE,IAAM,EAAA,IAAA,EAAM,YAAa,EAAA;AAAA;AAEpC,MAAI,IAAA,KAAA,CAAM,WAAW,CAAG,EAAA;AACtB,QAAA,OAAO,EAAE,IAAA,EAAM,KAAM,CAAA,CAAC,GAAG,IAAK,EAAA;AAAA;AAChC;AAEF,IAAA,MAAM,IAAI,KAAA;AAAA,MACR,kCAAkC,MAAM,CAAA,kCAAA;AAAA,KAC1C;AAAA;AAIF,EAAA,MAAM,IAAO,GAAA,MAAA,EAAQ,WAAY,CAAA,aAAa,CAAK,IAAA,YAAA;AACnD,EAAI,IAAA,OAAO,SAAS,QAAU,EAAA;AAC5B,IAAA,MAAA,EAAQ,kBAAkB,aAAa,CAAA;AACvC,IAAM,MAAA,IAAI,MAAM,aAAa,CAAA;AAAA;AAG/B,EAAO,OAAA;AAAA,IACL,IAAM,EAAA,MAAA,EAAQ,iBAAkB,CAAA,aAAa,CAAK,IAAA,YAAA;AAAA,IAClD;AAAA,GACF;AACF;AAEA,SAAS,iBAAiB,MAA6C,EAAA;AACrE,EAAM,MAAA,KAAA,GAAQ,MAAQ,EAAA,WAAA,CAAY,OAAO,CAAA;AACzC,EAAA,IAAI,UAAU,IAAM,EAAA;AAClB,IAAM,MAAA,OAAA,GAAU,MAAQ,CAAA,SAAA,CAAU,SAAS,CAAA;AAC3C,IAAI,IAAA,QAAA;AACJ,IAAI,IAAA;AACF,MAAW,QAAA,GAAA,IAAI,GAAI,CAAA,OAAO,CAAE,CAAA,QAAA;AAAA,aACrB,KAAO,EAAA;AACd,MAAA,MAAM,IAAI,KAAA,CAAM,CAAoB,iBAAA,EAAA,OAAO,CAAG,CAAA,CAAA,CAAA;AAAA;AAGhD,IAAA,OAAO,EAAE,WAAa,EAAA,EAAE,IAAM,EAAA,WAAA,EAAa,UAAW,EAAA;AAAA;AAGxD,EAAM,MAAA,EAAA,GAAK,MAAQ,EAAA,iBAAA,CAAkB,OAAO,CAAA;AAC5C,EAAA,IAAI,CAAC,EAAI,EAAA;AACP,IAAO,OAAA,KAAA,CAAA;AAAA;AAGT,EAAO,OAAA;AAAA,IACL,WAAa,EAAA;AAAA,MACX,IAAM,EAAA,KAAA;AAAA,MACN,IAAA,EAAM,EAAG,CAAA,SAAA,CAAU,kBAAkB,CAAA;AAAA,MACrC,GAAA,EAAK,EAAG,CAAA,SAAA,CAAU,iBAAiB;AAAA;AACrC,GACF;AACF;;;;"}