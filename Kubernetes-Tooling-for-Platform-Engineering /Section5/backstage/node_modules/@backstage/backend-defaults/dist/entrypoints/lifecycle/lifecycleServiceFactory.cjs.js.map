{"version":3,"file":"lifecycleServiceFactory.cjs.js","sources":["../../../src/entrypoints/lifecycle/lifecycleServiceFactory.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  LifecycleService,\n  LifecycleServiceShutdownHook,\n  LifecycleServiceShutdownOptions,\n  LifecycleServiceStartupHook,\n  LifecycleServiceStartupOptions,\n  LoggerService,\n  PluginMetadataService,\n  coreServices,\n  createServiceFactory,\n} from '@backstage/backend-plugin-api';\n\n/** @internal */\nexport class BackendPluginLifecycleImpl implements LifecycleService {\n  constructor(\n    private readonly logger: LoggerService,\n    private readonly pluginMetadata: PluginMetadataService,\n  ) {}\n\n  #hasStarted = false;\n  #hasShutdown = false;\n  #startupTasks: Array<{\n    hook: LifecycleServiceStartupHook;\n    options?: LifecycleServiceStartupOptions;\n  }> = [];\n  #shutdownTasks: Array<{\n    hook: LifecycleServiceShutdownHook;\n    options?: LifecycleServiceShutdownOptions;\n  }> = [];\n\n  addStartupHook(\n    hook: LifecycleServiceStartupHook,\n    options?: LifecycleServiceStartupOptions,\n  ): void {\n    if (this.#hasStarted) {\n      throw new Error('Attempted to add startup hook after startup');\n    }\n    this.#startupTasks.push({ hook, options });\n  }\n\n  async startup(): Promise<void> {\n    if (this.#hasStarted) {\n      return;\n    }\n    this.#hasStarted = true;\n\n    this.logger.debug(\n      `Running ${this.#startupTasks.length} plugin startup tasks...`,\n    );\n    await Promise.all(\n      this.#startupTasks.map(async ({ hook, options }) => {\n        const logger = options?.logger ?? this.logger;\n        try {\n          await hook();\n          logger.debug(`Plugin startup hook succeeded`);\n        } catch (error) {\n          logger.error(`Plugin startup hook failed, ${error}`);\n        }\n      }),\n    );\n  }\n\n  addShutdownHook(\n    hook: LifecycleServiceShutdownHook,\n    options?: LifecycleServiceShutdownOptions,\n  ): void {\n    if (this.#hasShutdown) {\n      throw new Error('Attempted to add shutdown hook after shutdown');\n    }\n    const plugin = this.pluginMetadata.getId();\n    const logger = options?.logger?.child({ plugin }) ?? this.logger;\n    this.#shutdownTasks.push({\n      hook,\n      options: {\n        ...options,\n        logger,\n      },\n    });\n  }\n\n  async shutdown(): Promise<void> {\n    if (this.#hasShutdown) {\n      return;\n    }\n    this.#hasShutdown = true;\n\n    this.logger.debug(\n      `Running ${this.#shutdownTasks.length} plugin shutdown tasks...`,\n    );\n\n    await Promise.all(\n      this.#shutdownTasks.map(async ({ hook, options }) => {\n        const logger = options?.logger ?? this.logger;\n        try {\n          await hook();\n          logger.debug(`Plugin shutdown hook succeeded`);\n        } catch (error) {\n          logger.error('Plugin shutdown hook failed', error);\n        }\n      }),\n    );\n  }\n}\n\n/**\n * Registration of plugin startup and shutdown lifecycle hooks.\n *\n * See {@link @backstage/code-plugin-api#LifecycleService}\n * and {@link https://backstage.io/docs/backend-system/core-services/lifecycle | the service docs}\n * for more information.\n *\n * @public\n */\nexport const lifecycleServiceFactory = createServiceFactory({\n  service: coreServices.lifecycle,\n  deps: {\n    logger: coreServices.logger,\n    pluginMetadata: coreServices.pluginMetadata,\n  },\n  async factory({ logger, pluginMetadata }) {\n    return new BackendPluginLifecycleImpl(logger, pluginMetadata);\n  },\n});\n"],"names":["createServiceFactory","coreServices"],"mappings":"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"}