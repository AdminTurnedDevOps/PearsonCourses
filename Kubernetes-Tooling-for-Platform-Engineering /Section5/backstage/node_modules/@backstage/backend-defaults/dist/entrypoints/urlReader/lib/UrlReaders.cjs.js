'use strict';

var UrlReaderPredicateMux = require('./UrlReaderPredicateMux.cjs.js');
var AzureUrlReader = require('./AzureUrlReader.cjs.js');
var BitbucketCloudUrlReader = require('./BitbucketCloudUrlReader.cjs.js');
var BitbucketServerUrlReader = require('./BitbucketServerUrlReader.cjs.js');
var BitbucketUrlReader = require('./BitbucketUrlReader.cjs.js');
var GerritUrlReader = require('./GerritUrlReader.cjs.js');
var GithubUrlReader = require('./GithubUrlReader.cjs.js');
var GitlabUrlReader = require('./GitlabUrlReader.cjs.js');
var ReadTreeResponseFactory = require('./tree/ReadTreeResponseFactory.cjs.js');
var FetchUrlReader = require('./FetchUrlReader.cjs.js');
var GoogleGcsUrlReader = require('./GoogleGcsUrlReader.cjs.js');
var AwsS3UrlReader = require('./AwsS3UrlReader.cjs.js');
var GiteaUrlReader = require('./GiteaUrlReader.cjs.js');
var AwsCodeCommitUrlReader = require('./AwsCodeCommitUrlReader.cjs.js');
var HarnessUrlReader = require('./HarnessUrlReader.cjs.js');
var AzureBlobStorageUrlReader = require('./AzureBlobStorageUrlReader.cjs.js');

class UrlReaders {
  /**
   * Creates a custom {@link @backstage/backend-plugin-api#UrlReaderService} wrapper for your own set of factories.
   */
  static create(options) {
    const { logger, config, factories } = options;
    const mux = new UrlReaderPredicateMux.UrlReaderPredicateMux();
    const treeResponseFactory = ReadTreeResponseFactory.DefaultReadTreeResponseFactory.create({
      config
    });
    for (const factory of factories ?? []) {
      const tuples = factory({ config, logger, treeResponseFactory });
      for (const tuple of tuples) {
        mux.register(tuple);
      }
    }
    return mux;
  }
  /**
   * Creates a {@link @backstage/backend-plugin-api#UrlReaderService} wrapper that includes all the default factories
   * from this package.
   *
   * Any additional factories passed will be loaded before the default ones.
   */
  static default(options) {
    const { logger, config, factories = [] } = options;
    return UrlReaders.create({
      logger,
      config,
      factories: factories.concat([
        AzureUrlReader.AzureUrlReader.factory,
        BitbucketCloudUrlReader.BitbucketCloudUrlReader.factory,
        BitbucketServerUrlReader.BitbucketServerUrlReader.factory,
        BitbucketUrlReader.BitbucketUrlReader.factory,
        GerritUrlReader.GerritUrlReader.factory,
        GithubUrlReader.GithubUrlReader.factory,
        GiteaUrlReader.GiteaUrlReader.factory,
        GitlabUrlReader.GitlabUrlReader.factory,
        GoogleGcsUrlReader.GoogleGcsUrlReader.factory,
        HarnessUrlReader.HarnessUrlReader.factory,
        AwsS3UrlReader.AwsS3UrlReader.factory,
        AzureBlobStorageUrlReader.AzureBlobStorageUrlReader.factory,
        AwsCodeCommitUrlReader.AwsCodeCommitUrlReader.factory,
        FetchUrlReader.FetchUrlReader.factory
      ])
    });
  }
}

exports.UrlReaders = UrlReaders;
//# sourceMappingURL=UrlReaders.cjs.js.map
