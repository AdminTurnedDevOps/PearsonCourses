{"version":3,"file":"types.cjs.js","sources":["../../../../src/entrypoints/scheduler/lib/types.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CronTime } from 'cron';\nimport { Duration } from 'luxon';\nimport { z } from 'zod';\n\nfunction isValidOptionalDurationString(d: string | undefined): boolean {\n  try {\n    return !d || Duration.fromISO(d).isValid;\n  } catch {\n    return false;\n  }\n}\n\nfunction isValidCronFormat(c: string | undefined): boolean {\n  try {\n    if (!c) {\n      return false;\n    }\n    // parse cron format to ensure it's a valid format.\n    // eslint-disable-next-line no-new\n    new CronTime(c);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction isValidTrigger(t: string): boolean {\n  return t === 'manual';\n}\n\nexport const taskSettingsV1Schema = z.object({\n  version: z.literal(1),\n  initialDelayDuration: z\n    .string()\n    .optional()\n    .refine(isValidOptionalDurationString, {\n      message: 'Invalid duration, expecting ISO Period',\n    }),\n  recurringAtMostEveryDuration: z\n    .string()\n    .refine(isValidOptionalDurationString, {\n      message: 'Invalid duration, expecting ISO Period',\n    }),\n  timeoutAfterDuration: z.string().refine(isValidOptionalDurationString, {\n    message: 'Invalid duration, expecting ISO Period',\n  }),\n});\n\n/**\n * The properties that control a scheduled task (version 1).\n */\nexport type TaskSettingsV1 = z.infer<typeof taskSettingsV1Schema>;\n\nexport const taskSettingsV2Schema = z.object({\n  version: z.literal(2),\n  cadence: z\n    .string()\n    .refine(isValidCronFormat, { message: 'Invalid cron' })\n    .or(\n      z.string().refine(isValidTrigger, {\n        message: \"Invalid trigger, expecting 'manual'\",\n      }),\n    )\n    .or(\n      z.string().refine(isValidOptionalDurationString, {\n        message: 'Invalid duration, expecting ISO Period',\n      }),\n    ),\n  timeoutAfterDuration: z.string().refine(isValidOptionalDurationString, {\n    message: 'Invalid duration, expecting ISO Period',\n  }),\n  initialDelayDuration: z\n    .string()\n    .optional()\n    .refine(isValidOptionalDurationString, {\n      message: 'Invalid duration, expecting ISO Period',\n    }),\n});\n\n/**\n * The properties that control a scheduled task (version 2).\n */\nexport type TaskSettingsV2 = z.infer<typeof taskSettingsV2Schema>;\n"],"names":["Duration","CronTime","z"],"mappings":";;;;;;AAoBA,SAAS,8BAA8B,CAAgC,EAAA;AACrE,EAAI,IAAA;AACF,IAAA,OAAO,CAAC,CAAA,IAAKA,cAAS,CAAA,OAAA,CAAQ,CAAC,CAAE,CAAA,OAAA;AAAA,GAC3B,CAAA,MAAA;AACN,IAAO,OAAA,KAAA;AAAA;AAEX;AAEA,SAAS,kBAAkB,CAAgC,EAAA;AACzD,EAAI,IAAA;AACF,IAAA,IAAI,CAAC,CAAG,EAAA;AACN,MAAO,OAAA,KAAA;AAAA;AAIT,IAAA,IAAIC,cAAS,CAAC,CAAA;AACd,IAAO,OAAA,IAAA;AAAA,GACD,CAAA,MAAA;AACN,IAAO,OAAA,KAAA;AAAA;AAEX;AAEA,SAAS,eAAe,CAAoB,EAAA;AAC1C,EAAA,OAAO,CAAM,KAAA,QAAA;AACf;AAEoCC,MAAE,MAAO,CAAA;AAAA,EAC3C,OAAA,EAASA,KAAE,CAAA,OAAA,CAAQ,CAAC,CAAA;AAAA,EACpB,sBAAsBA,KACnB,CAAA,MAAA,GACA,QAAS,EAAA,CACT,OAAO,6BAA+B,EAAA;AAAA,IACrC,OAAS,EAAA;AAAA,GACV,CAAA;AAAA,EACH,4BAA8B,EAAAA,KAAA,CAC3B,MAAO,EAAA,CACP,OAAO,6BAA+B,EAAA;AAAA,IACrC,OAAS,EAAA;AAAA,GACV,CAAA;AAAA,EACH,oBAAsB,EAAAA,KAAA,CAAE,MAAO,EAAA,CAAE,OAAO,6BAA+B,EAAA;AAAA,IACrE,OAAS,EAAA;AAAA,GACV;AACH,CAAC;AAOY,MAAA,oBAAA,GAAuBA,MAAE,MAAO,CAAA;AAAA,EAC3C,OAAA,EAASA,KAAE,CAAA,OAAA,CAAQ,CAAC,CAAA;AAAA,EACpB,OAAA,EAASA,KACN,CAAA,MAAA,EACA,CAAA,MAAA,CAAO,mBAAmB,EAAE,OAAA,EAAS,cAAe,EAAC,CACrD,CAAA,EAAA;AAAA,IACCA,KAAE,CAAA,MAAA,EAAS,CAAA,MAAA,CAAO,cAAgB,EAAA;AAAA,MAChC,OAAS,EAAA;AAAA,KACV;AAAA,GAEF,CAAA,EAAA;AAAA,IACCA,KAAE,CAAA,MAAA,EAAS,CAAA,MAAA,CAAO,6BAA+B,EAAA;AAAA,MAC/C,OAAS,EAAA;AAAA,KACV;AAAA,GACH;AAAA,EACF,oBAAsB,EAAAA,KAAA,CAAE,MAAO,EAAA,CAAE,OAAO,6BAA+B,EAAA;AAAA,IACrE,OAAS,EAAA;AAAA,GACV,CAAA;AAAA,EACD,sBAAsBA,KACnB,CAAA,MAAA,GACA,QAAS,EAAA,CACT,OAAO,6BAA+B,EAAA;AAAA,IACrC,OAAS,EAAA;AAAA,GACV;AACL,CAAC;;;;"}