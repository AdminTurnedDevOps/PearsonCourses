{"version":3,"file":"createCredentialsBarrier.cjs.js","sources":["../../../../src/entrypoints/httpRouter/http/createCredentialsBarrier.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  HttpAuthService,\n  HttpRouterServiceAuthPolicy,\n  RootConfigService,\n} from '@backstage/backend-plugin-api';\nimport { RequestHandler } from 'express';\nimport { pathToRegexp } from 'path-to-regexp';\n\nexport function createPathPolicyPredicate(policyPath: string) {\n  if (policyPath === '/' || policyPath === '*') {\n    return () => true;\n  }\n\n  const { regexp: pathRegex } = pathToRegexp(policyPath, {\n    end: false,\n  });\n\n  return (path: string): boolean => {\n    return pathRegex.test(path);\n  };\n}\n\n/**\n * @public\n */\nexport function createCredentialsBarrier(options: {\n  httpAuth: HttpAuthService;\n  config: RootConfigService;\n}): {\n  middleware: RequestHandler;\n  addAuthPolicy: (policy: HttpRouterServiceAuthPolicy) => void;\n} {\n  const { httpAuth, config } = options;\n\n  const disableDefaultAuthPolicy = config.getOptionalBoolean(\n    'backend.auth.dangerouslyDisableDefaultAuthPolicy',\n  );\n\n  if (disableDefaultAuthPolicy) {\n    return {\n      middleware: (_req, _res, next) => next(),\n      addAuthPolicy: () => {},\n    };\n  }\n\n  const unauthenticatedPredicates = new Array<(path: string) => boolean>();\n  const cookiePredicates = new Array<(path: string) => boolean>();\n\n  const middleware: RequestHandler = (req, _, next) => {\n    const allowsUnauthenticated = unauthenticatedPredicates.some(predicate =>\n      predicate(req.path),\n    );\n\n    if (allowsUnauthenticated) {\n      next();\n      return;\n    }\n\n    const allowsCookie = cookiePredicates.some(predicate =>\n      predicate(req.path),\n    );\n\n    httpAuth\n      .credentials(req, {\n        allow: ['user', 'service'],\n        allowLimitedAccess: allowsCookie,\n      })\n      .then(\n        () => next(),\n        err => next(err),\n      );\n  };\n\n  const addAuthPolicy = (policy: HttpRouterServiceAuthPolicy) => {\n    if (policy.allow === 'unauthenticated') {\n      unauthenticatedPredicates.push(createPathPolicyPredicate(policy.path));\n    } else if (policy.allow === 'user-cookie') {\n      cookiePredicates.push(createPathPolicyPredicate(policy.path));\n    } else {\n      throw new Error('Invalid auth policy');\n    }\n  };\n\n  return { middleware, addAuthPolicy };\n}\n"],"names":["pathToRegexp"],"mappings":";;;;AAwBO,SAAS,0BAA0B,UAAoB,EAAA;AAC5D,EAAI,IAAA,UAAA,KAAe,GAAO,IAAA,UAAA,KAAe,GAAK,EAAA;AAC5C,IAAA,OAAO,MAAM,IAAA;AAAA;AAGf,EAAA,MAAM,EAAE,MAAA,EAAQ,SAAU,EAAA,GAAIA,0BAAa,UAAY,EAAA;AAAA,IACrD,GAAK,EAAA;AAAA,GACN,CAAA;AAED,EAAA,OAAO,CAAC,IAA0B,KAAA;AAChC,IAAO,OAAA,SAAA,CAAU,KAAK,IAAI,CAAA;AAAA,GAC5B;AACF;AAKO,SAAS,yBAAyB,OAMvC,EAAA;AACA,EAAM,MAAA,EAAE,QAAU,EAAA,MAAA,EAAW,GAAA,OAAA;AAE7B,EAAA,MAAM,2BAA2B,MAAO,CAAA,kBAAA;AAAA,IACtC;AAAA,GACF;AAEA,EAAA,IAAI,wBAA0B,EAAA;AAC5B,IAAO,OAAA;AAAA,MACL,UAAY,EAAA,CAAC,IAAM,EAAA,IAAA,EAAM,SAAS,IAAK,EAAA;AAAA,MACvC,eAAe,MAAM;AAAA;AAAC,KACxB;AAAA;AAGF,EAAM,MAAA,yBAAA,GAA4B,IAAI,KAAiC,EAAA;AACvE,EAAM,MAAA,gBAAA,GAAmB,IAAI,KAAiC,EAAA;AAE9D,EAAA,MAAM,UAA6B,GAAA,CAAC,GAAK,EAAA,CAAA,EAAG,IAAS,KAAA;AACnD,IAAA,MAAM,wBAAwB,yBAA0B,CAAA,IAAA;AAAA,MAAK,CAAA,SAAA,KAC3D,SAAU,CAAA,GAAA,CAAI,IAAI;AAAA,KACpB;AAEA,IAAA,IAAI,qBAAuB,EAAA;AACzB,MAAK,IAAA,EAAA;AACL,MAAA;AAAA;AAGF,IAAA,MAAM,eAAe,gBAAiB,CAAA,IAAA;AAAA,MAAK,CAAA,SAAA,KACzC,SAAU,CAAA,GAAA,CAAI,IAAI;AAAA,KACpB;AAEA,IAAA,QAAA,CACG,YAAY,GAAK,EAAA;AAAA,MAChB,KAAA,EAAO,CAAC,MAAA,EAAQ,SAAS,CAAA;AAAA,MACzB,kBAAoB,EAAA;AAAA,KACrB,CACA,CAAA,IAAA;AAAA,MACC,MAAM,IAAK,EAAA;AAAA,MACX,CAAA,GAAA,KAAO,KAAK,GAAG;AAAA,KACjB;AAAA,GACJ;AAEA,EAAM,MAAA,aAAA,GAAgB,CAAC,MAAwC,KAAA;AAC7D,IAAI,IAAA,MAAA,CAAO,UAAU,iBAAmB,EAAA;AACtC,MAAA,yBAAA,CAA0B,IAAK,CAAA,yBAAA,CAA0B,MAAO,CAAA,IAAI,CAAC,CAAA;AAAA,KACvE,MAAA,IAAW,MAAO,CAAA,KAAA,KAAU,aAAe,EAAA;AACzC,MAAA,gBAAA,CAAiB,IAAK,CAAA,yBAAA,CAA0B,MAAO,CAAA,IAAI,CAAC,CAAA;AAAA,KACvD,MAAA;AACL,MAAM,MAAA,IAAI,MAAM,qBAAqB,CAAA;AAAA;AACvC,GACF;AAEA,EAAO,OAAA,EAAE,YAAY,aAAc,EAAA;AACrC;;;;;"}