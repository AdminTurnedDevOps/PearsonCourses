{"version":3,"file":"urlReaderServiceFactory.cjs.js","sources":["../../../src/entrypoints/urlReader/urlReaderServiceFactory.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ReaderFactory } from './lib';\nimport { UrlReaders } from './lib/UrlReaders';\nimport {\n  coreServices,\n  createServiceFactory,\n  createServiceRef,\n} from '@backstage/backend-plugin-api';\n\n/**\n * @public\n * A non-singleton reference to URL Reader factory services.\n *\n * @example\n * Creating a service factory implementation for a Custom URL Reader.\n * ```ts\n * createServiceFactory({\n *   service: urlReaderFactoriesServiceRef,\n *   deps: {},\n *   async factory() {\n *     return CustomUrlReader.factory;\n *   },\n * });\n * ```\n */\nexport const urlReaderFactoriesServiceRef = createServiceRef<ReaderFactory>({\n  id: 'core.urlReader.factories',\n  scope: 'plugin',\n  multiton: true,\n});\n\n/**\n * Reading content from external systems.\n *\n * See {@link @backstage/code-plugin-api#UrlReaderService}\n * and {@link https://backstage.io/docs/backend-system/core-services/url-reader | the service docs}\n * for more information.\n *\n * @public\n */\nexport const urlReaderServiceFactory = createServiceFactory({\n  service: coreServices.urlReader,\n  deps: {\n    config: coreServices.rootConfig,\n    logger: coreServices.logger,\n    factories: urlReaderFactoriesServiceRef,\n  },\n  async factory({ config, logger, factories }) {\n    return UrlReaders.default({\n      config,\n      logger,\n      factories,\n    });\n  },\n});\n"],"names":["createServiceRef","createServiceFactory","coreServices","UrlReaders"],"mappings":";;;;;AAwCO,MAAM,+BAA+BA,iCAAgC,CAAA;AAAA,EAC1E,EAAI,EAAA,0BAAA;AAAA,EACJ,KAAO,EAAA,QAAA;AAAA,EACP,QAAU,EAAA;AACZ,CAAC;AAWM,MAAM,0BAA0BC,qCAAqB,CAAA;AAAA,EAC1D,SAASC,6BAAa,CAAA,SAAA;AAAA,EACtB,IAAM,EAAA;AAAA,IACJ,QAAQA,6BAAa,CAAA,UAAA;AAAA,IACrB,QAAQA,6BAAa,CAAA,MAAA;AAAA,IACrB,SAAW,EAAA;AAAA,GACb;AAAA,EACA,MAAM,OAAQ,CAAA,EAAE,MAAQ,EAAA,MAAA,EAAQ,WAAa,EAAA;AAC3C,IAAA,OAAOC,sBAAW,OAAQ,CAAA;AAAA,MACxB,MAAA;AAAA,MACA,MAAA;AAAA,MACA;AAAA,KACD,CAAA;AAAA;AAEL,CAAC;;;;;"}