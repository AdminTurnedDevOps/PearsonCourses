{"version":3,"file":"rootLifecycleServiceFactory.cjs.js","sources":["../../../src/entrypoints/rootLifecycle/rootLifecycleServiceFactory.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  createServiceFactory,\n  coreServices,\n  LifecycleServiceStartupHook,\n  LifecycleServiceStartupOptions,\n  LifecycleServiceShutdownHook,\n  LifecycleServiceShutdownOptions,\n  RootLifecycleService,\n  LoggerService,\n} from '@backstage/backend-plugin-api';\n\n/** @internal */\nexport class BackendLifecycleImpl implements RootLifecycleService {\n  constructor(private readonly logger: LoggerService) {}\n\n  #hasStarted = false;\n  #startupTasks: Array<{\n    hook: LifecycleServiceStartupHook;\n    options?: LifecycleServiceStartupOptions;\n  }> = [];\n\n  addStartupHook(\n    hook: LifecycleServiceStartupHook,\n    options?: LifecycleServiceStartupOptions,\n  ): void {\n    if (this.#hasStarted) {\n      throw new Error('Attempted to add startup hook after startup');\n    }\n    this.#startupTasks.push({ hook, options });\n  }\n\n  async startup(): Promise<void> {\n    if (this.#hasStarted) {\n      return;\n    }\n    this.#hasStarted = true;\n\n    this.logger.debug(`Running ${this.#startupTasks.length} startup tasks...`);\n    await Promise.all(\n      this.#startupTasks.map(async ({ hook, options }) => {\n        const logger = options?.logger ?? this.logger;\n        try {\n          await hook();\n          logger.debug(`Startup hook succeeded`);\n        } catch (error) {\n          logger.error(`Startup hook failed, ${error}`);\n        }\n      }),\n    );\n  }\n\n  #hasBeforeShutdown = false;\n  #beforeShutdownTasks: Array<{ hook: () => void | Promise<void> }> = [];\n\n  addBeforeShutdownHook(hook: () => void): void {\n    if (this.#hasBeforeShutdown) {\n      throw new Error(\n        'Attempt to add before shutdown hook after shutdown has started',\n      );\n    }\n    this.#beforeShutdownTasks.push({ hook });\n  }\n\n  async beforeShutdown(): Promise<void> {\n    if (this.#hasBeforeShutdown) {\n      return;\n    }\n    this.#hasBeforeShutdown = true;\n\n    this.logger.debug(\n      `Running ${this.#beforeShutdownTasks.length} before shutdown tasks...`,\n    );\n    await Promise.all(\n      this.#beforeShutdownTasks.map(async ({ hook }) => {\n        try {\n          await hook();\n          this.logger.debug(`Before shutdown hook succeeded`);\n        } catch (error) {\n          this.logger.error(`Before shutdown hook failed, ${error}`);\n        }\n      }),\n    );\n  }\n\n  #hasShutdown = false;\n  #shutdownTasks: Array<{\n    hook: LifecycleServiceShutdownHook;\n    options?: LifecycleServiceShutdownOptions;\n  }> = [];\n\n  addShutdownHook(\n    hook: LifecycleServiceShutdownHook,\n    options?: LifecycleServiceShutdownOptions,\n  ): void {\n    if (this.#hasShutdown) {\n      throw new Error('Attempted to add shutdown hook after shutdown');\n    }\n    this.#shutdownTasks.push({ hook, options });\n  }\n\n  async shutdown(): Promise<void> {\n    if (this.#hasShutdown) {\n      return;\n    }\n    this.#hasShutdown = true;\n\n    this.logger.debug(\n      `Running ${this.#shutdownTasks.length} shutdown tasks...`,\n    );\n    await Promise.all(\n      this.#shutdownTasks.map(async ({ hook, options }) => {\n        const logger = options?.logger ?? this.logger;\n        try {\n          await hook();\n          logger.debug(`Shutdown hook succeeded`);\n        } catch (error) {\n          logger.error(`Shutdown hook failed, ${error}`);\n        }\n      }),\n    );\n  }\n}\n\n/**\n * Registration of backend startup and shutdown lifecycle hooks.\n *\n * See {@link @backstage/code-plugin-api#RootLifecycleService}\n * and {@link https://backstage.io/docs/backend-system/core-services/root-lifecycle | the service docs}\n * for more information.\n *\n * @public\n */\nexport const rootLifecycleServiceFactory = createServiceFactory({\n  service: coreServices.rootLifecycle,\n  deps: {\n    logger: coreServices.rootLogger,\n  },\n  async factory({ logger }) {\n    return new BackendLifecycleImpl(logger);\n  },\n});\n"],"names":["createServiceFactory","coreServices"],"mappings":"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"}