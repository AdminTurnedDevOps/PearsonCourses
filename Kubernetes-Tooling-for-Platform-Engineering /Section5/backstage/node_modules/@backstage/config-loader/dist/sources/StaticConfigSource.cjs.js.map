{"version":3,"file":"StaticConfigSource.cjs.js","sources":["../../src/sources/StaticConfigSource.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonObject, Observable, createDeferred } from '@backstage/types';\nimport {\n  AsyncConfigSourceGenerator,\n  ConfigSource,\n  ReadConfigDataOptions,\n} from './types';\n\n/**\n * Options for {@link StaticConfigSource.create}.\n *\n * @public\n */\nexport interface StaticConfigSourceOptions {\n  data:\n    | JsonObject\n    | Observable<JsonObject>\n    | PromiseLike<JsonObject>\n    | AsyncIterable<JsonObject>;\n  context?: string;\n}\n\n/** @internal */\nclass StaticObservableConfigSource implements ConfigSource {\n  constructor(\n    private readonly data: Observable<JsonObject>,\n    private readonly context: string,\n  ) {}\n\n  async *readConfigData(\n    options?: ReadConfigDataOptions | undefined,\n  ): AsyncConfigSourceGenerator {\n    const queue = new Array<JsonObject>();\n    let deferred = createDeferred();\n\n    const sub = this.data.subscribe({\n      next(value) {\n        queue.push(value);\n        deferred.resolve();\n        deferred = createDeferred();\n      },\n      complete() {\n        deferred.resolve();\n      },\n    });\n\n    const signal = options?.signal;\n    if (signal) {\n      const onAbort = () => {\n        sub.unsubscribe();\n        queue.length = 0;\n        deferred.resolve();\n        signal.removeEventListener('abort', onAbort);\n      };\n\n      signal.addEventListener('abort', onAbort);\n    }\n\n    for (;;) {\n      await deferred;\n      if (queue.length === 0) {\n        return;\n      }\n      while (queue.length > 0) {\n        yield { configs: [{ data: queue.shift()!, context: this.context }] };\n      }\n    }\n  }\n}\n\nfunction isObservable<T>(value: {}): value is Observable<T> {\n  return 'subscribe' in value && typeof (value as any).subscribe === 'function';\n}\n\nfunction isAsyncIterable<T>(value: {}): value is AsyncIterable<T> {\n  return Symbol.asyncIterator in value;\n}\n\n/**\n * A configuration source that reads from a static object, promise, iterable, or observable.\n *\n * @public\n */\nexport class StaticConfigSource implements ConfigSource {\n  /**\n   * Creates a new {@link StaticConfigSource}.\n   *\n   * @param options - Options for the config source\n   * @returns A new static config source\n   */\n  static create(options: StaticConfigSourceOptions): ConfigSource {\n    const { data, context = 'static-config' } = options;\n    if (!data) {\n      return {\n        async *readConfigData(): AsyncConfigSourceGenerator {\n          yield { configs: [] };\n          return;\n        },\n      };\n    }\n\n    if (isObservable<JsonObject>(data)) {\n      return new StaticObservableConfigSource(data, context);\n    }\n\n    if (isAsyncIterable(data)) {\n      return {\n        async *readConfigData(): AsyncConfigSourceGenerator {\n          for await (const value of data) {\n            yield { configs: [{ data: value, context }] };\n          }\n        },\n      };\n    }\n\n    return new StaticConfigSource(data, context);\n  }\n\n  private constructor(\n    private readonly promise: JsonObject | PromiseLike<JsonObject>,\n    private readonly context: string,\n  ) {}\n\n  async *readConfigData(): AsyncConfigSourceGenerator {\n    yield { configs: [{ data: await this.promise, context: this.context }] };\n    return;\n  }\n\n  toString() {\n    return `StaticConfigSource{}`;\n  }\n}\n"],"names":["createDeferred"],"mappings":"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"}