'use strict';

var yaml = require('yaml');

function _interopDefaultCompat (e) { return e && typeof e === 'object' && 'default' in e ? e : { default: e }; }

var yaml__default = /*#__PURE__*/_interopDefaultCompat(yaml);

async function waitOrAbort(promise, signal) {
  const signals = [signal].flat().filter((x) => !!x);
  return new Promise((resolve, reject) => {
    if (signals.some((s) => s.aborted)) {
      resolve([false]);
    }
    const onAbort = () => {
      resolve([false]);
    };
    promise.then(
      (value) => {
        resolve([true, value]);
        signals.forEach((s) => s.removeEventListener("abort", onAbort));
      },
      (error) => {
        reject(error);
        signals.forEach((s) => s.removeEventListener("abort", onAbort));
      }
    );
    signals.forEach((s) => s.addEventListener("abort", onAbort));
  });
}
const parseYamlContent = async ({ contents }) => {
  const parsed = yaml__default.default.parse(contents);
  return { result: parsed === null ? void 0 : parsed };
};

exports.parseYamlContent = parseYamlContent;
exports.waitOrAbort = waitOrAbort;
//# sourceMappingURL=utils.cjs.js.map
