{"version":3,"file":"BackwardsCompatProvider.esm.js","sources":["../../src/compatWrapper/BackwardsCompatProvider.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useMemo } from 'react';\nimport { ReactNode } from 'react';\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport { AppContextProvider } from '../../../core-app-api/src/app/AppContext';\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport { RouteResolver } from '../../../core-plugin-api/src/routing/useRouteRef';\nimport {\n  createFrontendPlugin as createNewPlugin,\n  FrontendPlugin as NewFrontendPlugin,\n  appTreeApiRef,\n  componentsApiRef,\n  coreComponentRefs,\n  iconsApiRef,\n  useApi,\n  routeResolutionApiRef,\n} from '@backstage/frontend-plugin-api';\nimport {\n  AppComponents,\n  IconComponent,\n  BackstagePlugin as LegacyBackstagePlugin,\n  RouteRef,\n} from '@backstage/core-plugin-api';\nimport {\n  VersionedValue,\n  createVersionedContext,\n  createVersionedValueMap,\n  getOrCreateGlobalSingleton,\n} from '@backstage/version-bridge';\nimport { convertLegacyRouteRef } from '../convertLegacyRouteRef';\n\n// Make sure that we only convert each new plugin instance to its legacy equivalent once\nconst legacyPluginStore = getOrCreateGlobalSingleton(\n  'legacy-plugin-compatibility-store',\n  () => new WeakMap<NewFrontendPlugin, LegacyBackstagePlugin>(),\n);\n\nexport function toLegacyPlugin(\n  plugin: NewFrontendPlugin,\n): LegacyBackstagePlugin {\n  let legacy = legacyPluginStore.get(plugin);\n  if (legacy) {\n    return legacy;\n  }\n\n  const errorMsg = 'Not implemented in legacy plugin compatibility layer';\n  const notImplemented = () => {\n    throw new Error(errorMsg);\n  };\n\n  legacy = {\n    getId(): string {\n      return plugin.id;\n    },\n    get routes() {\n      return {};\n    },\n    get externalRoutes() {\n      return {};\n    },\n    getApis: notImplemented,\n    getFeatureFlags: notImplemented,\n    provide: notImplemented,\n  };\n\n  legacyPluginStore.set(plugin, legacy);\n  return legacy;\n}\n\n// TODO: Currently a very naive implementation, may need some more work\nfunction toNewPlugin(plugin: LegacyBackstagePlugin): NewFrontendPlugin {\n  return createNewPlugin({\n    id: plugin.getId(),\n  });\n}\n\n// Recreates the old AppContext APIs using the various new APIs that replaced it\nfunction LegacyAppContextProvider(props: { children: ReactNode }) {\n  const appTreeApi = useApi(appTreeApiRef);\n  const componentsApi = useApi(componentsApiRef);\n  const iconsApi = useApi(iconsApiRef);\n\n  const appContext = useMemo(() => {\n    const { tree } = appTreeApi.getTree();\n\n    let gatheredPlugins: LegacyBackstagePlugin[] | undefined = undefined;\n\n    const ErrorBoundaryFallback = componentsApi.getComponent(\n      coreComponentRefs.errorBoundaryFallback,\n    );\n    const ErrorBoundaryFallbackWrapper: AppComponents['ErrorBoundaryFallback'] =\n      ({ plugin, ...rest }) => (\n        <ErrorBoundaryFallback\n          {...rest}\n          plugin={plugin && toNewPlugin(plugin)}\n        />\n      );\n\n    return {\n      getPlugins(): LegacyBackstagePlugin[] {\n        if (gatheredPlugins) {\n          return gatheredPlugins;\n        }\n\n        const pluginSet = new Set<LegacyBackstagePlugin>();\n        for (const node of tree.nodes.values()) {\n          const plugin = node.spec.source;\n          if (plugin) {\n            pluginSet.add(toLegacyPlugin(plugin));\n          }\n        }\n        gatheredPlugins = Array.from(pluginSet);\n\n        return gatheredPlugins;\n      },\n\n      getSystemIcon(key: string): IconComponent | undefined {\n        return iconsApi.getIcon(key);\n      },\n\n      getSystemIcons(): Record<string, IconComponent> {\n        return Object.fromEntries(\n          iconsApi.listIconKeys().map(key => [key, iconsApi.getIcon(key)!]),\n        );\n      },\n\n      getComponents(): AppComponents {\n        return {\n          NotFoundErrorPage: componentsApi.getComponent(\n            coreComponentRefs.notFoundErrorPage,\n          ),\n          BootErrorPage() {\n            throw new Error(\n              'The BootErrorPage app component should not be accessed by plugins',\n            );\n          },\n          Progress: componentsApi.getComponent(coreComponentRefs.progress),\n          Router() {\n            throw new Error(\n              'The Router app component should not be accessed by plugins',\n            );\n          },\n          ErrorBoundaryFallback: ErrorBoundaryFallbackWrapper,\n        };\n      },\n    };\n  }, [appTreeApi, componentsApi, iconsApi]);\n\n  return (\n    <AppContextProvider appContext={appContext}>\n      {props.children}\n    </AppContextProvider>\n  );\n}\n\nconst RoutingContext = createVersionedContext<{ 1: RouteResolver }>(\n  'routing-context',\n);\n\nfunction LegacyRoutingProvider(props: { children: ReactNode }) {\n  const routeResolutionApi = useApi(routeResolutionApiRef);\n\n  const value = useMemo<VersionedValue<{ 1: RouteResolver }>>(() => {\n    return createVersionedValueMap({\n      1: {\n        resolve(anyRouteRef, location) {\n          const sourcePath =\n            typeof location === 'string' ? location : location.pathname ?? '';\n\n          return routeResolutionApi.resolve(\n            // This removes the requirement to use convertLegacyRouteRef inside plugins, but\n            // they still need to converted when passed to the plugin instance\n            convertLegacyRouteRef(anyRouteRef as RouteRef),\n            { sourcePath },\n          );\n        },\n      },\n    });\n  }, [routeResolutionApi]);\n\n  return (\n    <RoutingContext.Provider value={value}>\n      {props.children}\n    </RoutingContext.Provider>\n  );\n}\n\nexport function BackwardsCompatProvider(props: { children: ReactNode }) {\n  return (\n    <LegacyRoutingProvider>\n      <LegacyAppContextProvider>{props.children}</LegacyAppContextProvider>\n    </LegacyRoutingProvider>\n  );\n}\n"],"names":["createNewPlugin"],"mappings":"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"}