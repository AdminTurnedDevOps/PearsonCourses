class MultipleAnalyticsApi {
  constructor(actualApis) {
    this.actualApis = actualApis;
  }
  /**
   * Create an AnalyticsApi implementation from an array of concrete
   * implementations.
   *
   * @example
   *
   * ```jsx
   * MultipleAnalyticsApi.fromApis([
   *   SomeAnalyticsApi.fromConfig(configApi),
   *   new CustomAnalyticsApi(),
   * ]);
   * ```
   */
  static fromApis(actualApis) {
    return new MultipleAnalyticsApi(actualApis);
  }
  /**
   * Forward the event to all configured analytics API implementations.
   */
  captureEvent(event) {
    this.actualApis.forEach((analyticsApi) => {
      try {
        analyticsApi.captureEvent(event);
      } catch {
      }
    });
  }
}

export { MultipleAnalyticsApi };
//# sourceMappingURL=MultipleAnalyticsApi.esm.js.map
