'use strict';

var pluginAuthNode = require('@backstage/plugin-auth-node');

exports.azureEasyAuthSignInResolvers = void 0;
((azureEasyAuthSignInResolvers2) => {
  azureEasyAuthSignInResolvers2.idMatchingUserEntityAnnotation = pluginAuthNode.createSignInResolverFactory({
    create() {
      return async (info, ctx) => {
        const {
          fullProfile: { id }
        } = info.result;
        if (!id) {
          throw new Error("User profile contained no id");
        }
        return await ctx.signInWithCatalogUser({
          annotations: {
            "graph.microsoft.com/user-id": id
          }
        });
      };
    }
  });
})(exports.azureEasyAuthSignInResolvers || (exports.azureEasyAuthSignInResolvers = {}));
//# sourceMappingURL=resolvers.cjs.js.map
