{"version":3,"file":"BitbucketCloudClient.esm.js","sources":["../src/BitbucketCloudClient.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BitbucketCloudIntegrationConfig } from '@backstage/integration';\nimport fetch, { Request } from 'cross-fetch';\nimport { Models } from './models';\nimport { WithPagination } from './pagination';\nimport {\n  FilterAndSortOptions,\n  PartialResponseOptions,\n  RequestOptions,\n} from './types';\n\n/** @public */\nexport class BitbucketCloudClient {\n  static fromConfig(\n    config: BitbucketCloudIntegrationConfig,\n  ): BitbucketCloudClient {\n    return new BitbucketCloudClient(config);\n  }\n\n  private constructor(\n    private readonly config: BitbucketCloudIntegrationConfig,\n  ) {}\n\n  searchCode(\n    workspace: string,\n    query: string,\n    options?: FilterAndSortOptions & PartialResponseOptions,\n  ): WithPagination<Models.SearchResultPage, Models.SearchCodeSearchResult> {\n    const workspaceEnc = encodeURIComponent(workspace);\n    return new WithPagination(\n      paginationOptions =>\n        this.createUrl(`/workspaces/${workspaceEnc}/search/code`, {\n          ...paginationOptions,\n          ...options,\n          search_query: query,\n        }),\n      url => this.getTypeMapped(url),\n    );\n  }\n\n  listRepositoriesByWorkspace(\n    workspace: string,\n    options?: FilterAndSortOptions & PartialResponseOptions,\n  ): WithPagination<Models.PaginatedRepositories, Models.Repository> {\n    const workspaceEnc = encodeURIComponent(workspace);\n\n    return new WithPagination(\n      paginationOptions =>\n        this.createUrl(`/repositories/${workspaceEnc}`, {\n          ...paginationOptions,\n          ...options,\n        }),\n      url => this.getTypeMapped(url),\n    );\n  }\n\n  listProjectsByWorkspace(\n    workspace: string,\n    options?: FilterAndSortOptions & PartialResponseOptions,\n  ): WithPagination<Models.PaginatedProjects, Models.Project> {\n    const workspaceEnc = encodeURIComponent(workspace);\n\n    return new WithPagination(\n      paginationOptions =>\n        this.createUrl(`/workspaces/${workspaceEnc}/projects`, {\n          ...paginationOptions,\n          ...options,\n        }),\n      url => this.getTypeMapped(url),\n    );\n  }\n\n  listWorkspaces(\n    options?: FilterAndSortOptions & PartialResponseOptions,\n  ): WithPagination<Models.PaginatedWorkspaces, Models.Workspace> {\n    return new WithPagination(\n      paginationOptions =>\n        this.createUrl('/workspaces', { ...paginationOptions, ...options }),\n      url => this.getTypeMapped(url),\n    );\n  }\n\n  listBranchesByRepository(\n    repository: string,\n    workspace: string,\n    options?: FilterAndSortOptions & PartialResponseOptions,\n  ): WithPagination<Models.PaginatedBranches, Models.Branch> {\n    const workspaceEnc = encodeURIComponent(workspace);\n\n    return new WithPagination(\n      paginationOptions =>\n        this.createUrl(\n          `/repositories/${workspaceEnc}/${repository}/refs/branches`,\n          {\n            ...paginationOptions,\n            ...options,\n          },\n        ),\n      url => this.getTypeMapped(url),\n    );\n  }\n\n  private createUrl(endpoint: string, options?: RequestOptions): URL {\n    const request = new URL(this.config.apiBaseUrl + endpoint);\n    for (const key in options) {\n      if (options[key]) {\n        request.searchParams.append(key, options[key]!.toString());\n      }\n    }\n\n    return request;\n  }\n\n  private async getTypeMapped<T = any>(url: URL): Promise<T> {\n    return this.get(url).then(\n      (response: Response) => response.json() as Promise<T>,\n    );\n  }\n\n  private async get(url: URL): Promise<Response> {\n    return this.request(new Request(url.toString(), { method: 'GET' }));\n  }\n\n  private async request(req: Request): Promise<Response> {\n    return fetch(req, { headers: this.getAuthHeaders() }).then(\n      (response: Response) => {\n        if (!response.ok) {\n          throw new Error(\n            `Unexpected response for ${req.method} ${req.url}. Expected 200 but got ${response.status} - ${response.statusText}`,\n          );\n        }\n\n        return response;\n      },\n    );\n  }\n\n  private getAuthHeaders(): Record<string, string> {\n    const headers: Record<string, string> = {};\n\n    if (this.config.username) {\n      const buffer = Buffer.from(\n        `${this.config.username}:${this.config.appPassword}`,\n        'utf8',\n      );\n      headers.Authorization = `Basic ${buffer.toString('base64')}`;\n    } else if (this.config.token) {\n      headers.Authorization = `Bearer ${this.config.token}`;\n    }\n\n    return headers;\n  }\n}\n"],"names":[],"mappings":"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"}