'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var fs = require('fs-extra');
var path = require('path');
var getPackages = require('@manypkg/get-packages');
var test = require('@playwright/test');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var fs__default = /*#__PURE__*/_interopDefaultLegacy(fs);

function generateProjects() {
  const { root, packages } = getPackages.getPackagesSync(process.cwd());
  const e2eTestPackages = [...root ? [root] : [], ...packages].filter((pkg) => {
    return fs__default["default"].pathExistsSync(path.resolve(pkg.dir, "e2e-tests"));
  });
  return e2eTestPackages.map((pkg) => ({
    name: pkg.packageJson.name,
    testDir: path.resolve(pkg.dir, "e2e-tests"),
    use: {
      channel: "chrome"
    }
  }));
}

function failOnBrowserErrors() {
  test.test.beforeEach(async ({ page }) => {
    page.on("pageerror", (error) => {
      throw new Error(`Uncaught exception on page, ${error}`);
    });
    page.on("console", (msg) => {
      if (msg.type() === "error") {
        throw new Error(`Unexpected console error message "${msg.text()}"`);
      }
    });
  });
}

exports.failOnBrowserErrors = failOnBrowserErrors;
exports.generateProjects = generateProjects;
//# sourceMappingURL=playwright.cjs.js.map
