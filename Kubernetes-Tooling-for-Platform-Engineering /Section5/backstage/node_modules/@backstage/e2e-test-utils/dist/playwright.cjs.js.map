{"version":3,"file":"playwright.cjs.js","sources":["../src/playwright/generateProjects.ts","../src/playwright/failOnBrowserErrors.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs-extra';\nimport { resolve as resolvePath } from 'path';\nimport { PlaywrightTestConfig } from '@playwright/test';\nimport { getPackagesSync } from '@manypkg/get-packages';\nimport type { BackstagePackage } from '@backstage/cli-node';\n\n/**\n * Generates a list of playwright projects by scanning the monorepo for packages with an `e2e-tests/` folder.\n *\n * @public\n */\nexport function generateProjects(): PlaywrightTestConfig['projects'] {\n  // TODO(Rugvip): Switch this over to use @backstage/cli-node once released, and support SINCE=origin/main\n  const { root, packages } = getPackagesSync(process.cwd());\n  const e2eTestPackages = [...(root ? [root] : []), ...packages].filter(pkg => {\n    return fs.pathExistsSync(resolvePath(pkg.dir, 'e2e-tests'));\n  }) as BackstagePackage[];\n\n  return e2eTestPackages.map(pkg => ({\n    name: pkg.packageJson.name,\n    testDir: resolvePath(pkg.dir, 'e2e-tests'),\n    use: {\n      channel: 'chrome',\n    },\n  }));\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { test } from '@playwright/test';\n\n/**\n * Calling this at the top of your test file will ensure that tests fail if the browser\n * logs any errors or if there are any uncaught exceptions.\n *\n * @public\n */\nexport function failOnBrowserErrors(): void {\n  test.beforeEach(async ({ page }) => {\n    page.on('pageerror', error => {\n      throw new Error(`Uncaught exception on page, ${error}`);\n    });\n\n    page.on('console', msg => {\n      if (msg.type() === 'error') {\n        throw new Error(`Unexpected console error message \"${msg.text()}\"`);\n      }\n    });\n  });\n}\n"],"names":["getPackagesSync","fs","resolvePath","test"],"mappings":";;;;;;;;;;;;;AA2BO,SAAS,gBAAqD,GAAA;AAEnE,EAAA,MAAM,EAAE,IAAM,EAAA,QAAA,KAAaA,2BAAgB,CAAA,OAAA,CAAQ,KAAK,CAAA,CAAA;AACxD,EAAA,MAAM,eAAkB,GAAA,CAAC,GAAI,IAAA,GAAO,CAAC,IAAI,CAAI,GAAA,EAAK,EAAA,GAAG,QAAQ,CAAA,CAAE,OAAO,CAAO,GAAA,KAAA;AAC3E,IAAA,OAAOC,uBAAG,cAAe,CAAAC,YAAA,CAAY,GAAI,CAAA,GAAA,EAAK,WAAW,CAAC,CAAA,CAAA;AAAA,GAC3D,CAAA,CAAA;AAED,EAAO,OAAA,eAAA,CAAgB,IAAI,CAAQ,GAAA,MAAA;AAAA,IACjC,IAAA,EAAM,IAAI,WAAY,CAAA,IAAA;AAAA,IACtB,OAAS,EAAAA,YAAA,CAAY,GAAI,CAAA,GAAA,EAAK,WAAW,CAAA;AAAA,IACzC,GAAK,EAAA;AAAA,MACH,OAAS,EAAA,QAAA;AAAA,KACX;AAAA,GACA,CAAA,CAAA,CAAA;AACJ;;ACjBO,SAAS,mBAA4B,GAAA;AAC1C,EAAAC,SAAA,CAAK,UAAW,CAAA,OAAO,EAAE,IAAA,EAAW,KAAA;AAClC,IAAK,IAAA,CAAA,EAAA,CAAG,aAAa,CAAS,KAAA,KAAA;AAC5B,MAAA,MAAM,IAAI,KAAA,CAAM,CAA+B,4BAAA,EAAA,KAAK,CAAE,CAAA,CAAA,CAAA;AAAA,KACvD,CAAA,CAAA;AAED,IAAK,IAAA,CAAA,EAAA,CAAG,WAAW,CAAO,GAAA,KAAA;AACxB,MAAI,IAAA,GAAA,CAAI,IAAK,EAAA,KAAM,OAAS,EAAA;AAC1B,QAAA,MAAM,IAAI,KAAM,CAAA,CAAA,kCAAA,EAAqC,GAAI,CAAA,IAAA,EAAM,CAAG,CAAA,CAAA,CAAA,CAAA;AAAA,OACpE;AAAA,KACD,CAAA,CAAA;AAAA,GACF,CAAA,CAAA;AACH;;;;;"}