import * as _backstage_frontend_plugin_api from '@backstage/frontend-plugin-api';
import * as _backstage_core_plugin_api from '@backstage/core-plugin-api';
import React__default from 'react';
import * as _backstage_core_plugin_api_alpha from '@backstage/core-plugin-api/alpha';

/** @alpha */
declare const userSettingsTranslationRef: _backstage_core_plugin_api_alpha.TranslationRef<"user-settings", {
    readonly "languageToggle.select": "Select language {{language}}";
    readonly "languageToggle.title": "Language";
    readonly "languageToggle.description": "Change the language";
    readonly "themeToggle.select": "Select theme {{theme}}";
    readonly "themeToggle.title": "Theme";
    readonly "themeToggle.description": "Change the theme mode";
    readonly "themeToggle.names.auto": "Auto";
    readonly "themeToggle.names.dark": "Dark";
    readonly "themeToggle.names.light": "Light";
    readonly "themeToggle.selectAuto": "Select Auto Theme";
}>;

/** @alpha */
declare const settingsNavItem: _backstage_frontend_plugin_api.ExtensionDefinition<{
    kind: "nav-item";
    name: undefined;
    config: {};
    configInput: {};
    output: _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<{
        title: string;
        icon: _backstage_core_plugin_api.IconComponent;
        routeRef: _backstage_frontend_plugin_api.RouteRef<undefined>;
    }, "core.nav-item.target", {}>;
    inputs: {};
    params: {
        title: string;
        icon: _backstage_core_plugin_api.IconComponent;
        routeRef: _backstage_frontend_plugin_api.RouteRef<undefined>;
    };
}>;
/**
 * @alpha
 */
declare const _default: _backstage_frontend_plugin_api.FrontendPlugin<{
    root: _backstage_frontend_plugin_api.RouteRef<undefined>;
}, {}, {
    "nav-item:user-settings": _backstage_frontend_plugin_api.ExtensionDefinition<{
        kind: "nav-item";
        name: undefined;
        config: {};
        configInput: {};
        output: _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<{
            title: string;
            icon: _backstage_core_plugin_api.IconComponent;
            routeRef: _backstage_frontend_plugin_api.RouteRef<undefined>;
        }, "core.nav-item.target", {}>;
        inputs: {};
        params: {
            title: string;
            icon: _backstage_core_plugin_api.IconComponent;
            routeRef: _backstage_frontend_plugin_api.RouteRef<undefined>;
        };
    }>;
    "page:user-settings": _backstage_frontend_plugin_api.ExtensionDefinition<{
        config: {
            path: string | undefined;
        };
        configInput: {
            path?: string | undefined;
        };
        output: _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<React__default.JSX.Element, "core.reactElement", {}> | _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<string, "core.routing.path", {}> | _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<_backstage_frontend_plugin_api.RouteRef<_backstage_frontend_plugin_api.AnyRouteRefParams>, "core.routing.ref", {
            optional: true;
        }>;
        inputs: {
            providerSettings: _backstage_frontend_plugin_api.ExtensionInput<_backstage_frontend_plugin_api.ConfigurableExtensionDataRef<React__default.JSX.Element, "core.reactElement", {}>, {
                singleton: true;
                optional: true;
            }>;
        };
        kind: "page";
        name: undefined;
        params: {
            defaultPath: string;
            loader: () => Promise<JSX.Element>;
            routeRef?: _backstage_frontend_plugin_api.RouteRef<_backstage_frontend_plugin_api.AnyRouteRefParams> | undefined;
        };
    }>;
}>;

export { _default as default, settingsNavItem, userSettingsTranslationRef };
