import { PageBlueprint, createExtensionInput, coreExtensionData, NavItemBlueprint, createFrontendPlugin } from '@backstage/frontend-plugin-api';
import { convertLegacyRouteRef, compatWrapper, convertLegacyRouteRefs } from '@backstage/core-compat-api';
import SettingsIcon from '@material-ui/icons/Settings';
import { settingsRouteRef } from './plugin.esm.js';
import React from 'react';
export { userSettingsTranslationRef } from './translation.esm.js';

const userSettingsPage = PageBlueprint.makeWithOverrides({
  inputs: {
    providerSettings: createExtensionInput([coreExtensionData.reactElement], {
      singleton: true,
      optional: true
    })
  },
  factory(originalFactory, { inputs }) {
    return originalFactory({
      defaultPath: "/settings",
      routeRef: convertLegacyRouteRef(settingsRouteRef),
      loader: () => import('./components/SettingsPage/index.esm.js').then(
        (m) => compatWrapper(
          /* @__PURE__ */ React.createElement(
            m.SettingsPage,
            {
              providerSettings: inputs.providerSettings?.get(
                coreExtensionData.reactElement
              )
            }
          )
        )
      )
    });
  }
});
const settingsNavItem = NavItemBlueprint.make({
  params: {
    routeRef: convertLegacyRouteRef(settingsRouteRef),
    title: "Settings",
    icon: SettingsIcon
  }
});
var alpha = createFrontendPlugin({
  id: "user-settings",
  extensions: [userSettingsPage, settingsNavItem],
  routes: convertLegacyRouteRefs({
    root: settingsRouteRef
  })
});

export { alpha as default, settingsNavItem };
//# sourceMappingURL=alpha.esm.js.map
