{"version":3,"file":"UserSettingsStorage.esm.js","sources":["../../../src/apis/StorageApi/UserSettingsStorage.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WebStorage } from '@backstage/core-app-api';\nimport {\n  DiscoveryApi,\n  ErrorApi,\n  FetchApi,\n  IdentityApi,\n  StorageApi,\n  StorageValueSnapshot,\n} from '@backstage/core-plugin-api';\nimport { ResponseError } from '@backstage/errors';\nimport { JsonValue, Observable } from '@backstage/types';\nimport { SignalApi, SignalSubscriber } from '@backstage/plugin-signals-react';\nimport ObservableImpl from 'zen-observable';\nimport { UserSettingsSignal } from '@backstage/plugin-user-settings-common';\n\nconst JSON_HEADERS = {\n  'Content-Type': 'application/json; charset=utf-8',\n  Accept: 'application/json',\n};\n\nconst buckets = new Map<string, UserSettingsStorage>();\n\n/**\n * An implementation of the storage API, that uses the user-settings backend to\n * persist the data in the DB.\n *\n * @public\n */\nexport class UserSettingsStorage implements StorageApi {\n  private subscribers = new Set<\n    ZenObservable.SubscriptionObserver<StorageValueSnapshot<JsonValue>>\n  >();\n\n  private readonly observables = new Map<\n    string,\n    Observable<StorageValueSnapshot<JsonValue>>\n  >();\n\n  private constructor(\n    private readonly namespace: string,\n    private readonly fetchApi: FetchApi,\n    private readonly discoveryApi: DiscoveryApi,\n    private readonly errorApi: ErrorApi,\n    private readonly identityApi: IdentityApi,\n    private readonly fallback: WebStorage,\n    private readonly signalApi?: SignalApi,\n  ) {}\n\n  static create(options: {\n    fetchApi: FetchApi;\n    discoveryApi: DiscoveryApi;\n    errorApi: ErrorApi;\n    identityApi: IdentityApi;\n    signalApi?: SignalApi;\n    namespace?: string;\n  }): UserSettingsStorage {\n    return new UserSettingsStorage(\n      options.namespace ?? 'default',\n      options.fetchApi,\n      options.discoveryApi,\n      options.errorApi,\n      options.identityApi,\n      WebStorage.create({\n        namespace: options.namespace,\n        errorApi: options.errorApi,\n      }),\n      options.signalApi,\n    );\n  }\n\n  forBucket(name: string): StorageApi {\n    // use dot instead of slash separator to have nicer URLs\n    const bucketPath = `${this.namespace}.${name}`;\n\n    if (!buckets.has(bucketPath)) {\n      buckets.set(\n        bucketPath,\n        new UserSettingsStorage(\n          bucketPath,\n          this.fetchApi,\n          this.discoveryApi,\n          this.errorApi,\n          this.identityApi,\n          this.fallback,\n        ),\n      );\n    }\n\n    return buckets.get(bucketPath)!;\n  }\n\n  async remove(key: string): Promise<void> {\n    const fetchUrl = await this.getFetchUrl(key);\n\n    const response = await this.fetchApi.fetch(fetchUrl, {\n      method: 'DELETE',\n    });\n\n    if (!response.ok && response.status !== 404) {\n      throw await ResponseError.fromResponse(response);\n    }\n\n    this.notifyChanges({ key, presence: 'absent' });\n  }\n\n  async set<T extends JsonValue>(key: string, data: T): Promise<void> {\n    if (!(await this.isSignedIn())) {\n      await this.fallback.set(key, data);\n      this.notifyChanges({ key, presence: 'present', value: data });\n      return;\n    }\n\n    const fetchUrl = await this.getFetchUrl(key);\n\n    const response = await this.fetchApi.fetch(fetchUrl, {\n      method: 'PUT',\n      headers: JSON_HEADERS,\n      body: JSON.stringify({ value: data }),\n    });\n\n    if (!response.ok) {\n      throw await ResponseError.fromResponse(response);\n    }\n\n    const { value } = await response.json();\n\n    this.notifyChanges({ key, value, presence: 'present' });\n  }\n\n  observe$<T extends JsonValue>(\n    key: string,\n  ): Observable<StorageValueSnapshot<T>> {\n    if (!this.observables.has(key)) {\n      this.observables.set(\n        key,\n        new ObservableImpl<StorageValueSnapshot<JsonValue>>(subscriber => {\n          let signalSubscription: SignalSubscriber | undefined;\n          this.subscribers.add(subscriber);\n\n          const updateSnapshot = () => {\n            Promise.resolve()\n              .then(() => this.get(key))\n              .then(snapshot => subscriber.next(snapshot))\n              .catch(error => this.errorApi.post(error));\n          };\n\n          if (this.signalApi) {\n            signalSubscription = this.signalApi.subscribe(\n              `user-settings`,\n              (msg: UserSettingsSignal) => {\n                if (msg.key === key) {\n                  updateSnapshot();\n                }\n              },\n            );\n          }\n\n          updateSnapshot();\n\n          return () => {\n            if (signalSubscription) {\n              signalSubscription.unsubscribe();\n            }\n            this.subscribers.delete(subscriber);\n          };\n        }).filter(({ key: messageKey }) => messageKey === key),\n      );\n    }\n\n    return this.observables.get(key) as Observable<StorageValueSnapshot<T>>;\n  }\n\n  snapshot<T extends JsonValue>(key: string): StorageValueSnapshot<T> {\n    return { key, presence: 'unknown' };\n  }\n\n  private async get<T extends JsonValue>(\n    key: string,\n  ): Promise<StorageValueSnapshot<T>> {\n    if (!(await this.isSignedIn())) {\n      // This explicitly uses WebStorage, which we know is synchronous and doesn't return presence: unknown\n      return this.fallback.snapshot(key);\n    }\n\n    const fetchUrl = await this.getFetchUrl(key);\n    const response = await this.fetchApi.fetch(fetchUrl);\n\n    if (response.status === 404) {\n      return { key, presence: 'absent' };\n    }\n\n    if (!response.ok) {\n      throw await ResponseError.fromResponse(response);\n    }\n\n    try {\n      const { value: rawValue } = await response.json();\n      const value = JSON.parse(JSON.stringify(rawValue), (_key, val) => {\n        if (typeof val === 'object' && val !== null) {\n          Object.freeze(val);\n        }\n        return val;\n      });\n\n      return { key, presence: 'present', value };\n    } catch {\n      // If the value is not valid JSON, we return an unknown presence. This should never happen\n      return { key, presence: 'absent' };\n    }\n  }\n\n  private async getFetchUrl(key: string) {\n    const baseUrl = await this.discoveryApi.getBaseUrl('user-settings');\n    const encodedNamespace = encodeURIComponent(this.namespace);\n    const encodedKey = encodeURIComponent(key);\n    return `${baseUrl}/buckets/${encodedNamespace}/keys/${encodedKey}`;\n  }\n\n  private async notifyChanges<T extends JsonValue>(\n    snapshot: StorageValueSnapshot<T>,\n  ) {\n    for (const subscription of this.subscribers) {\n      try {\n        subscription.next(snapshot);\n      } catch {\n        // ignore\n      }\n    }\n  }\n\n  private async isSignedIn(): Promise<boolean> {\n    try {\n      const credentials = await this.identityApi.getCredentials();\n      return credentials?.token ? true : false;\n    } catch {\n      return false;\n    }\n  }\n}\n"],"names":[],"mappings":"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"}