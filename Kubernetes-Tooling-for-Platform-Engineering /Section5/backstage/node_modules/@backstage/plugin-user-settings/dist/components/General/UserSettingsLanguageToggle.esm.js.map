{"version":3,"file":"UserSettingsLanguageToggle.esm.js","sources":["../../../src/components/General/UserSettingsLanguageToggle.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useState } from 'react';\nimport {\n  useTranslationRef,\n  appLanguageApiRef,\n} from '@backstage/core-plugin-api/alpha';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { userSettingsTranslationRef } from '../../translation';\nimport { useApi } from '@backstage/core-plugin-api';\nimport useObservable from 'react-use/esm/useObservable';\nimport { Select } from '@backstage/core-components';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingBottom: 8,\n    paddingRight: 16,\n  },\n  list: {\n    width: 'initial',\n    [theme.breakpoints.down('xs')]: {\n      width: '100%',\n      padding: `0 0 12px`,\n    },\n  },\n  listItemText: {\n    paddingRight: 0,\n    paddingLeft: 0,\n  },\n  listItemSecondaryAction: {\n    position: 'relative',\n    transform: 'unset',\n    top: 'auto',\n    right: 'auto',\n    paddingLeft: 16,\n    [theme.breakpoints.down('xs')]: {\n      paddingLeft: 0,\n    },\n  },\n}));\n\n/** @public */\nexport const UserSettingsLanguageToggle = () => {\n  const classes = useStyles();\n  const languageApi = useApi(appLanguageApiRef);\n  const { t } = useTranslationRef(userSettingsTranslationRef);\n\n  const [languageObservable] = useState(() => languageApi.language$());\n  const { language: currentLanguage } = useObservable(\n    languageObservable,\n    languageApi.getLanguage(),\n  );\n\n  const { languages } = languageApi.getAvailableLanguages();\n\n  if (languages.length <= 1) {\n    return null;\n  }\n\n  const handleSetLanguage = (newLanguage: string | undefined) => {\n    languageApi.setLanguage(newLanguage);\n  };\n\n  const getLanguageDisplayName = (language: string) => {\n    try {\n      const names = new Intl.DisplayNames([language], {\n        type: 'language',\n      });\n      return names.of(language) || language;\n    } catch (err) {\n      return language;\n    }\n  };\n\n  return (\n    <ListItem\n      className={classes.list}\n      classes={{ container: classes.container }}\n    >\n      <ListItemText\n        className={classes.listItemText}\n        primary={t('languageToggle.title')}\n        secondary={t('languageToggle.description')}\n      />\n      <ListItemSecondaryAction className={classes.listItemSecondaryAction}>\n        <Select\n          label=\"\"\n          selected={currentLanguage}\n          items={languages.map(language => ({\n            label: getLanguageDisplayName(language),\n            value: language,\n          }))}\n          onChange={selectedItems => handleSetLanguage(selectedItems as string)}\n        />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n"],"names":[],"mappings":"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"}