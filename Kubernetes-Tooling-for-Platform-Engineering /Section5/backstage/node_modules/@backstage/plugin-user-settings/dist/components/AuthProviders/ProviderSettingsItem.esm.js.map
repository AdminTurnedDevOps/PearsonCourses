{"version":3,"file":"ProviderSettingsItem.esm.js","sources":["../../../src/components/AuthProviders/ProviderSettingsItem.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  ApiRef,\n  SessionApi,\n  SessionState,\n  ProfileInfoApi,\n  ProfileInfo,\n  useApi,\n  errorApiRef,\n  IconComponent,\n} from '@backstage/core-plugin-api';\nimport { ProviderSettingsAvatar } from './ProviderSettingsAvatar';\n\nconst emptyProfile: ProfileInfo = {};\n\n/** @public */\nexport const ProviderSettingsItem = (props: {\n  title: string;\n  description: string;\n  icon: IconComponent;\n  apiRef: ApiRef<ProfileInfoApi & SessionApi>;\n}) => {\n  const { title, description, icon: Icon, apiRef } = props;\n\n  const api = useApi(apiRef);\n  const errorApi = useApi(errorApiRef);\n  const [signedIn, setSignedIn] = useState(false);\n  const [profile, setProfile] = useState<ProfileInfo>(emptyProfile);\n\n  useEffect(() => {\n    let didCancel = false;\n\n    const subscription = api\n      .sessionState$()\n      .subscribe((sessionState: SessionState) => {\n        if (sessionState !== SessionState.SignedIn) {\n          setProfile(emptyProfile);\n          setSignedIn(false);\n        }\n        if (!didCancel) {\n          api\n            .getProfile({ optional: true })\n            .then((profileResponse: ProfileInfo | undefined) => {\n              if (!didCancel) {\n                if (sessionState === SessionState.SignedIn) {\n                  setSignedIn(true);\n                }\n                if (profileResponse) {\n                  setProfile(profileResponse);\n                }\n              }\n            });\n        }\n      });\n\n    return () => {\n      didCancel = true;\n      subscription.unsubscribe();\n    };\n  }, [api]);\n\n  return (\n    <ListItem>\n      <ListItemIcon>\n        <Icon />\n      </ListItemIcon>\n      <ListItemText\n        primary={title}\n        secondary={\n          <Tooltip placement=\"top\" arrow title={description}>\n            <Grid container spacing={6}>\n              <Grid item>\n                <ProviderSettingsAvatar size={48} picture={profile.picture} />\n              </Grid>\n              <Grid item xs={12} sm container>\n                <Grid item xs container direction=\"column\" spacing={2}>\n                  <Grid item xs>\n                    {profile.displayName && (\n                      <Typography\n                        variant=\"subtitle1\"\n                        color=\"textPrimary\"\n                        gutterBottom\n                      >\n                        {profile.displayName}\n                      </Typography>\n                    )}\n                    {profile.email && (\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        {profile.email}\n                      </Typography>\n                    )}\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      {description}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Tooltip>\n        }\n        secondaryTypographyProps={{ noWrap: true, style: { width: '80%' } }}\n      />\n      <ListItemSecondaryAction>\n        <Tooltip\n          placement=\"top\"\n          arrow\n          title={signedIn ? `Sign out from ${title}` : `Sign in to ${title}`}\n        >\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={() => {\n              const action = signedIn ? api.signOut() : api.signIn();\n              action.catch(error => errorApi.post(error));\n            }}\n          >\n            {signedIn ? `Sign out` : `Sign in`}\n          </Button>\n        </Tooltip>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n"],"names":[],"mappings":"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"}