import React, { useState, useEffect } from 'react';
import Button from '@material-ui/core/Button';
import Grid from '@material-ui/core/Grid';
import ListItem from '@material-ui/core/ListItem';
import ListItemIcon from '@material-ui/core/ListItemIcon';
import ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';
import ListItemText from '@material-ui/core/ListItemText';
import Tooltip from '@material-ui/core/Tooltip';
import Typography from '@material-ui/core/Typography';
import { useApi, errorApiRef, SessionState } from '@backstage/core-plugin-api';
import { ProviderSettingsAvatar } from './ProviderSettingsAvatar.esm.js';

const emptyProfile = {};
const ProviderSettingsItem = (props) => {
  const { title, description, icon: Icon, apiRef } = props;
  const api = useApi(apiRef);
  const errorApi = useApi(errorApiRef);
  const [signedIn, setSignedIn] = useState(false);
  const [profile, setProfile] = useState(emptyProfile);
  useEffect(() => {
    let didCancel = false;
    const subscription = api.sessionState$().subscribe((sessionState) => {
      if (sessionState !== SessionState.SignedIn) {
        setProfile(emptyProfile);
        setSignedIn(false);
      }
      if (!didCancel) {
        api.getProfile({ optional: true }).then((profileResponse) => {
          if (!didCancel) {
            if (sessionState === SessionState.SignedIn) {
              setSignedIn(true);
            }
            if (profileResponse) {
              setProfile(profileResponse);
            }
          }
        });
      }
    });
    return () => {
      didCancel = true;
      subscription.unsubscribe();
    };
  }, [api]);
  return /* @__PURE__ */ React.createElement(ListItem, null, /* @__PURE__ */ React.createElement(ListItemIcon, null, /* @__PURE__ */ React.createElement(Icon, null)), /* @__PURE__ */ React.createElement(
    ListItemText,
    {
      primary: title,
      secondary: /* @__PURE__ */ React.createElement(Tooltip, { placement: "top", arrow: true, title: description }, /* @__PURE__ */ React.createElement(Grid, { container: true, spacing: 6 }, /* @__PURE__ */ React.createElement(Grid, { item: true }, /* @__PURE__ */ React.createElement(ProviderSettingsAvatar, { size: 48, picture: profile.picture })), /* @__PURE__ */ React.createElement(Grid, { item: true, xs: 12, sm: true, container: true }, /* @__PURE__ */ React.createElement(Grid, { item: true, xs: true, container: true, direction: "column", spacing: 2 }, /* @__PURE__ */ React.createElement(Grid, { item: true, xs: true }, profile.displayName && /* @__PURE__ */ React.createElement(
        Typography,
        {
          variant: "subtitle1",
          color: "textPrimary",
          gutterBottom: true
        },
        profile.displayName
      ), profile.email && /* @__PURE__ */ React.createElement(Typography, { variant: "body2", color: "textSecondary" }, profile.email), /* @__PURE__ */ React.createElement(Typography, { variant: "body2", color: "textSecondary" }, description)))))),
      secondaryTypographyProps: { noWrap: true, style: { width: "80%" } }
    }
  ), /* @__PURE__ */ React.createElement(ListItemSecondaryAction, null, /* @__PURE__ */ React.createElement(
    Tooltip,
    {
      placement: "top",
      arrow: true,
      title: signedIn ? `Sign out from ${title}` : `Sign in to ${title}`
    },
    /* @__PURE__ */ React.createElement(
      Button,
      {
        variant: "outlined",
        color: "primary",
        onClick: () => {
          const action = signedIn ? api.signOut() : api.signIn();
          action.catch((error) => errorApi.post(error));
        }
      },
      signedIn ? `Sign out` : `Sign in`
    )
  )));
};

export { ProviderSettingsItem };
//# sourceMappingURL=ProviderSettingsItem.esm.js.map
