'use strict';

var backendPluginApi = require('@backstage/backend-plugin-api');
var pluginCatalogBackend = require('@backstage/plugin-catalog-backend');
var pluginEventsNode = require('@backstage/plugin-events-node');

const catalogModuleLogs = backendPluginApi.createBackendModule({
  pluginId: "catalog",
  moduleId: "logs",
  register(env) {
    env.registerInit({
      deps: {
        events: pluginEventsNode.eventsServiceRef,
        logger: backendPluginApi.coreServices.logger
      },
      async init({ events, logger }) {
        events.subscribe({
          id: "catalog",
          topics: [pluginCatalogBackend.CATALOG_ERRORS_TOPIC],
          async onEvent(params) {
            const event = params;
            const { entity, location, errors } = event.eventPayload;
            for (const error of errors) {
              logger.warn(error.message, {
                entity,
                location
              });
            }
          }
        });
      }
    });
  }
});

exports.catalogModuleLogs = catalogModuleLogs;
//# sourceMappingURL=module.cjs.js.map
