{"version":3,"file":"module.cjs.js","sources":["../src/module.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  coreServices,\n  createBackendModule,\n} from '@backstage/backend-plugin-api';\nimport { CATALOG_ERRORS_TOPIC } from '@backstage/plugin-catalog-backend';\nimport { eventsServiceRef, EventParams } from '@backstage/plugin-events-node';\n\ninterface EventsPayload {\n  entity: string;\n  location?: string;\n  errors: Error[];\n}\n\ninterface EventsParamsWithPayload extends EventParams {\n  eventPayload: EventsPayload;\n}\n\n/**\n * A catalog module that logs catalog errors using the logger service.\n *\n * @public\n */\nexport const catalogModuleLogs = createBackendModule({\n  pluginId: 'catalog',\n  moduleId: 'logs',\n  register(env) {\n    env.registerInit({\n      deps: {\n        events: eventsServiceRef,\n        logger: coreServices.logger,\n      },\n      async init({ events, logger }) {\n        events.subscribe({\n          id: 'catalog',\n          topics: [CATALOG_ERRORS_TOPIC],\n          async onEvent(params: EventParams): Promise<void> {\n            const event = params as EventsParamsWithPayload;\n            const { entity, location, errors } = event.eventPayload;\n            for (const error of errors) {\n              logger.warn(error.message, {\n                entity,\n                location,\n              });\n            }\n          },\n        });\n      },\n    });\n  },\n});\n"],"names":["createBackendModule","eventsServiceRef","coreServices","CATALOG_ERRORS_TOPIC"],"mappings":";;;;;;AAsCO,MAAM,oBAAoBA,oCAAoB,CAAA;AAAA,EACnD,QAAU,EAAA,SAAA;AAAA,EACV,QAAU,EAAA,MAAA;AAAA,EACV,SAAS,GAAK,EAAA;AACZ,IAAA,GAAA,CAAI,YAAa,CAAA;AAAA,MACf,IAAM,EAAA;AAAA,QACJ,MAAQ,EAAAC,iCAAA;AAAA,QACR,QAAQC,6BAAa,CAAA;AAAA,OACvB;AAAA,MACA,MAAM,IAAA,CAAK,EAAE,MAAA,EAAQ,QAAU,EAAA;AAC7B,QAAA,MAAA,CAAO,SAAU,CAAA;AAAA,UACf,EAAI,EAAA,SAAA;AAAA,UACJ,MAAA,EAAQ,CAACC,yCAAoB,CAAA;AAAA,UAC7B,MAAM,QAAQ,MAAoC,EAAA;AAChD,YAAA,MAAM,KAAQ,GAAA,MAAA;AACd,YAAA,MAAM,EAAE,MAAA,EAAQ,QAAU,EAAA,MAAA,KAAW,KAAM,CAAA,YAAA;AAC3C,YAAA,KAAA,MAAW,SAAS,MAAQ,EAAA;AAC1B,cAAO,MAAA,CAAA,IAAA,CAAK,MAAM,OAAS,EAAA;AAAA,gBACzB,MAAA;AAAA,gBACA;AAAA,eACD,CAAA;AAAA;AACH;AACF,SACD,CAAA;AAAA;AACH,KACD,CAAA;AAAA;AAEL,CAAC;;;;"}