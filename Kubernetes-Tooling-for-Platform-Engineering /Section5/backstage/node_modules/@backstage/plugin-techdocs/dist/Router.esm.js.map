{"version":3,"file":"Router.esm.js","sources":["../src/Router.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { PropsWithChildren } from 'react';\nimport { Route, Routes, useRoutes } from 'react-router-dom';\n\nimport { Entity } from '@backstage/catalog-model';\nimport { EntityPageDocs } from './EntityPageDocs';\nimport { TechDocsIndexPage } from './home/components/TechDocsIndexPage';\nimport { TechDocsReaderPage } from './reader/components/TechDocsReaderPage';\nimport {\n  useEntity,\n  MissingAnnotationEmptyState,\n} from '@backstage/plugin-catalog-react';\nimport {\n  TECHDOCS_ANNOTATION,\n  TECHDOCS_EXTERNAL_ANNOTATION,\n} from '@backstage/plugin-techdocs-common';\n\n/**\n * Helper that takes in entity and returns true/false if TechDocs is available for the entity\n *\n * @public\n */\nexport const isTechDocsAvailable = (entity: Entity) =>\n  Boolean(entity?.metadata?.annotations?.[TECHDOCS_ANNOTATION]) ||\n  Boolean(entity?.metadata?.annotations?.[TECHDOCS_EXTERNAL_ANNOTATION]);\n\n/**\n * Responsible for registering routes for TechDocs, TechDocs Homepage and separate TechDocs page\n *\n * @public\n */\nexport const Router = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<TechDocsIndexPage />} />\n      <Route\n        path=\"/:namespace/:kind/:name/*\"\n        element={<TechDocsReaderPage />}\n      />\n    </Routes>\n  );\n};\n\nexport const EmbeddedDocsRouter = (\n  props: PropsWithChildren<{ emptyState?: React.ReactElement }>,\n) => {\n  const { children, emptyState } = props;\n  const { entity } = useEntity();\n\n  // Using objects instead of <Route> elements, otherwise \"outlet\" will be null on sub-pages and add-ons won't render\n  const element = useRoutes([\n    {\n      path: '/*',\n      element: <EntityPageDocs entity={entity} />,\n      children: [\n        {\n          path: '*',\n          element: children,\n        },\n      ],\n    },\n  ]);\n\n  const projectId =\n    entity.metadata.annotations?.[TECHDOCS_ANNOTATION] ||\n    entity.metadata.annotations?.[TECHDOCS_EXTERNAL_ANNOTATION];\n\n  if (!projectId) {\n    return (\n      emptyState ?? (\n        <MissingAnnotationEmptyState annotation={[TECHDOCS_ANNOTATION]} />\n      )\n    );\n  }\n\n  return element;\n};\n\n/**\n * Responsible for registering route to view docs on Entity page\n *\n * @public\n */\nexport const LegacyEmbeddedDocsRouter = (props: PropsWithChildren<{}>) => {\n  // Wrap the Router to avoid exposing the emptyState prop in the non-alpha\n  // public API and make it easier for us to change later.\n  return <EmbeddedDocsRouter children={props.children} />;\n};\n"],"names":[],"mappings":";;;;;;;;AAqCO,MAAM,mBAAsB,GAAA,CAAC,MAClC,KAAA,OAAA,CAAQ,QAAQ,QAAU,EAAA,WAAA,GAAc,mBAAmB,CAAC,KAC5D,OAAQ,CAAA,MAAA,EAAQ,QAAU,EAAA,WAAA,GAAc,4BAA4B,CAAC;AAOhE,MAAM,SAAS,MAAM;AAC1B,EACE,uBAAA,KAAA,CAAA,aAAA,CAAC,MACC,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,KAAM,EAAA,EAAA,IAAA,EAAK,KAAI,OAAS,kBAAA,KAAA,CAAA,aAAA,CAAC,iBAAkB,EAAA,IAAA,CAAA,EAAI,CAChD,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,KAAA;AAAA,IAAA;AAAA,MACC,IAAK,EAAA,2BAAA;AAAA,MACL,OAAA,sCAAU,kBAAmB,EAAA,IAAA;AAAA;AAAA,GAEjC,CAAA;AAEJ;AAEa,MAAA,kBAAA,GAAqB,CAChC,KACG,KAAA;AACH,EAAM,MAAA,EAAE,QAAU,EAAA,UAAA,EAAe,GAAA,KAAA;AACjC,EAAM,MAAA,EAAE,MAAO,EAAA,GAAI,SAAU,EAAA;AAG7B,EAAA,MAAM,UAAU,SAAU,CAAA;AAAA,IACxB;AAAA,MACE,IAAM,EAAA,IAAA;AAAA,MACN,OAAA,kBAAU,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA,EAAe,MAAgB,EAAA,CAAA;AAAA,MACzC,QAAU,EAAA;AAAA,QACR;AAAA,UACE,IAAM,EAAA,GAAA;AAAA,UACN,OAAS,EAAA;AAAA;AACX;AACF;AACF,GACD,CAAA;AAED,EAAM,MAAA,SAAA,GACJ,OAAO,QAAS,CAAA,WAAA,GAAc,mBAAmB,CACjD,IAAA,MAAA,CAAO,QAAS,CAAA,WAAA,GAAc,4BAA4B,CAAA;AAE5D,EAAA,IAAI,CAAC,SAAW,EAAA;AACd,IAAA,OACE,8BACG,KAAA,CAAA,aAAA,CAAA,2BAAA,EAAA,EAA4B,UAAY,EAAA,CAAC,mBAAmB,CAAG,EAAA,CAAA;AAAA;AAKtE,EAAO,OAAA,OAAA;AACT;AAOa,MAAA,wBAAA,GAA2B,CAAC,KAAiC,KAAA;AAGxE,EAAA,uBAAQ,KAAA,CAAA,aAAA,CAAA,kBAAA,EAAA,EAAmB,QAAU,EAAA,KAAA,CAAM,QAAU,EAAA,CAAA;AACvD;;;;"}