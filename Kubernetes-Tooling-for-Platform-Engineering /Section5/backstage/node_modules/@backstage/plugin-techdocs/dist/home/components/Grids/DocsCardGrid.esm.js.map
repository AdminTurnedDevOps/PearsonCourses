{"version":3,"file":"DocsCardGrid.esm.js","sources":["../../../../src/home/components/Grids/DocsCardGrid.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { rootDocsRouteRef } from '../../../routes';\nimport { toLowerMaybe } from '../../../helpers';\nimport { Entity } from '@backstage/catalog-model';\nimport { useApi, useRouteRef, configApiRef } from '@backstage/core-plugin-api';\nimport {\n  LinkButton,\n  ItemCardGrid,\n  ItemCardHeader,\n} from '@backstage/core-components';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport React from 'react';\n\n/**\n * Props for {@link DocsCardGrid}\n *\n * @public\n */\nexport type DocsCardGridProps = {\n  entities: Entity[] | undefined;\n};\n\n/**\n * Component which accepts a list of entities and renders a item card for each entity\n *\n * @public\n */\nexport const DocsCardGrid = (props: DocsCardGridProps) => {\n  const { entities } = props;\n  const getRouteToReaderPageFor = useRouteRef(rootDocsRouteRef);\n  const config = useApi(configApiRef);\n  if (!entities) return null;\n  return (\n    <ItemCardGrid data-testid=\"docs-explore\">\n      {!entities?.length\n        ? null\n        : entities.map((entity, index: number) => (\n            <Card key={index}>\n              <CardMedia>\n                <ItemCardHeader\n                  title={entity.metadata.title ?? entity.metadata.name}\n                />\n              </CardMedia>\n              <CardContent>{entity.metadata.description}</CardContent>\n              <CardActions>\n                <LinkButton\n                  to={getRouteToReaderPageFor({\n                    namespace: toLowerMaybe(\n                      entity.metadata.namespace ?? 'default',\n                      config,\n                    ),\n                    kind: toLowerMaybe(entity.kind, config),\n                    name: toLowerMaybe(entity.metadata.name, config),\n                  })}\n                  color=\"primary\"\n                  data-testid=\"read_docs\"\n                >\n                  Read Docs\n                </LinkButton>\n              </CardActions>\n            </Card>\n          ))}\n    </ItemCardGrid>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;;AA6Ca,MAAA,YAAA,GAAe,CAAC,KAA6B,KAAA;AACxD,EAAM,MAAA,EAAE,UAAa,GAAA,KAAA;AACrB,EAAM,MAAA,uBAAA,GAA0B,YAAY,gBAAgB,CAAA;AAC5D,EAAM,MAAA,MAAA,GAAS,OAAO,YAAY,CAAA;AAClC,EAAI,IAAA,CAAC,UAAiB,OAAA,IAAA;AACtB,EAAA,2CACG,YAAa,EAAA,EAAA,aAAA,EAAY,kBACvB,CAAC,QAAA,EAAU,SACR,IACA,GAAA,QAAA,CAAS,GAAI,CAAA,CAAC,QAAQ,KACpB,qBAAA,KAAA,CAAA,aAAA,CAAC,QAAK,GAAK,EAAA,KAAA,EAAA,sCACR,SACC,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,cAAA;AAAA,IAAA;AAAA,MACC,KAAO,EAAA,MAAA,CAAO,QAAS,CAAA,KAAA,IAAS,OAAO,QAAS,CAAA;AAAA;AAAA,GAEpD,mBACC,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA,IAAA,EAAa,OAAO,QAAS,CAAA,WAAY,CAC1C,kBAAA,KAAA,CAAA,aAAA,CAAC,WACC,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,UAAA;AAAA,IAAA;AAAA,MACC,IAAI,uBAAwB,CAAA;AAAA,QAC1B,SAAW,EAAA,YAAA;AAAA,UACT,MAAA,CAAO,SAAS,SAAa,IAAA,SAAA;AAAA,UAC7B;AAAA,SACF;AAAA,QACA,IAAM,EAAA,YAAA,CAAa,MAAO,CAAA,IAAA,EAAM,MAAM,CAAA;AAAA,QACtC,IAAM,EAAA,YAAA,CAAa,MAAO,CAAA,QAAA,CAAS,MAAM,MAAM;AAAA,OAChD,CAAA;AAAA,MACD,KAAM,EAAA,SAAA;AAAA,MACN,aAAY,EAAA;AAAA,KAAA;AAAA,IACb;AAAA,GAGH,CACF,CACD,CACP,CAAA;AAEJ;;;;"}