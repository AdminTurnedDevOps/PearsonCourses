{"version":3,"file":"columns.esm.js","sources":["../../../../src/home/components/Tables/columns.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { Link, SubvalueCell, TableColumn } from '@backstage/core-components';\nimport { EntityRefLinks } from '@backstage/plugin-catalog-react';\nimport { Entity } from '@backstage/catalog-model';\nimport { DocsTableRow } from './types';\n\nfunction customTitle(entity: Entity): string {\n  return entity.metadata.title || entity.metadata.name;\n}\n\n/**\n * Not directly exported, but through DocsTable.columns and EntityListDocsTable.columns\n *\n * @public\n */\nexport const columnFactories = {\n  createTitleColumn(options?: { hidden?: boolean }): TableColumn<DocsTableRow> {\n    const nameCol = columnFactories.createNameColumn();\n    return {\n      ...nameCol,\n      field: 'entity.metadata.title',\n      hidden: options?.hidden,\n    };\n  },\n  createNameColumn(): TableColumn<DocsTableRow> {\n    return {\n      title: 'Document',\n      field: 'entity.metadata.name',\n      highlight: true,\n      searchable: true,\n      defaultSort: 'asc',\n      customSort: (row1, row2) => {\n        const title1 = customTitle(row1.entity).toLocaleLowerCase();\n        const title2 = customTitle(row2.entity).toLocaleLowerCase();\n        return title1.localeCompare(title2);\n      },\n      render: (row: DocsTableRow) => (\n        <SubvalueCell\n          value={\n            <Link to={row.resolved.docsUrl}>{customTitle(row.entity)}</Link>\n          }\n          subvalue={row.entity.metadata.description}\n        />\n      ),\n    };\n  },\n  createOwnerColumn(): TableColumn<DocsTableRow> {\n    return {\n      title: 'Owner',\n      field: 'resolved.ownedByRelationsTitle',\n      render: ({ resolved }) => (\n        <EntityRefLinks\n          entityRefs={resolved.ownedByRelations}\n          defaultKind=\"group\"\n        />\n      ),\n    };\n  },\n  createKindColumn(): TableColumn<DocsTableRow> {\n    return {\n      title: 'Kind',\n      field: 'entity.kind',\n    };\n  },\n  createTypeColumn(): TableColumn<DocsTableRow> {\n    return {\n      title: 'Type',\n      field: 'entity.spec.type',\n    };\n  },\n};\n\nexport const defaultColumns: TableColumn<DocsTableRow>[] = [\n  columnFactories.createTitleColumn({ hidden: true }),\n  columnFactories.createNameColumn(),\n  columnFactories.createOwnerColumn(),\n  columnFactories.createKindColumn(),\n  columnFactories.createTypeColumn(),\n];\n"],"names":[],"mappings":";;;;AAsBA,SAAS,YAAY,MAAwB,EAAA;AAC3C,EAAA,OAAO,MAAO,CAAA,QAAA,CAAS,KAAS,IAAA,MAAA,CAAO,QAAS,CAAA,IAAA;AAClD;AAOO,MAAM,eAAkB,GAAA;AAAA,EAC7B,kBAAkB,OAA2D,EAAA;AAC3E,IAAM,MAAA,OAAA,GAAU,gBAAgB,gBAAiB,EAAA;AACjD,IAAO,OAAA;AAAA,MACL,GAAG,OAAA;AAAA,MACH,KAAO,EAAA,uBAAA;AAAA,MACP,QAAQ,OAAS,EAAA;AAAA,KACnB;AAAA,GACF;AAAA,EACA,gBAA8C,GAAA;AAC5C,IAAO,OAAA;AAAA,MACL,KAAO,EAAA,UAAA;AAAA,MACP,KAAO,EAAA,sBAAA;AAAA,MACP,SAAW,EAAA,IAAA;AAAA,MACX,UAAY,EAAA,IAAA;AAAA,MACZ,WAAa,EAAA,KAAA;AAAA,MACb,UAAA,EAAY,CAAC,IAAA,EAAM,IAAS,KAAA;AAC1B,QAAA,MAAM,MAAS,GAAA,WAAA,CAAY,IAAK,CAAA,MAAM,EAAE,iBAAkB,EAAA;AAC1D,QAAA,MAAM,MAAS,GAAA,WAAA,CAAY,IAAK,CAAA,MAAM,EAAE,iBAAkB,EAAA;AAC1D,QAAO,OAAA,MAAA,CAAO,cAAc,MAAM,CAAA;AAAA,OACpC;AAAA,MACA,MAAA,EAAQ,CAAC,GACP,qBAAA,KAAA,CAAA,aAAA;AAAA,QAAC,YAAA;AAAA,QAAA;AAAA,UACC,KAAA,kBACG,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAK,EAAI,EAAA,GAAA,CAAI,SAAS,OAAU,EAAA,EAAA,WAAA,CAAY,GAAI,CAAA,MAAM,CAAE,CAAA;AAAA,UAE3D,QAAA,EAAU,GAAI,CAAA,MAAA,CAAO,QAAS,CAAA;AAAA;AAAA;AAChC,KAEJ;AAAA,GACF;AAAA,EACA,iBAA+C,GAAA;AAC7C,IAAO,OAAA;AAAA,MACL,KAAO,EAAA,OAAA;AAAA,MACP,KAAO,EAAA,gCAAA;AAAA,MACP,MAAQ,EAAA,CAAC,EAAE,QAAA,EACT,qBAAA,KAAA,CAAA,aAAA;AAAA,QAAC,cAAA;AAAA,QAAA;AAAA,UACC,YAAY,QAAS,CAAA,gBAAA;AAAA,UACrB,WAAY,EAAA;AAAA;AAAA;AACd,KAEJ;AAAA,GACF;AAAA,EACA,gBAA8C,GAAA;AAC5C,IAAO,OAAA;AAAA,MACL,KAAO,EAAA,MAAA;AAAA,MACP,KAAO,EAAA;AAAA,KACT;AAAA,GACF;AAAA,EACA,gBAA8C,GAAA;AAC5C,IAAO,OAAA;AAAA,MACL,KAAO,EAAA,MAAA;AAAA,MACP,KAAO,EAAA;AAAA,KACT;AAAA;AAEJ;AAEO,MAAM,cAA8C,GAAA;AAAA,EACzD,eAAgB,CAAA,iBAAA,CAAkB,EAAE,MAAA,EAAQ,MAAM,CAAA;AAAA,EAClD,gBAAgB,gBAAiB,EAAA;AAAA,EACjC,gBAAgB,iBAAkB,EAAA;AAAA,EAClC,gBAAgB,gBAAiB,EAAA;AAAA,EACjC,gBAAgB,gBAAiB;AACnC;;;;"}