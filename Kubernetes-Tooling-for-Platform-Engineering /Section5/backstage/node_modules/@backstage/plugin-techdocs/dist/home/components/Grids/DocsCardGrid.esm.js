import { rootDocsRouteRef } from '../../../routes.esm.js';
import { toLowerMaybe } from '../../../helpers.esm.js';
import { useRouteRef, useApi, configApiRef } from '@backstage/core-plugin-api';
import { ItemCardGrid, ItemCardHeader, LinkButton } from '@backstage/core-components';
import Card from '@material-ui/core/Card';
import CardActions from '@material-ui/core/CardActions';
import CardContent from '@material-ui/core/CardContent';
import CardMedia from '@material-ui/core/CardMedia';
import React from 'react';

const DocsCardGrid = (props) => {
  const { entities } = props;
  const getRouteToReaderPageFor = useRouteRef(rootDocsRouteRef);
  const config = useApi(configApiRef);
  if (!entities) return null;
  return /* @__PURE__ */ React.createElement(ItemCardGrid, { "data-testid": "docs-explore" }, !entities?.length ? null : entities.map((entity, index) => /* @__PURE__ */ React.createElement(Card, { key: index }, /* @__PURE__ */ React.createElement(CardMedia, null, /* @__PURE__ */ React.createElement(
    ItemCardHeader,
    {
      title: entity.metadata.title ?? entity.metadata.name
    }
  )), /* @__PURE__ */ React.createElement(CardContent, null, entity.metadata.description), /* @__PURE__ */ React.createElement(CardActions, null, /* @__PURE__ */ React.createElement(
    LinkButton,
    {
      to: getRouteToReaderPageFor({
        namespace: toLowerMaybe(
          entity.metadata.namespace ?? "default",
          config
        ),
        kind: toLowerMaybe(entity.kind, config),
        name: toLowerMaybe(entity.metadata.name, config)
      }),
      color: "primary",
      "data-testid": "read_docs"
    },
    "Read Docs"
  )))));
};

export { DocsCardGrid };
//# sourceMappingURL=DocsCardGrid.esm.js.map
