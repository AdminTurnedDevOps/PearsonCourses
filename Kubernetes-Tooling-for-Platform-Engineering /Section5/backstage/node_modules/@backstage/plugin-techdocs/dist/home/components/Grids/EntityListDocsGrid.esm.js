import { DocsCardGrid } from './DocsCardGrid.esm.js';
import { WarningPanel, CodeSnippet, Progress, Link, Content, ContentHeader } from '@backstage/core-components';
import { useEntityList, useEntityOwnership } from '@backstage/plugin-catalog-react';
import Typography from '@material-ui/core/Typography';
import React from 'react';

const allEntitiesGroup = {
  title: "All Documentation",
  filterPredicate: () => true
};
const EntityListDocsGridGroup = (props) => {
  const { entities, group } = props;
  const { loading: loadingOwnership, isOwnedEntity } = useEntityOwnership();
  const shownEntities = entities.filter((entity) => {
    if (group.filterPredicate === "ownedByUser") {
      if (loadingOwnership) {
        return false;
      }
      return isOwnedEntity(entity);
    }
    return typeof group.filterPredicate === "function" && group.filterPredicate(entity);
  });
  const titleComponent = (() => {
    return typeof group.title === "string" ? /* @__PURE__ */ React.createElement(ContentHeader, { title: group.title }) : group.title;
  })();
  if (shownEntities.length === 0) {
    return null;
  }
  return /* @__PURE__ */ React.createElement(Content, null, titleComponent, /* @__PURE__ */ React.createElement(DocsCardGrid, { entities: shownEntities }));
};
const EntityListDocsGrid = (props) => {
  const { loading, error, entities } = useEntityList();
  if (error) {
    return /* @__PURE__ */ React.createElement(
      WarningPanel,
      {
        severity: "error",
        title: "Could not load available documentation."
      },
      /* @__PURE__ */ React.createElement(CodeSnippet, { language: "text", text: error.toString() })
    );
  }
  if (loading) {
    return /* @__PURE__ */ React.createElement(Progress, null);
  }
  if (entities.length === 0) {
    return /* @__PURE__ */ React.createElement("div", { "data-testid": "doc-not-found" }, /* @__PURE__ */ React.createElement(Typography, { variant: "body2" }, "No documentation found that match your filter. Learn more about", " ", /* @__PURE__ */ React.createElement(Link, { to: "https://backstage.io/docs/features/techdocs/creating-and-publishing" }, "publishing documentation"), "."));
  }
  entities.sort(
    (a, b) => (a.metadata.title ?? a.metadata.name).localeCompare(
      b.metadata.title ?? b.metadata.name
    )
  );
  return /* @__PURE__ */ React.createElement(Content, null, (props.groups || [allEntitiesGroup]).map((group, index) => /* @__PURE__ */ React.createElement(
    EntityListDocsGridGroup,
    {
      entities,
      group,
      key: `${group.title}-${index}`
    }
  )));
};

export { EntityListDocsGrid };
//# sourceMappingURL=EntityListDocsGrid.esm.js.map
