{"version":3,"file":"addGitFeedbackLink.esm.js","sources":["../../../src/reader/transformers/addGitFeedbackLink.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Transformer } from './transformer';\nimport {\n  replaceGithubUrlType,\n  ScmIntegrationRegistry,\n} from '@backstage/integration';\nimport FeedbackOutlinedIcon from '@material-ui/icons/FeedbackOutlined';\nimport React from 'react';\nimport parseGitUrl from 'git-url-parse';\nimport { renderReactElement } from './renderReactElement';\n\n// requires repo\nexport const addGitFeedbackLink = (\n  scmIntegrationsApi: ScmIntegrationRegistry,\n): Transformer => {\n  return dom => {\n    // attempting to use selectors that are more likely to be static as MkDocs updates over time\n    const sourceAnchor = dom.querySelector(\n      '[title=\"Edit this page\"]',\n    ) as HTMLAnchorElement;\n\n    // don't show if edit link not available in raw page\n    if (!sourceAnchor || !sourceAnchor.href) {\n      return dom;\n    }\n\n    const sourceURL = new URL(sourceAnchor.href);\n    const integration = scmIntegrationsApi.byUrl(sourceURL);\n\n    // don't show if can't identify edit link hostname as a gitlab/github hosting\n    if (integration?.type !== 'github' && integration?.type !== 'gitlab') {\n      return dom;\n    }\n\n    // topmost h1 only contains title for whole page\n    const title =\n      (dom.querySelector('article>h1') as HTMLElement)?.childNodes[0]\n        .textContent || '';\n    const issueTitle = encodeURIComponent(`Documentation Feedback: ${title}`);\n    const issueDesc = encodeURIComponent(\n      `Page source:\\n${sourceAnchor.href}\\n\\nFeedback:`,\n    );\n\n    // Convert GitHub edit url to blob type so it can be parsed by git-url-parse correctly\n    const gitUrl =\n      integration?.type === 'github'\n        ? replaceGithubUrlType(sourceURL.href, 'blob')\n        : sourceURL.href;\n    const gitInfo = parseGitUrl(gitUrl);\n    const repoPath = `/${gitInfo.organization}/${gitInfo.name}`;\n\n    const feedbackLink = sourceAnchor.cloneNode() as HTMLAnchorElement;\n    switch (integration?.type) {\n      case 'gitlab':\n        feedbackLink.href = `${sourceURL.origin}${repoPath}/issues/new?issue[title]=${issueTitle}&issue[description]=${issueDesc}`;\n        break;\n      case 'github':\n        feedbackLink.href = `${sourceURL.origin}${repoPath}/issues/new?title=${issueTitle}&body=${issueDesc}`;\n        break;\n      default:\n        return dom;\n    }\n    renderReactElement(React.createElement(FeedbackOutlinedIcon), feedbackLink);\n    feedbackLink.style.paddingLeft = '5px';\n    feedbackLink.title = 'Leave feedback for this page';\n    feedbackLink.id = 'git-feedback-link';\n    sourceAnchor?.insertAdjacentElement('beforebegin', feedbackLink);\n    return dom;\n  };\n};\n"],"names":[],"mappings":";;;;;;AA2Ba,MAAA,kBAAA,GAAqB,CAChC,kBACgB,KAAA;AAChB,EAAA,OAAO,CAAO,GAAA,KAAA;AAEZ,IAAA,MAAM,eAAe,GAAI,CAAA,aAAA;AAAA,MACvB;AAAA,KACF;AAGA,IAAA,IAAI,CAAC,YAAA,IAAgB,CAAC,YAAA,CAAa,IAAM,EAAA;AACvC,MAAO,OAAA,GAAA;AAAA;AAGT,IAAA,MAAM,SAAY,GAAA,IAAI,GAAI,CAAA,YAAA,CAAa,IAAI,CAAA;AAC3C,IAAM,MAAA,WAAA,GAAc,kBAAmB,CAAA,KAAA,CAAM,SAAS,CAAA;AAGtD,IAAA,IAAI,WAAa,EAAA,IAAA,KAAS,QAAY,IAAA,WAAA,EAAa,SAAS,QAAU,EAAA;AACpE,MAAO,OAAA,GAAA;AAAA;AAIT,IAAM,MAAA,KAAA,GACH,IAAI,aAAc,CAAA,YAAY,GAAmB,UAAW,CAAA,CAAC,EAC3D,WAAe,IAAA,EAAA;AACpB,IAAA,MAAM,UAAa,GAAA,kBAAA,CAAmB,CAA2B,wBAAA,EAAA,KAAK,CAAE,CAAA,CAAA;AACxE,IAAA,MAAM,SAAY,GAAA,kBAAA;AAAA,MAChB,CAAA;AAAA,EAAiB,aAAa,IAAI;;AAAA,SAAA;AAAA,KACpC;AAGA,IAAM,MAAA,MAAA,GACJ,aAAa,IAAS,KAAA,QAAA,GAClB,qBAAqB,SAAU,CAAA,IAAA,EAAM,MAAM,CAAA,GAC3C,SAAU,CAAA,IAAA;AAChB,IAAM,MAAA,OAAA,GAAU,YAAY,MAAM,CAAA;AAClC,IAAA,MAAM,WAAW,CAAI,CAAA,EAAA,OAAA,CAAQ,YAAY,CAAA,CAAA,EAAI,QAAQ,IAAI,CAAA,CAAA;AAEzD,IAAM,MAAA,YAAA,GAAe,aAAa,SAAU,EAAA;AAC5C,IAAA,QAAQ,aAAa,IAAM;AAAA,MACzB,KAAK,QAAA;AACH,QAAa,YAAA,CAAA,IAAA,GAAO,GAAG,SAAU,CAAA,MAAM,GAAG,QAAQ,CAAA,yBAAA,EAA4B,UAAU,CAAA,oBAAA,EAAuB,SAAS,CAAA,CAAA;AACxH,QAAA;AAAA,MACF,KAAK,QAAA;AACH,QAAa,YAAA,CAAA,IAAA,GAAO,GAAG,SAAU,CAAA,MAAM,GAAG,QAAQ,CAAA,kBAAA,EAAqB,UAAU,CAAA,MAAA,EAAS,SAAS,CAAA,CAAA;AACnG,QAAA;AAAA,MACF;AACE,QAAO,OAAA,GAAA;AAAA;AAEX,IAAA,kBAAA,CAAmB,KAAM,CAAA,aAAA,CAAc,oBAAoB,CAAA,EAAG,YAAY,CAAA;AAC1E,IAAA,YAAA,CAAa,MAAM,WAAc,GAAA,KAAA;AACjC,IAAA,YAAA,CAAa,KAAQ,GAAA,8BAAA;AACrB,IAAA,YAAA,CAAa,EAAK,GAAA,mBAAA;AAClB,IAAc,YAAA,EAAA,qBAAA,CAAsB,eAAe,YAAY,CAAA;AAC/D,IAAO,OAAA,GAAA;AAAA,GACT;AACF;;;;"}