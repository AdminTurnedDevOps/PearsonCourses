{"version":3,"file":"TechDocsStateIndicator.esm.js","sources":["../../../src/reader/components/TechDocsStateIndicator.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\n\nimport { TechDocsBuildLogs } from './TechDocsBuildLogs';\nimport { TechDocsNotFound } from './TechDocsNotFound';\nimport { useTechDocsReader } from './TechDocsReaderProvider';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginBottom: theme.spacing(2),\n  },\n  message: {\n    // `word-break: break-word` is deprecated, but gives legacy support to browsers not supporting `overflow-wrap` yet\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/word-break\n    wordBreak: 'break-word',\n    overflowWrap: 'anywhere',\n  },\n}));\n\nexport const TechDocsStateIndicator = () => {\n  let StateAlert: JSX.Element | null = null;\n  const classes = useStyles();\n\n  const {\n    state,\n    contentReload,\n    contentErrorMessage,\n    syncErrorMessage,\n    buildLog,\n  } = useTechDocsReader();\n\n  if (state === 'INITIAL_BUILD') {\n    StateAlert = (\n      <Alert\n        classes={{ root: classes.root }}\n        variant=\"outlined\"\n        severity=\"info\"\n        icon={<CircularProgress size=\"24px\" />}\n        action={<TechDocsBuildLogs buildLog={buildLog} />}\n      >\n        Documentation is accessed for the first time and is being prepared. The\n        subsequent loads are much faster.\n      </Alert>\n    );\n  }\n\n  if (state === 'CONTENT_STALE_REFRESHING') {\n    StateAlert = (\n      <Alert\n        variant=\"outlined\"\n        severity=\"info\"\n        icon={<CircularProgress size=\"24px\" />}\n        action={<TechDocsBuildLogs buildLog={buildLog} />}\n        classes={{ root: classes.root }}\n      >\n        A newer version of this documentation is being prepared and will be\n        available shortly.\n      </Alert>\n    );\n  }\n\n  if (state === 'CONTENT_STALE_READY') {\n    StateAlert = (\n      <Alert\n        variant=\"outlined\"\n        severity=\"success\"\n        action={\n          <Button color=\"inherit\" onClick={() => contentReload()}>\n            Refresh\n          </Button>\n        }\n        classes={{ root: classes.root }}\n      >\n        A newer version of this documentation is now available, please refresh\n        to view.\n      </Alert>\n    );\n  }\n\n  if (state === 'CONTENT_STALE_ERROR') {\n    StateAlert = (\n      <Alert\n        variant=\"outlined\"\n        severity=\"error\"\n        action={<TechDocsBuildLogs buildLog={buildLog} />}\n        classes={{ root: classes.root, message: classes.message }}\n      >\n        Building a newer version of this documentation failed.{' '}\n        {syncErrorMessage}\n      </Alert>\n    );\n  }\n\n  if (state === 'CONTENT_NOT_FOUND') {\n    StateAlert = (\n      <>\n        {syncErrorMessage && (\n          <Alert\n            variant=\"outlined\"\n            severity=\"error\"\n            action={<TechDocsBuildLogs buildLog={buildLog} />}\n            classes={{ root: classes.root, message: classes.message }}\n          >\n            Building a newer version of this documentation failed.{' '}\n            {syncErrorMessage}\n          </Alert>\n        )}\n        <TechDocsNotFound errorMessage={contentErrorMessage} />\n      </>\n    );\n  }\n\n  return StateAlert;\n};\n"],"names":[],"mappings":"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"}