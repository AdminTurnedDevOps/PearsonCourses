const headings = ["h1", "h2", "h3", "h4", "h5", "h6"];
const relativeLengthUnit = /(em)|(rem)/gi;
const cssVariable = /var\(|\)/gi;
var typeset = ({ theme }) => `
/*==================  Typeset  ==================*/

.md-typeset {
  font-size: var(--md-typeset-font-size);
}

${headings.reduce((style, heading) => {
  const htmlFontSize = theme.typography.htmlFontSize ?? 16;
  const styles = theme.typography[heading];
  const { lineHeight, fontFamily, fontWeight, fontSize } = styles;
  const calculate = (value) => {
    if (typeof value === "number") {
      return calculate(`${value / htmlFontSize * 0.6}rem`);
    } else if (typeof value === "string") {
      if (value.match(cssVariable)) {
        const resolvedValue = window.getComputedStyle(document.body).getPropertyValue(value.replaceAll(cssVariable, ""));
        if (resolvedValue !== "") {
          return calculate(resolvedValue);
        }
      } else if (value.match(relativeLengthUnit)) {
        const factor = value.replace(relativeLengthUnit, "");
        return `calc(${factor} * var(--md-typeset-font-size))`;
      }
    }
    return value;
  };
  return style.concat(`
    .md-typeset ${heading} {
      color: var(--md-default-fg-color);
      line-height: ${lineHeight};
      font-family: ${fontFamily};
      font-weight: ${fontWeight};
      font-size: ${calculate(fontSize)};
    }
  `);
}, "")}

.md-typeset .md-content__button {
  color: var(--md-default-fg-color);
}

.md-typeset hr {
  border-bottom: 0.05rem dotted ${theme.palette.divider};
}

.md-typeset details {
  font-size: var(--md-typeset-font-size) !important;
}
.md-typeset details summary {
  padding-left: 2.5rem !important;
}
.md-typeset details summary:before,
.md-typeset details summary:after {
  top: 50% !important;
  width: 20px !important;
  height: 20px !important;
  transform: rotate(0deg) translateY(-50%) !important;
}
.md-typeset details[open] > summary:after {
  transform: rotate(90deg) translateX(-50%) !important;
}

.md-typeset blockquote {
  color: var(--md-default-fg-color--light);
  border-left: 0.2rem solid var(--md-default-fg-color--light);
}

.md-typeset table:not([class]) {
  font-size: var(--md-typeset-font-size);
  border: 1px solid var(--md-default-fg-color);
  border-bottom: none;
  border-collapse: collapse;
  border-radius: ${theme.shape.borderRadius}px;
}
.md-typeset table:not([class]) th {
  font-weight: bold;
}
.md-typeset table:not([class]) td, .md-typeset table:not([class]) th {
  border-bottom: 1px solid var(--md-default-fg-color);
}

.md-typeset pre > code::-webkit-scrollbar-thumb {
  background-color: hsla(0, 0%, 0%, 0.32);
}
.md-typeset pre > code::-webkit-scrollbar-thumb:hover {
  background-color: hsla(0, 0%, 0%, 0.87);
}

.md-typeset code {
  word-break: keep-all;
}
`;

export { typeset as default };
//# sourceMappingURL=typeset.esm.js.map
