{"version":3,"file":"dom.esm.js","sources":["../../../../src/reader/components/TechDocsReaderPageContent/dom.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useCallback, useEffect, useState } from 'react';\n\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport { CompoundEntityRef } from '@backstage/catalog-model';\nimport { useAnalytics, useApi } from '@backstage/core-plugin-api';\nimport { scmIntegrationsApiRef } from '@backstage/integration-react';\n\nimport {\n  techdocsStorageApiRef,\n  useShadowDomStylesLoading,\n} from '@backstage/plugin-techdocs-react';\n\nimport { useTechDocsReader } from '../TechDocsReaderProvider';\n\nimport {\n  addBaseUrl,\n  addGitFeedbackLink,\n  addLinkClickListener,\n  addSidebarToggle,\n  onCssReady,\n  removeMkdocsHeader,\n  rewriteDocLinks,\n  simplifyMkdocsFooter,\n  scrollIntoNavigation,\n  transform as transformer,\n  copyToClipboard,\n  useSanitizerTransformer,\n  useStylesTransformer,\n  handleMetaRedirects,\n} from '../../transformers';\nimport { useNavigateUrl } from './useNavigateUrl';\nimport { useParams } from 'react-router-dom';\n\nconst MOBILE_MEDIA_QUERY = 'screen and (max-width: 76.1875em)';\n\n/**\n * Hook that encapsulates the behavior of getting raw HTML and applying\n * transforms to it in order to make it function at a basic level in the\n * Backstage UI.\n */\nexport const useTechDocsReaderDom = (\n  entityRef: CompoundEntityRef,\n): Element | null => {\n  const navigate = useNavigateUrl();\n  const theme = useTheme();\n  const isMobileMedia = useMediaQuery(MOBILE_MEDIA_QUERY);\n  const sanitizerTransformer = useSanitizerTransformer();\n  const stylesTransformer = useStylesTransformer();\n  const analytics = useAnalytics();\n\n  const techdocsStorageApi = useApi(techdocsStorageApiRef);\n  const scmIntegrationsApi = useApi(scmIntegrationsApiRef);\n\n  const { state, path, content: rawPage } = useTechDocsReader();\n  const { '*': currPath = '' } = useParams();\n\n  const [dom, setDom] = useState<HTMLElement | null>(null);\n  const isStyleLoading = useShadowDomStylesLoading(dom);\n\n  const updateSidebarPositionAndHeight = useCallback(() => {\n    if (!dom) return;\n\n    const sidebars = dom.querySelectorAll<HTMLElement>('.md-sidebar');\n\n    sidebars.forEach(element => {\n      // set sidebar position to render in correct position\n      if (isMobileMedia) {\n        element.style.top = '0px';\n      } else {\n        const page = document?.querySelector('.techdocs-reader-page');\n        const pageTop = page?.getBoundingClientRect().top ?? 0;\n        let domTop = dom.getBoundingClientRect().top ?? 0;\n\n        const tabs = dom.querySelector('.md-container > .md-tabs');\n        const tabsHeight = tabs?.getBoundingClientRect().height ?? 0;\n\n        // the sidebars should not scroll beyond the total height of the header and tabs\n        if (domTop < pageTop) {\n          domTop = pageTop;\n        }\n\n        const scrollbarTopPx = Math.max(domTop, 0) + tabsHeight;\n\n        element.style.top = `${scrollbarTopPx}px`;\n\n        // set scrollbar height to ensure all links can be seen when content is small\n        const footer = dom.querySelector('.md-container > .md-footer');\n        // if no footer, fallback to using the bottom of the window\n        const scrollbarEndPx =\n          footer?.getBoundingClientRect().top ?? window.innerHeight;\n\n        element.style.height = `${scrollbarEndPx - scrollbarTopPx}px`;\n      }\n\n      // show the sidebar only after updating its position\n      element.style.setProperty('opacity', '1');\n    });\n  }, [dom, isMobileMedia]);\n\n  useEffect(() => {\n    window.addEventListener('resize', updateSidebarPositionAndHeight);\n    window.addEventListener('scroll', updateSidebarPositionAndHeight, true);\n    return () => {\n      window.removeEventListener('resize', updateSidebarPositionAndHeight);\n      window.removeEventListener(\n        'scroll',\n        updateSidebarPositionAndHeight,\n        true,\n      );\n    };\n  }, [dom, updateSidebarPositionAndHeight]);\n\n  // dynamically set width of footer to accommodate for pinning of the sidebar\n  const updateFooterWidth = useCallback(() => {\n    if (!dom) return;\n    const footer = dom.querySelector<HTMLElement>('.md-footer');\n    if (footer) {\n      footer.style.width = `${dom.getBoundingClientRect().width}px`;\n    }\n  }, [dom]);\n\n  useEffect(() => {\n    window.addEventListener('resize', updateFooterWidth);\n    return () => {\n      window.removeEventListener('resize', updateFooterWidth);\n    };\n  }, [dom, updateFooterWidth]);\n\n  // an update to \"state\" might lead to an updated UI so we include it as a trigger\n  useEffect(() => {\n    if (!isStyleLoading) {\n      updateFooterWidth();\n      updateSidebarPositionAndHeight();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    state,\n    isStyleLoading,\n    updateFooterWidth,\n    updateSidebarPositionAndHeight,\n  ]);\n\n  // a function that performs transformations that are executed prior to adding it to the DOM\n  const preRender = useCallback(\n    (rawContent: string, contentPath: string) =>\n      transformer(rawContent, [\n        sanitizerTransformer,\n        addBaseUrl({\n          techdocsStorageApi,\n          entityId: entityRef,\n          path: contentPath,\n        }),\n        rewriteDocLinks(),\n        addSidebarToggle(),\n        removeMkdocsHeader(),\n        simplifyMkdocsFooter(),\n        addGitFeedbackLink(scmIntegrationsApi),\n        stylesTransformer,\n      ]),\n    [\n      // only add dependencies that are in state or memorized variables to avoid unnecessary calls between re-renders\n      entityRef,\n      scmIntegrationsApi,\n      techdocsStorageApi,\n      sanitizerTransformer,\n      stylesTransformer,\n    ],\n  );\n\n  // a function that performs transformations that are executed after adding it to the DOM\n  const postRender = useCallback(\n    async (transformedElement: Element) =>\n      transformer(transformedElement, [\n        handleMetaRedirects(navigate, entityRef.name),\n        scrollIntoNavigation(),\n        copyToClipboard(theme),\n        addLinkClickListener({\n          baseUrl: window.location.origin,\n          onClick: (event: MouseEvent, url: string) => {\n            // detect if CTRL or META keys are pressed so that links can be opened in a new tab with `window.open`\n            const modifierActive = event.ctrlKey || event.metaKey;\n            const parsedUrl = new URL(url);\n\n            // capture link clicks within documentation\n            const linkText =\n              (event.target as HTMLAnchorElement | undefined)?.innerText || url;\n            const to = url.replace(window.location.origin, '');\n            analytics.captureEvent('click', linkText, { attributes: { to } });\n\n            // hash exists when anchor is clicked on secondary sidebar\n            if (parsedUrl.hash) {\n              if (modifierActive) {\n                window.open(url, '_blank');\n              } else {\n                // If it's in a different page, we navigate to it\n                if (window.location.pathname !== parsedUrl.pathname) {\n                  navigate(url);\n                } else {\n                  // If it's in the same page we avoid using navigate that causes\n                  // the page to rerender.\n                  window.history.pushState(\n                    null,\n                    document.title,\n                    parsedUrl.hash,\n                  );\n                }\n                // Scroll to hash if it's on the current page\n                transformedElement\n                  ?.querySelector(`[id=\"${parsedUrl.hash.slice(1)}\"]`)\n                  ?.scrollIntoView();\n              }\n            } else {\n              if (modifierActive) {\n                window.open(url, '_blank');\n              } else {\n                navigate(url);\n              }\n            }\n          },\n        }),\n        // disable MkDocs drawer toggling ('for' attribute => checkbox mechanism)\n        onCssReady({\n          onLoading: () => {},\n          onLoaded: () => {\n            transformedElement\n              .querySelector('.md-nav__title')\n              ?.removeAttribute('for');\n          },\n        }),\n        // hide sidebars until their positions are updated\n        onCssReady({\n          onLoading: () => {\n            const sidebars = Array.from(\n              transformedElement.querySelectorAll<HTMLElement>('.md-sidebar'),\n            );\n            sidebars.forEach(element => {\n              element.style.setProperty('opacity', '0');\n            });\n          },\n          onLoaded: () => {},\n        }),\n      ]),\n    [theme, navigate, analytics, entityRef.name],\n  );\n\n  useEffect(() => {\n    if (!rawPage) return () => {};\n\n    // if false, there is already a newer execution of this effect\n    let shouldReplaceContent = true;\n\n    // Pre-render\n    preRender(rawPage, path).then(async preTransformedDomElement => {\n      if (!preTransformedDomElement?.innerHTML) {\n        return; // An unexpected error occurred\n      }\n\n      // don't manipulate the shadow dom if this isn't the latest effect execution\n      if (!shouldReplaceContent) {\n        return;\n      }\n\n      // Skip this update if the location's path has changed but the state\n      // contains a page that isn't loaded yet.\n      if (currPath !== path) {\n        return;\n      }\n\n      // Scroll to top after render\n      window.scroll({ top: 0 });\n\n      // Post-render\n      const postTransformedDomElement = await postRender(\n        preTransformedDomElement,\n      );\n\n      setDom(postTransformedDomElement as HTMLElement);\n    });\n\n    // cancel this execution\n    return () => {\n      shouldReplaceContent = false;\n    };\n  }, [rawPage, currPath, path, preRender, postRender]);\n\n  return dom;\n};\n"],"names":["transformer"],"mappings":"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"}