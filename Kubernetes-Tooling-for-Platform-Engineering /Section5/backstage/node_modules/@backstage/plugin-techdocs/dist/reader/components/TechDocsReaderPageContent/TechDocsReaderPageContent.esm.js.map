{"version":3,"file":"TechDocsReaderPageContent.esm.js","sources":["../../../../src/reader/components/TechDocsReaderPageContent/TechDocsReaderPageContent.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useCallback, useEffect } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TechDocsShadowDom,\n  useShadowDomStylesLoading,\n  useShadowRootElements,\n  useTechDocsReaderPage,\n} from '@backstage/plugin-techdocs-react';\nimport { CompoundEntityRef } from '@backstage/catalog-model';\nimport { Content, ErrorPage, Progress } from '@backstage/core-components';\n\nimport { TechDocsSearch } from '../../../search';\nimport { TechDocsStateIndicator } from '../TechDocsStateIndicator';\n\nimport { useTechDocsReaderDom } from './dom';\nimport {\n  useTechDocsReader,\n  withTechDocsReaderProvider,\n} from '../TechDocsReaderProvider';\nimport { TechDocsReaderPageContentAddons } from './TechDocsReaderPageContentAddons';\n\nconst useStyles = makeStyles({\n  search: {\n    width: '100%',\n    '@media (min-width: 76.1875em)': {\n      width: 'calc(100% - 34.4rem)',\n      margin: '0 auto',\n    },\n    '@media print': {\n      display: 'none',\n    },\n  },\n});\n\n/**\n * Props for {@link TechDocsReaderPageContent}\n * @public\n */\nexport type TechDocsReaderPageContentProps = {\n  /**\n   * @deprecated No need to pass down entityRef as property anymore. Consumes the entityName from `TechDocsReaderPageContext`. Use the {@link @backstage/plugin-techdocs-react#useTechDocsReaderPage} hook for custom reader page content.\n   */\n  entityRef?: CompoundEntityRef;\n  /**\n   * Show or hide the search bar, defaults to true.\n   */\n  withSearch?: boolean;\n  /**\n   * If {@link TechDocsReaderPageContentProps.withSearch | withSearch} is true,\n   * this will redirect the search result urls, e.g. turn search results into\n   * links within the \"Docs\" tab of the entity page, instead of the global docs\n   * page.\n   */\n  searchResultUrlMapper?: (url: string) => string;\n  /**\n   * Callback called when the content is rendered.\n   */\n  onReady?: () => void;\n};\n\n/**\n * Renders the reader page content\n * @public\n */\nexport const TechDocsReaderPageContent = withTechDocsReaderProvider(\n  (props: TechDocsReaderPageContentProps) => {\n    const { withSearch = true, searchResultUrlMapper, onReady } = props;\n    const classes = useStyles();\n\n    const {\n      entityMetadata: { value: entityMetadata, loading: entityMetadataLoading },\n      entityRef,\n      setShadowRoot,\n    } = useTechDocsReaderPage();\n    const { state } = useTechDocsReader();\n    const dom = useTechDocsReaderDom(entityRef);\n    const path = window.location.pathname;\n    const hash = window.location.hash;\n    const isStyleLoading = useShadowDomStylesLoading(dom);\n    const [hashElement] = useShadowRootElements([`[id=\"${hash.slice(1)}\"]`]);\n\n    useEffect(() => {\n      if (isStyleLoading) return;\n\n      if (hash) {\n        if (hashElement) {\n          hashElement.scrollIntoView();\n        }\n      } else {\n        document?.querySelector('header')?.scrollIntoView();\n      }\n    }, [path, hash, hashElement, isStyleLoading]);\n\n    const handleAppend = useCallback(\n      (newShadowRoot: ShadowRoot) => {\n        setShadowRoot(newShadowRoot);\n        if (onReady instanceof Function) {\n          onReady();\n        }\n      },\n      [setShadowRoot, onReady],\n    );\n\n    // No entity metadata = 404. Don't render content at all.\n    if (entityMetadataLoading === false && !entityMetadata)\n      return <ErrorPage status=\"404\" statusMessage=\"PAGE NOT FOUND\" />;\n\n    // Do not return content until dom is ready; instead, render a state\n    // indicator, which handles progress and content errors on our behalf.\n    if (!dom) {\n      return (\n        <Content>\n          <Grid container>\n            <Grid xs={12} item>\n              <TechDocsStateIndicator />\n            </Grid>\n          </Grid>\n        </Content>\n      );\n    }\n\n    return (\n      <Content>\n        <Grid container>\n          <Grid xs={12} item>\n            <TechDocsStateIndicator />\n          </Grid>\n          {withSearch && (\n            <Grid className={classes.search} xs=\"auto\" item>\n              <TechDocsSearch\n                entityId={entityRef}\n                entityTitle={entityMetadata?.metadata?.title}\n                searchResultUrlMapper={searchResultUrlMapper}\n              />\n            </Grid>\n          )}\n          <Grid xs={12} item>\n            {/* Centers the styles loaded event to avoid having multiple locations setting the opacity style in Shadow Dom causing the screen to flash multiple times */}\n            {(state === 'CHECKING' || isStyleLoading) && <Progress />}\n\n            <TechDocsShadowDom element={dom} onAppend={handleAppend}>\n              <TechDocsReaderPageContentAddons />\n            </TechDocsShadowDom>\n          </Grid>\n        </Grid>\n      </Content>\n    );\n  },\n);\n\n/**\n * Props for {@link Reader}\n *\n * @public\n * @deprecated use `TechDocsReaderPageContentProps` instead.\n */\nexport type ReaderProps = TechDocsReaderPageContentProps;\n\n/**\n * Component responsible for rendering TechDocs documentation\n * @public\n * @deprecated use `TechDocsReaderPageContent` component instead.\n */\nexport const Reader = TechDocsReaderPageContent;\n"],"names":[],"mappings":"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"}