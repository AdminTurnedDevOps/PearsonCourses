import { LogViewer } from '@backstage/core-components';
import Button from '@material-ui/core/Button';
import Drawer from '@material-ui/core/Drawer';
import Grid from '@material-ui/core/Grid';
import IconButton from '@material-ui/core/IconButton';
import Typography from '@material-ui/core/Typography';
import { makeStyles, createStyles } from '@material-ui/core/styles';
import Close from '@material-ui/icons/Close';
import React, { useState } from 'react';

const useDrawerStyles = makeStyles(
  (theme) => createStyles({
    paper: {
      width: "100%",
      [theme.breakpoints.up("sm")]: {
        width: "75%"
      },
      [theme.breakpoints.up("md")]: {
        width: "50%"
      },
      padding: theme.spacing(2.5)
    },
    root: {
      height: "100%",
      overflow: "hidden"
    },
    logs: {
      background: theme.palette.background.default
    }
  })
);
const TechDocsBuildLogsDrawerContent = ({
  buildLog,
  onClose
}) => {
  const classes = useDrawerStyles();
  const logText = buildLog.length === 0 ? "Waiting for logs..." : buildLog.join("\n");
  return /* @__PURE__ */ React.createElement(
    Grid,
    {
      container: true,
      direction: "column",
      className: classes.root,
      spacing: 0,
      wrap: "nowrap"
    },
    /* @__PURE__ */ React.createElement(
      Grid,
      {
        item: true,
        container: true,
        justifyContent: "space-between",
        alignItems: "center",
        spacing: 0,
        wrap: "nowrap"
      },
      /* @__PURE__ */ React.createElement(Typography, { variant: "h5" }, "Build Details"),
      /* @__PURE__ */ React.createElement(
        IconButton,
        {
          key: "dismiss",
          title: "Close the drawer",
          onClick: onClose,
          color: "inherit"
        },
        /* @__PURE__ */ React.createElement(Close, null)
      )
    ),
    /* @__PURE__ */ React.createElement(Grid, { item: true, xs: true }, /* @__PURE__ */ React.createElement(LogViewer, { text: logText, classes: { root: classes.logs } }))
  );
};
const TechDocsBuildLogs = ({ buildLog }) => {
  const classes = useDrawerStyles();
  const [open, setOpen] = useState(false);
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(Button, { color: "inherit", onClick: () => setOpen(true) }, "Show Build Logs"), /* @__PURE__ */ React.createElement(
    Drawer,
    {
      classes: { paper: classes.paper },
      anchor: "right",
      open,
      onClose: () => setOpen(false)
    },
    /* @__PURE__ */ React.createElement(
      TechDocsBuildLogsDrawerContent,
      {
        buildLog,
        onClose: () => setOpen(false)
      }
    )
  ));
};

export { TechDocsBuildLogs, TechDocsBuildLogsDrawerContent };
//# sourceMappingURL=TechDocsBuildLogs.esm.js.map
