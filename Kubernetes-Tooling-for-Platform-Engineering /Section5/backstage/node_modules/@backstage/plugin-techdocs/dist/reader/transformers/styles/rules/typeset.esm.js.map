{"version":3,"file":"typeset.esm.js","sources":["../../../../../src/reader/transformers/styles/rules/typeset.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RuleOptions } from './types';\n\ntype RuleTypography = RuleOptions['theme']['typography'];\n\ntype BackstageTypography = RuleTypography & {\n  htmlFontSize?: number;\n};\n\ntype TypographyHeadings = Pick<\n  RuleTypography,\n  'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'\n>;\n\ntype TypographyHeadingsKeys = keyof TypographyHeadings;\n\nconst headings: TypographyHeadingsKeys[] = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\nconst relativeLengthUnit: RegExp = /(em)|(rem)/gi;\nconst cssVariable: RegExp = /var\\(|\\)/gi;\n\nexport default ({ theme }: RuleOptions) => `\n/*==================  Typeset  ==================*/\n\n.md-typeset {\n  font-size: var(--md-typeset-font-size);\n}\n\n${headings.reduce<string>((style, heading) => {\n  const htmlFontSize =\n    (theme.typography as BackstageTypography).htmlFontSize ?? 16;\n  const styles = theme.typography[heading];\n  const { lineHeight, fontFamily, fontWeight, fontSize } = styles;\n  const calculate = (value: typeof fontSize): string | undefined => {\n    if (typeof value === 'number') {\n      // Convert px to rem and apply 60% factor\n      return calculate(`${(value / htmlFontSize) * 0.6}rem`);\n    } else if (typeof value === 'string') {\n      if (value.match(cssVariable)) {\n        // Resolve css variable and calculate recursively\n        const resolvedValue = window\n          .getComputedStyle(document.body)\n          .getPropertyValue(value.replaceAll(cssVariable, ''));\n        if (resolvedValue !== '') {\n          return calculate(resolvedValue);\n        }\n      } else if (value.match(relativeLengthUnit)) {\n        // Use relative size as factor\n        const factor = value.replace(relativeLengthUnit, '');\n        return `calc(${factor} * var(--md-typeset-font-size))`;\n      }\n    }\n    // Value is not a number, relative length unit, or CSS variable, return as is\n    return value;\n  };\n  return style.concat(`\n    .md-typeset ${heading} {\n      color: var(--md-default-fg-color);\n      line-height: ${lineHeight};\n      font-family: ${fontFamily};\n      font-weight: ${fontWeight};\n      font-size: ${calculate(fontSize)};\n    }\n  `);\n}, '')}\n\n.md-typeset .md-content__button {\n  color: var(--md-default-fg-color);\n}\n\n.md-typeset hr {\n  border-bottom: 0.05rem dotted ${theme.palette.divider};\n}\n\n.md-typeset details {\n  font-size: var(--md-typeset-font-size) !important;\n}\n.md-typeset details summary {\n  padding-left: 2.5rem !important;\n}\n.md-typeset details summary:before,\n.md-typeset details summary:after {\n  top: 50% !important;\n  width: 20px !important;\n  height: 20px !important;\n  transform: rotate(0deg) translateY(-50%) !important;\n}\n.md-typeset details[open] > summary:after {\n  transform: rotate(90deg) translateX(-50%) !important;\n}\n\n.md-typeset blockquote {\n  color: var(--md-default-fg-color--light);\n  border-left: 0.2rem solid var(--md-default-fg-color--light);\n}\n\n.md-typeset table:not([class]) {\n  font-size: var(--md-typeset-font-size);\n  border: 1px solid var(--md-default-fg-color);\n  border-bottom: none;\n  border-collapse: collapse;\n  border-radius: ${theme.shape.borderRadius}px;\n}\n.md-typeset table:not([class]) th {\n  font-weight: bold;\n}\n.md-typeset table:not([class]) td, .md-typeset table:not([class]) th {\n  border-bottom: 1px solid var(--md-default-fg-color);\n}\n\n.md-typeset pre > code::-webkit-scrollbar-thumb {\n  background-color: hsla(0, 0%, 0%, 0.32);\n}\n.md-typeset pre > code::-webkit-scrollbar-thumb:hover {\n  background-color: hsla(0, 0%, 0%, 0.87);\n}\n\n.md-typeset code {\n  word-break: keep-all;\n}\n`;\n"],"names":[],"mappings":"AA+BA,MAAM,WAAqC,CAAC,IAAA,EAAM,MAAM,IAAM,EAAA,IAAA,EAAM,MAAM,IAAI,CAAA;AAC9E,MAAM,kBAA6B,GAAA,cAAA;AACnC,MAAM,WAAsB,GAAA,YAAA;AAE5B,cAAe,CAAC,EAAE,KAAA,EAAyB,KAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA,EAOzC,QAAS,CAAA,MAAA,CAAe,CAAC,KAAA,EAAO,OAAY,KAAA;AAC5C,EAAM,MAAA,YAAA,GACH,KAAM,CAAA,UAAA,CAAmC,YAAgB,IAAA,EAAA;AAC5D,EAAM,MAAA,MAAA,GAAS,KAAM,CAAA,UAAA,CAAW,OAAO,CAAA;AACvC,EAAA,MAAM,EAAE,UAAA,EAAY,UAAY,EAAA,UAAA,EAAY,UAAa,GAAA,MAAA;AACzD,EAAM,MAAA,SAAA,GAAY,CAAC,KAA+C,KAAA;AAChE,IAAI,IAAA,OAAO,UAAU,QAAU,EAAA;AAE7B,MAAA,OAAO,SAAU,CAAA,CAAA,EAAI,KAAQ,GAAA,YAAA,GAAgB,GAAG,CAAK,GAAA,CAAA,CAAA;AAAA,KACvD,MAAA,IAAW,OAAO,KAAA,KAAU,QAAU,EAAA;AACpC,MAAI,IAAA,KAAA,CAAM,KAAM,CAAA,WAAW,CAAG,EAAA;AAE5B,QAAM,MAAA,aAAA,GAAgB,MACnB,CAAA,gBAAA,CAAiB,QAAS,CAAA,IAAI,CAC9B,CAAA,gBAAA,CAAiB,KAAM,CAAA,UAAA,CAAW,WAAa,EAAA,EAAE,CAAC,CAAA;AACrD,QAAA,IAAI,kBAAkB,EAAI,EAAA;AACxB,UAAA,OAAO,UAAU,aAAa,CAAA;AAAA;AAChC,OACS,MAAA,IAAA,KAAA,CAAM,KAAM,CAAA,kBAAkB,CAAG,EAAA;AAE1C,QAAA,MAAM,MAAS,GAAA,KAAA,CAAM,OAAQ,CAAA,kBAAA,EAAoB,EAAE,CAAA;AACnD,QAAA,OAAO,QAAQ,MAAM,CAAA,+BAAA,CAAA;AAAA;AACvB;AAGF,IAAO,OAAA,KAAA;AAAA,GACT;AACA,EAAA,OAAO,MAAM,MAAO,CAAA;AAAA,gBAAA,EACJ,OAAO,CAAA;AAAA;AAAA,mBAAA,EAEJ,UAAU,CAAA;AAAA,mBAAA,EACV,UAAU,CAAA;AAAA,mBAAA,EACV,UAAU,CAAA;AAAA,iBACZ,EAAA,SAAA,CAAU,QAAQ,CAAC,CAAA;AAAA;AAAA,EAEnC,CAAA,CAAA;AACH,CAAA,EAAG,EAAE,CAAC;;AAAA;AAAA;AAAA;;AAAA;AAAA,gCAO4B,EAAA,KAAA,CAAM,QAAQ,OAAO,CAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA8BpC,EAAA,KAAA,CAAM,MAAM,YAAY,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,CAAA;;;;"}