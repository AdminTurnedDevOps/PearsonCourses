import * as _backstage_backend_plugin_api from '@backstage/backend-plugin-api';
import { DiscoveryService, LoggerService, AuthService, HttpAuthService } from '@backstage/backend-plugin-api';
import express from 'express';
import { Config } from '@backstage/config';
import { PermissionEvaluator, PermissionAuthorizer } from '@backstage/plugin-permission-common';
import { DocumentTypeInfo } from '@backstage/plugin-search-common';
import { SearchEngine } from '@backstage/plugin-search-backend-node';

/**
 * The Search plugin is responsible for starting search indexing processes and return search results.
 * @public
 */
declare const _default: _backstage_backend_plugin_api.BackendFeature;

/**
 * @public
 * @deprecated Please migrate to the new backend system as this will be removed in the future.
 */
type RouterOptions = {
    engine: SearchEngine;
    types: Record<string, DocumentTypeInfo>;
    discovery?: DiscoveryService;
    permissions: PermissionEvaluator | PermissionAuthorizer;
    config: Config;
    logger: LoggerService;
    auth?: AuthService;
    httpAuth?: HttpAuthService;
};
/**
 * @public
 * @deprecated Please migrate to the new backend system as this will be removed in the future.
 */
declare function createRouter(options: RouterOptions): Promise<express.Router>;

export { type RouterOptions, createRouter, _default as default };
