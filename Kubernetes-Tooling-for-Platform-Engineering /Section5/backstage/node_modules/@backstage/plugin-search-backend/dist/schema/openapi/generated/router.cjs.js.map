{"version":3,"file":"router.cjs.js","sources":["../../../../src/schema/openapi/generated/router.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// ******************************************************************\n// * THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. *\n// ******************************************************************\nimport { createValidatedOpenApiRouterFromGeneratedEndpointMap } from '@backstage/backend-openapi-utils';\nimport { EndpointMap } from './';\n\nexport const spec = {\n  openapi: '3.0.3',\n  info: {\n    title: 'search',\n    version: '1',\n    description:\n      'The Backstage backend plugin that provides search functionality.',\n    license: {\n      name: 'Apache-2.0',\n      url: 'http://www.apache.org/licenses/LICENSE-2.0.html',\n    },\n    contact: {},\n  },\n  servers: [\n    {\n      url: '/',\n    },\n  ],\n  components: {\n    examples: {},\n    headers: {},\n    parameters: {},\n    requestBodies: {},\n    responses: {\n      ErrorResponse: {\n        description: 'An error response from the backend.',\n        content: {\n          'application/json; charset=utf-8': {\n            schema: {\n              $ref: '#/components/schemas/Error',\n            },\n          },\n        },\n      },\n    },\n    schemas: {\n      Error: {\n        type: 'object',\n        properties: {\n          error: {\n            type: 'object',\n            properties: {\n              name: {\n                type: 'string',\n              },\n              message: {\n                type: 'string',\n              },\n            },\n            required: ['name', 'message'],\n          },\n          request: {\n            type: 'object',\n            properties: {\n              method: {\n                type: 'string',\n              },\n              url: {\n                type: 'string',\n              },\n            },\n            required: ['method', 'url'],\n          },\n          response: {\n            type: 'object',\n            properties: {\n              statusCode: {\n                type: 'number',\n              },\n            },\n            required: ['statusCode'],\n          },\n        },\n        required: ['error', 'request', 'response'],\n      },\n      JsonObject: {\n        type: 'object',\n        properties: {},\n        additionalProperties: {},\n      },\n    },\n    securitySchemes: {\n      JWT: {\n        type: 'http',\n        scheme: 'bearer',\n        bearerFormat: 'JWT',\n      },\n    },\n  },\n  paths: {\n    '/query': {\n      get: {\n        operationId: 'Query',\n        description: 'Query documents with a given filter.',\n        responses: {\n          '200': {\n            description: 'Ok',\n            content: {\n              'application/json': {\n                schema: {\n                  type: 'object',\n                  properties: {\n                    results: {\n                      type: 'array',\n                      items: {\n                        type: 'object',\n                        properties: {\n                          type: {\n                            type: 'string',\n                            description: 'The \"type\" of the given document.',\n                          },\n                          document: {\n                            type: 'object',\n                            description:\n                              'The raw value of the document, as indexed.',\n                            properties: {\n                              title: {\n                                type: 'string',\n                                description:\n                                  'The primary name of the document (e.g. name, title, identifier, etc).',\n                              },\n                              text: {\n                                type: 'string',\n                                description:\n                                  'Free-form text of the document (e.g. description, content, etc).',\n                              },\n                              location: {\n                                type: 'string',\n                                description:\n                                  'The relative or absolute URL of the document (target when a search result is clicked).',\n                              },\n                            },\n                          },\n                          highlight: {\n                            type: 'object',\n                            description:\n                              'Optional result highlight. Useful for improving the search result\\ndisplay/experience.',\n                          },\n                          rank: {\n                            type: 'integer',\n                            description:\n                              'Optional result rank, where 1 is the first/top result returned. \\nUseful for understanding search effectiveness in analytics.',\n                          },\n                        },\n                        required: ['type', 'document'],\n                        additionalProperties: false,\n                      },\n                    },\n                    nextPageCursor: {\n                      type: 'string',\n                    },\n                    previousPageCursor: {\n                      type: 'string',\n                    },\n                    numberOfResults: {\n                      type: 'integer',\n                    },\n                  },\n                  required: ['results'],\n                },\n              },\n            },\n          },\n          default: {\n            $ref: '#/components/responses/ErrorResponse',\n          },\n        },\n        security: [\n          {},\n          {\n            JWT: [],\n          },\n        ],\n        parameters: [\n          {\n            name: 'term',\n            in: 'query',\n            required: false,\n            allowReserved: true,\n            schema: {\n              type: 'string',\n              default: '',\n            },\n          },\n          {\n            name: 'filters',\n            in: 'query',\n            required: false,\n            style: 'deepObject',\n            allowReserved: true,\n            schema: {\n              $ref: '#/components/schemas/JsonObject',\n            },\n          },\n          {\n            name: 'types',\n            in: 'query',\n            required: false,\n            allowReserved: true,\n            schema: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n            },\n          },\n          {\n            name: 'pageCursor',\n            in: 'query',\n            required: false,\n            allowReserved: true,\n            schema: {\n              type: 'string',\n            },\n          },\n          {\n            name: 'pageLimit',\n            in: 'query',\n            required: false,\n            allowReserved: true,\n            schema: {\n              type: 'integer',\n            },\n          },\n          {\n            name: 'unknown',\n            in: 'query',\n            required: false,\n            style: 'form',\n            explode: true,\n            allowReserved: true,\n            schema: {\n              type: 'object',\n              additionalProperties: {},\n            },\n          },\n        ],\n      },\n    },\n  },\n} as const;\nexport const createOpenApiRouter = async (\n  options?: Parameters<\n    typeof createValidatedOpenApiRouterFromGeneratedEndpointMap\n  >['1'],\n) =>\n  createValidatedOpenApiRouterFromGeneratedEndpointMap<EndpointMap>(\n    spec,\n    options,\n  );\n"],"names":["createValidatedOpenApiRouterFromGeneratedEndpointMap"],"mappings":"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"}