{"version":3,"file":"StepPrepareSelectLocations.esm.js","sources":["../../../src/components/StepPrepareSelectLocations/StepPrepareSelectLocations.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport React, { useCallback, useState } from 'react';\nimport { AnalyzeResult } from '../../api';\nimport { BackButton, NextButton } from '../Buttons';\nimport { EntityListComponent } from '../EntityListComponent';\nimport { PrepareResult } from '../useImportState';\nimport partition from 'lodash/partition';\n\ntype Props = {\n  analyzeResult: Extract<AnalyzeResult, { type: 'locations' }>;\n  prepareResult?: PrepareResult;\n  onPrepare: (result: PrepareResult) => void;\n  onGoBack?: () => void;\n};\n\n/**\n * A form that lets a user select one of a list of locations to import\n *\n * @param analyzeResult - the result of the analysis\n * @param prepareResult - the selectected locations from a previous step\n * @param onPrepare - called after the selection\n * @param onGoBack - called to go back to the previous step\n */\nexport const StepPrepareSelectLocations = ({\n  analyzeResult,\n  prepareResult,\n  onPrepare,\n  onGoBack,\n}: Props) => {\n  const [selectedUrls, setSelectedUrls] = useState<string[]>(\n    prepareResult?.locations.map(l => l.target) || [],\n  );\n\n  const [existingLocations, locations] = partition(\n    analyzeResult?.locations,\n    l => l.exists,\n  );\n\n  const handleResult = useCallback(async () => {\n    onPrepare({\n      type: 'locations',\n      locations: locations.filter((l: any) => selectedUrls.includes(l.target)),\n    });\n  }, [locations, onPrepare, selectedUrls]);\n\n  const onItemClick = (url: string) => {\n    setSelectedUrls(urls =>\n      urls.includes(url) ? urls.filter(u => u !== url) : urls.concat(url),\n    );\n  };\n\n  const onSelectAll = () => {\n    setSelectedUrls(urls =>\n      urls.length < locations.length ? locations.map(l => l.target) : [],\n    );\n  };\n\n  return (\n    <>\n      {locations.length > 0 && (\n        <>\n          <Typography>\n            Select one or more locations that are present in your git\n            repository:\n          </Typography>\n          <EntityListComponent\n            firstListItem={\n              <ListItem dense button onClick={onSelectAll}>\n                <ListItemIcon>\n                  <Checkbox\n                    edge=\"start\"\n                    checked={selectedUrls.length === locations.length}\n                    indeterminate={\n                      selectedUrls.length > 0 &&\n                      selectedUrls.length < locations.length\n                    }\n                    tabIndex={-1}\n                    disableRipple\n                  />\n                </ListItemIcon>\n                <ListItemText primary=\"Select All\" />\n              </ListItem>\n            }\n            onItemClick={onItemClick}\n            locations={locations}\n            locationListItemIcon={target => (\n              <Checkbox\n                edge=\"start\"\n                checked={selectedUrls.includes(target)}\n                tabIndex={-1}\n                disableRipple\n              />\n            )}\n            collapsed\n          />\n        </>\n      )}\n\n      {existingLocations.length > 0 && (\n        <>\n          <Typography>These locations already exist in the catalog:</Typography>\n          <EntityListComponent\n            locations={existingLocations}\n            locationListItemIcon={() => <LocationOnIcon />}\n            withLinks\n            collapsed\n          />\n        </>\n      )}\n\n      <Grid container spacing={0}>\n        {onGoBack && <BackButton onClick={onGoBack} />}\n        <NextButton disabled={selectedUrls.length === 0} onClick={handleResult}>\n          Review\n        </NextButton>\n      </Grid>\n    </>\n  );\n};\n"],"names":[],"mappings":"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"}