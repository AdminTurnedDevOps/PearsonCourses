import { InfoCard } from '@backstage/core-components';
import { useApi } from '@backstage/core-plugin-api';
import Step from '@material-ui/core/Step';
import StepContent from '@material-ui/core/StepContent';
import Stepper from '@material-ui/core/Stepper';
import { makeStyles } from '@material-ui/core/styles';
import React, { useMemo } from 'react';
import { catalogImportApiRef } from '../../api/CatalogImportApi.esm.js';
import 'yaml';
import 'git-url-parse';
import '@octokit/rest';
import 'js-base64';
import { useImportState } from '../useImportState.esm.js';
import { defaultStepper, defaultGenerateStepper } from './defaults.esm.js';

const useStyles = makeStyles(() => ({
  stepperRoot: {
    padding: 0
  }
}));
const ImportStepper = (props) => {
  const {
    initialUrl,
    generateStepper = defaultGenerateStepper,
    variant
  } = props;
  const catalogImportApi = useApi(catalogImportApiRef);
  const classes = useStyles();
  const state = useImportState({ initialUrl });
  const states = useMemo(
    () => generateStepper(state.activeFlow, defaultStepper),
    [generateStepper, state.activeFlow]
  );
  const render = (step) => {
    return /* @__PURE__ */ React.createElement(Step, null, step.stepLabel, /* @__PURE__ */ React.createElement(StepContent, null, step.content));
  };
  return /* @__PURE__ */ React.createElement(InfoCard, { variant }, /* @__PURE__ */ React.createElement(
    Stepper,
    {
      classes: { root: classes.stepperRoot },
      activeStep: state.activeStepNumber,
      orientation: "vertical"
    },
    render(
      states.analyze(
        state,
        { apis: { catalogImportApi } }
      )
    ),
    render(
      states.prepare(
        state,
        { apis: { catalogImportApi } }
      )
    ),
    render(
      states.review(
        state,
        { apis: { catalogImportApi } }
      )
    ),
    render(
      states.finish(
        state,
        { apis: { catalogImportApi } }
      )
    )
  ));
};

export { ImportStepper };
//# sourceMappingURL=ImportStepper.esm.js.map
