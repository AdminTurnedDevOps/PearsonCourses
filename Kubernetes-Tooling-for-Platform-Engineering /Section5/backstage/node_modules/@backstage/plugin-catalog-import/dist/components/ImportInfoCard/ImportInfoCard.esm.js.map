{"version":3,"file":"ImportInfoCard.esm.js","sources":["../../../src/components/ImportInfoCard/ImportInfoCard.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InfoCard } from '@backstage/core-components';\nimport { configApiRef, useApi } from '@backstage/core-plugin-api';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { catalogImportApiRef } from '../../api';\nimport { useCatalogFilename } from '../../hooks';\n\n/**\n * Props for {@link ImportInfoCard}.\n *\n * @public\n */\nexport interface ImportInfoCardProps {\n  exampleLocationUrl?: string;\n  exampleRepositoryUrl?: string;\n}\n\n/**\n * Shows information about the import process.\n *\n * @public\n */\nexport const ImportInfoCard = (props: ImportInfoCardProps) => {\n  const {\n    exampleLocationUrl = 'https://github.com/backstage/backstage/blob/master/catalog-info.yaml',\n    exampleRepositoryUrl = 'https://github.com/backstage/backstage',\n  } = props;\n\n  const configApi = useApi(configApiRef);\n  const appTitle = configApi.getOptionalString('app.title') || 'Backstage';\n  const catalogImportApi = useApi(catalogImportApiRef);\n\n  const hasGithubIntegration = configApi.has('integrations.github');\n\n  const catalogFilename = useCatalogFilename();\n\n  return (\n    <InfoCard\n      title=\"Register an existing component\"\n      titleTypographyProps={{ component: 'h3' }}\n      deepLink={{\n        title: 'Learn more about the Software Catalog',\n        link: 'https://backstage.io/docs/features/software-catalog/',\n      }}\n    >\n      <Typography variant=\"body2\" paragraph>\n        Enter the URL to your source code repository to add it to {appTitle}.\n      </Typography>\n      <Typography component=\"h4\" variant=\"h6\">\n        Link to an existing entity file\n      </Typography>\n      <Typography variant=\"subtitle2\" color=\"textSecondary\" paragraph>\n        Example: <code>{exampleLocationUrl}</code>\n      </Typography>\n      <Typography variant=\"body2\" paragraph>\n        The wizard analyzes the file, previews the entities, and adds them to\n        the {appTitle} catalog.\n      </Typography>\n      {hasGithubIntegration && (\n        <>\n          <Typography component=\"h4\" variant=\"h6\">\n            Link to a repository{' '}\n            <Chip label=\"GitHub only\" variant=\"outlined\" size=\"small\" />\n          </Typography>\n          <Typography variant=\"subtitle2\" color=\"textSecondary\" paragraph>\n            Example: <code>{exampleRepositoryUrl}</code>\n          </Typography>\n          <Typography variant=\"body2\" paragraph>\n            The wizard discovers all <code>{catalogFilename}</code> files in the\n            repository, previews the entities, and adds them to the {appTitle}{' '}\n            catalog.\n          </Typography>\n          {catalogImportApi.preparePullRequest && (\n            <Typography variant=\"body2\" paragraph>\n              If no entities are found, the wizard will prepare a Pull Request\n              that adds an example <code>{catalogFilename}</code> and prepares\n              the {appTitle} catalog to load all entities as soon as the Pull\n              Request is merged.\n            </Typography>\n          )}\n        </>\n      )}\n    </InfoCard>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;;;;AAuCa,MAAA,cAAA,GAAiB,CAAC,KAA+B,KAAA;AAC5D,EAAM,MAAA;AAAA,IACJ,kBAAqB,GAAA,sEAAA;AAAA,IACrB,oBAAuB,GAAA;AAAA,GACrB,GAAA,KAAA;AAEJ,EAAM,MAAA,SAAA,GAAY,OAAO,YAAY,CAAA;AACrC,EAAA,MAAM,QAAW,GAAA,SAAA,CAAU,iBAAkB,CAAA,WAAW,CAAK,IAAA,WAAA;AAC7D,EAAM,MAAA,gBAAA,GAAmB,OAAO,mBAAmB,CAAA;AAEnD,EAAM,MAAA,oBAAA,GAAuB,SAAU,CAAA,GAAA,CAAI,qBAAqB,CAAA;AAEhE,EAAA,MAAM,kBAAkB,kBAAmB,EAAA;AAE3C,EACE,uBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,QAAA;AAAA,IAAA;AAAA,MACC,KAAM,EAAA,gCAAA;AAAA,MACN,oBAAA,EAAsB,EAAE,SAAA,EAAW,IAAK,EAAA;AAAA,MACxC,QAAU,EAAA;AAAA,QACR,KAAO,EAAA,uCAAA;AAAA,QACP,IAAM,EAAA;AAAA;AACR,KAAA;AAAA,oBAEA,KAAA,CAAA,aAAA,CAAC,cAAW,OAAQ,EAAA,OAAA,EAAQ,WAAS,IAAC,EAAA,EAAA,4DAAA,EACuB,UAAS,GACtE,CAAA;AAAA,wCACC,UAAW,EAAA,EAAA,SAAA,EAAU,IAAK,EAAA,OAAA,EAAQ,QAAK,iCAExC,CAAA;AAAA,oBACC,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,EAAW,OAAQ,EAAA,WAAA,EAAY,KAAM,EAAA,eAAA,EAAgB,SAAS,EAAA,IAAA,EAAA,EAAC,WACrD,kBAAA,KAAA,CAAA,aAAA,CAAC,MAAM,EAAA,IAAA,EAAA,kBAAmB,CACrC,CAAA;AAAA,oBACA,KAAA,CAAA,aAAA,CAAC,cAAW,OAAQ,EAAA,OAAA,EAAQ,WAAS,IAAC,EAAA,EAAA,4EAAA,EAE/B,UAAS,WAChB,CAAA;AAAA,IACC,oBACC,oBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,kBACG,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,EAAW,SAAU,EAAA,IAAA,EAAK,OAAQ,EAAA,IAAA,EAAA,EAAK,sBACjB,EAAA,GAAA,kBACpB,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAK,OAAM,aAAc,EAAA,OAAA,EAAQ,UAAW,EAAA,IAAA,EAAK,OAAQ,EAAA,CAC5D,CACA,kBAAA,KAAA,CAAA,aAAA,CAAC,cAAW,OAAQ,EAAA,WAAA,EAAY,KAAM,EAAA,eAAA,EAAgB,SAAS,EAAA,IAAA,EAAA,EAAC,WACrD,kBAAA,KAAA,CAAA,aAAA,CAAC,cAAM,oBAAqB,CACvC,CACA,kBAAA,KAAA,CAAA,aAAA,CAAC,UAAW,EAAA,EAAA,OAAA,EAAQ,OAAQ,EAAA,SAAA,EAAS,IAAC,EAAA,EAAA,2BAAA,kBACV,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,IAAA,EAAM,eAAgB,CAAA,EAAO,wEACE,EAAA,QAAA,EAAU,KAAI,UAEzE,CAAA,EACC,gBAAiB,CAAA,kBAAA,oBACf,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,EAAW,OAAQ,EAAA,OAAA,EAAQ,WAAS,IAAC,EAAA,EAAA,wFAAA,kBAEd,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,IAAA,EAAM,eAAgB,CAAA,EAAO,oBAC9C,EAAA,QAAA,EAAS,sEAEhB,CAEJ;AAAA,GAEJ;AAEJ;;;;"}