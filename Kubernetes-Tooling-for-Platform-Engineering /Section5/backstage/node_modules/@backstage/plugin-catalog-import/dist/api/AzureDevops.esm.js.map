{"version":3,"file":"AzureDevops.esm.js","sources":["../../src/api/AzureDevops.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ScmAuthApi } from '@backstage/integration-react';\nimport { ConfigApi } from '@backstage/core-plugin-api';\nimport { getBranchName, getCatalogFilename } from '../components/helpers';\nimport { createAzurePullRequest } from './AzureRepoApiClient';\n\nexport interface AzureRepoParts {\n  tenantUrl: string;\n  repoName: string;\n  project: string;\n}\n\nexport function parseAzureUrl(repoUrl: string): AzureRepoParts {\n  const { org, repo, project, host } = parseRepoUrl(repoUrl);\n  if (!org || !repo || !project) {\n    throw new Error(\n      'Invalid AzureDevops Repository. Please use a valid repository url and try again ',\n    );\n  }\n  const tenantUrl = `https://${host}/${org}`;\n\n  return { tenantUrl, repoName: repo, project: project };\n}\n\nexport async function submitAzurePrToRepo(\n  options: {\n    title: string;\n    body: string;\n    fileContent: string;\n    repositoryUrl: string;\n  },\n  scmAuthApi: ScmAuthApi,\n  configApi: ConfigApi,\n) {\n  const { repositoryUrl, fileContent, title, body } = options;\n\n  const branchName = getBranchName(configApi);\n  const fileName = getCatalogFilename(configApi);\n\n  const { token } = await scmAuthApi.getCredentials({\n    url: repositoryUrl,\n    additionalScope: {\n      repoWrite: true,\n    },\n  });\n  const { tenantUrl, repoName, project } = parseAzureUrl(repositoryUrl);\n  const result = await createAzurePullRequest({\n    token,\n    fileContent,\n    title,\n    description: body,\n    project,\n    repository: repoName,\n    branchName,\n    tenantUrl,\n    fileName,\n  });\n  const catalogLocation = `${result.repository.webUrl}?path=/${fileName}`;\n  const prLocation = `${result.repository.webUrl}/pullrequest/${result.pullRequestId}`;\n  return {\n    link: prLocation!,\n    location: catalogLocation,\n  };\n}\n\nexport function parseRepoUrl(sourceUrl: string) {\n  const url = new URL(sourceUrl);\n\n  let host = url.host;\n  let org;\n  let project;\n  let repo;\n\n  const parts = url.pathname.split('/').map(part => decodeURIComponent(part));\n  if (parts[2] === '_git') {\n    org = parts[1];\n    project = repo = parts[3];\n  } else if (parts[3] === '_git') {\n    org = parts[1];\n    project = parts[2];\n    repo = parts[4];\n  } else if (parts[4] === '_git') {\n    host = `${host}/${parts[1]}`;\n    org = parts[2];\n    project = parts[3];\n    repo = parts[5];\n  }\n\n  return { host, org, project, repo };\n}\n"],"names":[],"mappings":";;;AA0BO,SAAS,cAAc,OAAiC,EAAA;AAC7D,EAAA,MAAM,EAAE,GAAK,EAAA,IAAA,EAAM,SAAS,IAAK,EAAA,GAAI,aAAa,OAAO,CAAA;AACzD,EAAA,IAAI,CAAC,GAAA,IAAO,CAAC,IAAA,IAAQ,CAAC,OAAS,EAAA;AAC7B,IAAA,MAAM,IAAI,KAAA;AAAA,MACR;AAAA,KACF;AAAA;AAEF,EAAA,MAAM,SAAY,GAAA,CAAA,QAAA,EAAW,IAAI,CAAA,CAAA,EAAI,GAAG,CAAA,CAAA;AAExC,EAAA,OAAO,EAAE,SAAA,EAAW,QAAU,EAAA,IAAA,EAAM,OAAiB,EAAA;AACvD;AAEsB,eAAA,mBAAA,CACpB,OAMA,EAAA,UAAA,EACA,SACA,EAAA;AACA,EAAA,MAAM,EAAE,aAAA,EAAe,WAAa,EAAA,KAAA,EAAO,MAAS,GAAA,OAAA;AAEpD,EAAM,MAAA,UAAA,GAAa,cAAc,SAAS,CAAA;AAC1C,EAAM,MAAA,QAAA,GAAW,mBAAmB,SAAS,CAAA;AAE7C,EAAA,MAAM,EAAE,KAAA,EAAU,GAAA,MAAM,WAAW,cAAe,CAAA;AAAA,IAChD,GAAK,EAAA,aAAA;AAAA,IACL,eAAiB,EAAA;AAAA,MACf,SAAW,EAAA;AAAA;AACb,GACD,CAAA;AACD,EAAA,MAAM,EAAE,SAAW,EAAA,QAAA,EAAU,OAAQ,EAAA,GAAI,cAAc,aAAa,CAAA;AACpE,EAAM,MAAA,MAAA,GAAS,MAAM,sBAAuB,CAAA;AAAA,IAC1C,KAAA;AAAA,IACA,WAAA;AAAA,IACA,KAAA;AAAA,IACA,WAAa,EAAA,IAAA;AAAA,IACb,OAAA;AAAA,IACA,UAAY,EAAA,QAAA;AAAA,IACZ,UAAA;AAAA,IACA,SAAA;AAAA,IACA;AAAA,GACD,CAAA;AACD,EAAA,MAAM,kBAAkB,CAAG,EAAA,MAAA,CAAO,UAAW,CAAA,MAAM,UAAU,QAAQ,CAAA,CAAA;AACrE,EAAA,MAAM,aAAa,CAAG,EAAA,MAAA,CAAO,WAAW,MAAM,CAAA,aAAA,EAAgB,OAAO,aAAa,CAAA,CAAA;AAClF,EAAO,OAAA;AAAA,IACL,IAAM,EAAA,UAAA;AAAA,IACN,QAAU,EAAA;AAAA,GACZ;AACF;AAEO,SAAS,aAAa,SAAmB,EAAA;AAC9C,EAAM,MAAA,GAAA,GAAM,IAAI,GAAA,CAAI,SAAS,CAAA;AAE7B,EAAA,IAAI,OAAO,GAAI,CAAA,IAAA;AACf,EAAI,IAAA,GAAA;AACJ,EAAI,IAAA,OAAA;AACJ,EAAI,IAAA,IAAA;AAEJ,EAAM,MAAA,KAAA,GAAQ,GAAI,CAAA,QAAA,CAAS,KAAM,CAAA,GAAG,EAAE,GAAI,CAAA,CAAA,IAAA,KAAQ,kBAAmB,CAAA,IAAI,CAAC,CAAA;AAC1E,EAAI,IAAA,KAAA,CAAM,CAAC,CAAA,KAAM,MAAQ,EAAA;AACvB,IAAA,GAAA,GAAM,MAAM,CAAC,CAAA;AACb,IAAU,OAAA,GAAA,IAAA,GAAO,MAAM,CAAC,CAAA;AAAA,GACf,MAAA,IAAA,KAAA,CAAM,CAAC,CAAA,KAAM,MAAQ,EAAA;AAC9B,IAAA,GAAA,GAAM,MAAM,CAAC,CAAA;AACb,IAAA,OAAA,GAAU,MAAM,CAAC,CAAA;AACjB,IAAA,IAAA,GAAO,MAAM,CAAC,CAAA;AAAA,GACL,MAAA,IAAA,KAAA,CAAM,CAAC,CAAA,KAAM,MAAQ,EAAA;AAC9B,IAAA,IAAA,GAAO,CAAG,EAAA,IAAI,CAAI,CAAA,EAAA,KAAA,CAAM,CAAC,CAAC,CAAA,CAAA;AAC1B,IAAA,GAAA,GAAM,MAAM,CAAC,CAAA;AACb,IAAA,OAAA,GAAU,MAAM,CAAC,CAAA;AACjB,IAAA,IAAA,GAAO,MAAM,CAAC,CAAA;AAAA;AAGhB,EAAA,OAAO,EAAE,IAAA,EAAM,GAAK,EAAA,OAAA,EAAS,IAAK,EAAA;AACpC;;;;"}