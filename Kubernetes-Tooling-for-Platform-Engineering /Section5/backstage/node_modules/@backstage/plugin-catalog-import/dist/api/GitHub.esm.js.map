{"version":3,"file":"GitHub.esm.js","sources":["../../src/api/GitHub.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  GithubIntegrationConfig,\n  ScmIntegrationRegistry,\n} from '@backstage/integration';\nimport parseGitUrl from 'git-url-parse';\nimport { ScmAuthApi } from '@backstage/integration-react';\nimport { Octokit } from '@octokit/rest';\nimport { getBranchName, getCatalogFilename } from '../components/helpers';\nimport { ConfigApi } from '@backstage/core-plugin-api';\nimport { Base64 } from 'js-base64';\n\nexport interface GitHubOptions {\n  owner: string;\n  repo: string;\n  title: string;\n  body: string;\n  fileContent: string;\n  repositoryUrl: string;\n  githubIntegrationConfig: GithubIntegrationConfig;\n}\nexport const getGithubIntegrationConfig = (\n  scmIntegrationsApi: ScmIntegrationRegistry,\n  location: string,\n) => {\n  const integration = scmIntegrationsApi.github.byUrl(location);\n  if (!integration) {\n    return undefined;\n  }\n\n  const { name: repo, owner } = parseGitUrl(location);\n  return {\n    repo,\n    owner,\n    githubIntegrationConfig: integration.config,\n  };\n};\n\nexport async function submitGitHubPrToRepo(\n  options: GitHubOptions,\n  scmAuthApi: ScmAuthApi,\n  configApi: ConfigApi,\n): Promise<{ link: string; location: string }> {\n  const {\n    owner,\n    repo,\n    title,\n    body,\n    fileContent,\n    repositoryUrl,\n    githubIntegrationConfig,\n  } = options;\n\n  const { token } = await scmAuthApi.getCredentials({\n    url: repositoryUrl,\n    additionalScope: {\n      repoWrite: true,\n    },\n  });\n\n  const octo = new Octokit({\n    auth: token,\n    baseUrl: githubIntegrationConfig.apiBaseUrl,\n  });\n\n  const branchName = getBranchName(configApi);\n  const fileName = getCatalogFilename(configApi);\n\n  const repoData = await octo.repos\n    .get({\n      owner,\n      repo,\n    })\n    .catch(e => {\n      throw new Error(formatHttpErrorMessage(\"Couldn't fetch repo data\", e));\n    });\n\n  const parentRef = await octo.git\n    .getRef({\n      owner,\n      repo,\n      ref: `heads/${repoData.data.default_branch}`,\n    })\n    .catch(e => {\n      throw new Error(\n        formatHttpErrorMessage(\"Couldn't fetch default branch data\", e),\n      );\n    });\n\n  await octo.git\n    .createRef({\n      owner,\n      repo,\n      ref: `refs/heads/${branchName}`,\n      sha: parentRef.data.object.sha,\n    })\n    .catch(e => {\n      throw new Error(\n        formatHttpErrorMessage(\n          `Couldn't create a new branch with name '${branchName}'`,\n          e,\n        ),\n      );\n    });\n\n  await octo.repos\n    .createOrUpdateFileContents({\n      owner,\n      repo,\n      path: fileName,\n      message: title,\n      content: Base64.encode(fileContent),\n      branch: branchName,\n    })\n    .catch(e => {\n      throw new Error(\n        formatHttpErrorMessage(\n          `Couldn't create a commit with ${fileName} file added`,\n          e,\n        ),\n      );\n    });\n\n  const pullRequestResponse = await octo.pulls\n    .create({\n      owner,\n      repo,\n      title,\n      head: branchName,\n      body,\n      base: repoData.data.default_branch,\n    })\n    .catch(e => {\n      throw new Error(\n        formatHttpErrorMessage(\n          `Couldn't create a pull request for ${branchName} branch`,\n          e,\n        ),\n      );\n    });\n\n  return {\n    link: pullRequestResponse.data.html_url,\n    location: `https://${githubIntegrationConfig.host}/${owner}/${repo}/blob/${repoData.data.default_branch}/${fileName}`,\n  };\n}\n\nfunction formatHttpErrorMessage(\n  message: string,\n  error: { status: number; message: string },\n) {\n  return `${message}, received http response status code ${error.status}: ${error.message}`;\n}\n"],"names":[],"mappings":"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"}