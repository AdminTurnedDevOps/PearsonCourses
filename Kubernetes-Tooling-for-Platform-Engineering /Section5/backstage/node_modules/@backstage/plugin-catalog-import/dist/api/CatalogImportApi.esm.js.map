{"version":3,"file":"CatalogImportApi.esm.js","sources":["../../src/api/CatalogImportApi.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CompoundEntityRef } from '@backstage/catalog-model';\nimport { createApiRef } from '@backstage/core-plugin-api';\nimport { PartialEntity } from '../types';\n\n/**\n * Utility API reference for the {@link CatalogImportApi}.\n *\n * @public\n */\nexport const catalogImportApiRef = createApiRef<CatalogImportApi>({\n  id: 'plugin.catalog-import.service',\n});\n\n/**\n * Result of the analysis.\n *\n * @public\n */\nexport type AnalyzeResult =\n  | {\n      type: 'locations';\n      locations: Array<{\n        target: string;\n        exists?: boolean;\n        entities: CompoundEntityRef[];\n      }>;\n    }\n  | {\n      type: 'repository';\n      url: string;\n      integrationType: string;\n      generatedEntities: PartialEntity[];\n    };\n\n/**\n * API for driving catalog imports.\n *\n * @public\n */\nexport interface CatalogImportApi {\n  analyzeUrl(url: string): Promise<AnalyzeResult>;\n\n  preparePullRequest?(): Promise<{\n    title: string;\n    body: string;\n  }>;\n\n  submitPullRequest(options: {\n    repositoryUrl: string;\n    fileContent: string;\n    title: string;\n    body: string;\n  }): Promise<{ link: string; location: string }>;\n}\n"],"names":[],"mappings":";;AAyBO,MAAM,sBAAsB,YAA+B,CAAA;AAAA,EAChE,EAAI,EAAA;AACN,CAAC;;;;"}