{"version":3,"file":"alpha.esm.js","sources":["../src/alpha.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport {\n  ApiBlueprint,\n  NavItemBlueprint,\n  PageBlueprint,\n  createApiFactory,\n  createFrontendPlugin,\n} from '@backstage/frontend-plugin-api';\n\nimport {\n  compatWrapper,\n  convertLegacyRouteRef,\n} from '@backstage/core-compat-api';\n\nimport {\n  ApiEntity,\n  parseEntityRef,\n  RELATION_HAS_PART,\n} from '@backstage/catalog-model';\n\nimport { defaultDefinitionWidgets } from './components/ApiDefinitionCard';\nimport { rootRoute, registerComponentRouteRef } from './routes';\nimport { apiDocsConfigRef } from './config';\nimport { AppIcon } from '@backstage/core-components';\n\nimport {\n  EntityCardBlueprint,\n  EntityContentBlueprint,\n} from '@backstage/plugin-catalog-react/alpha';\n\nconst apiDocsNavItem = NavItemBlueprint.make({\n  params: {\n    title: 'APIs',\n    routeRef: convertLegacyRouteRef(rootRoute),\n    icon: () => compatWrapper(<AppIcon id=\"kind:api\" />),\n  },\n});\n\nconst apiDocsConfigApi = ApiBlueprint.make({\n  name: 'config',\n  params: {\n    factory: createApiFactory({\n      api: apiDocsConfigRef,\n      deps: {},\n      factory: () => {\n        const definitionWidgets = defaultDefinitionWidgets();\n        return {\n          getApiDefinitionWidget: (apiEntity: ApiEntity) => {\n            return definitionWidgets.find(d => d.type === apiEntity.spec.type);\n          },\n        };\n      },\n    }),\n  },\n});\n\nconst apiDocsExplorerPage = PageBlueprint.makeWithOverrides({\n  config: {\n    schema: {\n      // Ommiting columns and actions for now as their types are too complex to map to zod\n      initiallySelectedFilter: z =>\n        z.enum(['owned', 'starred', 'all']).optional(),\n    },\n  },\n  factory(originalFactory, { config }) {\n    return originalFactory({\n      defaultPath: '/api-docs',\n      routeRef: convertLegacyRouteRef(rootRoute),\n      loader: () =>\n        import('./components/ApiExplorerPage').then(m =>\n          compatWrapper(\n            <m.ApiExplorerIndexPage\n              initiallySelectedFilter={config.initiallySelectedFilter}\n            />,\n          ),\n        ),\n    });\n  },\n});\n\nconst apiDocsHasApisEntityCard = EntityCardBlueprint.make({\n  name: 'has-apis',\n  params: {\n    // Ommiting configSchema for now\n    // We are skipping variants and columns are too complex to map to zod\n    // See: https://github.com/backstage/backstage/pull/22619#discussion_r1477333252\n    filter: entity => {\n      return (\n        entity.kind === 'Component' &&\n        entity.relations?.some(\n          ({ type, targetRef }) =>\n            type.toLocaleLowerCase('en-US') === RELATION_HAS_PART &&\n            parseEntityRef(targetRef).kind === 'API',\n        )!!\n      );\n    },\n    loader: () =>\n      import('./components/ApisCards').then(m =>\n        compatWrapper(<m.HasApisCard />),\n      ),\n  },\n});\n\nconst apiDocsDefinitionEntityCard = EntityCardBlueprint.make({\n  name: 'definition',\n  params: {\n    filter: 'kind:api',\n    loader: () =>\n      import('./components/ApiDefinitionCard').then(m =>\n        compatWrapper(<m.ApiDefinitionCard />),\n      ),\n  },\n});\n\nconst apiDocsConsumedApisEntityCard = EntityCardBlueprint.make({\n  name: 'consumed-apis',\n  params: {\n    // Ommiting configSchema for now\n    // We are skipping variants and columns are too complex to map to zod\n    // See: https://github.com/backstage/backstage/pull/22619#discussion_r1477333252\n    filter: 'kind:component',\n    loader: () =>\n      import('./components/ApisCards').then(m =>\n        compatWrapper(<m.ConsumedApisCard />),\n      ),\n  },\n});\n\nconst apiDocsProvidedApisEntityCard = EntityCardBlueprint.make({\n  name: 'provided-apis',\n  params: {\n    // Ommiting configSchema for now\n    // We are skipping variants and columns are too complex to map to zod\n    // See: https://github.com/backstage/backstage/pull/22619#discussion_r1477333252\n    filter: 'kind:component',\n    loader: () =>\n      import('./components/ApisCards').then(m =>\n        compatWrapper(<m.ProvidedApisCard />),\n      ),\n  },\n});\n\nconst apiDocsConsumingComponentsEntityCard = EntityCardBlueprint.make({\n  name: 'consuming-components',\n  params: {\n    // Ommiting configSchema for now\n    // We are skipping variants\n    // See: https://github.com/backstage/backstage/pull/22619#discussion_r1477333252\n    filter: 'kind:api',\n    loader: () =>\n      import('./components/ComponentsCards').then(m =>\n        compatWrapper(<m.ConsumingComponentsCard />),\n      ),\n  },\n});\n\nconst apiDocsProvidingComponentsEntityCard = EntityCardBlueprint.make({\n  name: 'providing-components',\n  params: {\n    // Ommiting configSchema for now\n    // We are skipping variants\n    // See: https://github.com/backstage/backstage/pull/22619#discussion_r1477333252\n    filter: 'kind:api',\n    loader: () =>\n      import('./components/ComponentsCards').then(m =>\n        compatWrapper(<m.ProvidingComponentsCard />),\n      ),\n  },\n});\n\nconst apiDocsDefinitionEntityContent = EntityContentBlueprint.make({\n  name: 'definition',\n  params: {\n    defaultPath: '/defintion',\n    defaultTitle: 'Definition',\n    filter: 'kind:api',\n    loader: async () =>\n      import('./components/ApiDefinitionCard').then(m =>\n        compatWrapper(\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <m.ApiDefinitionCard />\n            </Grid>\n          </Grid>,\n        ),\n      ),\n  },\n});\n\nconst apiDocsApisEntityContent = EntityContentBlueprint.make({\n  name: 'apis',\n  params: {\n    defaultPath: '/apis',\n    defaultTitle: 'APIs',\n    filter: 'kind:component',\n    loader: async () =>\n      import('./components/ApisCards').then(m =>\n        compatWrapper(\n          <Grid container spacing={3} alignItems=\"stretch\">\n            <Grid item xs={12}>\n              <m.ProvidedApisCard />\n            </Grid>\n            <Grid item xs={12}>\n              <m.ConsumedApisCard />\n            </Grid>\n          </Grid>,\n        ),\n      ),\n  },\n});\n\nexport default createFrontendPlugin({\n  id: 'api-docs',\n  routes: {\n    root: convertLegacyRouteRef(rootRoute),\n  },\n  externalRoutes: {\n    registerApi: convertLegacyRouteRef(registerComponentRouteRef),\n  },\n  extensions: [\n    apiDocsNavItem,\n    apiDocsConfigApi,\n    apiDocsExplorerPage,\n    apiDocsHasApisEntityCard,\n    apiDocsDefinitionEntityCard,\n    apiDocsProvidedApisEntityCard,\n    apiDocsConsumedApisEntityCard,\n    apiDocsConsumingComponentsEntityCard,\n    apiDocsProvidingComponentsEntityCard,\n    apiDocsDefinitionEntityContent,\n    apiDocsApisEntityContent,\n  ],\n});\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAgDA,MAAM,cAAA,GAAiB,iBAAiB,IAAK,CAAA;AAAA,EAC3C,MAAQ,EAAA;AAAA,IACN,KAAO,EAAA,MAAA;AAAA,IACP,QAAA,EAAU,sBAAsB,SAAS,CAAA;AAAA,IACzC,MAAM,MAAM,aAAA,qCAAe,OAAQ,EAAA,EAAA,EAAA,EAAG,YAAW,CAAE;AAAA;AAEvD,CAAC,CAAA;AAED,MAAM,gBAAA,GAAmB,aAAa,IAAK,CAAA;AAAA,EACzC,IAAM,EAAA,QAAA;AAAA,EACN,MAAQ,EAAA;AAAA,IACN,SAAS,gBAAiB,CAAA;AAAA,MACxB,GAAK,EAAA,gBAAA;AAAA,MACL,MAAM,EAAC;AAAA,MACP,SAAS,MAAM;AACb,QAAA,MAAM,oBAAoB,wBAAyB,EAAA;AACnD,QAAO,OAAA;AAAA,UACL,sBAAA,EAAwB,CAAC,SAAyB,KAAA;AAChD,YAAA,OAAO,kBAAkB,IAAK,CAAA,CAAA,CAAA,KAAK,EAAE,IAAS,KAAA,SAAA,CAAU,KAAK,IAAI,CAAA;AAAA;AACnE,SACF;AAAA;AACF,KACD;AAAA;AAEL,CAAC,CAAA;AAED,MAAM,mBAAA,GAAsB,cAAc,iBAAkB,CAAA;AAAA,EAC1D,MAAQ,EAAA;AAAA,IACN,MAAQ,EAAA;AAAA;AAAA,MAEN,uBAAA,EAAyB,CACvB,CAAA,KAAA,CAAA,CAAE,IAAK,CAAA,CAAC,SAAS,SAAW,EAAA,KAAK,CAAC,CAAA,CAAE,QAAS;AAAA;AACjD,GACF;AAAA,EACA,OAAQ,CAAA,eAAA,EAAiB,EAAE,MAAA,EAAU,EAAA;AACnC,IAAA,OAAO,eAAgB,CAAA;AAAA,MACrB,WAAa,EAAA,WAAA;AAAA,MACb,QAAA,EAAU,sBAAsB,SAAS,CAAA;AAAA,MACzC,MAAQ,EAAA,MACN,OAAO,2CAA8B,CAAE,CAAA,IAAA;AAAA,QAAK,CAC1C,CAAA,KAAA,aAAA;AAAA,0BACE,KAAA,CAAA,aAAA;AAAA,YAAC,CAAE,CAAA,oBAAA;AAAA,YAAF;AAAA,cACC,yBAAyB,MAAO,CAAA;AAAA;AAAA;AAClC;AACF;AACF,KACH,CAAA;AAAA;AAEL,CAAC,CAAA;AAED,MAAM,wBAAA,GAA2B,oBAAoB,IAAK,CAAA;AAAA,EACxD,IAAM,EAAA,UAAA;AAAA,EACN,MAAQ,EAAA;AAAA;AAAA;AAAA;AAAA,IAIN,QAAQ,CAAU,MAAA,KAAA;AAChB,MAAA,OACE,MAAO,CAAA,IAAA,KAAS,WAChB,IAAA,MAAA,CAAO,SAAW,EAAA,IAAA;AAAA,QAChB,CAAC,EAAE,IAAM,EAAA,SAAA,EACP,KAAA,IAAA,CAAK,iBAAkB,CAAA,OAAO,CAAM,KAAA,iBAAA,IACpC,cAAe,CAAA,SAAS,EAAE,IAAS,KAAA;AAAA,OACvC;AAAA,KAEJ;AAAA,IACA,MAAQ,EAAA,MACN,OAAO,qCAAwB,CAAE,CAAA,IAAA;AAAA,MAAK,OACpC,aAAc,iBAAA,KAAA,CAAA,aAAA,CAAC,CAAE,CAAA,WAAA,EAAF,IAAc,CAAE;AAAA;AACjC;AAEN,CAAC,CAAA;AAED,MAAM,2BAAA,GAA8B,oBAAoB,IAAK,CAAA;AAAA,EAC3D,IAAM,EAAA,YAAA;AAAA,EACN,MAAQ,EAAA;AAAA,IACN,MAAQ,EAAA,UAAA;AAAA,IACR,MAAQ,EAAA,MACN,OAAO,6CAAgC,CAAE,CAAA,IAAA;AAAA,MAAK,OAC5C,aAAc,iBAAA,KAAA,CAAA,aAAA,CAAC,CAAE,CAAA,iBAAA,EAAF,IAAoB,CAAE;AAAA;AACvC;AAEN,CAAC,CAAA;AAED,MAAM,6BAAA,GAAgC,oBAAoB,IAAK,CAAA;AAAA,EAC7D,IAAM,EAAA,eAAA;AAAA,EACN,MAAQ,EAAA;AAAA;AAAA;AAAA;AAAA,IAIN,MAAQ,EAAA,gBAAA;AAAA,IACR,MAAQ,EAAA,MACN,OAAO,qCAAwB,CAAE,CAAA,IAAA;AAAA,MAAK,OACpC,aAAc,iBAAA,KAAA,CAAA,aAAA,CAAC,CAAE,CAAA,gBAAA,EAAF,IAAmB,CAAE;AAAA;AACtC;AAEN,CAAC,CAAA;AAED,MAAM,6BAAA,GAAgC,oBAAoB,IAAK,CAAA;AAAA,EAC7D,IAAM,EAAA,eAAA;AAAA,EACN,MAAQ,EAAA;AAAA;AAAA;AAAA;AAAA,IAIN,MAAQ,EAAA,gBAAA;AAAA,IACR,MAAQ,EAAA,MACN,OAAO,qCAAwB,CAAE,CAAA,IAAA;AAAA,MAAK,OACpC,aAAc,iBAAA,KAAA,CAAA,aAAA,CAAC,CAAE,CAAA,gBAAA,EAAF,IAAmB,CAAE;AAAA;AACtC;AAEN,CAAC,CAAA;AAED,MAAM,oCAAA,GAAuC,oBAAoB,IAAK,CAAA;AAAA,EACpE,IAAM,EAAA,sBAAA;AAAA,EACN,MAAQ,EAAA;AAAA;AAAA;AAAA;AAAA,IAIN,MAAQ,EAAA,UAAA;AAAA,IACR,MAAQ,EAAA,MACN,OAAO,2CAA8B,CAAE,CAAA,IAAA;AAAA,MAAK,OAC1C,aAAc,iBAAA,KAAA,CAAA,aAAA,CAAC,CAAE,CAAA,uBAAA,EAAF,IAA0B,CAAE;AAAA;AAC7C;AAEN,CAAC,CAAA;AAED,MAAM,oCAAA,GAAuC,oBAAoB,IAAK,CAAA;AAAA,EACpE,IAAM,EAAA,sBAAA;AAAA,EACN,MAAQ,EAAA;AAAA;AAAA;AAAA;AAAA,IAIN,MAAQ,EAAA,UAAA;AAAA,IACR,MAAQ,EAAA,MACN,OAAO,2CAA8B,CAAE,CAAA,IAAA;AAAA,MAAK,OAC1C,aAAc,iBAAA,KAAA,CAAA,aAAA,CAAC,CAAE,CAAA,uBAAA,EAAF,IAA0B,CAAE;AAAA;AAC7C;AAEN,CAAC,CAAA;AAED,MAAM,8BAAA,GAAiC,uBAAuB,IAAK,CAAA;AAAA,EACjE,IAAM,EAAA,YAAA;AAAA,EACN,MAAQ,EAAA;AAAA,IACN,WAAa,EAAA,YAAA;AAAA,IACb,YAAc,EAAA,YAAA;AAAA,IACd,MAAQ,EAAA,UAAA;AAAA,IACR,MAAQ,EAAA,YACN,OAAO,6CAAgC,CAAE,CAAA,IAAA;AAAA,MAAK,CAC5C,CAAA,KAAA,aAAA;AAAA,4CACG,IAAK,EAAA,EAAA,SAAA,EAAS,IAAC,EAAA,OAAA,EAAS,qBACtB,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAK,IAAI,EAAA,IAAA,EAAC,IAAI,EACb,EAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,EAAE,iBAAF,EAAA,IAAoB,CACvB,CACF;AAAA;AACF;AACF;AAEN,CAAC,CAAA;AAED,MAAM,wBAAA,GAA2B,uBAAuB,IAAK,CAAA;AAAA,EAC3D,IAAM,EAAA,MAAA;AAAA,EACN,MAAQ,EAAA;AAAA,IACN,WAAa,EAAA,OAAA;AAAA,IACb,YAAc,EAAA,MAAA;AAAA,IACd,MAAQ,EAAA,gBAAA;AAAA,IACR,MAAQ,EAAA,YACN,OAAO,qCAAwB,CAAE,CAAA,IAAA;AAAA,MAAK,CACpC,CAAA,KAAA,aAAA;AAAA,wBACG,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAK,SAAS,EAAA,IAAA,EAAC,OAAS,EAAA,CAAA,EAAG,UAAW,EAAA,SAAA,EAAA,kBACpC,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAK,IAAI,EAAA,IAAA,EAAC,IAAI,EACb,EAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,CAAE,CAAA,gBAAA,EAAF,IAAmB,CACtB,CACA,kBAAA,KAAA,CAAA,aAAA,CAAC,QAAK,IAAI,EAAA,IAAA,EAAC,EAAI,EAAA,EAAA,EAAA,kBACZ,KAAA,CAAA,aAAA,CAAA,CAAA,CAAE,gBAAF,EAAA,IAAmB,CACtB,CACF;AAAA;AACF;AACF;AAEN,CAAC,CAAA;AAED,YAAe,oBAAqB,CAAA;AAAA,EAClC,EAAI,EAAA,UAAA;AAAA,EACJ,MAAQ,EAAA;AAAA,IACN,IAAA,EAAM,sBAAsB,SAAS;AAAA,GACvC;AAAA,EACA,cAAgB,EAAA;AAAA,IACd,WAAA,EAAa,sBAAsB,yBAAyB;AAAA,GAC9D;AAAA,EACA,UAAY,EAAA;AAAA,IACV,cAAA;AAAA,IACA,gBAAA;AAAA,IACA,mBAAA;AAAA,IACA,wBAAA;AAAA,IACA,2BAAA;AAAA,IACA,6BAAA;AAAA,IACA,6BAAA;AAAA,IACA,oCAAA;AAAA,IACA,oCAAA;AAAA,IACA,8BAAA;AAAA,IACA;AAAA;AAEJ,CAAC,CAAA;;;;"}