import { PageWithHeader, Content, ContentHeader, CreateButton, SupportButton } from '@backstage/core-components';
import { useApi, configApiRef, useRouteRef } from '@backstage/core-plugin-api';
import { CatalogTable } from '@backstage/plugin-catalog';
import { EntityListProvider, CatalogFilterLayout, EntityKindPicker, EntityTypePicker, UserListPicker, EntityOwnerPicker, EntityLifecyclePicker, EntityTagPicker } from '@backstage/plugin-catalog-react';
import React from 'react';
import { registerComponentRouteRef } from '../../routes.esm.js';
import { usePermission } from '@backstage/plugin-permission-react';
import { catalogEntityCreatePermission } from '@backstage/plugin-catalog-common/alpha';

const defaultColumns = [
  CatalogTable.columns.createTitleColumn({ hidden: true }),
  CatalogTable.columns.createNameColumn({ defaultKind: "API" }),
  CatalogTable.columns.createSystemColumn(),
  CatalogTable.columns.createOwnerColumn(),
  CatalogTable.columns.createSpecTypeColumn(),
  CatalogTable.columns.createSpecLifecycleColumn(),
  CatalogTable.columns.createMetadataDescriptionColumn(),
  CatalogTable.columns.createTagsColumn()
];
const DefaultApiExplorerPage = (props) => {
  const {
    initiallySelectedFilter = "all",
    columns,
    actions,
    ownerPickerMode,
    pagination
  } = props;
  const configApi = useApi(configApiRef);
  const generatedSubtitle = `${configApi.getOptionalString("organization.name") ?? "Backstage"} API Explorer`;
  const registerComponentLink = useRouteRef(registerComponentRouteRef);
  const { allowed } = usePermission({
    permission: catalogEntityCreatePermission
  });
  return /* @__PURE__ */ React.createElement(
    PageWithHeader,
    {
      themeId: "apis",
      title: "APIs",
      subtitle: generatedSubtitle,
      pageTitleOverride: "APIs"
    },
    /* @__PURE__ */ React.createElement(Content, null, /* @__PURE__ */ React.createElement(ContentHeader, { title: "" }, allowed && /* @__PURE__ */ React.createElement(
      CreateButton,
      {
        title: "Register Existing API",
        to: registerComponentLink?.()
      }
    ), /* @__PURE__ */ React.createElement(SupportButton, null, "All your APIs")), /* @__PURE__ */ React.createElement(EntityListProvider, { pagination }, /* @__PURE__ */ React.createElement(CatalogFilterLayout, null, /* @__PURE__ */ React.createElement(CatalogFilterLayout.Filters, null, /* @__PURE__ */ React.createElement(EntityKindPicker, { initialFilter: "api", hidden: true }), /* @__PURE__ */ React.createElement(EntityTypePicker, null), /* @__PURE__ */ React.createElement(UserListPicker, { initialFilter: initiallySelectedFilter }), /* @__PURE__ */ React.createElement(EntityOwnerPicker, { mode: ownerPickerMode }), /* @__PURE__ */ React.createElement(EntityLifecyclePicker, null), /* @__PURE__ */ React.createElement(EntityTagPicker, null)), /* @__PURE__ */ React.createElement(CatalogFilterLayout.Content, null, /* @__PURE__ */ React.createElement(
      CatalogTable,
      {
        columns: columns || defaultColumns,
        actions
      }
    )))))
  );
};

export { DefaultApiExplorerPage };
//# sourceMappingURL=DefaultApiExplorerPage.esm.js.map
