import { useEntity } from '@backstage/plugin-catalog-react';
import Alert from '@material-ui/lab/Alert';
import React from 'react';
import { apiDocsConfigRef } from '../../config.esm.js';
import { PlainApiDefinitionWidget } from '../PlainApiDefinitionWidget/PlainApiDefinitionWidget.esm.js';
import { TabbedCard, CardTab } from '@backstage/core-components';
import { useApi } from '@backstage/core-plugin-api';

const ApiDefinitionCard = () => {
  const { entity } = useEntity();
  const config = useApi(apiDocsConfigRef);
  const { getApiDefinitionWidget } = config;
  if (!entity) {
    return /* @__PURE__ */ React.createElement(Alert, { severity: "error" }, "Could not fetch the API");
  }
  const definitionWidget = getApiDefinitionWidget(entity);
  const entityTitle = entity.metadata.title ?? entity.metadata.name;
  if (definitionWidget) {
    return /* @__PURE__ */ React.createElement(TabbedCard, { title: entityTitle }, /* @__PURE__ */ React.createElement(CardTab, { label: definitionWidget.title, key: "widget" }, definitionWidget.component(entity.spec.definition)), /* @__PURE__ */ React.createElement(CardTab, { label: "Raw", key: "raw" }, /* @__PURE__ */ React.createElement(
      PlainApiDefinitionWidget,
      {
        definition: entity.spec.definition,
        language: definitionWidget.rawLanguage || entity.spec.type
      }
    )));
  }
  return /* @__PURE__ */ React.createElement(
    TabbedCard,
    {
      title: entityTitle,
      children: [
        // Has to be an array, otherwise typescript doesn't like that this has only a single child
        /* @__PURE__ */ React.createElement(CardTab, { label: entity.spec.type, key: "raw" }, /* @__PURE__ */ React.createElement(
          PlainApiDefinitionWidget,
          {
            definition: entity.spec.definition,
            language: entity.spec.type
          }
        ))
      ]
    }
  );
};

export { ApiDefinitionCard };
//# sourceMappingURL=ApiDefinitionCard.esm.js.map
