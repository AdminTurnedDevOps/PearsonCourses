'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var backendPluginApi = require('@backstage/backend-plugin-api');
var alpha = require('@backstage/plugin-search-backend-node/alpha');
var PgSearchEngine = require('./PgSearchEngine/PgSearchEngine.cjs.js');

var feature = backendPluginApi.createBackendModule({
  pluginId: "search",
  moduleId: "postgres-engine",
  register(env) {
    env.registerInit({
      deps: {
        searchEngineRegistry: alpha.searchEngineRegistryExtensionPoint,
        database: backendPluginApi.coreServices.database,
        config: backendPluginApi.coreServices.rootConfig,
        logger: backendPluginApi.coreServices.logger
      },
      async init({ searchEngineRegistry, database, config, logger }) {
        if (await PgSearchEngine.PgSearchEngine.supported(database)) {
          searchEngineRegistry.setSearchEngine(
            await PgSearchEngine.PgSearchEngine.fromConfig(config, {
              database,
              logger
            })
          );
        } else {
          logger.warn(
            "Postgres search engine is not supported, skipping registration of search-backend-module-pg"
          );
        }
      }
    });
  }
});

exports.default = feature;
//# sourceMappingURL=module.cjs.js.map
