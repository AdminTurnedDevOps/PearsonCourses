import { getOrCreateGlobalSingleton } from '@backstage/version-bridge';

const globalStore = getOrCreateGlobalSingleton(
  "component-data-store",
  () => /* @__PURE__ */ new WeakMap()
);
const componentDataKey = "__backstage_data";
function attachComponentData(component, type, data) {
  const dataComponent = component;
  let container = dataComponent[componentDataKey] ?? globalStore.get(component);
  if (!container) {
    container = { map: /* @__PURE__ */ new Map() };
    Object.defineProperty(dataComponent, componentDataKey, {
      enumerable: false,
      configurable: true,
      writable: false,
      value: container
    });
    globalStore.set(component, container);
  }
  if (container.map.has(type)) {
    const name = component.displayName || component.name;
    throw new Error(
      `Attempted to attach duplicate data "${type}" to component "${name}"`
    );
  }
  container.map.set(type, data);
}
function getComponentData(node, type) {
  if (!node) {
    return void 0;
  }
  const component = node.type;
  if (!component) {
    return void 0;
  }
  const container = component[componentDataKey] ?? globalStore.get(component);
  if (!container) {
    return void 0;
  }
  return container.map.get(type);
}

export { attachComponentData, getComponentData };
//# sourceMappingURL=componentData.esm.js.map
