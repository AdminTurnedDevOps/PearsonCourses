{"version":3,"file":"componentData.esm.js","sources":["../../src/extensions/componentData.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentType, ReactNode } from 'react';\nimport { getOrCreateGlobalSingleton } from '@backstage/version-bridge';\n\ntype DataContainer = {\n  map: Map<string, unknown>;\n};\n\n// This method of storing the component data was deprecated in September 2021, it\n// will be removed in the future for the reasons described below.\nconst globalStore = getOrCreateGlobalSingleton(\n  'component-data-store',\n  () => new WeakMap<ComponentType<any>, DataContainer>(),\n);\n\n// This key is used to attach component data to the component type (function or class)\n// itself. This method is used because it has better compatibility component wrappers\n// like react-hot-loader, as opposed to the WeakMap method or using a symbol.\nconst componentDataKey = '__backstage_data';\n\ntype ComponentWithData = ComponentType<any> & {\n  [componentDataKey]?: DataContainer;\n};\n\ntype MaybeComponentNode = ReactNode & {\n  type?: ComponentWithData;\n};\n\n/**\n * Stores data related to a component in a global store.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/plugins/composability#component-data}.\n *\n * @param component - The component to attach the data to.\n * @param type - The key under which the data will be stored.\n * @param data - Arbitrary value.\n * @public\n */\nexport function attachComponentData<P>(\n  component: ComponentType<P>,\n  type: string,\n  data: unknown,\n) {\n  const dataComponent = component as ComponentWithData;\n\n  let container = dataComponent[componentDataKey] ?? globalStore.get(component);\n  if (!container) {\n    container = { map: new Map() };\n    Object.defineProperty(dataComponent, componentDataKey, {\n      enumerable: false,\n      configurable: true,\n      writable: false,\n      value: container,\n    });\n    globalStore.set(component, container);\n  }\n\n  if (container.map.has(type)) {\n    const name = component.displayName || component.name;\n    throw new Error(\n      `Attempted to attach duplicate data \"${type}\" to component \"${name}\"`,\n    );\n  }\n\n  container.map.set(type, data);\n}\n\n/**\n * Retrieves data attached to a component.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/plugins/composability#component-data}.\n *\n * @param node - React component to look up.\n * @param type - Key of the data to retrieve.\n * @returns Data stored using {@link attachComponentData}.\n * @public\n */\nexport function getComponentData<T>(\n  node: ReactNode,\n  type: string,\n): T | undefined {\n  if (!node) {\n    return undefined;\n  }\n\n  const component = (node as MaybeComponentNode).type;\n  if (!component) {\n    return undefined;\n  }\n\n  const container = component[componentDataKey] ?? globalStore.get(component);\n  if (!container) {\n    return undefined;\n  }\n\n  return container.map.get(type) as T | undefined;\n}\n"],"names":[],"mappings":";;AAyBA,MAAM,WAAc,GAAA,0BAAA;AAAA,EAClB,sBAAA;AAAA,EACA,0BAAU,OAA2C;AACvD,CAAA;AAKA,MAAM,gBAAmB,GAAA,kBAAA;AAsBT,SAAA,mBAAA,CACd,SACA,EAAA,IAAA,EACA,IACA,EAAA;AACA,EAAA,MAAM,aAAgB,GAAA,SAAA;AAEtB,EAAA,IAAI,YAAY,aAAc,CAAA,gBAAgB,CAAK,IAAA,WAAA,CAAY,IAAI,SAAS,CAAA;AAC5E,EAAA,IAAI,CAAC,SAAW,EAAA;AACd,IAAA,SAAA,GAAY,EAAE,GAAA,kBAAS,IAAA,GAAA,EAAM,EAAA;AAC7B,IAAO,MAAA,CAAA,cAAA,CAAe,eAAe,gBAAkB,EAAA;AAAA,MACrD,UAAY,EAAA,KAAA;AAAA,MACZ,YAAc,EAAA,IAAA;AAAA,MACd,QAAU,EAAA,KAAA;AAAA,MACV,KAAO,EAAA;AAAA,KACR,CAAA;AACD,IAAY,WAAA,CAAA,GAAA,CAAI,WAAW,SAAS,CAAA;AAAA;AAGtC,EAAA,IAAI,SAAU,CAAA,GAAA,CAAI,GAAI,CAAA,IAAI,CAAG,EAAA;AAC3B,IAAM,MAAA,IAAA,GAAO,SAAU,CAAA,WAAA,IAAe,SAAU,CAAA,IAAA;AAChD,IAAA,MAAM,IAAI,KAAA;AAAA,MACR,CAAA,oCAAA,EAAuC,IAAI,CAAA,gBAAA,EAAmB,IAAI,CAAA,CAAA;AAAA,KACpE;AAAA;AAGF,EAAU,SAAA,CAAA,GAAA,CAAI,GAAI,CAAA,IAAA,EAAM,IAAI,CAAA;AAC9B;AAcgB,SAAA,gBAAA,CACd,MACA,IACe,EAAA;AACf,EAAA,IAAI,CAAC,IAAM,EAAA;AACT,IAAO,OAAA,KAAA,CAAA;AAAA;AAGT,EAAA,MAAM,YAAa,IAA4B,CAAA,IAAA;AAC/C,EAAA,IAAI,CAAC,SAAW,EAAA;AACd,IAAO,OAAA,KAAA,CAAA;AAAA;AAGT,EAAA,MAAM,YAAY,SAAU,CAAA,gBAAgB,CAAK,IAAA,WAAA,CAAY,IAAI,SAAS,CAAA;AAC1E,EAAA,IAAI,CAAC,SAAW,EAAA;AACd,IAAO,OAAA,KAAA,CAAA;AAAA;AAGT,EAAO,OAAA,SAAA,CAAU,GAAI,CAAA,GAAA,CAAI,IAAI,CAAA;AAC/B;;;;"}