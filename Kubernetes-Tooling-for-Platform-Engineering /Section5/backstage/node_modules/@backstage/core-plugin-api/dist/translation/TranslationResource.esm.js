function createTranslationResource(options) {
  return {
    $$type: "@backstage/TranslationResource",
    version: "v1",
    id: options.ref.id,
    resources: Object.entries(options.translations).map(
      ([language, loader]) => ({
        language,
        loader: () => loader().then((m) => {
          const value = m.default;
          return {
            messages: value?.$$type === "@backstage/TranslationMessages" ? value.messages : value
          };
        })
      })
    )
  };
}

export { createTranslationResource };
//# sourceMappingURL=TranslationResource.esm.js.map
