class ApiRefImpl {
  constructor(config) {
    this.config = config;
    const valid = config.id.split(".").flatMap((part) => part.split("-")).every((part) => part.match(/^[a-z][a-z0-9]*$/));
    if (!valid) {
      throw new Error(
        `API id must only contain period separated lowercase alphanum tokens with dashes, got '${config.id}'`
      );
    }
  }
  get id() {
    return this.config.id;
  }
  // Utility for getting type of an api, using `typeof apiRef.T`
  get T() {
    throw new Error(`tried to read ApiRef.T of ${this}`);
  }
  toString() {
    return `apiRef{${this.config.id}}`;
  }
}
function createApiRef(config) {
  return new ApiRefImpl(config);
}

export { createApiRef };
//# sourceMappingURL=ApiRef.esm.js.map
