{"version":3,"file":"AppThemeApi.esm.js","sources":["../../../src/apis/definitions/AppThemeApi.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ReactNode } from 'react';\nimport { ApiRef, createApiRef } from '../system';\nimport { Observable } from '@backstage/types';\n\n/**\n * Describes a theme provided by the app.\n *\n * @public\n */\nexport type AppTheme = {\n  /**\n   * ID used to remember theme selections.\n   */\n  id: string;\n\n  /**\n   * Title of the theme\n   */\n  title: string;\n\n  /**\n   * Theme variant\n   */\n  variant: 'light' | 'dark';\n\n  /**\n   * An Icon for the theme mode setting.\n   */\n  icon?: React.ReactElement;\n\n  Provider(props: { children: ReactNode }): JSX.Element | null;\n};\n\n/**\n * The AppThemeApi gives access to the current app theme, and allows switching\n * to other options that have been registered as a part of the App.\n *\n * @public\n */\nexport type AppThemeApi = {\n  /**\n   * Get a list of available themes.\n   */\n  getInstalledThemes(): AppTheme[];\n\n  /**\n   * Observe the currently selected theme. A value of undefined means no specific theme has been selected.\n   */\n  activeThemeId$(): Observable<string | undefined>;\n\n  /**\n   * Get the current theme ID. Returns undefined if no specific theme is selected.\n   */\n  getActiveThemeId(): string | undefined;\n\n  /**\n   * Set a specific theme to use in the app, overriding the default theme selection.\n   *\n   * Clear the selection by passing in undefined.\n   */\n  setActiveThemeId(themeId?: string): void;\n};\n\n/**\n * The {@link ApiRef} of {@link AppThemeApi}.\n *\n * @public\n */\nexport const appThemeApiRef: ApiRef<AppThemeApi> = createApiRef({\n  id: 'core.apptheme',\n});\n"],"names":[],"mappings":";;;;;AAoFO,MAAM,iBAAsC,YAAa,CAAA;AAAA,EAC9D,EAAI,EAAA;AACN,CAAC;;;;"}