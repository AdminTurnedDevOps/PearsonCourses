{"version":3,"file":"DiscoveryApi.esm.js","sources":["../../../src/apis/definitions/DiscoveryApi.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ApiRef, createApiRef } from '../system';\n\n/**\n * The discovery API is used to provide a mechanism for plugins to\n * discover the endpoint to use to talk to their backend counterpart.\n *\n * @remarks\n *\n * The purpose of the discovery API is to allow for many different deployment\n * setups and routing methods through a central configuration, instead\n * of letting each individual plugin manage that configuration.\n *\n * Implementations of the discovery API can be a simple as a URL pattern\n * using the pluginId, but could also have overrides for individual plugins,\n * or query a separate discovery service.\n *\n * @public\n */\nexport type DiscoveryApi = {\n  /**\n   * Returns the HTTP base backend URL for a given plugin, without a trailing slash.\n   *\n   * This method must always be called just before making a request, as opposed to\n   * fetching the URL when constructing an API client. That is to ensure that more\n   * flexible routing patterns can be supported.\n   *\n   * For example, asking for the URL for `auth` may return something\n   * like `https://backstage.example.com/api/auth`\n   */\n  getBaseUrl(pluginId: string): Promise<string>;\n};\n\n/**\n * The {@link ApiRef} of {@link DiscoveryApi}.\n *\n * @public\n */\nexport const discoveryApiRef: ApiRef<DiscoveryApi> = createApiRef({\n  id: 'core.discovery',\n});\n"],"names":[],"mappings":";;;;;AAoDO,MAAM,kBAAwC,YAAa,CAAA;AAAA,EAChE,EAAI,EAAA;AACN,CAAC;;;;"}