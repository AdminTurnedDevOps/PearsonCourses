{"version":3,"file":"IdentityApi.esm.js","sources":["../../../src/apis/definitions/IdentityApi.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ApiRef, createApiRef } from '../system';\nimport { BackstageUserIdentity, ProfileInfo } from './auth';\n\n/**\n * The Identity API used to identify and get information about the signed in user.\n *\n * @public\n */\nexport type IdentityApi = {\n  /**\n   * The profile of the signed in user.\n   */\n  getProfileInfo(): Promise<ProfileInfo>;\n\n  /**\n   * User identity information within Backstage.\n   */\n  getBackstageIdentity(): Promise<BackstageUserIdentity>;\n\n  /**\n   * Provides credentials in the form of a token which proves the identity of the signed in user.\n   *\n   * The token will be undefined if the signed in user does not have a verified\n   * identity, such as a demo user or mocked user for e2e tests.\n   */\n  getCredentials(): Promise<{ token?: string }>;\n\n  /**\n   * Sign out the current user\n   */\n  signOut(): Promise<void>;\n};\n\n/**\n * The {@link ApiRef} of {@link IdentityApi}.\n *\n * @public\n */\nexport const identityApiRef: ApiRef<IdentityApi> = createApiRef({\n  id: 'core.identity',\n});\n"],"names":[],"mappings":";;;;;AAqDO,MAAM,iBAAsC,YAAa,CAAA;AAAA,EAC9D,EAAI,EAAA;AACN,CAAC;;;;"}