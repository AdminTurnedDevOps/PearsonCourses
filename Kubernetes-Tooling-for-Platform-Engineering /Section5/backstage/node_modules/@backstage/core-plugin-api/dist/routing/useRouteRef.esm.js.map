{"version":3,"file":"useRouteRef.esm.js","sources":["../../src/routing/useRouteRef.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useMemo } from 'react';\nimport { matchRoutes, useLocation } from 'react-router-dom';\nimport { useVersionedContext } from '@backstage/version-bridge';\nimport {\n  AnyParams,\n  ExternalRouteRef,\n  RouteFunc,\n  RouteRef,\n  SubRouteRef,\n} from './types';\n\n/**\n * @internal\n */\nexport interface RouteResolver {\n  resolve<Params extends AnyParams>(\n    anyRouteRef:\n      | RouteRef<Params>\n      | SubRouteRef<Params>\n      | ExternalRouteRef<Params, any>,\n    sourceLocation: Parameters<typeof matchRoutes>[1],\n  ): RouteFunc<Params> | undefined;\n}\n\n/**\n * React hook for constructing URLs to routes.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/plugins/composability#routing-system}\n *\n * @param routeRef - The ref to route that should be converted to URL.\n * @returns A function that will in turn return the concrete URL of the `routeRef`.\n * @public\n */\nexport function useRouteRef<Optional extends boolean, Params extends AnyParams>(\n  routeRef: ExternalRouteRef<Params, Optional>,\n): Optional extends true ? RouteFunc<Params> | undefined : RouteFunc<Params>;\n\n/**\n * React hook for constructing URLs to routes.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/plugins/composability#routing-system}\n *\n * @param routeRef - The ref to route that should be converted to URL.\n * @returns A function that will in turn return the concrete URL of the `routeRef`.\n * @public\n */\nexport function useRouteRef<Params extends AnyParams>(\n  routeRef: RouteRef<Params> | SubRouteRef<Params>,\n): RouteFunc<Params>;\n\n/**\n * React hook for constructing URLs to routes.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/plugins/composability#routing-system}\n *\n * @param routeRef - The ref to route that should be converted to URL.\n * @returns A function that will in turn return the concrete URL of the `routeRef`.\n * @public\n */\nexport function useRouteRef<Params extends AnyParams>(\n  routeRef:\n    | RouteRef<Params>\n    | SubRouteRef<Params>\n    | ExternalRouteRef<Params, any>,\n): RouteFunc<Params> | undefined {\n  const { pathname } = useLocation();\n  const versionedContext = useVersionedContext<{ 1: RouteResolver }>(\n    'routing-context',\n  );\n  if (!versionedContext) {\n    throw new Error('Routing context is not available');\n  }\n\n  const resolver = versionedContext.atVersion(1);\n  const routeFunc = useMemo(\n    () => resolver && resolver.resolve(routeRef, { pathname }),\n    [resolver, routeRef, pathname],\n  );\n\n  if (!versionedContext) {\n    throw new Error('useRouteRef used outside of routing context');\n  }\n  if (!resolver) {\n    throw new Error('RoutingContext v1 not available');\n  }\n\n  const isOptional = 'optional' in routeRef && routeRef.optional;\n  if (!routeFunc && !isOptional) {\n    throw new Error(`No path for ${routeRef}`);\n  }\n\n  return routeFunc;\n}\n"],"names":[],"mappings":";;;;AAiFO,SAAS,YACd,QAI+B,EAAA;AAC/B,EAAM,MAAA,EAAE,QAAS,EAAA,GAAI,WAAY,EAAA;AACjC,EAAA,MAAM,gBAAmB,GAAA,mBAAA;AAAA,IACvB;AAAA,GACF;AACA,EAAA,IAAI,CAAC,gBAAkB,EAAA;AACrB,IAAM,MAAA,IAAI,MAAM,kCAAkC,CAAA;AAAA;AAGpD,EAAM,MAAA,QAAA,GAAW,gBAAiB,CAAA,SAAA,CAAU,CAAC,CAAA;AAC7C,EAAA,MAAM,SAAY,GAAA,OAAA;AAAA,IAChB,MAAM,QAAY,IAAA,QAAA,CAAS,QAAQ,QAAU,EAAA,EAAE,UAAU,CAAA;AAAA,IACzD,CAAC,QAAU,EAAA,QAAA,EAAU,QAAQ;AAAA,GAC/B;AAEA,EAAA,IAAI,CAAC,gBAAkB,EAAA;AACrB,IAAM,MAAA,IAAI,MAAM,6CAA6C,CAAA;AAAA;AAE/D,EAAA,IAAI,CAAC,QAAU,EAAA;AACb,IAAM,MAAA,IAAI,MAAM,iCAAiC,CAAA;AAAA;AAGnD,EAAM,MAAA,UAAA,GAAa,UAAc,IAAA,QAAA,IAAY,QAAS,CAAA,QAAA;AACtD,EAAI,IAAA,CAAC,SAAa,IAAA,CAAC,UAAY,EAAA;AAC7B,IAAA,MAAM,IAAI,KAAA,CAAM,CAAe,YAAA,EAAA,QAAQ,CAAE,CAAA,CAAA;AAAA;AAG3C,EAAO,OAAA,SAAA;AACT;;;;"}