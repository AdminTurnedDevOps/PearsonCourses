import { useMemo } from 'react';
import { useLocation } from 'react-router-dom';
import { useVersionedContext } from '@backstage/version-bridge';

function useRouteRef(routeRef) {
  const { pathname } = useLocation();
  const versionedContext = useVersionedContext(
    "routing-context"
  );
  if (!versionedContext) {
    throw new Error("Routing context is not available");
  }
  const resolver = versionedContext.atVersion(1);
  const routeFunc = useMemo(
    () => resolver && resolver.resolve(routeRef, { pathname }),
    [resolver, routeRef, pathname]
  );
  if (!versionedContext) {
    throw new Error("useRouteRef used outside of routing context");
  }
  if (!resolver) {
    throw new Error("RoutingContext v1 not available");
  }
  const isOptional = "optional" in routeRef && routeRef.optional;
  if (!routeFunc && !isOptional) {
    throw new Error(`No path for ${routeRef}`);
  }
  return routeFunc;
}

export { useRouteRef };
//# sourceMappingURL=useRouteRef.esm.js.map
