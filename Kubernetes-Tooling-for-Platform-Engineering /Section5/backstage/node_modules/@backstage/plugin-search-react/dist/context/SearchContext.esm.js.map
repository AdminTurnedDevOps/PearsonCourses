{"version":3,"file":"SearchContext.esm.js","sources":["../../src/context/SearchContext.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isEqual } from 'lodash';\nimport React, {\n  PropsWithChildren,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport useAsync, { AsyncState } from 'react-use/esm/useAsync';\nimport usePrevious from 'react-use/esm/usePrevious';\n\nimport {\n  createVersionedContext,\n  createVersionedValueMap,\n} from '@backstage/version-bridge';\nimport { JsonObject } from '@backstage/types';\nimport {\n  AnalyticsContext,\n  useApi,\n  configApiRef,\n  useAnalytics,\n} from '@backstage/core-plugin-api';\nimport { SearchResultSet } from '@backstage/plugin-search-common';\n\nimport { searchApiRef } from '../api';\n\n/**\n *\n * @public\n */\nexport type SearchContextValue = {\n  result: AsyncState<SearchResultSet>;\n  setTerm: React.Dispatch<React.SetStateAction<string>>;\n  setTypes: React.Dispatch<React.SetStateAction<string[]>>;\n  setFilters: React.Dispatch<React.SetStateAction<JsonObject>>;\n  setPageLimit: React.Dispatch<React.SetStateAction<number | undefined>>;\n  setPageCursor: React.Dispatch<React.SetStateAction<string | undefined>>;\n  fetchNextPage?: React.DispatchWithoutAction;\n  fetchPreviousPage?: React.DispatchWithoutAction;\n} & SearchContextState;\n\n/**\n *\n * @public\n */\nexport type SearchContextState = {\n  term: string;\n  types: string[];\n  filters: JsonObject;\n  pageLimit?: number;\n  pageCursor?: string;\n};\n\nconst SearchContext = createVersionedContext<{\n  1: SearchContextValue;\n}>('search-context');\n\n/**\n * @public\n *\n * React hook which provides the search context\n */\nexport const useSearch = () => {\n  const context = useContext(SearchContext);\n  if (!context) {\n    throw new Error('useSearch must be used within a SearchContextProvider');\n  }\n\n  const value = context.atVersion(1);\n  if (!value) {\n    throw new Error('No SearchContext v1 found');\n  }\n  return value;\n};\n\n/**\n * @public\n *\n * React hook which checks for an existing search context\n */\nexport const useSearchContextCheck = () => {\n  const context = useContext(SearchContext);\n  return context !== undefined;\n};\n\n/**\n * The initial state of `SearchContextProvider`.\n *\n */\nconst defaultInitialSearchState: SearchContextState = {\n  term: '',\n  types: [],\n  filters: {},\n  pageLimit: undefined,\n  pageCursor: undefined,\n};\n\nconst useSearchContextValue = (\n  initialValue: SearchContextState = defaultInitialSearchState,\n) => {\n  const searchApi = useApi(searchApiRef);\n  const analytics = useAnalytics();\n\n  const [term, setTerm] = useState<string>(initialValue.term);\n  const [types, setTypes] = useState<string[]>(initialValue.types);\n  const [filters, setFilters] = useState<JsonObject>(initialValue.filters);\n  const [pageLimit, setPageLimit] = useState<number | undefined>(\n    initialValue.pageLimit,\n  );\n  const [pageCursor, setPageCursor] = useState<string | undefined>(\n    initialValue.pageCursor,\n  );\n\n  const prevTerm = usePrevious(term);\n  const prevFilters = usePrevious(filters);\n\n  const result = useAsync(async () => {\n    const resultSet = await searchApi.query({\n      term,\n      types,\n      filters,\n      pageLimit,\n      pageCursor,\n    });\n    if (term) {\n      analytics.captureEvent('search', term, {\n        value: result.value?.numberOfResults ?? undefined,\n      });\n    }\n    return resultSet;\n  }, [term, types, filters, pageLimit, pageCursor]);\n\n  const hasNextPage =\n    !result.loading && !result.error && result.value?.nextPageCursor;\n  const hasPreviousPage =\n    !result.loading && !result.error && result.value?.previousPageCursor;\n\n  const fetchNextPage = useCallback(() => {\n    setPageCursor(result.value?.nextPageCursor);\n  }, [result.value?.nextPageCursor]);\n\n  const fetchPreviousPage = useCallback(() => {\n    setPageCursor(result.value?.previousPageCursor);\n  }, [result.value?.previousPageCursor]);\n\n  useEffect(() => {\n    // Any time a term is reset, we want to start from page 0.\n    // Only reset the term if it has been modified by the user at least once, the initial state must not reset the term.\n    if (prevTerm !== undefined && term !== prevTerm) {\n      setPageCursor(undefined);\n    }\n  }, [term, prevTerm, setPageCursor]);\n\n  useEffect(() => {\n    // Any time filters is reset, we want to start from page 0.\n    // Only reset the page if it has been modified by the user at least once, the initial state must not reset the page.\n    if (prevFilters !== undefined && !isEqual(filters, prevFilters)) {\n      setPageCursor(undefined);\n    }\n  }, [filters, prevFilters, setPageCursor]);\n\n  const value: SearchContextValue = {\n    result,\n    term,\n    setTerm,\n    types,\n    setTypes,\n    filters,\n    setFilters,\n    pageLimit,\n    setPageLimit,\n    pageCursor,\n    setPageCursor,\n    fetchNextPage: hasNextPage ? fetchNextPage : undefined,\n    fetchPreviousPage: hasPreviousPage ? fetchPreviousPage : undefined,\n  };\n\n  return value;\n};\n\nexport type LocalSearchContextProps = PropsWithChildren<{\n  initialState?: SearchContextState;\n}>;\n\nconst LocalSearchContext = (props: SearchContextProviderProps) => {\n  const { initialState, children } = props;\n  const value = useSearchContextValue(initialState);\n\n  return (\n    <AnalyticsContext\n      attributes={{ searchTypes: value.types.sort().join(',') }}\n    >\n      <SearchContext.Provider value={createVersionedValueMap({ 1: value })}>\n        {children}\n      </SearchContext.Provider>\n    </AnalyticsContext>\n  );\n};\n\n/**\n * Props for {@link SearchContextProvider}\n *\n * @public\n */\nexport type SearchContextProviderProps =\n  | PropsWithChildren<{\n      /**\n       * State initialized by a local context.\n       */\n      initialState?: SearchContextState;\n      /**\n       * Do not create an inheritance from the parent, as a new initial state must be defined in a local context.\n       */\n      inheritParentContextIfAvailable?: never;\n    }>\n  | PropsWithChildren<{\n      /**\n       * Does not accept initial state since it is already initialized by parent context.\n       */\n      initialState?: never;\n      /**\n       * If true, don't create a child context if there is a parent one already defined.\n       * @remarks Defaults to false.\n       */\n      inheritParentContextIfAvailable?: boolean;\n    }>;\n\n/**\n * @public\n * Search context provider which gives you access to shared state between search components\n */\nexport const SearchContextProvider = (props: SearchContextProviderProps) => {\n  const { initialState, inheritParentContextIfAvailable, children } = props;\n  const hasParentContext = useSearchContextCheck();\n\n  const configApi = useApi(configApiRef);\n\n  const propsInitialSearchState = initialState ?? {};\n\n  const configInitialSearchState = configApi.has('search.query.pageLimit')\n    ? { pageLimit: configApi.getNumber('search.query.pageLimit') }\n    : {};\n\n  const searchContextInitialState = {\n    ...defaultInitialSearchState,\n    ...propsInitialSearchState,\n    ...configInitialSearchState,\n  };\n\n  return hasParentContext && inheritParentContextIfAvailable ? (\n    <>{children}</>\n  ) : (\n    <LocalSearchContext initialState={searchContextInitialState}>\n      {children}\n    </LocalSearchContext>\n  );\n};\n"],"names":[],"mappings":"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"}