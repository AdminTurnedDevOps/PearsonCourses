{"version":3,"file":"SearchResultGroup.esm.js","sources":["../../../src/components/SearchResultGroup/SearchResultGroup.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n  ChangeEvent,\n  PropsWithChildren,\n  ReactNode,\n  useCallback,\n  useState,\n} from 'react';\nimport qs from 'qs';\n\nimport List, { ListProps } from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputBase from '@material-ui/core/InputBase';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport ArrowRightIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport { JsonValue } from '@backstage/types';\nimport {\n  Link,\n  LinkProps,\n  Progress,\n  EmptyState,\n  ResponseErrorPanel,\n} from '@backstage/core-components';\nimport { AnalyticsContext } from '@backstage/core-plugin-api';\nimport { SearchResult } from '@backstage/plugin-search-common';\n\nimport { useSearchResultListItemExtensions } from '../../extensions';\n\nimport { DefaultResultListItem } from '../DefaultResultListItem';\nimport { SearchResultState, SearchResultStateProps } from '../SearchResult';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  listSubheader: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  listSubheaderName: {\n    marginLeft: theme.spacing(1),\n    textTransform: 'uppercase',\n  },\n  listSubheaderChip: {\n    color: theme.palette.text.secondary,\n    margin: theme.spacing(0, 0, 0, 1.5),\n  },\n  listSubheaderFilter: {\n    display: 'flex',\n    color: theme.palette.text.secondary,\n    margin: theme.spacing(0, 0, 0, 1.5),\n  },\n  listSubheaderLink: {\n    marginLeft: 'auto',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  listSubheaderLinkIcon: {\n    fontSize: 'inherit',\n    marginLeft: theme.spacing(0.5),\n  },\n}));\n\n/**\n * Props for {@link SearchResultGroupFilterFieldLayout}\n * @public\n */\nexport type SearchResultGroupFilterFieldLayoutProps = PropsWithChildren<{\n  label: string;\n  value?: JsonValue;\n  onDelete: () => void;\n}>;\n\n/**\n * Default layout for a search group filter field.\n * @param props - See {@link SearchResultGroupFilterFieldLayoutProps}.\n * @public\n */\nexport const SearchResultGroupFilterFieldLayout = (\n  props: SearchResultGroupFilterFieldLayoutProps,\n) => {\n  const classes = useStyles();\n  const { label, children, ...rest } = props;\n\n  return (\n    <Chip\n      {...rest}\n      className={classes.listSubheaderFilter}\n      variant=\"outlined\"\n      label={\n        <>\n          {label}: {children}\n        </>\n      }\n    />\n  );\n};\n\nconst NullIcon = () => null;\n\n/**\n * Common props for a result group filter field.\n * @public\n */\nexport type SearchResultGroupFilterFieldPropsWith<T> = T &\n  SearchResultGroupFilterFieldLayoutProps & {\n    onChange: (value: JsonValue) => void;\n  };\n\nconst useSearchResultGroupTextFilterStyles = makeStyles((theme: Theme) => ({\n  root: {\n    fontSize: 'inherit',\n    '&:focus': {\n      outline: 'none',\n      background: theme.palette.common.white,\n    },\n    '&:not(:focus)': {\n      cursor: 'pointer',\n      color: theme.palette.primary.main,\n      '&:hover': {\n        textDecoration: 'underline',\n      },\n    },\n  },\n}));\n\n/**\n * Props for {@link SearchResultGroupTextFilterField}.\n * @public\n */\nexport type SearchResultGroupTextFilterFieldProps =\n  SearchResultGroupFilterFieldPropsWith<{}>;\n\n/**\n * A text field that can be used as filter on search result groups.\n * @param props - See {@link SearchResultGroupTextFilterFieldProps}.\n * @example\n * ```\n * <SearchResultGroupTextFilterField\n *   id=\"lifecycle\"\n *   label=\"Lifecycle\"\n *   value={value}\n *   onChange={handleChangeFilter}\n *   onDelete={handleDeleteFilter}\n * />\n * ```\n * @public\n */\nexport const SearchResultGroupTextFilterField = (\n  props: SearchResultGroupTextFilterFieldProps,\n) => {\n  const classes = useSearchResultGroupTextFilterStyles();\n  const { label, value = 'None', onChange, onDelete } = props;\n\n  const handleChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      onChange(e.target.value);\n    },\n    [onChange],\n  );\n\n  return (\n    <SearchResultGroupFilterFieldLayout label={label} onDelete={onDelete}>\n      <Typography\n        role=\"textbox\"\n        component=\"span\"\n        className={classes.root}\n        onChange={handleChange}\n        contentEditable\n        suppressContentEditableWarning\n      >\n        {value?.toString()}\n      </Typography>\n    </SearchResultGroupFilterFieldLayout>\n  );\n};\n\nconst useSearchResultGroupSelectFilterStyles = makeStyles((theme: Theme) => ({\n  root: {\n    fontSize: 'inherit',\n    '&:not(:focus)': {\n      cursor: 'pointer',\n      color: theme.palette.primary.main,\n      '&:hover': {\n        textDecoration: 'underline',\n      },\n    },\n    '&:focus': {\n      outline: 'none',\n    },\n    '&>div:first-child': {\n      padding: 0,\n    },\n  },\n}));\n\n/**\n * Props for {@link SearchResultGroupTextFilterField}.\n * @public\n */\nexport type SearchResultGroupSelectFilterFieldProps =\n  SearchResultGroupFilterFieldPropsWith<{\n    children: ReactNode;\n  }>;\n\n/**\n * A select field that can be used as filter on search result groups.\n * @param props - See {@link SearchResultGroupSelectFilterFieldProps}.\n * @example\n * ```\n * <SearchResultGroupSelectFilterField\n *   id=\"lifecycle\"\n *   label=\"Lifecycle\"\n *   value={filters.lifecycle}\n *   onChange={handleChangeFilter}\n *   onDelete={handleDeleteFilter}\n * >\n *   <MenuItem value=\"experimental\">Experimental</MenuItem>\n *   <MenuItem value=\"production\">Production</MenuItem>\n *  </SearchResultGroupSelectFilterField>\n * ```\n * @public\n */\nexport const SearchResultGroupSelectFilterField = (\n  props: SearchResultGroupSelectFilterFieldProps,\n) => {\n  const classes = useSearchResultGroupSelectFilterStyles();\n  const { label, value = 'none', onChange, onDelete, children } = props;\n\n  const handleChange = useCallback(\n    (e: ChangeEvent<{ value: unknown }>) => {\n      onChange(e.target.value as JsonValue);\n    },\n    [onChange],\n  );\n\n  return (\n    <SearchResultGroupFilterFieldLayout label={label} onDelete={onDelete}>\n      <Select\n        className={classes.root}\n        value={value}\n        onChange={handleChange}\n        input={<InputBase />}\n        IconComponent={NullIcon}\n      >\n        <MenuItem value=\"none\">None</MenuItem>\n        {children}\n      </Select>\n    </SearchResultGroupFilterFieldLayout>\n  );\n};\n\n/**\n * Props for {@link SearchResultGroupLayout}\n * @public\n */\nexport type SearchResultGroupLayoutProps<FilterOption> = ListProps & {\n  /**\n   * If defined, will render a default error panel.\n   */\n  error?: Error;\n  /**\n   * If defined, will render a default loading progress.\n   */\n  loading?: boolean;\n  /**\n   * Icon that representing a result group.\n   */\n  icon: JSX.Element;\n  /**\n   * The results group title content, it could be a text or an element.\n   */\n  title: ReactNode;\n  /**\n   * Props for the results group title.\n   */\n  titleProps?: Partial<TypographyProps>;\n  /**\n   * The results group link content, it could be a text or an element.\n   */\n  link?: ReactNode;\n  /**\n   * Props for the results group link, the \"to\" prop defaults to \"/search\".\n   */\n  linkProps?: Partial<LinkProps>;\n  /**\n   * A generic filter options that is rendered on the \"Add filter\" dropdown.\n   */\n  filterOptions?: FilterOption[];\n  /**\n   * Function to customize how filter options are rendered.\n   * @remarks Defaults to a menu item where its value and label bounds to the option string.\n   */\n  renderFilterOption?: (\n    value: FilterOption,\n    index: number,\n    array: FilterOption[],\n  ) => JSX.Element | null;\n  /**\n   * A list of search filter keys, also known as filter field names.\n   */\n  filterFields?: string[];\n  /**\n   * Function to customize how filter chips are rendered.\n   */\n  renderFilterField?: (key: string) => JSX.Element | null;\n  /**\n   * Search results to be rendered as a group.\n   */\n  resultItems?: SearchResult[];\n  /**\n   * Function to customize how result items are rendered.\n   */\n  renderResultItem?: (\n    value: SearchResult,\n    index: number,\n    array: SearchResult[],\n  ) => JSX.Element | null;\n  /**\n   * Optional component to render when no results. Default to <EmptyState /> component.\n   */\n  noResultsComponent?: ReactNode;\n  /**\n   * Optional property to provide if component should not render the component when no results are found.\n   */\n  disableRenderingWithNoResults?: boolean;\n};\n\n/**\n * Default layout for rendering search results in a group.\n * @param props - See {@link SearchResultGroupLayoutProps}.\n * @public\n */\nexport function SearchResultGroupLayout<FilterOption>(\n  props: SearchResultGroupLayoutProps<FilterOption>,\n) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const {\n    error,\n    loading,\n    icon,\n    title,\n    titleProps = {},\n    link = (\n      <>\n        See all\n        <ArrowRightIcon className={classes.listSubheaderLinkIcon} />\n      </>\n    ),\n    linkProps = {},\n    filterOptions,\n    renderFilterOption = filterOption => (\n      <MenuItem key={String(filterOption)} value={String(filterOption)}>\n        {String(filterOption)}\n      </MenuItem>\n    ),\n    filterFields,\n    renderFilterField,\n    resultItems,\n    renderResultItem = resultItem => (\n      <DefaultResultListItem\n        key={resultItem.document.location}\n        result={resultItem.document}\n      />\n    ),\n    disableRenderingWithNoResults,\n    noResultsComponent = disableRenderingWithNoResults ? null : (\n      <EmptyState missing=\"data\" title=\"Sorry, no results were found\" />\n    ),\n    ...rest\n  } = props;\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(e.currentTarget);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, []);\n\n  if (loading) {\n    return <Progress />;\n  }\n\n  if (error) {\n    return (\n      <ResponseErrorPanel\n        title=\"Error encountered while fetching search results\"\n        error={error}\n      />\n    );\n  }\n\n  if (!resultItems?.length) {\n    return <>{noResultsComponent}</>;\n  }\n\n  return (\n    <List {...rest}>\n      <ListSubheader className={classes.listSubheader}>\n        {icon}\n        <Typography\n          className={classes.listSubheaderName}\n          component=\"strong\"\n          {...titleProps}\n        >\n          {title}\n        </Typography>\n        {filterOptions ? (\n          <Chip\n            className={classes.listSubheaderChip}\n            component=\"button\"\n            icon={<AddIcon />}\n            variant=\"outlined\"\n            label=\"Add filter\"\n            aria-controls=\"filters-menu\"\n            aria-haspopup=\"true\"\n            onClick={handleClick}\n          />\n        ) : null}\n        {filterOptions ? (\n          <Menu\n            id=\"filters-menu\"\n            anchorEl={anchorEl}\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n            onClick={handleClose}\n            keepMounted\n          >\n            {filterOptions.map(renderFilterOption)}\n          </Menu>\n        ) : null}\n        {filterFields?.map(\n          filterField => renderFilterField?.(filterField) ?? null,\n        )}\n        <Link className={classes.listSubheaderLink} to=\"/search\" {...linkProps}>\n          {link}\n        </Link>\n      </ListSubheader>\n      {resultItems.map(renderResultItem)}\n    </List>\n  );\n}\n\n/**\n * Props for {@link SearchResultGroup}.\n * @public\n */\nexport type SearchResultGroupProps<FilterOption> = Pick<\n  SearchResultStateProps,\n  'query'\n> &\n  Omit<\n    SearchResultGroupLayoutProps<FilterOption>,\n    'loading' | 'error' | 'resultItems' | 'filterFields'\n  >;\n\n/**\n * Given a query, search for results and render them as a group.\n * @param props - See {@link SearchResultGroupProps}.\n * @public\n */\nexport function SearchResultGroup<FilterOption>(\n  props: SearchResultGroupProps<FilterOption>,\n) {\n  const { query, children, renderResultItem, linkProps = {}, ...rest } = props;\n\n  const defaultRenderResultItem = useSearchResultListItemExtensions(children);\n\n  return (\n    <AnalyticsContext\n      attributes={{\n        pluginId: 'search',\n        extension: 'SearchResultGroup',\n      }}\n    >\n      <SearchResultState query={query}>\n        {(\n          { loading, error, value },\n          { term, types, pageCursor, filters = {} },\n        ) => {\n          const to = `/search?${qs.stringify(\n            { term, types, filters, pageCursor, query: term },\n            { arrayFormat: 'brackets' },\n          )}`;\n\n          return (\n            <SearchResultGroupLayout\n              {...rest}\n              error={error}\n              loading={loading}\n              linkProps={{ to, ...linkProps }}\n              filterFields={Object.keys(filters)}\n              resultItems={value?.results}\n              renderResultItem={renderResultItem ?? defaultRenderResultItem}\n            />\n          );\n        }}\n      </SearchResultState>\n    </AnalyticsContext>\n  );\n}\n"],"names":["DefaultResultListItem"],"mappings":"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"}