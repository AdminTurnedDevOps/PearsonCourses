import React, { useMemo, useCallback } from 'react';
import TablePagination from '@material-ui/core/TablePagination';
import { useSearch } from '../../context/SearchContext.esm.js';

const encodePageCursor = (pageCursor) => {
  return Buffer.from(pageCursor.toString(), "utf-8").toString("base64");
};
const decodePageCursor = (pageCursor) => {
  if (!pageCursor) return 0;
  return Number(Buffer.from(pageCursor, "base64").toString("utf-8"));
};
const SearchPaginationBase = (props) => {
  const {
    total: count = -1,
    cursor: pageCursor,
    hasNextPage,
    onCursorChange: onPageCursorChange,
    limit: rowsPerPage = 25,
    limitLabel: labelRowsPerPage = "Results per page:",
    limitText: labelDisplayedRows = ({ from, to }) => count > 0 ? `of ${count}` : `${from}-${to}`,
    limitOptions: rowsPerPageOptions,
    onLimitChange: onPageLimitChange,
    ...rest
  } = props;
  const page = useMemo(() => decodePageCursor(pageCursor), [pageCursor]);
  const handlePageChange = useCallback(
    (_, newValue) => {
      onPageCursorChange?.(encodePageCursor(newValue));
    },
    [onPageCursorChange]
  );
  const handleRowsPerPageChange = useCallback(
    (e) => {
      const newValue = e.target.value;
      onPageLimitChange?.(parseInt(newValue, 10));
    },
    [onPageLimitChange]
  );
  return /* @__PURE__ */ React.createElement(
    TablePagination,
    {
      ...rest,
      component: "div",
      count,
      page,
      nextIconButtonProps: {
        ...hasNextPage !== void 0 && { disabled: !hasNextPage }
      },
      onPageChange: handlePageChange,
      rowsPerPage,
      labelRowsPerPage,
      labelDisplayedRows,
      rowsPerPageOptions,
      onRowsPerPageChange: handleRowsPerPageChange
    }
  );
};
const SearchPagination = (props) => {
  const { pageLimit, setPageLimit, pageCursor, setPageCursor, fetchNextPage } = useSearch();
  const handlePageLimitChange = useCallback(
    (newPageLimit) => {
      setPageLimit(newPageLimit);
      setPageCursor(void 0);
    },
    [setPageLimit, setPageCursor]
  );
  return /* @__PURE__ */ React.createElement(
    SearchPaginationBase,
    {
      ...props,
      hasNextPage: !!fetchNextPage,
      limit: pageLimit,
      onLimitChange: handlePageLimitChange,
      cursor: pageCursor,
      onCursorChange: setPageCursor
    }
  );
};

export { SearchPagination, SearchPaginationBase };
//# sourceMappingURL=SearchPagination.esm.js.map
