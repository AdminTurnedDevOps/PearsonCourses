import React from 'react';
import List from '@material-ui/core/List';
import { Progress, ResponseErrorPanel, EmptyState } from '@backstage/core-components';
import { AnalyticsContext } from '@backstage/core-plugin-api';
import { useSearchResultListItemExtensions } from '../../extensions.esm.js';
import { DefaultResultListItem as HigherOrderDefaultResultListItem } from '../DefaultResultListItem/DefaultResultListItem.esm.js';
import { SearchResultState } from '../SearchResult/SearchResult.esm.js';

const SearchResultListLayout = (props) => {
  const {
    error,
    loading,
    resultItems,
    renderResultItem = (resultItem) => /* @__PURE__ */ React.createElement(
      HigherOrderDefaultResultListItem,
      {
        key: resultItem.document.location,
        result: resultItem.document
      }
    ),
    disableRenderingWithNoResults,
    noResultsComponent = disableRenderingWithNoResults ? null : /* @__PURE__ */ React.createElement(EmptyState, { missing: "data", title: "Sorry, no results were found" }),
    ...rest
  } = props;
  if (loading) {
    return /* @__PURE__ */ React.createElement(Progress, null);
  }
  if (error) {
    return /* @__PURE__ */ React.createElement(
      ResponseErrorPanel,
      {
        title: "Error encountered while fetching search results",
        error
      }
    );
  }
  if (!resultItems?.length) {
    return /* @__PURE__ */ React.createElement(React.Fragment, null, noResultsComponent);
  }
  return /* @__PURE__ */ React.createElement(List, { ...rest }, resultItems.map(renderResultItem));
};
const SearchResultList = (props) => {
  const { query, renderResultItem, children, ...rest } = props;
  const defaultRenderResultItem = useSearchResultListItemExtensions(children);
  return /* @__PURE__ */ React.createElement(
    AnalyticsContext,
    {
      attributes: {
        pluginId: "search",
        extension: "SearchResultList"
      }
    },
    /* @__PURE__ */ React.createElement(SearchResultState, { query }, ({ loading, error, value }) => /* @__PURE__ */ React.createElement(
      SearchResultListLayout,
      {
        ...rest,
        error,
        loading,
        resultItems: value?.results,
        renderResultItem: renderResultItem ?? defaultRenderResultItem
      }
    ))
  );
};

export { SearchResultList, SearchResultListLayout };
//# sourceMappingURL=SearchResultList.esm.js.map
