{"version":3,"file":"SearchAutocomplete.esm.js","sources":["../../../src/components/SearchAutocomplete/SearchAutocomplete.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ChangeEvent, useCallback, useMemo } from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Autocomplete, {\n  AutocompleteProps,\n  AutocompleteRenderInputParams,\n} from '@material-ui/lab/Autocomplete';\nimport {\n  AutocompleteChangeDetails,\n  AutocompleteChangeReason,\n} from '@material-ui/lab/useAutocomplete';\n\nimport { SearchContextProvider, useSearch } from '../../context';\nimport { SearchBar, SearchBarProps } from '../SearchBar';\n\nconst useStyles = makeStyles(theme => ({\n  loading: {\n    right: theme.spacing(1),\n    position: 'absolute',\n  },\n}));\n\n/**\n * Props for {@link SearchAutocomplete}.\n *\n * @public\n */\nexport type SearchAutocompleteProps<Option> = Omit<\n  AutocompleteProps<Option, undefined, undefined, boolean>,\n  'renderInput' | 'disableClearable' | 'multiple'\n> & {\n  'data-testid'?: string;\n  inputPlaceholder?: SearchBarProps['placeholder'];\n  inputDebounceTime?: SearchBarProps['debounceTime'];\n};\n\n/**\n * Type for {@link SearchAutocomplete}.\n *\n * @public\n */\nexport type SearchAutocompleteComponent = <Option>(\n  props: SearchAutocompleteProps<Option>,\n) => JSX.Element;\n\nconst withContext = (\n  Component: SearchAutocompleteComponent,\n): SearchAutocompleteComponent => {\n  return props => (\n    <SearchContextProvider inheritParentContextIfAvailable>\n      <Component {...props} />\n    </SearchContextProvider>\n  );\n};\n\nconst SearchAutocompleteLoadingAdornment = () => {\n  const classes = useStyles();\n  return (\n    <CircularProgress\n      className={classes.loading}\n      data-testid=\"search-autocomplete-progressbar\"\n      color=\"inherit\"\n      size={20}\n    />\n  );\n};\n\n/**\n * Recommended search autocomplete when you use the Search Provider or Search Context.\n *\n * @public\n */\nexport const SearchAutocomplete = withContext(\n  function SearchAutocompleteComponent<Option>(\n    props: SearchAutocompleteProps<Option>,\n  ) {\n    const {\n      loading,\n      value,\n      onChange = () => {},\n      options = [],\n      getOptionLabel = (option: Option) => String(option),\n      inputPlaceholder,\n      inputDebounceTime,\n      freeSolo = true,\n      fullWidth = true,\n      clearOnBlur = false,\n      'data-testid': dataTestId = 'search-autocomplete',\n      ...rest\n    } = props;\n\n    const { setTerm } = useSearch();\n\n    const getInputValue = useCallback(\n      (option?: null | string | Option) => {\n        if (!option) return '';\n        if (typeof option === 'string') return option;\n        return getOptionLabel(option);\n      },\n      [getOptionLabel],\n    );\n\n    const inputValue = useMemo(\n      () => getInputValue(value),\n      [value, getInputValue],\n    );\n\n    const handleChange = useCallback(\n      (\n        event: ChangeEvent<{}>,\n        option: null | string | Option,\n        reason: AutocompleteChangeReason,\n        details?: AutocompleteChangeDetails<Option>,\n      ) => {\n        setTerm(getInputValue(option));\n        onChange(event, option, reason, details);\n      },\n      [getInputValue, setTerm, onChange],\n    );\n\n    const renderInput = useCallback(\n      ({\n        InputProps: { ref, className, endAdornment },\n        InputLabelProps,\n        ...params\n      }: AutocompleteRenderInputParams) => (\n        <SearchBar\n          {...params}\n          ref={ref}\n          clearButton={false}\n          value={inputValue}\n          placeholder={inputPlaceholder}\n          debounceTime={inputDebounceTime}\n          endAdornment={\n            loading ? <SearchAutocompleteLoadingAdornment /> : endAdornment\n          }\n          InputProps={{ className }}\n        />\n      ),\n      [loading, inputValue, inputPlaceholder, inputDebounceTime],\n    );\n\n    return (\n      <Autocomplete\n        {...rest}\n        data-testid={dataTestId}\n        value={value}\n        onChange={handleChange}\n        options={options}\n        getOptionLabel={getOptionLabel}\n        renderInput={renderInput}\n        freeSolo={freeSolo}\n        fullWidth={fullWidth}\n        clearOnBlur={clearOnBlur}\n      />\n    );\n  },\n);\n"],"names":[],"mappings":"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"}