{"version":3,"file":"SearchResultList.esm.js","sources":["../../../src/components/SearchResultList/SearchResultList.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactNode } from 'react';\n\nimport List, { ListProps } from '@material-ui/core/List';\n\nimport {\n  Progress,\n  EmptyState,\n  ResponseErrorPanel,\n} from '@backstage/core-components';\nimport { AnalyticsContext } from '@backstage/core-plugin-api';\nimport { SearchResult } from '@backstage/plugin-search-common';\n\nimport { useSearchResultListItemExtensions } from '../../extensions';\n\nimport { DefaultResultListItem } from '../DefaultResultListItem';\nimport { SearchResultState, SearchResultStateProps } from '../SearchResult';\n\n/**\n * Props for {@link SearchResultListLayout}\n * @public\n */\nexport type SearchResultListLayoutProps = ListProps & {\n  /**\n   * If defined, will render a default error panel.\n   */\n  error?: Error;\n  /**\n   * If defined, will render a default loading progress.\n   */\n  loading?: boolean;\n  /**\n   * Search results to be rendered as a list.\n   */\n  resultItems?: SearchResult[];\n  /**\n   * Function to customize how result items are rendered.\n   */\n  renderResultItem?: (\n    value: SearchResult,\n    index: number,\n    array: SearchResult[],\n  ) => JSX.Element | null;\n  /**\n   * Optional component to render when no results. Default to <EmptyState /> component.\n   */\n  noResultsComponent?: ReactNode;\n  /**\n   * Optional property to provide if component should not render the component when no results are found.\n   */\n  disableRenderingWithNoResults?: boolean;\n};\n\n/**\n * Default layout for rendering search results in a list.\n * @param props - See {@link SearchResultListLayoutProps}.\n * @public\n */\nexport const SearchResultListLayout = (props: SearchResultListLayoutProps) => {\n  const {\n    error,\n    loading,\n    resultItems,\n    renderResultItem = resultItem => (\n      <DefaultResultListItem\n        key={resultItem.document.location}\n        result={resultItem.document}\n      />\n    ),\n    disableRenderingWithNoResults,\n    noResultsComponent = disableRenderingWithNoResults ? null : (\n      <EmptyState missing=\"data\" title=\"Sorry, no results were found\" />\n    ),\n    ...rest\n  } = props;\n\n  if (loading) {\n    return <Progress />;\n  }\n\n  if (error) {\n    return (\n      <ResponseErrorPanel\n        title=\"Error encountered while fetching search results\"\n        error={error}\n      />\n    );\n  }\n\n  if (!resultItems?.length) {\n    return <>{noResultsComponent}</>;\n  }\n\n  return <List {...rest}>{resultItems.map(renderResultItem)}</List>;\n};\n\n/**\n * Props for {@link SearchResultList}.\n * @public\n */\nexport type SearchResultListProps = Pick<SearchResultStateProps, 'query'> &\n  Omit<SearchResultListLayoutProps, 'loading' | 'error' | 'resultItems'>;\n\n/**\n * Given a query, search for results and render them as a list.\n * @param props - See {@link SearchResultListProps}.\n * @public\n */\nexport const SearchResultList = (props: SearchResultListProps) => {\n  const { query, renderResultItem, children, ...rest } = props;\n\n  const defaultRenderResultItem = useSearchResultListItemExtensions(children);\n\n  return (\n    <AnalyticsContext\n      attributes={{\n        pluginId: 'search',\n        extension: 'SearchResultList',\n      }}\n    >\n      <SearchResultState query={query}>\n        {({ loading, error, value }) => (\n          <SearchResultListLayout\n            {...rest}\n            error={error}\n            loading={loading}\n            resultItems={value?.results}\n            renderResultItem={renderResultItem ?? defaultRenderResultItem}\n          />\n        )}\n      </SearchResultState>\n    </AnalyticsContext>\n  );\n};\n"],"names":["DefaultResultListItem"],"mappings":";;;;;;;;AAyEa,MAAA,sBAAA,GAAyB,CAAC,KAAuC,KAAA;AAC5E,EAAM,MAAA;AAAA,IACJ,KAAA;AAAA,IACA,OAAA;AAAA,IACA,WAAA;AAAA,IACA,mBAAmB,CACjB,UAAA,qBAAA,KAAA,CAAA,aAAA;AAAA,MAACA,gCAAA;AAAA,MAAA;AAAA,QACC,GAAA,EAAK,WAAW,QAAS,CAAA,QAAA;AAAA,QACzB,QAAQ,UAAW,CAAA;AAAA;AAAA,KACrB;AAAA,IAEF,6BAAA;AAAA,IACA,kBAAA,GAAqB,gCAAgC,IACnD,mBAAA,KAAA,CAAA,aAAA,CAAC,cAAW,OAAQ,EAAA,MAAA,EAAO,OAAM,8BAA+B,EAAA,CAAA;AAAA,IAElE,GAAG;AAAA,GACD,GAAA,KAAA;AAEJ,EAAA,IAAI,OAAS,EAAA;AACX,IAAA,2CAAQ,QAAS,EAAA,IAAA,CAAA;AAAA;AAGnB,EAAA,IAAI,KAAO,EAAA;AACT,IACE,uBAAA,KAAA,CAAA,aAAA;AAAA,MAAC,kBAAA;AAAA,MAAA;AAAA,QACC,KAAM,EAAA,iDAAA;AAAA,QACN;AAAA;AAAA,KACF;AAAA;AAIJ,EAAI,IAAA,CAAC,aAAa,MAAQ,EAAA;AACxB,IAAA,iEAAU,kBAAmB,CAAA;AAAA;AAG/B,EAAA,2CAAQ,IAAM,EAAA,EAAA,GAAG,QAAO,WAAY,CAAA,GAAA,CAAI,gBAAgB,CAAE,CAAA;AAC5D;AAca,MAAA,gBAAA,GAAmB,CAAC,KAAiC,KAAA;AAChE,EAAA,MAAM,EAAE,KAAO,EAAA,gBAAA,EAAkB,QAAU,EAAA,GAAG,MAAS,GAAA,KAAA;AAEvD,EAAM,MAAA,uBAAA,GAA0B,kCAAkC,QAAQ,CAAA;AAE1E,EACE,uBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,gBAAA;AAAA,IAAA;AAAA,MACC,UAAY,EAAA;AAAA,QACV,QAAU,EAAA,QAAA;AAAA,QACV,SAAW,EAAA;AAAA;AACb,KAAA;AAAA,oBAEA,KAAA,CAAA,aAAA,CAAC,qBAAkB,KAChB,EAAA,EAAA,CAAC,EAAE,OAAS,EAAA,KAAA,EAAO,OAClB,qBAAA,KAAA,CAAA,aAAA;AAAA,MAAC,sBAAA;AAAA,MAAA;AAAA,QACE,GAAG,IAAA;AAAA,QACJ,KAAA;AAAA,QACA,OAAA;AAAA,QACA,aAAa,KAAO,EAAA,OAAA;AAAA,QACpB,kBAAkB,gBAAoB,IAAA;AAAA;AAAA,KAG5C;AAAA,GACF;AAEJ;;;;"}