import React, { useMemo } from 'react';
import { makeStyles } from '@material-ui/core/styles';

const useStyles = makeStyles(
  () => ({
    highlight: {}
  }),
  { name: "BackstageHighlightedSearchResultText" }
);
const HighlightedSearchResultText = (props) => {
  const { text, preTag, postTag } = props;
  const classes = useStyles();
  const terms = useMemo(
    () => text.split(new RegExp(`(${preTag}.+?${postTag})`)),
    [postTag, preTag, text]
  );
  return /* @__PURE__ */ React.createElement(React.Fragment, null, terms.map(
    (t, idx) => t.includes(preTag) ? /* @__PURE__ */ React.createElement("mark", { className: classes.highlight, key: idx }, t.replace(new RegExp(`${preTag}|${postTag}`, "g"), "")) : t
  ));
};

export { HighlightedSearchResultText };
//# sourceMappingURL=HighlightedSearchResultText.esm.js.map
