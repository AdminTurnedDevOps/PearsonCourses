{"version":3,"file":"extensions.esm.js","sources":["../src/extensions.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n  Fragment,\n  ReactNode,\n  PropsWithChildren,\n  isValidElement,\n  createElement,\n  cloneElement,\n  useCallback,\n} from 'react';\n\nimport {\n  getComponentData,\n  useElementFilter,\n  Extension,\n  createReactExtension,\n  useAnalytics,\n} from '@backstage/core-plugin-api';\nimport { SearchDocument, SearchResult } from '@backstage/plugin-search-common';\n\nimport List, { ListProps } from '@material-ui/core/List';\nimport ListItem, { ListItemProps } from '@material-ui/core/ListItem';\n\nimport { DefaultResultListItem } from './components/DefaultResultListItem';\n\n/**\n * @internal\n * Key for result extensions.\n */\nconst SEARCH_RESULT_LIST_ITEM_EXTENSION =\n  'search.results.list.items.extensions.v1';\n\n/**\n * @internal\n * Returns the first extension element found for a given result, and null otherwise.\n * @param elements - All extension elements.\n * @param result - The search result.\n */\nconst findSearchResultListItemExtensionElement = (\n  elements: ReactNode[],\n  result: SearchResult,\n) => {\n  for (const element of elements) {\n    if (!isValidElement(element)) continue;\n    const predicate = getComponentData<(result: SearchResult) => boolean>(\n      element,\n      SEARCH_RESULT_LIST_ITEM_EXTENSION,\n    );\n    if (!predicate?.(result)) continue;\n    return cloneElement(element, {\n      rank: result.rank,\n      highlight: result.highlight,\n      result: result.document,\n      // Use props in situations where a consumer is manually rendering the extension\n      ...element.props,\n    });\n  }\n  return null;\n};\n\n/**\n * @public\n * Extends props for any search result list item extension\n */\nexport type SearchResultListItemExtensionProps<Props extends {} = {}> = Props &\n  PropsWithChildren<\n    {\n      rank?: number;\n      result?: SearchDocument;\n      noTrack?: boolean;\n    } & Omit<ListItemProps, 'button'>\n  >;\n\n/**\n * @internal\n * Extends children with extension capabilities.\n * @param props - see {@link SearchResultListItemExtensionProps}.\n */\nexport const SearchResultListItemExtension = (\n  props: SearchResultListItemExtensionProps,\n) => {\n  const {\n    rank,\n    result,\n    noTrack,\n    children,\n    alignItems = 'flex-start',\n    ...rest\n  } = props;\n  const analytics = useAnalytics();\n\n  const handleClickCapture = useCallback(() => {\n    if (noTrack) return;\n    if (!result) return;\n    analytics.captureEvent('discover', result.title, {\n      attributes: { to: result.location },\n      value: rank,\n    });\n  }, [rank, result, noTrack, analytics]);\n\n  return (\n    <ListItem\n      divider\n      alignItems={alignItems}\n      onClickCapture={handleClickCapture}\n      {...rest}\n    >\n      {children}\n    </ListItem>\n  );\n};\n\n/**\n * @public\n * Options for {@link createSearchResultListItemExtension}.\n */\nexport type SearchResultListItemExtensionOptions<\n  Component extends (props: any) => JSX.Element | null,\n> = {\n  /**\n   * The extension name.\n   */\n  name: string;\n  /**\n   * The extension component.\n   */\n  component: () => Promise<Component>;\n  /**\n   * When an extension defines a predicate, it returns true if the result should be rendered by that extension.\n   * Defaults to a predicate that returns true, which means it renders all sorts of results.\n   */\n  predicate?: (result: SearchResult) => boolean;\n};\n\n/**\n * @public\n * Creates a search result item extension.\n * @param options - The extension options, see {@link SearchResultListItemExtensionOptions} for more details.\n */\nexport const createSearchResultListItemExtension = <\n  Component extends (props: any) => JSX.Element | null,\n>(\n  options: SearchResultListItemExtensionOptions<Component>,\n): Extension<Component> => {\n  const { name, component, predicate = () => true } = options;\n\n  return createReactExtension<Component>({\n    name,\n    component: {\n      lazy: () =>\n        component().then(\n          type =>\n            (props => (\n              <SearchResultListItemExtension\n                rank={props.rank}\n                result={props.result}\n                noTrack={props.noTrack}\n              >\n                {createElement(type, props)}\n              </SearchResultListItemExtension>\n            )) as Component,\n        ),\n    },\n    data: {\n      [SEARCH_RESULT_LIST_ITEM_EXTENSION]: predicate,\n    },\n  });\n};\n\n/**\n * @public\n * Returns a function that renders a result using extensions.\n */\nexport const useSearchResultListItemExtensions = (children: ReactNode) => {\n  const elements = useElementFilter(\n    children,\n    collection => {\n      return collection\n        .selectByComponentData({\n          key: SEARCH_RESULT_LIST_ITEM_EXTENSION,\n        })\n        .getElements();\n    },\n    [children],\n  );\n\n  return useCallback(\n    (result: SearchResult, key?: number) => {\n      const element = findSearchResultListItemExtensionElement(\n        elements,\n        result,\n      );\n\n      return (\n        <Fragment key={key}>\n          {element ?? (\n            <SearchResultListItemExtension\n              rank={result.rank}\n              result={result.document}\n            >\n              <DefaultResultListItem\n                rank={result.rank}\n                highlight={result.highlight}\n                result={result.document}\n              />\n            </SearchResultListItemExtension>\n          )}\n        </Fragment>\n      );\n    },\n    [elements],\n  );\n};\n\n/**\n * @public\n * Props for {@link SearchResultListItemExtensions}\n */\nexport type SearchResultListItemExtensionsProps = Omit<ListProps, 'results'> & {\n  /**\n   * Search result list.\n   */\n  results: SearchResult[];\n};\n\n/**\n * @public\n * Render results using search extensions.\n * @param props - see {@link SearchResultListItemExtensionsProps}\n */\nexport const SearchResultListItemExtensions = (\n  props: SearchResultListItemExtensionsProps,\n) => {\n  const { results, children, ...rest } = props;\n  const render = useSearchResultListItemExtensions(children);\n  return <List {...rest}>{results.map(render)}</List>;\n};\n"],"names":["DefaultResultListItem"],"mappings":"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"}