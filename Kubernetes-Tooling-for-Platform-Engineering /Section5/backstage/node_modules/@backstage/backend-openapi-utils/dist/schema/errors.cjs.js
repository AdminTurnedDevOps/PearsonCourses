'use strict';

var utils = require('./utils.cjs.js');

class OperationError extends Error {
  constructor(operation, message) {
    super(
      `["${operation.method.toLocaleUpperCase("en-US")} ${operation.path}"] ${message}`
    );
  }
}
class OperationResponseError extends Error {
  constructor(operation, response, message) {
    super(
      `["${operation.method.toLocaleUpperCase("en-US")} ${operation.path}" (${response.status})]: ${message}`
    );
  }
}
class OperationParsingError extends OperationError {
  constructor(operation, type, errors) {
    super(
      operation,
      `${type} validation failed.
 - ${errors.map(utils.humanifyAjvError).join("\n - ")}`
    );
  }
}
class OperationParsingResponseError extends OperationResponseError {
  constructor(operation, response, type, errors) {
    super(
      operation,
      response,
      `${type} validation failed.
 - ${errors.map(utils.humanifyAjvError).join("\n - ")}`
    );
  }
}

exports.OperationError = OperationError;
exports.OperationParsingError = OperationParsingError;
exports.OperationParsingResponseError = OperationParsingResponseError;
exports.OperationResponseError = OperationResponseError;
//# sourceMappingURL=errors.cjs.js.map
