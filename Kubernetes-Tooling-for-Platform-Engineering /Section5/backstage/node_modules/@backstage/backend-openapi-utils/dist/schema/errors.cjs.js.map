{"version":3,"file":"errors.cjs.js","sources":["../../src/schema/errors.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Operation } from './types';\nimport { ErrorObject } from 'ajv';\nimport { humanifyAjvError } from './utils';\n\nexport class OperationError extends Error {\n  constructor(operation: Operation, message: string) {\n    super(\n      `[\"${operation.method.toLocaleUpperCase('en-US')} ${\n        operation.path\n      }\"] ${message}`,\n    );\n  }\n}\n\nexport class OperationResponseError extends Error {\n  constructor(operation: Operation, response: Response, message: string) {\n    super(\n      `[\"${operation.method.toLocaleUpperCase('en-US')} ${operation.path}\" (${\n        response.status\n      })]: ${message}`,\n    );\n  }\n}\n\nexport class OperationParsingError extends OperationError {\n  constructor(operation: Operation, type: string, errors: ErrorObject[]) {\n    super(\n      operation,\n      `${type} validation failed.\\n - ${errors\n        .map(humanifyAjvError)\n        .join('\\n - ')}`,\n    );\n  }\n}\n\nexport class OperationParsingResponseError extends OperationResponseError {\n  constructor(\n    operation: Operation,\n    response: Response,\n    type: string,\n    errors: ErrorObject[],\n  ) {\n    super(\n      operation,\n      response,\n      `${type} validation failed.\\n - ${errors\n        .map(humanifyAjvError)\n        .join('\\n - ')}`,\n    );\n  }\n}\n"],"names":["humanifyAjvError"],"mappings":";;;;AAoBO,MAAM,uBAAuB,KAAM,CAAA;AAAA,EACxC,WAAA,CAAY,WAAsB,OAAiB,EAAA;AACjD,IAAA,KAAA;AAAA,MACE,CAAA,EAAA,EAAK,SAAU,CAAA,MAAA,CAAO,iBAAkB,CAAA,OAAO,CAAC,CAC9C,CAAA,EAAA,SAAA,CAAU,IACZ,CAAA,GAAA,EAAM,OAAO,CAAA;AAAA,KACf;AAAA;AAEJ;AAEO,MAAM,+BAA+B,KAAM,CAAA;AAAA,EAChD,WAAA,CAAY,SAAsB,EAAA,QAAA,EAAoB,OAAiB,EAAA;AACrE,IAAA,KAAA;AAAA,MACE,CAAK,EAAA,EAAA,SAAA,CAAU,MAAO,CAAA,iBAAA,CAAkB,OAAO,CAAC,CAAI,CAAA,EAAA,SAAA,CAAU,IAAI,CAAA,GAAA,EAChE,QAAS,CAAA,MACX,OAAO,OAAO,CAAA;AAAA,KAChB;AAAA;AAEJ;AAEO,MAAM,8BAA8B,cAAe,CAAA;AAAA,EACxD,WAAA,CAAY,SAAsB,EAAA,IAAA,EAAc,MAAuB,EAAA;AACrE,IAAA,KAAA;AAAA,MACE,SAAA;AAAA,MACA,GAAG,IAAI,CAAA;AAAA,GAAA,EAA2B,OAC/B,GAAI,CAAAA,sBAAgB,CACpB,CAAA,IAAA,CAAK,OAAO,CAAC,CAAA;AAAA,KAClB;AAAA;AAEJ;AAEO,MAAM,sCAAsC,sBAAuB,CAAA;AAAA,EACxE,WACE,CAAA,SAAA,EACA,QACA,EAAA,IAAA,EACA,MACA,EAAA;AACA,IAAA,KAAA;AAAA,MACE,SAAA;AAAA,MACA,QAAA;AAAA,MACA,GAAG,IAAI,CAAA;AAAA,GAAA,EAA2B,OAC/B,GAAI,CAAAA,sBAAgB,CACpB,CAAA,IAAA,CAAK,OAAO,CAAC,CAAA;AAAA,KAClB;AAAA;AAEJ;;;;;;;"}