'use strict';

var backendPluginApi = require('@backstage/backend-plugin-api');
var DefaultEventsService = require('./api/DefaultEventsService.cjs.js');

const eventsServiceRef = backendPluginApi.createServiceRef({
  id: "events.service",
  scope: "plugin"
});
const eventsServiceFactory = backendPluginApi.createServiceFactory({
  service: eventsServiceRef,
  deps: {
    pluginMetadata: backendPluginApi.coreServices.pluginMetadata,
    rootLogger: backendPluginApi.coreServices.rootLogger,
    discovery: backendPluginApi.coreServices.discovery,
    logger: backendPluginApi.coreServices.logger,
    lifecycle: backendPluginApi.coreServices.lifecycle,
    auth: backendPluginApi.coreServices.auth,
    config: backendPluginApi.coreServices.rootConfig
  },
  async createRootContext({ rootLogger, config }) {
    return DefaultEventsService.DefaultEventsService.create({ logger: rootLogger, config });
  },
  async factory({ pluginMetadata, discovery, logger, lifecycle, auth }, eventsService) {
    return eventsService.forPlugin(pluginMetadata.getId(), {
      discovery,
      logger,
      lifecycle,
      auth
    });
  }
});

exports.eventsServiceFactory = eventsServiceFactory;
exports.eventsServiceRef = eventsServiceRef;
//# sourceMappingURL=service.cjs.js.map
