{"version":3,"file":"DirectAuthConnector.esm.js","sources":["../../../src/lib/AuthConnector/DirectAuthConnector.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AuthProviderInfo, DiscoveryApi } from '@backstage/core-plugin-api';\nimport { showLoginPopup } from '../loginPopup';\n\ntype Options = {\n  discoveryApi: DiscoveryApi;\n  environment?: string;\n  provider: AuthProviderInfo;\n};\nexport class DirectAuthConnector<DirectAuthResponse> {\n  private readonly discoveryApi: DiscoveryApi;\n  private readonly environment: string | undefined;\n  private readonly provider: AuthProviderInfo;\n\n  constructor(options: Options) {\n    const { discoveryApi, environment, provider } = options;\n\n    this.discoveryApi = discoveryApi;\n    this.environment = environment;\n    this.provider = provider;\n  }\n\n  async createSession(): Promise<DirectAuthResponse> {\n    const popupUrl = await this.buildUrl('/start');\n    const payload = await showLoginPopup({\n      url: popupUrl,\n      name: `${this.provider.title} Login`,\n      origin: new URL(popupUrl).origin,\n      width: 450,\n      height: 730,\n    });\n\n    return {\n      ...payload,\n      id: payload.profile.email,\n    };\n  }\n\n  async refreshSession(): Promise<any> {}\n\n  async removeSession(): Promise<void> {\n    const res = await fetch(await this.buildUrl('/logout'), {\n      method: 'POST',\n      headers: {\n        'x-requested-with': 'XMLHttpRequest',\n      },\n      credentials: 'include',\n    }).catch(error => {\n      throw new Error(`Logout request failed, ${error}`);\n    });\n\n    if (!res.ok) {\n      const error: any = new Error(`Logout request failed, ${res.statusText}`);\n      error.status = res.status;\n      throw error;\n    }\n  }\n\n  private async buildUrl(path: string): Promise<string> {\n    const baseUrl = await this.discoveryApi.getBaseUrl('auth');\n    return `${baseUrl}/${this.provider.id}${path}?env=${this.environment}`;\n  }\n}\n"],"names":[],"mappings":";;AAuBO,MAAM,mBAAwC,CAAA;AAAA,EAClC,YAAA;AAAA,EACA,WAAA;AAAA,EACA,QAAA;AAAA,EAEjB,YAAY,OAAkB,EAAA;AAC5B,IAAA,MAAM,EAAE,YAAA,EAAc,WAAa,EAAA,QAAA,EAAa,GAAA,OAAA;AAEhD,IAAA,IAAA,CAAK,YAAe,GAAA,YAAA;AACpB,IAAA,IAAA,CAAK,WAAc,GAAA,WAAA;AACnB,IAAA,IAAA,CAAK,QAAW,GAAA,QAAA;AAAA;AAClB,EAEA,MAAM,aAA6C,GAAA;AACjD,IAAA,MAAM,QAAW,GAAA,MAAM,IAAK,CAAA,QAAA,CAAS,QAAQ,CAAA;AAC7C,IAAM,MAAA,OAAA,GAAU,MAAM,cAAe,CAAA;AAAA,MACnC,GAAK,EAAA,QAAA;AAAA,MACL,IAAM,EAAA,CAAA,EAAG,IAAK,CAAA,QAAA,CAAS,KAAK,CAAA,MAAA,CAAA;AAAA,MAC5B,MAAQ,EAAA,IAAI,GAAI,CAAA,QAAQ,CAAE,CAAA,MAAA;AAAA,MAC1B,KAAO,EAAA,GAAA;AAAA,MACP,MAAQ,EAAA;AAAA,KACT,CAAA;AAED,IAAO,OAAA;AAAA,MACL,GAAG,OAAA;AAAA,MACH,EAAA,EAAI,QAAQ,OAAQ,CAAA;AAAA,KACtB;AAAA;AACF,EAEA,MAAM,cAA+B,GAAA;AAAA;AAAC,EAEtC,MAAM,aAA+B,GAAA;AACnC,IAAA,MAAM,MAAM,MAAM,KAAA,CAAM,MAAM,IAAK,CAAA,QAAA,CAAS,SAAS,CAAG,EAAA;AAAA,MACtD,MAAQ,EAAA,MAAA;AAAA,MACR,OAAS,EAAA;AAAA,QACP,kBAAoB,EAAA;AAAA,OACtB;AAAA,MACA,WAAa,EAAA;AAAA,KACd,CAAE,CAAA,KAAA,CAAM,CAAS,KAAA,KAAA;AAChB,MAAA,MAAM,IAAI,KAAA,CAAM,CAA0B,uBAAA,EAAA,KAAK,CAAE,CAAA,CAAA;AAAA,KAClD,CAAA;AAED,IAAI,IAAA,CAAC,IAAI,EAAI,EAAA;AACX,MAAA,MAAM,QAAa,IAAI,KAAA,CAAM,CAA0B,uBAAA,EAAA,GAAA,CAAI,UAAU,CAAE,CAAA,CAAA;AACvE,MAAA,KAAA,CAAM,SAAS,GAAI,CAAA,MAAA;AACnB,MAAM,MAAA,KAAA;AAAA;AACR;AACF,EAEA,MAAc,SAAS,IAA+B,EAAA;AACpD,IAAA,MAAM,OAAU,GAAA,MAAM,IAAK,CAAA,YAAA,CAAa,WAAW,MAAM,CAAA;AACzD,IAAO,OAAA,CAAA,EAAG,OAAO,CAAA,CAAA,EAAI,IAAK,CAAA,QAAA,CAAS,EAAE,CAAG,EAAA,IAAI,CAAQ,KAAA,EAAA,IAAA,CAAK,WAAW,CAAA,CAAA;AAAA;AAExE;;;;"}