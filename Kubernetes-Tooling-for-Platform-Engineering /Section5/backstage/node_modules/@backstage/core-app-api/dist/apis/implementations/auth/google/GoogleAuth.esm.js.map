{"version":3,"file":"GoogleAuth.esm.js","sources":["../../../../../src/apis/implementations/auth/google/GoogleAuth.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { googleAuthApiRef } from '@backstage/core-plugin-api';\nimport { OAuth2 } from '../oauth2';\nimport { OAuthApiCreateOptions } from '../types';\n\nconst DEFAULT_PROVIDER = {\n  id: 'google',\n  title: 'Google',\n  icon: () => null,\n};\n\nconst SCOPE_PREFIX = 'https://www.googleapis.com/auth/';\n\n/**\n * Implements the OAuth flow to Google products.\n *\n * @public\n */\nexport default class GoogleAuth {\n  static create(options: OAuthApiCreateOptions): typeof googleAuthApiRef.T {\n    const {\n      configApi,\n      discoveryApi,\n      oauthRequestApi,\n      environment = 'development',\n      provider = DEFAULT_PROVIDER,\n      defaultScopes = [\n        'openid',\n        `${SCOPE_PREFIX}userinfo.email`,\n        `${SCOPE_PREFIX}userinfo.profile`,\n      ],\n    } = options;\n\n    return OAuth2.create({\n      configApi,\n      discoveryApi,\n      oauthRequestApi,\n      provider,\n      environment,\n      defaultScopes,\n      scopeTransform(scopes: string[]) {\n        return scopes.map(scope => {\n          if (scope === 'openid') {\n            return scope;\n          }\n\n          if (scope === 'profile' || scope === 'email') {\n            return `${SCOPE_PREFIX}userinfo.${scope}`;\n          }\n\n          if (scope.startsWith(SCOPE_PREFIX)) {\n            return scope;\n          }\n\n          return `${SCOPE_PREFIX}${scope}`;\n        });\n      },\n    });\n  }\n}\n"],"names":[],"mappings":";;AAoBA,MAAM,gBAAmB,GAAA;AAAA,EACvB,EAAI,EAAA,QAAA;AAAA,EACJ,KAAO,EAAA,QAAA;AAAA,EACP,MAAM,MAAM;AACd,CAAA;AAEA,MAAM,YAAe,GAAA,kCAAA;AAOrB,MAAqB,UAAW,CAAA;AAAA,EAC9B,OAAO,OAAO,OAA2D,EAAA;AACvE,IAAM,MAAA;AAAA,MACJ,SAAA;AAAA,MACA,YAAA;AAAA,MACA,eAAA;AAAA,MACA,WAAc,GAAA,aAAA;AAAA,MACd,QAAW,GAAA,gBAAA;AAAA,MACX,aAAgB,GAAA;AAAA,QACd,QAAA;AAAA,QACA,GAAG,YAAY,CAAA,cAAA,CAAA;AAAA,QACf,GAAG,YAAY,CAAA,gBAAA;AAAA;AACjB,KACE,GAAA,OAAA;AAEJ,IAAA,OAAO,OAAO,MAAO,CAAA;AAAA,MACnB,SAAA;AAAA,MACA,YAAA;AAAA,MACA,eAAA;AAAA,MACA,QAAA;AAAA,MACA,WAAA;AAAA,MACA,aAAA;AAAA,MACA,eAAe,MAAkB,EAAA;AAC/B,QAAO,OAAA,MAAA,CAAO,IAAI,CAAS,KAAA,KAAA;AACzB,UAAA,IAAI,UAAU,QAAU,EAAA;AACtB,YAAO,OAAA,KAAA;AAAA;AAGT,UAAI,IAAA,KAAA,KAAU,SAAa,IAAA,KAAA,KAAU,OAAS,EAAA;AAC5C,YAAO,OAAA,CAAA,EAAG,YAAY,CAAA,SAAA,EAAY,KAAK,CAAA,CAAA;AAAA;AAGzC,UAAI,IAAA,KAAA,CAAM,UAAW,CAAA,YAAY,CAAG,EAAA;AAClC,YAAO,OAAA,KAAA;AAAA;AAGT,UAAO,OAAA,CAAA,EAAG,YAAY,CAAA,EAAG,KAAK,CAAA,CAAA;AAAA,SAC/B,CAAA;AAAA;AACH,KACD,CAAA;AAAA;AAEL;;;;"}