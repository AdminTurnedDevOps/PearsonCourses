{"version":3,"file":"SamlAuth.esm.js","sources":["../../../../../src/apis/implementations/auth/saml/SamlAuth.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AuthRequestOptions,\n  BackstageIdentityApi,\n  ProfileInfo,\n  ProfileInfoApi,\n  SessionApi,\n  SessionState,\n  BackstageIdentityResponse,\n} from '@backstage/core-plugin-api';\nimport { Observable } from '@backstage/types';\nimport { DirectAuthConnector } from '../../../../lib/AuthConnector';\nimport {\n  AuthSessionStore,\n  StaticAuthSessionManager,\n} from '../../../../lib/AuthSessionManager';\nimport { SessionManager } from '../../../../lib/AuthSessionManager/types';\nimport { AuthApiCreateOptions } from '../types';\nimport { SamlSession, samlSessionSchema } from './types';\n\nexport type SamlAuthResponse = {\n  profile: ProfileInfo;\n  backstageIdentity: BackstageIdentityResponse;\n};\n\nconst DEFAULT_PROVIDER = {\n  id: 'saml',\n  title: 'SAML',\n  icon: () => null,\n};\n\n/**\n * Implements a general SAML based auth flow.\n *\n * @public\n */\nexport default class SamlAuth\n  implements ProfileInfoApi, BackstageIdentityApi, SessionApi\n{\n  static create(options: AuthApiCreateOptions) {\n    const {\n      discoveryApi,\n      environment = 'development',\n      provider = DEFAULT_PROVIDER,\n    } = options;\n\n    const connector = new DirectAuthConnector<SamlSession>({\n      discoveryApi,\n      environment,\n      provider,\n    });\n\n    const sessionManager = new StaticAuthSessionManager<SamlSession>({\n      connector,\n    });\n\n    const authSessionStore = new AuthSessionStore<SamlSession>({\n      manager: sessionManager,\n      storageKey: `${provider.id}Session`,\n      schema: samlSessionSchema,\n    });\n\n    return new SamlAuth(authSessionStore);\n  }\n\n  sessionState$(): Observable<SessionState> {\n    return this.sessionManager.sessionState$();\n  }\n\n  private constructor(\n    private readonly sessionManager: SessionManager<SamlSession>,\n  ) {}\n\n  async signIn() {\n    await this.getBackstageIdentity({});\n  }\n  async signOut() {\n    await this.sessionManager.removeSession();\n  }\n\n  async getBackstageIdentity(\n    options: AuthRequestOptions = {},\n  ): Promise<BackstageIdentityResponse | undefined> {\n    const session = await this.sessionManager.getSession(options);\n    return session?.backstageIdentity;\n  }\n\n  async getProfile(options: AuthRequestOptions = {}) {\n    const session = await this.sessionManager.getSession(options);\n    return session?.profile;\n  }\n}\n"],"names":[],"mappings":";;;;;;;AAwCA,MAAM,gBAAmB,GAAA;AAAA,EACvB,EAAI,EAAA,MAAA;AAAA,EACJ,KAAO,EAAA,MAAA;AAAA,EACP,MAAM,MAAM;AACd,CAAA;AAOA,MAAqB,QAErB,CAAA;AAAA,EA+BU,YACW,cACjB,EAAA;AADiB,IAAA,IAAA,CAAA,cAAA,GAAA,cAAA;AAAA;AAChB,EAhCH,OAAO,OAAO,OAA+B,EAAA;AAC3C,IAAM,MAAA;AAAA,MACJ,YAAA;AAAA,MACA,WAAc,GAAA,aAAA;AAAA,MACd,QAAW,GAAA;AAAA,KACT,GAAA,OAAA;AAEJ,IAAM,MAAA,SAAA,GAAY,IAAI,mBAAiC,CAAA;AAAA,MACrD,YAAA;AAAA,MACA,WAAA;AAAA,MACA;AAAA,KACD,CAAA;AAED,IAAM,MAAA,cAAA,GAAiB,IAAI,wBAAsC,CAAA;AAAA,MAC/D;AAAA,KACD,CAAA;AAED,IAAM,MAAA,gBAAA,GAAmB,IAAI,gBAA8B,CAAA;AAAA,MACzD,OAAS,EAAA,cAAA;AAAA,MACT,UAAA,EAAY,CAAG,EAAA,QAAA,CAAS,EAAE,CAAA,OAAA,CAAA;AAAA,MAC1B,MAAQ,EAAA;AAAA,KACT,CAAA;AAED,IAAO,OAAA,IAAI,SAAS,gBAAgB,CAAA;AAAA;AACtC,EAEA,aAA0C,GAAA;AACxC,IAAO,OAAA,IAAA,CAAK,eAAe,aAAc,EAAA;AAAA;AAC3C,EAMA,MAAM,MAAS,GAAA;AACb,IAAM,MAAA,IAAA,CAAK,oBAAqB,CAAA,EAAE,CAAA;AAAA;AACpC,EACA,MAAM,OAAU,GAAA;AACd,IAAM,MAAA,IAAA,CAAK,eAAe,aAAc,EAAA;AAAA;AAC1C,EAEA,MAAM,oBAAA,CACJ,OAA8B,GAAA,EACkB,EAAA;AAChD,IAAA,MAAM,OAAU,GAAA,MAAM,IAAK,CAAA,cAAA,CAAe,WAAW,OAAO,CAAA;AAC5D,IAAA,OAAO,OAAS,EAAA,iBAAA;AAAA;AAClB,EAEA,MAAM,UAAA,CAAW,OAA8B,GAAA,EAAI,EAAA;AACjD,IAAA,MAAM,OAAU,GAAA,MAAM,IAAK,CAAA,cAAA,CAAe,WAAW,OAAO,CAAA;AAC5D,IAAA,OAAO,OAAS,EAAA,OAAA;AAAA;AAEpB;;;;"}