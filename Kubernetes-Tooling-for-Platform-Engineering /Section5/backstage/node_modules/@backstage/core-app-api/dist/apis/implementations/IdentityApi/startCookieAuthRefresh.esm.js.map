{"version":3,"file":"startCookieAuthRefresh.esm.js","sources":["../../../../src/apis/implementations/IdentityApi/startCookieAuthRefresh.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiscoveryApi, ErrorApi, FetchApi } from '@backstage/core-plugin-api';\n\nconst PLUGIN_ID = 'app';\nconst CHANNEL_ID = `${PLUGIN_ID}-auth-cookie-expires-at`;\n\nconst MIN_BASE_DELAY_MS = 5 * 60_000;\n\nconst ERROR_BACKOFF_START = 5_000;\nconst ERROR_BACKOFF_FACTOR = 2;\nconst ERROR_BACKOFF_MAX = 5 * 60_000;\n\n// Messaging implementation and IDs must match\n//   plugins/auth-react/src/hooks/useCookieAuthRefresh/useCookieAuthRefresh.tsx\nexport function startCookieAuthRefresh({\n  discoveryApi,\n  fetchApi,\n  errorApi,\n}: {\n  discoveryApi: DiscoveryApi;\n  fetchApi: FetchApi;\n  errorApi: ErrorApi;\n}) {\n  let stopped = false;\n  let timeout: NodeJS.Timeout | undefined;\n  let firstError = true;\n  let errorBackoff = ERROR_BACKOFF_START;\n\n  const channel =\n    'BroadcastChannel' in window ? new BroadcastChannel(CHANNEL_ID) : undefined;\n\n  // Randomize the refreshing margin with a margin of 1-4 minutes to avoid all tabs refreshing at the same time\n  const getDelay = (expiresAt: number) => {\n    const margin = (1 + 3 * Math.random()) * 60000;\n    const delay = Math.max(expiresAt - Date.now(), MIN_BASE_DELAY_MS) - margin;\n    return delay;\n  };\n\n  const refresh = async () => {\n    try {\n      const baseUrl = await discoveryApi.getBaseUrl(PLUGIN_ID);\n      const requestUrl = `${baseUrl}/.backstage/auth/v1/cookie`;\n      const res = await fetchApi.fetch(requestUrl, {\n        credentials: 'include',\n      });\n\n      if (!res.ok) {\n        throw new Error(\n          `Request failed with status ${res.status} ${res.statusText}, see request towards ${requestUrl} for more details`,\n        );\n      }\n\n      const data = await res.json();\n      if (!data.expiresAt) {\n        throw new Error('No expiration date in response');\n      }\n\n      const expiresAt = Date.parse(data.expiresAt);\n      if (Number.isNaN(expiresAt)) {\n        throw new Error('Invalid expiration date in response');\n      }\n\n      firstError = true;\n\n      channel?.postMessage({\n        action: 'COOKIE_REFRESH_SUCCESS',\n        payload: { expiresAt: new Date(expiresAt).toISOString() },\n      });\n\n      scheduleRefresh(getDelay(expiresAt));\n    } catch (error) {\n      // Ignore the first error after successful requests\n      if (firstError) {\n        firstError = false;\n        errorBackoff = ERROR_BACKOFF_START;\n      } else {\n        errorBackoff = Math.min(\n          ERROR_BACKOFF_MAX,\n          errorBackoff * ERROR_BACKOFF_FACTOR,\n        );\n        // eslint-disable-next-line no-console\n        console.error('Session cookie refresh failed', error);\n        errorApi.post(\n          new Error(\n            `Session refresh failed, see developer console for details`,\n          ),\n        );\n      }\n\n      scheduleRefresh(errorBackoff);\n    }\n  };\n\n  const onMessage = (\n    event: MessageEvent<\n      | {\n          action: 'COOKIE_REFRESH_SUCCESS';\n          payload: { expiresAt: string };\n        }\n      | object\n    >,\n  ) => {\n    const { data } = event;\n    if (data === null || typeof data !== 'object') {\n      return;\n    }\n    if ('action' in data && data.action === 'COOKIE_REFRESH_SUCCESS') {\n      const expiresAt = Date.parse(data.payload.expiresAt);\n      if (Number.isNaN(expiresAt)) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Received invalid expiration from session refresh channel',\n        );\n        return;\n      }\n\n      scheduleRefresh(getDelay(expiresAt));\n    }\n  };\n\n  function scheduleRefresh(delayMs: number) {\n    if (stopped) {\n      return;\n    }\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    timeout = setTimeout(refresh, delayMs);\n  }\n\n  channel?.addEventListener('message', onMessage);\n  refresh();\n\n  return () => {\n    stopped = true;\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    channel?.removeEventListener('message', onMessage);\n    channel?.close();\n  };\n}\n"],"names":[],"mappings":"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"}