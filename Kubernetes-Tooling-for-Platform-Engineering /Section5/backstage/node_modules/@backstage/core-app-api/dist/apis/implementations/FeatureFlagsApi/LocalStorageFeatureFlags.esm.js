import { FeatureFlagState } from '@backstage/core-plugin-api';

function validateFlagName(name) {
  if (name.length < 3) {
    throw new Error(
      `The '${name}' feature flag must have a minimum length of three characters.`
    );
  }
  if (name.length > 150) {
    throw new Error(
      `The '${name}' feature flag must not exceed 150 characters.`
    );
  }
  if (!name.match(/^[a-z]+[a-z0-9-]+$/)) {
    throw new Error(
      `The '${name}' feature flag must start with a lowercase letter and only contain lowercase letters, numbers and hyphens. Examples: feature-flag-one, alpha, release-2020`
    );
  }
}
class LocalStorageFeatureFlags {
  registeredFeatureFlags = [];
  flags;
  registerFlag(flag) {
    validateFlagName(flag.name);
    this.registeredFeatureFlags.push(flag);
  }
  getRegisteredFlags() {
    return this.registeredFeatureFlags.slice();
  }
  isActive(name) {
    if (!this.flags) {
      this.flags = this.load();
    }
    return this.flags.get(name) === FeatureFlagState.Active;
  }
  save(options) {
    if (!this.flags) {
      this.flags = this.load();
    }
    if (!options.merge) {
      this.flags.clear();
    }
    for (const [name, state] of Object.entries(options.states)) {
      this.flags.set(name, state);
    }
    const enabled = Array.from(this.flags.entries()).filter(
      ([, state]) => state === FeatureFlagState.Active
    );
    window.localStorage.setItem(
      "featureFlags",
      JSON.stringify(Object.fromEntries(enabled))
    );
  }
  load() {
    try {
      const jsonStr = window.localStorage.getItem("featureFlags");
      if (!jsonStr) {
        return /* @__PURE__ */ new Map();
      }
      const json = JSON.parse(jsonStr);
      if (typeof json !== "object" || json === null || Array.isArray(json)) {
        return /* @__PURE__ */ new Map();
      }
      const entries = Object.entries(json).filter(([name, value]) => {
        validateFlagName(name);
        return value === FeatureFlagState.Active;
      });
      return new Map(entries);
    } catch {
      return /* @__PURE__ */ new Map();
    }
  }
}

export { LocalStorageFeatureFlags, validateFlagName };
//# sourceMappingURL=LocalStorageFeatureFlags.esm.js.map
