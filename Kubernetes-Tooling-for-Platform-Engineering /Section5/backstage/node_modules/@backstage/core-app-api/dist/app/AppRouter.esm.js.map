{"version":3,"file":"AppRouter.esm.js","sources":["../../src/app/AppRouter.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useContext, ReactNode, ComponentType, useState } from 'react';\nimport {\n  attachComponentData,\n  ConfigApi,\n  configApiRef,\n  IdentityApi,\n  SignInPageProps,\n  useApi,\n  useApp,\n} from '@backstage/core-plugin-api';\nimport { InternalAppContext } from './InternalAppContext';\nimport { isReactRouterBeta } from './isReactRouterBeta';\nimport { RouteTracker } from '../routing/RouteTracker';\nimport { Route, Routes } from 'react-router-dom';\nimport { AppIdentityProxy } from '../apis/implementations/IdentityApi/AppIdentityProxy';\n\n/**\n * Get the app base path from the configured app baseUrl.\n *\n * The returned path does not have a trailing slash.\n */\nexport function getBasePath(configApi: ConfigApi) {\n  if (!isReactRouterBeta()) {\n    // When using rr v6 stable the base path is handled through the\n    // basename prop on the router component instead.\n    return '';\n  }\n\n  return readBasePath(configApi);\n}\n\n/**\n * Read the configured base path.\n *\n * The returned path does not have a trailing slash.\n */\nfunction readBasePath(configApi: ConfigApi) {\n  let { pathname } = new URL(\n    configApi.getOptionalString('app.baseUrl') ?? '/',\n    'http://sample.dev', // baseUrl can be specified as just a path\n  );\n  pathname = pathname.replace(/\\/*$/, '');\n  return pathname;\n}\n\n// This wraps the sign-in page and waits for sign-in to be completed before rendering the app\nfunction SignInPageWrapper({\n  component: Component,\n  appIdentityProxy,\n  children,\n}: {\n  component: ComponentType<SignInPageProps>;\n  appIdentityProxy: AppIdentityProxy;\n  children: ReactNode;\n}) {\n  const [identityApi, setIdentityApi] = useState<IdentityApi>();\n  const configApi = useApi(configApiRef);\n  const basePath = readBasePath(configApi);\n\n  if (!identityApi) {\n    return <Component onSignInSuccess={setIdentityApi} />;\n  }\n\n  appIdentityProxy.setTarget(identityApi, {\n    signOutTargetUrl: basePath || '/',\n  });\n  return <>{children}</>;\n}\n\n/**\n * Props for the {@link AppRouter} component.\n * @public\n */\nexport interface AppRouterProps {\n  children?: ReactNode;\n}\n\n/**\n * App router and sign-in page wrapper.\n *\n * @public\n * @remarks\n *\n * The AppRouter provides the routing context and renders the sign-in page.\n * Until the user has successfully signed in, this component will render\n * the sign-in page. Once the user has signed-in, it will instead render\n * the app, while providing routing and route tracking for the app.\n */\nexport function AppRouter(props: AppRouterProps) {\n  const { Router: RouterComponent, SignInPage: SignInPageComponent } =\n    useApp().getComponents();\n\n  const configApi = useApi(configApiRef);\n  const basePath = readBasePath(configApi);\n  const mountPath = `${basePath}/*`;\n  const internalAppContext = useContext(InternalAppContext);\n  if (!internalAppContext) {\n    throw new Error('AppRouter must be rendered within the AppProvider');\n  }\n  const { routeObjects, appIdentityProxy } = internalAppContext;\n\n  // If the app hasn't configured a sign-in page, we just continue as guest.\n  if (!SignInPageComponent) {\n    appIdentityProxy.setTarget(\n      {\n        getUserId: () => 'guest',\n        getIdToken: async () => undefined,\n        getProfile: () => ({\n          email: 'guest@example.com',\n          displayName: 'Guest',\n        }),\n        getProfileInfo: async () => ({\n          email: 'guest@example.com',\n          displayName: 'Guest',\n        }),\n        getBackstageIdentity: async () => ({\n          type: 'user',\n          userEntityRef: 'user:default/guest',\n          ownershipEntityRefs: ['user:default/guest'],\n        }),\n        getCredentials: async () => ({}),\n        signOut: async () => {},\n      },\n      { signOutTargetUrl: basePath || '/' },\n    );\n\n    if (isReactRouterBeta()) {\n      return (\n        <RouterComponent>\n          <RouteTracker routeObjects={routeObjects} />\n          <Routes>\n            <Route path={mountPath} element={<>{props.children}</>} />\n          </Routes>\n        </RouterComponent>\n      );\n    }\n\n    return (\n      <RouterComponent basename={basePath}>\n        <RouteTracker routeObjects={routeObjects} />\n        {props.children}\n      </RouterComponent>\n    );\n  }\n\n  if (isReactRouterBeta()) {\n    return (\n      <RouterComponent>\n        <RouteTracker routeObjects={routeObjects} />\n        <SignInPageWrapper\n          component={SignInPageComponent}\n          appIdentityProxy={appIdentityProxy}\n        >\n          <Routes>\n            <Route path={mountPath} element={<>{props.children}</>} />\n          </Routes>\n        </SignInPageWrapper>\n      </RouterComponent>\n    );\n  }\n\n  return (\n    <RouterComponent basename={basePath}>\n      <RouteTracker routeObjects={routeObjects} />\n      <SignInPageWrapper\n        component={SignInPageComponent}\n        appIdentityProxy={appIdentityProxy}\n      >\n        {props.children}\n      </SignInPageWrapper>\n    </RouterComponent>\n  );\n}\n\nattachComponentData(AppRouter, 'core.type', 'AppRouter');\n"],"names":[],"mappings":"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"}