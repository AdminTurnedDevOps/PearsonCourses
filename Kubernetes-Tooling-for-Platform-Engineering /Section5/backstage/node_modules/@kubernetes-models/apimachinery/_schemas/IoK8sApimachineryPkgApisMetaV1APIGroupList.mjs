export const validate=function validate22(data,{instancePath="",parentData,parentDataProperty,rootData=data}={}){let vErrors=null,errors=0;if(data&&"object"==typeof data&&!Array.isArray(data)){if(void 0===data.groups){let err0={instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty:"groups"}};null===vErrors?vErrors=[err0]:vErrors.push(err0),errors++}void 0===data.apiVersion||validate21(data.apiVersion,{instancePath:instancePath+"/apiVersion",parentData:data,parentDataProperty:"apiVersion",rootData})||(errors=(vErrors=null===vErrors?validate21.errors:vErrors.concat(validate21.errors)).length),void 0===data.groups||validate24(data.groups,{instancePath:instancePath+"/groups",parentData:data,parentDataProperty:"groups",rootData})||(errors=(vErrors=null===vErrors?validate24.errors:vErrors.concat(validate24.errors)).length),void 0===data.kind||validate21(data.kind,{instancePath:instancePath+"/kind",parentData:data,parentDataProperty:"kind",rootData})||(errors=(vErrors=null===vErrors?validate21.errors:vErrors.concat(validate21.errors)).length)}else{let err1={instancePath,schemaPath:"#/type",keyword:"type",params:{type:"object"}};null===vErrors?vErrors=[err1]:vErrors.push(err1),errors++}return validate22.errors=vErrors,0===errors};function validate21(data,{instancePath="",parentData,parentDataProperty,rootData=data}={}){let vErrors=null,errors=0;if("string"!=typeof data&&null!==data){let err0={instancePath,schemaPath:"#/type",keyword:"type",params:{type:"string"}};null===vErrors?vErrors=[err0]:vErrors.push(err0),errors++}return validate21.errors=vErrors,0===errors}import{validate as validate26}from"./IoK8sApimachineryPkgApisMetaV1APIGroup.mjs";function validate25(data,{instancePath="",parentData,parentDataProperty,rootData=data}={}){let vErrors=null,errors=0;return validate26(data,{instancePath,parentData,parentDataProperty,rootData})||(errors=(vErrors=null===vErrors?validate26.errors:vErrors.concat(validate26.errors)).length),validate25.errors=vErrors,0===errors}function validate24(data,{instancePath="",parentData,parentDataProperty,rootData=data}={}){let vErrors=null,errors=0;if(Array.isArray(data)){let len0=data.length;for(let i0=0;i0<len0;i0++)validate25(data[i0],{instancePath:instancePath+"/"+i0,parentData:data,parentDataProperty:i0,rootData})||(errors=(vErrors=null===vErrors?validate25.errors:vErrors.concat(validate25.errors)).length)}else{let err0={instancePath,schemaPath:"#/type",keyword:"type",params:{type:"array"}};null===vErrors?vErrors=[err0]:vErrors.push(err0),errors++}return validate24.errors=vErrors,0===errors}