"use strict";
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1.30.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.V1PodAffinityTerm = void 0;
/**
* Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
*/
class V1PodAffinityTerm {
    static getAttributeTypeMap() {
        return V1PodAffinityTerm.attributeTypeMap;
    }
    constructor() {
    }
}
exports.V1PodAffinityTerm = V1PodAffinityTerm;
V1PodAffinityTerm.discriminator = undefined;
V1PodAffinityTerm.attributeTypeMap = [
    {
        "name": "labelSelector",
        "baseName": "labelSelector",
        "type": "V1LabelSelector",
        "format": ""
    },
    {
        "name": "matchLabelKeys",
        "baseName": "matchLabelKeys",
        "type": "Array<string>",
        "format": ""
    },
    {
        "name": "mismatchLabelKeys",
        "baseName": "mismatchLabelKeys",
        "type": "Array<string>",
        "format": ""
    },
    {
        "name": "namespaceSelector",
        "baseName": "namespaceSelector",
        "type": "V1LabelSelector",
        "format": ""
    },
    {
        "name": "namespaces",
        "baseName": "namespaces",
        "type": "Array<string>",
        "format": ""
    },
    {
        "name": "topologyKey",
        "baseName": "topologyKey",
        "type": "string",
        "format": ""
    }
];
//# sourceMappingURL=V1PodAffinityTerm.js.map