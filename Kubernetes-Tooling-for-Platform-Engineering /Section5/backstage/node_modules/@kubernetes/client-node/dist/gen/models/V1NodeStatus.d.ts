/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1.30.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { V1AttachedVolume } from '../models/V1AttachedVolume';
import { V1ContainerImage } from '../models/V1ContainerImage';
import { V1NodeAddress } from '../models/V1NodeAddress';
import { V1NodeCondition } from '../models/V1NodeCondition';
import { V1NodeConfigStatus } from '../models/V1NodeConfigStatus';
import { V1NodeDaemonEndpoints } from '../models/V1NodeDaemonEndpoints';
import { V1NodeRuntimeHandler } from '../models/V1NodeRuntimeHandler';
import { V1NodeSystemInfo } from '../models/V1NodeSystemInfo';
/**
* NodeStatus is information about the current status of a node.
*/
export declare class V1NodeStatus {
    /**
    * List of addresses reachable to the node. Queried from cloud provider, if available. More info: https://kubernetes.io/docs/concepts/nodes/node/#addresses Note: This field is declared as mergeable, but the merge key is not sufficiently unique, which can cause data corruption when it is merged. Callers should instead use a full-replacement patch. See https://pr.k8s.io/79391 for an example. Consumers should assume that addresses can change during the lifetime of a Node. However, there are some exceptions where this may not be possible, such as Pods that inherit a Node\'s address in its own status or consumers of the downward API (status.hostIP).
    */
    'addresses'?: Array<V1NodeAddress>;
    /**
    * Allocatable represents the resources of a node that are available for scheduling. Defaults to Capacity.
    */
    'allocatable'?: {
        [key: string]: string;
    };
    /**
    * Capacity represents the total resources of a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity
    */
    'capacity'?: {
        [key: string]: string;
    };
    /**
    * Conditions is an array of current observed node conditions. More info: https://kubernetes.io/docs/concepts/nodes/node/#condition
    */
    'conditions'?: Array<V1NodeCondition>;
    'config'?: V1NodeConfigStatus;
    'daemonEndpoints'?: V1NodeDaemonEndpoints;
    /**
    * List of container images on this node
    */
    'images'?: Array<V1ContainerImage>;
    'nodeInfo'?: V1NodeSystemInfo;
    /**
    * NodePhase is the recently observed lifecycle phase of the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#phase The field is never populated, and now is deprecated.
    */
    'phase'?: string;
    /**
    * The available runtime handlers.
    */
    'runtimeHandlers'?: Array<V1NodeRuntimeHandler>;
    /**
    * List of volumes that are attached to the node.
    */
    'volumesAttached'?: Array<V1AttachedVolume>;
    /**
    * List of attachable volumes in use (mounted) by the node.
    */
    'volumesInUse'?: Array<string>;
    static readonly discriminator: string | undefined;
    static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
    constructor();
}
