{"version":3,"file":"Bindings.js","sourceRoot":"","sources":["../../../src/components/Bindings.tsx"],"names":[],"mappings":";;;;;;AACA,gDAA0B;AAC1B,mCAAkC;AAClC,sCAA2C;AAQpC,IAAM,QAAQ,GAAmC,UAAC,EAGxD;QAFC,YAAqC,EAArC,IAAI,mBAAG,8BAA8B,KAAA,EACrC,QAAQ,cAAA;IAER,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,OAAO,EAAE,EAAE;QACnC,OAAO,IAAI,CAAC;KACb;IAED,IAAM,gBAAgB,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,UAAC,OAAO;QAClD,IAAM,YAAY,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;QAErC,IAAM,MAAM,GAAG,uBAAa,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QACxD,IAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QACpC,IAAM,UAAU,GAAG,CACjB,uCAAK,SAAS,EAAC,sBAAsB;YACnC,4CAAO,IAAI,CAAQ;YACnB,0CAAQ,SAAS,EAAC,8EAA8E,IAC7F,QAAQ,CACF,CACL,CACP,CAAC;QACF,OAAO,CACL,MAAM,KAAK,SAAS,IAAI,CACtB,8BAAC,eAAM,IACL,UAAU,EAAE,UAAU,EACtB,MAAM,EAAE,MAAM,EACd,GAAG,EAAE,QAAQ,EACb,SAAS,SACT,CACH,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,OAAO,8DAAG,gBAAgB,CAAI,CAAC;AACjC,CAAC,CAAC;AAlCW,QAAA,QAAQ,YAkCnB","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport React from 'react';\nimport { Schema } from './Schema';\nimport { SchemaHelpers } from '../helpers';\nimport { BindingsInterface } from '@asyncapi/parser';\n\ninterface Props {\n  name?: string;\n  bindings: BindingsInterface;\n}\n\nexport const Bindings: React.FunctionComponent<Props> = ({\n  name = 'Binding specific information',\n  bindings,\n}) => {\n  if (!bindings || bindings.isEmpty()) {\n    return null;\n  }\n\n  const renderedBindings = bindings.all().map((binding) => {\n    const bindingValue = binding.value();\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const schema = SchemaHelpers.jsonToSchema(bindingValue);\n    const protocol = binding.protocol();\n    const schemaName = (\n      <div className=\"inline-block text-sm\">\n        <span>{name}</span>\n        <strong className=\"bg-teal-500 no-underline text-white uppercase rounded mx-2 px-2 py-1 text-xs\">\n          {protocol}\n        </strong>\n      </div>\n    );\n    return (\n      schema !== undefined && (\n        <Schema\n          schemaName={schemaName}\n          schema={schema}\n          key={protocol}\n          onlyTitle\n        />\n      )\n    );\n  });\n\n  return <>{renderedBindings}</>;\n};\n"]}