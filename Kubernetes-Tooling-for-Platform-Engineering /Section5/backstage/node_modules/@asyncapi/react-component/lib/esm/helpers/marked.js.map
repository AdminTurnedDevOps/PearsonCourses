{"version":3,"file":"marked.js","sourceRoot":"","sources":["../../../src/helpers/marked.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAGhC,OAAO,IAAI,MAAM,uBAAuB,CAAC;AAGzC,OAAO,IAAI,MAAM,iCAAiC,CAAC;AAEnD,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAGpC,OAAO,IAAI,MAAM,iCAAiC,CAAC;AAEnD,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAGpC,OAAO,IAAI,MAAM,iCAAiC,CAAC;AAEnD,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAEpC,IAAM,aAAa,GAAyB;IAC1C,UAAU,EAAE,gBAAgB;IAC5B,SAAS,EAAE,UAAC,IAAI,EAAE,QAAQ;QAExB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE;YAC/B,OAAO,IAAI,CAAC;SACb;QACD,IAAI;YAEF,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,QAAQ,UAAA,EAAE,CAAC,CAAC,KAAK,CAAC;SACjD;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,IAAI,CAAC;SACb;IACH,CAAC;CACF,CAAC;AAEF,MAAM,UAAU,cAAc,CAAC,OAAe;IAC5C,OAAO,MAAM,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;AACxC,CAAC;AAED,OAAO,EAAE,IAAI,EAAE,CAAC","sourcesContent":["import { marked } from 'marked';\n\n// @ts-expect-error no types exists\nimport hljs from 'highlight.js/lib/core';\n\n// @ts-expect-error no types exists\nimport json from 'highlight.js/lib/languages/json';\n// eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\nhljs.registerLanguage('json', json);\n\n// @ts-expect-error no types exists\nimport yaml from 'highlight.js/lib/languages/yaml';\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\nhljs.registerLanguage('yaml', yaml);\n\n// @ts-expect-error no types exists\nimport bash from 'highlight.js/lib/languages/bash';\n// eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\nhljs.registerLanguage('bash', bash);\n\nconst markedOptions: marked.MarkedOptions = {\n  langPrefix: 'hljs language-',\n  highlight: (code, language) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n    if (!hljs.getLanguage(language)) {\n      return code;\n    }\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n      return hljs.highlight(code, { language }).value;\n    } catch (e) {\n      return code;\n    }\n  },\n};\n\nexport function renderMarkdown(content: string): string {\n  return marked(content, markedOptions);\n}\n\nexport { hljs };\n"]}