{"version":3,"file":"Security.js","sourceRoot":"","sources":["../../../../src/containers/Servers/Security.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  OAuthFlowInterface,\n  SecurityRequirementsInterface,\n  SecuritySchemeInterface,\n} from '@asyncapi/parser';\n\nimport { Href, Markdown } from '../../components';\nimport { ServerHelpers } from '../../helpers';\n\ninterface Props {\n  security: SecurityRequirementsInterface[];\n  protocol?: string;\n  header?: string;\n}\n\nexport const Security: React.FunctionComponent<Props> = ({\n  security = [],\n  protocol = '',\n  header = 'Security',\n}) => {\n  let renderedSecurities;\n  if (!security?.length) {\n    if (protocol === 'kafka' || protocol === 'kafka-secure') {\n      renderedSecurities = (\n        <SecurityItem protocol={protocol} securitySchema={null} />\n      );\n    }\n  } else {\n    const securities: React.ReactNode[] = Object.values(security)\n      .map((requirements) => requirements.all())\n      .flat()\n      .map((requirement) => {\n        const def = requirement.scheme();\n        const requiredScopes = requirement.scopes();\n\n        if (!def) {\n          return null;\n        }\n        return (\n          <SecurityItem\n            protocol={protocol}\n            securitySchema={def}\n            requiredScopes={requiredScopes}\n            key={def.type()}\n          />\n        );\n      })\n      .filter(Boolean);\n\n    renderedSecurities = (\n      <ul>\n        {securities.map((s, idx) => (\n          <li className=\"mt-2\" key={idx}>\n            {s}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  if (!renderedSecurities) {\n    return null;\n  }\n\n  return (\n    <div className=\"text-sm mt-4\">\n      <h5 className=\"text-gray-800\">{header}:</h5>\n      {renderedSecurities}\n    </div>\n  );\n};\n\nfunction collectSecuritySchemas(\n  securitySchema: SecuritySchemeInterface | null,\n  requiredScopes: string[] = [],\n): React.ReactNode[] {\n  const schemas: React.ReactNode[] = [];\n  if (securitySchema) {\n    if (securitySchema.name()) {\n      schemas.push(<span>Name: {securitySchema.name()}</span>);\n    }\n    if (securitySchema.in()) {\n      schemas.push(<span>In: {securitySchema.in()}</span>);\n    }\n    if (securitySchema.scheme()) {\n      schemas.push(<span>Scheme: {securitySchema.scheme()}</span>);\n    }\n    if (securitySchema.bearerFormat()) {\n      schemas.push(<span>Bearer format: {securitySchema.bearerFormat()}</span>);\n    }\n    if (securitySchema.openIdConnectUrl()) {\n      schemas.push(\n        <Href href={securitySchema.openIdConnectUrl()!} className=\"underline\">\n          Connect URL\n        </Href>,\n      );\n    }\n    if (requiredScopes.length) {\n      schemas.push(<span>Required scopes: {requiredScopes.join(', ')}</span>);\n    }\n  }\n  return schemas;\n}\n\ninterface SecurityItemProps {\n  securitySchema: SecuritySchemeInterface | null;\n  protocol: string;\n  requiredScopes?: string[];\n}\n\nconst SecurityItem: React.FunctionComponent<SecurityItemProps> = ({\n  securitySchema,\n  protocol,\n  requiredScopes,\n}) => {\n  const schemas: React.ReactNode[] = collectSecuritySchemas(\n    securitySchema,\n    requiredScopes,\n  );\n\n  let renderedKafkaSecurity;\n  if (['kafka', 'kafka-secure'].includes(protocol)) {\n    const { securityProtocol, saslMechanism } = ServerHelpers.getKafkaSecurity(\n      protocol,\n      securitySchema,\n    );\n\n    renderedKafkaSecurity = (\n      <div className=\"px-4 py-2 ml-2 mb-2 border border-gray-400 bg-gray-100 rounded\">\n        {securityProtocol && (\n          <div className=\"mt-1\">\n            <strong className=\"text-xs text-gray-600 mt-1 mr-1 uppercase\">\n              security.protocol:\n            </strong>\n            <strong className=\"inline-block no-underline bg-indigo-400 text-white text-xs rounded py-0 px-1 ml-1\">\n              {securityProtocol}\n            </strong>\n          </div>\n        )}\n        {saslMechanism && (\n          <div className=\"mt-1\">\n            <strong className=\"text-xs text-gray-600 mt-1 mr-1 uppercase\">\n              sasl.mechanism:\n            </strong>\n            <strong className=\"inline-block no-underline bg-indigo-400 text-white text-xs rounded py-0 px-1 ml-1\">\n              {saslMechanism}\n            </strong>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  const flows = securitySchema?.flows();\n  const unwrappedFlows: Record<string, OAuthFlowInterface> = {};\n  if (flows?.hasImplicit()) {\n    unwrappedFlows.implicit = flows.implicit()!;\n  }\n  if (flows?.hasAuthorizationCode()) {\n    unwrappedFlows.authorizationCode = flows.authorizationCode()!;\n  }\n  if (flows?.hasClientCredentials()) {\n    unwrappedFlows.clientCredentials = flows.clientCredentials()!;\n  }\n  if (flows?.hasPassword()) {\n    unwrappedFlows.password = flows.password()!;\n  }\n  const renderedFlows = Object.entries(unwrappedFlows).map(\n    ([flowName, flow]) => {\n      const authorizationUrl = flow.authorizationUrl();\n      const tokenUrl = flow.tokenUrl();\n      const refreshUrl = flow.refreshUrl();\n      const scopes = flow.scopes();\n\n      return (\n        <div\n          className=\"px-4 py-2 ml-2 mb-2 border border-gray-400 bg-gray-100 rounded\"\n          key={flowName}\n        >\n          <div>\n            <strong className=\"text-xs text-gray-600 mt-1 mr-1 uppercase\">\n              Flow:\n            </strong>\n            <strong className=\"text-xs text-gray-600 mt-1 mr-1 uppercase\">\n              {ServerHelpers.flowName(flowName)}\n            </strong>\n          </div>\n\n          {authorizationUrl && (\n            <div className=\"mt-1\">\n              <strong className=\"text-xs text-gray-600 mt-1 mr-1 uppercase\">\n                Auth URL:\n              </strong>\n              <Href href={authorizationUrl} className=\"underline\">\n                {authorizationUrl}\n              </Href>\n            </div>\n          )}\n          {tokenUrl && (\n            <div className=\"mt-1\">\n              <strong className=\"text-xs text-gray-600 mt-1 mr-1 uppercase\">\n                Token URL:\n              </strong>\n              <Href href={tokenUrl} className=\"underline\">\n                {tokenUrl}\n              </Href>\n            </div>\n          )}\n          {refreshUrl && (\n            <div className=\"mt-1\">\n              <strong className=\"text-xs text-gray-600 mt-1 mr-1 uppercase\">\n                Refresh URL:\n              </strong>\n              <Href href={refreshUrl} className=\"underline\">\n                {refreshUrl}\n              </Href>\n            </div>\n          )}\n          {scopes && (\n            <div className=\"mt-1\">\n              <strong className=\"text-xs text-gray-600 mt-1 mr-1 uppercase\">\n                Scopes:\n              </strong>\n              <ul className=\"inline-block\">\n                {scopes &&\n                  Object.entries(scopes).map(([scopeName, scopeDesc]) => (\n                    <li\n                      className=\"inline-block font-bold no-underline bg-indigo-400 text-white text-xs rounded py-0 px-1 ml-1\"\n                      title={scopeDesc}\n                      key={scopeName}\n                    >\n                      {scopeName}\n                    </li>\n                  ))}\n              </ul>\n            </div>\n          )}\n        </div>\n      );\n    },\n  );\n\n  return (\n    <div>\n      {securitySchema && schemas && (\n        <div>\n          <span>\n            {ServerHelpers.securityType(securitySchema.type())}\n            {schemas.length > 0 && (\n              <ul className=\"inline-block ml-2\">\n                {schemas.map((schema, idx) => (\n                  <li\n                    className=\"inline-block font-bold no-underline bg-blue-400 text-white text-xs uppercase rounded px-2 py-0 ml-1\"\n                    key={idx}\n                  >\n                    {schema}\n                  </li>\n                ))}\n              </ul>\n            )}\n          </span>\n        </div>\n      )}\n\n      {securitySchema?.hasDescription() && (\n        <div>\n          <Markdown>{securitySchema.description()}</Markdown>\n        </div>\n      )}\n\n      {renderedFlows && renderedFlows.length > 0 && (\n        <ul className=\"my-2\">\n          <li>{renderedFlows}</li>\n        </ul>\n      )}\n\n      {renderedKafkaSecurity && <div>{renderedKafkaSecurity}</div>}\n    </div>\n  );\n};\n"]}