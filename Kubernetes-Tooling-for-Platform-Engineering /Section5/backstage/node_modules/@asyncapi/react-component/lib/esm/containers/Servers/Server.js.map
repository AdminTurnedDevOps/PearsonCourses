{"version":3,"file":"Server.js","sourceRoot":"","sources":["../../../../src/containers/Servers/Server.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAG1B,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAEhF,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAC3C,OAAO,EAAE,aAAa,EAAE,aAAa,EAAE,MAAM,eAAe,CAAC;AAO7D,MAAM,CAAC,IAAM,MAAM,GAAmC,UAAC,EAGtD;QAFC,UAAU,gBAAA,EACV,MAAM,YAAA;IAEN,IAAM,MAAM,GAAG,SAAS,EAAE,CAAC;IAE3B,IAAI,CAAC,MAAM,EAAE;QACX,OAAO,IAAI,CAAC;KACb;IAED,IAAM,YAAY,GAAG,aAAa,CAAC,uBAAuB,CACxD,MAAM,CAAC,SAAS,EAAE,CACnB,CAAC;IACF,IAAM,eAAe,GAAG,MAAM,CAAC,eAAe,EAAE,CAAC;IACjD,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAEnC,OAAO,CACL,6BAAK,SAAS,EAAC,YAAY;QACzB,6BAAK,SAAS,EAAC,yBAAyB;YACtC,6BAAK,SAAS,EAAC,mDAAmD;gBAChE;oBACE,8BAAM,SAAS,EAAC,qBAAqB,IAAE,MAAM,CAAC,GAAG,EAAE,CAAQ;oBAC3D,gCAAQ,SAAS,EAAC,8EAA8E,IAC7F,eAAe;wBACd,CAAC,CAAC,UAAG,MAAM,CAAC,QAAQ,EAAE,cAAI,eAAe,CAAE;wBAC3C,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CACd;oBACT,gCAAQ,SAAS,EAAC,yEAAyE,IACxF,UAAU,CACJ,CACL;gBAEL,MAAM,CAAC,cAAc,EAAE,IAAI,CAC1B,6BAAK,SAAS,EAAC,MAAM;oBACnB,oBAAC,QAAQ,QAAE,MAAM,CAAC,WAAW,EAAE,CAAY,CACvC,CACP;gBAEA,YAAY,IAAI,CACf,6BACE,SAAS,EAAC,MAAM,EAChB,EAAE,EAAE,UAAG,aAAa,CAAC,aAAa,CAChC,iBAAU,UAAU,mBAAgB,EACpC,MAAM,CACP,CAAE;oBAEH,oBAAC,MAAM,IACL,UAAU,EAAC,eAAe,EAC1B,MAAM,EAAE,YAAY,EACpB,QAAQ,SACR,CACE,CACP;gBAGC,6BACE,EAAE,EAAE,UAAG,aAAa,CAAC,aAAa,CAChC,iBAAU,UAAU,cAAW,EAC/B,MAAM,CACP,CAAE;oBAEH,oBAAC,QAAQ,IAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,QAAQ,GAAI,CACzD;gBAGP,MAAM,CAAC,QAAQ,EAAE,IAAI,CACpB,6BAAK,SAAS,EAAC,MAAM;oBACnB,oBAAC,QAAQ,IACP,IAAI,EAAC,6BAA6B,EAClC,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAE,GAC3B,CACE,CACP;gBAED,oBAAC,UAAU,IAAC,IAAI,EAAC,mBAAmB,EAAC,IAAI,EAAE,MAAM,GAAI;gBAEpD,MAAM,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,IAAI,CAC3B,6BAAK,SAAS,EAAC,MAAM;oBACnB,oBAAC,IAAI,IAAC,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,GAAI,CACzB,CACP,CACG,CACF;QAEN,6BAAK,SAAS,EAAC,mBAAmB,GAAG,CACjC,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import React from 'react';\nimport { ServerInterface } from '@asyncapi/parser';\n\nimport { Security } from './Security';\nimport { Markdown, Schema, Bindings, Tags, Extensions } from '../../components';\n\nimport { useConfig } from '../../contexts';\nimport { CommonHelpers, SchemaHelpers } from '../../helpers';\n\ninterface Props {\n  serverName: string;\n  server: ServerInterface;\n}\n\nexport const Server: React.FunctionComponent<Props> = ({\n  serverName,\n  server,\n}) => {\n  const config = useConfig();\n\n  if (!server) {\n    return null;\n  }\n\n  const urlVariables = SchemaHelpers.serverVariablesToSchema(\n    server.variables(),\n  );\n  const protocolVersion = server.protocolVersion();\n  const security = server.security();\n\n  return (\n    <div className=\"panel-item\">\n      <div className=\"panel-item--center px-8\">\n        <div className=\"shadow rounded bg-gray-200 p-4 border bg-gray-100\">\n          <div>\n            <span className=\"font-mono text-base\">{server.url()}</span>\n            <strong className=\"bg-teal-500 no-underline text-white uppercase rounded mx-2 px-2 py-1 text-sm\">\n              {protocolVersion\n                ? `${server.protocol()} ${protocolVersion}`\n                : server.protocol()}\n            </strong>\n            <strong className=\"bg-blue-500 no-underline text-white uppercase rounded px-2 py-1 text-sm\">\n              {serverName}\n            </strong>\n          </div>\n\n          {server.hasDescription() && (\n            <div className=\"mt-2\">\n              <Markdown>{server.description()}</Markdown>\n            </div>\n          )}\n\n          {urlVariables && (\n            <div\n              className=\"mt-2\"\n              id={`${CommonHelpers.getIdentifier(\n                `server-${serverName}-url-variables`,\n                config,\n              )}`}\n            >\n              <Schema\n                schemaName=\"URL Variables\"\n                schema={urlVariables}\n                expanded\n              />\n            </div>\n          )}\n\n          {\n            <div\n              id={`${CommonHelpers.getIdentifier(\n                `server-${serverName}-security`,\n                config,\n              )}`}\n            >\n              <Security protocol={server.protocol()} security={security} />\n            </div>\n          }\n\n          {server.bindings() && (\n            <div className=\"mt-2\">\n              <Bindings\n                name=\"Server specific information\"\n                bindings={server.bindings()}\n              />\n            </div>\n          )}\n\n          <Extensions name=\"Server Extensions\" item={server} />\n\n          {server.tags().length > 0 && (\n            <div className=\"mt-2\">\n              <Tags tags={server.tags()} />\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"panel-item--right\" />\n    </div>\n  );\n};\n"]}