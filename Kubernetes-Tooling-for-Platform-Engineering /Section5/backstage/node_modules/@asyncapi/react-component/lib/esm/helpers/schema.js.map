{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../../src/helpers/schema.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  SchemaInterface,\n  ChannelParametersInterface,\n  ServerVariablesInterface,\n  SchemaV2 as SchemaClass,\n  ExtensionInterface,\n  ExtensionsInterface,\n} from '@asyncapi/parser';\n\nexport enum SchemaCustomTypes {\n  // for `true` and `{}` schemas\n  ANY = 'any',\n  // for schemas without `type` keyword\n  RESTRICTED_ANY = 'restricted any',\n  // for `false` and `{ not: {}, ... }` schemas\n  NEVER = 'never',\n  // for types that we cannot infer\n  UNKNOWN = 'unknown',\n}\n\nconst jsonSchemaTypes = [\n  'string',\n  'number',\n  'integer',\n  'boolean',\n  'array',\n  'object',\n  'null',\n];\nconst jsonSchemaKeywordTypes: Record<string, string> = {\n  // string\n  maxLength: 'string',\n  minLength: 'string',\n  pattern: 'string',\n  contentMediaType: 'string',\n  contentEncoding: 'string',\n  // number\n  multipleOf: 'number',\n  maximum: 'number',\n  exclusiveMaximum: 'number',\n  minimum: 'number',\n  exclusiveMinimum: 'number',\n  // array\n  items: 'array',\n  maxItems: 'array',\n  minItems: 'array',\n  uniqueItems: 'array',\n  contains: 'array',\n  additionalItems: 'array',\n  // object\n  maxProperties: 'object',\n  minProperties: 'object',\n  required: 'object',\n  properties: 'object',\n  patternProperties: 'object',\n  propertyNames: 'object',\n  dependencies: 'object',\n  additionalProperties: 'object',\n};\nconst jsonSchemaKeywords = Object.keys(jsonSchemaKeywordTypes);\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport class SchemaHelpers {\n  static extRenderAdditionalInfo = 'x-schema-private-render-additional-info';\n  static extRawValue = 'x-schema-private-raw-value';\n  static extParameterLocation = 'x-schema-private-parameter-location';\n\n  static toSchemaType(schema: SchemaInterface): string {\n    if (!schema || typeof schema.json !== 'function') {\n      return SchemaCustomTypes.UNKNOWN;\n    }\n    if (schema.isBooleanSchema()) {\n      if (schema.json() === true) {\n        return SchemaCustomTypes.ANY;\n      } else {\n        return SchemaCustomTypes.NEVER;\n      }\n    }\n    // handle case with `{}` schemas\n    if (Object.keys(schema.json()).length === 0) {\n      return SchemaCustomTypes.ANY;\n    }\n    // handle case with `{ not: {}, ... }` schemas\n    const not = schema.not();\n    if (not && this.inferType(not) === SchemaCustomTypes.ANY) {\n      return SchemaCustomTypes.NEVER;\n    }\n\n    let type = this.inferType(schema);\n    if (Array.isArray(type)) {\n      return type.map((t) => this.toType(t, schema)).join(' | ');\n    }\n    type = this.toType(type, schema);\n    const combinedType = this.toCombinedType(schema);\n\n    if (type && combinedType) {\n      return `${type} ${combinedType}`;\n    }\n    if (combinedType) {\n      return combinedType;\n    }\n\n    if (type === 'object' && schema.title()) {\n      type += ' [' + schema.title() + ']';\n    }\n    return type;\n  }\n\n  static applicatorSchemaName(\n    idx: number,\n    firstCase: string,\n    otherCases: string,\n    title?: string,\n  ) {\n    const suffix = title ? ` ${title}:` : ':';\n    if (idx === 0) {\n      return `${firstCase}${suffix}`;\n    } else {\n      return `${otherCases}${suffix}`;\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static prettifyValue(value: any, strict = true): string {\n    const typeOf = typeof value;\n    if (typeOf === 'string') {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      return strict ? `\"${value}\"` : value;\n    }\n    if (typeOf === 'number' || typeOf === 'bigint' || typeOf === 'boolean') {\n      return `${value}`;\n    }\n    if (Array.isArray(value)) {\n      return `[${value.toString()}]`;\n    }\n    return JSON.stringify(value);\n  }\n\n  static humanizeConstraints(schema: SchemaInterface): string[] {\n    const constraints: string[] = [];\n\n    // related to number/integer\n    const numberRange = this.humanizeNumberRangeConstraint(\n      schema.minimum(),\n      schema.exclusiveMinimum(),\n      schema.maximum(),\n      schema.exclusiveMaximum(),\n    );\n    if (numberRange !== undefined) {\n      constraints.push(numberRange);\n    }\n    const multipleOfConstraint = this.humanizeMultipleOfConstraint(\n      schema.multipleOf(),\n    );\n    if (multipleOfConstraint !== undefined) {\n      constraints.push(multipleOfConstraint);\n    }\n\n    // related to string\n    const stringRange = this.humanizeRangeConstraint(\n      'characters',\n      schema.minLength(),\n      schema.maxLength(),\n    );\n    if (stringRange !== undefined) {\n      constraints.push(stringRange);\n    }\n\n    // related to array\n    const hasUniqueItems = schema.uniqueItems();\n    const arrayRange = this.humanizeRangeConstraint(\n      hasUniqueItems ? 'unique items' : 'items',\n      schema.minItems(),\n      schema.maxItems(),\n    );\n    if (arrayRange !== undefined) {\n      constraints.push(arrayRange);\n    }\n\n    // related to object\n    const objectRange = this.humanizeRangeConstraint(\n      'properties',\n      schema.minProperties(),\n      schema.maxProperties(),\n    );\n    if (objectRange !== undefined) {\n      constraints.push(objectRange);\n    }\n\n    return constraints;\n  }\n\n  static isExpandable(schema: SchemaInterface): boolean {\n    let type = this.inferType(schema);\n    type = Array.isArray(type) ? type : [type];\n    if (type.includes('object') || type.includes('array')) {\n      return true;\n    }\n\n    if (\n      ((schema.oneOf() ??\n        schema.anyOf() ??\n        schema.allOf() ??\n        Object.keys(schema.properties() ?? {}).length > 0) ||\n        (schema.items() ?? schema.not() ?? schema.if() ?? schema.then())) ??\n      schema.else()\n    ) {\n      return true;\n    }\n\n    const customExtensions = this.getCustomExtensions(schema);\n\n    return !!(customExtensions && Object.keys(customExtensions).length);\n  }\n\n  static serverVariablesToSchema(\n    urlVariables?: ServerVariablesInterface,\n  ): SchemaInterface | undefined {\n    if (!urlVariables || urlVariables.length === 0) {\n      return undefined;\n    }\n    const obj: Record<string, Record<string, unknown>> = {};\n    urlVariables.all().forEach((variable) => {\n      obj[variable.id()] = { ...(variable.json() || {}) };\n      obj[variable.id()].type = 'string';\n    });\n\n    const json = {\n      type: 'object',\n      properties: obj,\n      required: Object.keys(obj),\n      [this.extRenderAdditionalInfo]: false,\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-explicit-any\n    return new SchemaClass(json as any);\n  }\n\n  static parametersToSchema(\n    parameters?: ChannelParametersInterface,\n  ): SchemaInterface | undefined {\n    if (!parameters || parameters.isEmpty()) {\n      return undefined;\n    }\n    const obj: Record<string, Record<string, unknown>> = {};\n    parameters.all().forEach((parameter) => {\n      const parameterSchema = parameter.schema();\n      obj[parameter.id()] = { ...(parameterSchema?.json() ?? {}) };\n      obj[parameter.id()].description = parameter.hasDescription()\n        ? parameter.description()\n        : undefined;\n      obj[parameter.id()][this.extParameterLocation] = parameter.hasLocation()\n        ? parameter.location()\n        : undefined;\n    });\n\n    const json = {\n      type: 'object',\n      properties: obj,\n      required: Object.keys(obj),\n      [this.extRenderAdditionalInfo]: false,\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-explicit-any\n    return new SchemaClass(json as any);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static jsonToSchema(value: any): any {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const json = this.jsonFieldToSchema(value);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    return new SchemaClass(json);\n  }\n\n  /**\n   * Retrieves from given value all custom extensions (value with key started by `x-`).\n   * However, it skips those private extensions that begin with `x-parser-` and `x-schema-private-`.\n   *\n   * @param value\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static getCustomExtensions(value: any) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (!value || typeof value.extensions !== 'function') {\n      return;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n    const extensions = value.extensions() as ExtensionsInterface;\n    const filteredExtensions: Record<string, unknown> = {};\n    for (const ext of extensions.all()) {\n      const extType = ext as ExtensionInterface;\n      if (\n        !extType.id().startsWith('x-parser-') &&\n        !extType.id().startsWith('x-schema-private-')\n      ) {\n        filteredExtensions[extType.id()] = extType.value();\n      }\n    }\n    return filteredExtensions;\n  }\n\n  /**\n   * Retrieves from given schema all dependent required requires by given propertyName from `dependencies` object.\n   *\n   * @param propertyName\n   * @param schema\n   */\n  static getDependentRequired(\n    propertyName: string,\n    schema: SchemaInterface,\n  ): string[] | undefined {\n    const dependentRequired: string[] = [];\n    const dependencies = schema.dependencies();\n    if (!dependencies) {\n      return;\n    }\n\n    for (const [prop, array] of Object.entries(dependencies)) {\n      if (Array.isArray(array) && array.includes(propertyName)) {\n        dependentRequired.push(prop);\n      }\n    }\n    return dependentRequired.length ? dependentRequired : undefined;\n  }\n\n  /**\n   * Retrieves from given schema all dependent schemas from `dependencies` object.\n   *\n   * @param schema\n   */\n  static getDependentSchemas(\n    schema: SchemaInterface,\n  ): SchemaInterface | undefined {\n    const dependencies = schema.dependencies();\n    if (!dependencies) {\n      return;\n    }\n\n    const records: Record<string, SchemaInterface> = {};\n    for (const [prop, propSchema] of Object.entries(dependencies)) {\n      if (typeof propSchema === 'object' && !Array.isArray(propSchema)) {\n        records[prop] = propSchema;\n      }\n    }\n    if (!Object.keys(records).length) {\n      return undefined;\n    }\n\n    const json = {\n      type: 'object',\n      properties: Object.entries(records).reduce(\n        (obj, [propertyName, propertySchema]) => {\n          obj[propertyName] = {\n            // @ts-expect-error add proper check\n            ...propertySchema.json(),\n          };\n          return obj;\n        },\n        {} as Record<string, unknown>,\n      ),\n      [this.extRenderAdditionalInfo]: false,\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-explicit-any\n    return new SchemaClass(json as any);\n  }\n\n  private static toType(type: string, schema: SchemaInterface): string {\n    if (schema.isCircular()) {\n      return type;\n    }\n    if (type === 'array') {\n      const items = schema.items();\n      if (Array.isArray(items)) {\n        return this.toItemsType(items, schema);\n      }\n      if (!items) {\n        return `array<${SchemaCustomTypes.ANY}>`;\n      }\n      return `array<${this.toSchemaType(items) || SchemaCustomTypes.UNKNOWN}>`;\n    }\n    return type;\n  }\n\n  private static toItemsType(\n    items: SchemaInterface[],\n    schema: SchemaInterface,\n  ): string {\n    const types = items.map((item) => this.toSchemaType(item)).join(', ');\n    const additionalItems = schema.additionalItems();\n    if (additionalItems !== undefined && additionalItems !== false) {\n      const additionalType =\n        additionalItems === true\n          ? SchemaCustomTypes.ANY\n          : this.toSchemaType(additionalItems);\n      return `tuple<${\n        types || SchemaCustomTypes.UNKNOWN\n      }, ...optional<${additionalType}>>`;\n    }\n    return `tuple<${types || SchemaCustomTypes.UNKNOWN}>`;\n  }\n\n  private static toCombinedType(schema: SchemaInterface): string | undefined {\n    const oneOf = schema.oneOf();\n    if (oneOf) {\n      return 'oneOf';\n    }\n    if (schema.anyOf()) {\n      return 'anyOf';\n    }\n    if (schema.allOf()) {\n      return 'allOf';\n    }\n    return undefined;\n  }\n\n  // eslint-disable-next-line sonarjs/cognitive-complexity\n  private static inferType(schema: SchemaInterface): string[] | string {\n    let types = schema.type();\n\n    if (types !== undefined) {\n      if (Array.isArray(types)) {\n        // if types have `integer` and `number` types, `integer` is unnecessary\n        if (types.includes('integer') && types.includes('number')) {\n          types = types.filter((t) => t !== 'integer');\n        }\n        return types.length === 1 ? types[0] : types;\n      }\n      return types;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const constValue = schema.const();\n    if (constValue !== undefined) {\n      return typeof constValue;\n    }\n    const enumValue = schema.enum();\n    if (Array.isArray(enumValue) && enumValue.length) {\n      const inferredType = Array.from(new Set(enumValue.map((e) => typeof e)));\n      return inferredType.length === 1 ? inferredType[0] : inferredType;\n    }\n\n    const schemaKeys = Object.keys(schema.json() || {}) || [];\n    const hasInferredTypes = jsonSchemaKeywords.some((key) =>\n      schemaKeys.includes(key),\n    );\n    if (hasInferredTypes === true) {\n      return SchemaCustomTypes.RESTRICTED_ANY;\n    }\n    if (this.toCombinedType(schema)) {\n      return '';\n    }\n    return SchemaCustomTypes.ANY;\n  }\n\n  // eslint-disable-next-line sonarjs/cognitive-complexity\n  private static humanizeNumberRangeConstraint(\n    min: number | undefined,\n    exclusiveMin: number | undefined,\n    max: number | undefined,\n    exclusiveMax: number | undefined,\n  ): string | undefined {\n    const hasExclusiveMin = exclusiveMin !== undefined;\n    const hasMin = min !== undefined || hasExclusiveMin;\n    const hasExclusiveMax = exclusiveMax !== undefined;\n    const hasMax = max !== undefined || hasExclusiveMax;\n\n    let numberRange;\n    if (hasMin && hasMax) {\n      numberRange = hasExclusiveMin ? '( ' : '[ ';\n      numberRange += hasExclusiveMin ? exclusiveMin : min;\n      numberRange += ' .. ';\n      numberRange += hasExclusiveMax ? exclusiveMax : max;\n      numberRange += hasExclusiveMax ? ' )' : ' ]';\n    } else if (hasMin) {\n      numberRange = hasExclusiveMin ? '> ' : '>= ';\n      numberRange += hasExclusiveMin ? exclusiveMin : min;\n    } else if (hasMax) {\n      numberRange = hasExclusiveMax ? '< ' : '<= ';\n      numberRange += hasExclusiveMax ? exclusiveMax : max;\n    }\n    return numberRange;\n  }\n\n  private static humanizeMultipleOfConstraint(\n    multipleOf: number | undefined,\n  ): string | undefined {\n    if (multipleOf === undefined) {\n      return;\n    }\n    const strigifiedMultipleOf = multipleOf.toString(10);\n    if (!/^0\\.0*1$/.test(strigifiedMultipleOf)) {\n      return `multiple of ${strigifiedMultipleOf}`;\n    }\n    return `decimal places <= ${strigifiedMultipleOf.split('.')[1].length}`;\n  }\n\n  private static humanizeRangeConstraint(\n    description: string,\n    min: number | undefined,\n    max: number | undefined,\n  ): string | undefined {\n    let stringRange;\n    if (min !== undefined && max !== undefined) {\n      if (min === max) {\n        stringRange = `${min} ${description}`;\n      } else {\n        stringRange = `[ ${min} .. ${max} ] ${description}`;\n      }\n    } else if (max !== undefined) {\n      stringRange = `<= ${max} ${description}`;\n    } else if (min !== undefined) {\n      if (min === 1) {\n        stringRange = 'non-empty';\n      } else {\n        stringRange = `>= ${min} ${description}`;\n      }\n    }\n    return stringRange;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private static jsonFieldToSchema(value: any): any {\n    if (value === undefined || value === null) {\n      return {\n        type: 'string',\n        const: '',\n        [this.extRawValue]: true,\n      };\n    }\n    if (typeof value !== 'object') {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      const str =\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n        typeof value.toString === 'function' ? value.toString() : value;\n      return {\n        type: 'string',\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const: str,\n        [this.extRawValue]: true,\n      };\n    }\n    if (this.isJSONSchema(value)) {\n      return value;\n    }\n    if (Array.isArray(value)) {\n      return {\n        type: 'array',\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        items: value.map((v) => this.jsonFieldToSchema(v)),\n        [this.extRenderAdditionalInfo]: false,\n      };\n    }\n    return {\n      type: 'object',\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      properties: Object.entries(value).reduce(\n        (obj, [k, v]) => {\n          obj[k] = this.jsonFieldToSchema(v);\n          return obj;\n        },\n        {} as Record<string, unknown>,\n      ),\n      [this.extRenderAdditionalInfo]: false,\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private static isJSONSchema(value: any): boolean {\n    // eslint-disable-next-line sonarjs/prefer-single-boolean-return\n    if (\n      value &&\n      typeof value === 'object' &&\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access\n      (jsonSchemaTypes.includes(value.type) ||\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        (Array.isArray(value.type) &&\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n          value.type.some((t: string) => !jsonSchemaTypes.includes(t))))\n    ) {\n      return true;\n    }\n    return false;\n  }\n}\n"]}