export { getAutocompleteSuggestions, getDefinitionQueryResultForDefinitionNode, getDefinitionQueryResultForFragmentSpread, getDefinitionQueryResultForNamedType, getDefinitionQueryResultForField, getDefinitionQueryResultForArgument, getDiagnostics, getFragmentDefinitions, getHoverInformation, getOutline, getRange, getTypeInfo, getVariableCompletions, SEVERITY, Severity, HoverConfig, SeverityEnum, DIAGNOSTIC_SEVERITY, DefinitionQueryResult, DefinitionQueryResponse, canUseDirective, SuggestionCommand, AutocompleteSuggestionOptions, validateQuery, } from './interface';
export { onlineParser, ParseRules, CharacterStream, RuleKinds, LexRules, isIgnored, p, list, t, opt, getTokenAtPosition, GraphQLDocumentMode, getDefinitionState, getFieldDef, } from './parser';
export type { RuleOrString, ParserOptions, ParseRule, TokenPattern, State, CharacterStreamInterface, RuleKindEnum, Token, ContextToken, ContextTokenForCodeMirror, ContextTokenUnion, RuleKind, } from './parser';
export type { CompletionItem, GraphQLProjectConfig, Maybe, IPosition, Diagnostic, IRange, Definition, CachedContent, GraphQLConfig, GraphQLFileMetadata, Uri, ObjectTypeInfo, Outline, OutlineTree, FragmentInfo, GraphQLFileInfo, FileChangeType, GraphQLCache, GraphQLExtensionDeclaration, } from './types';
export { CompletionItemKind, FileChangeTypeKind } from './types';
export { JSONSchema6, JSONSchema6TypeName, JSONSchemaOptions, getASTNodeAtPosition, getFragmentDependencies, getFragmentDependenciesForAST, getOperationASTFacts, getOperationFacts, getQueryFacts, getVariablesJSONSchema, offsetToPosition, OperationFacts, pointToOffset, Position, collectVariables, validateWithCustomRules, VariableToType, QueryFacts, Range, } from './utils';
//# sourceMappingURL=index.d.ts.map