{"version":3,"file":"index.js","sources":["../dist-src/value-to-tree-object.js","../dist-src/constants.js","../dist-src/create-tree.js","../dist-src/create-commit.js","../dist-src/compose-create-pull-request.js","../dist-src/version.js","../dist-src/index.js"],"sourcesContent":["export async function valueToTreeObject(octokit, owner, repo, path, value) {\n    const defaultMode = \"100644\";\n    // Text files can be changed through the .content key\n    if (typeof value === \"string\") {\n        return {\n            path,\n            mode: defaultMode,\n            content: value,\n        };\n    }\n    const mode = value.mode ?? defaultMode;\n    // UTF-8 files can be treated as text files\n    // https://github.com/gr2m/octokit-plugin-create-pull-request/pull/133\n    if (value.encoding === \"utf-8\") {\n        return {\n            path,\n            mode: mode,\n            content: value.content,\n        };\n    }\n    // Binary files need to be created first using the git blob API,\n    // then changed by referencing in the .sha key\n    const { data } = await octokit.request(\"POST /repos/{owner}/{repo}/git/blobs\", {\n        owner,\n        repo,\n        ...value,\n    });\n    const blobSha = data.sha;\n    return {\n        path,\n        mode: mode,\n        sha: blobSha,\n    };\n}\n","export const DELETE_FILE = Symbol(\"DELETE_FILE\");\n","import { valueToTreeObject } from \"./value-to-tree-object\";\nimport { DELETE_FILE } from \"./constants\";\nexport async function createTree(state, changes) {\n    const { octokit, owner, repo, ownerOrFork, latestCommitSha, latestCommitTreeSha, } = state;\n    let tree = [];\n    for (const path of Object.keys(changes.files)) {\n        const value = changes.files[path];\n        if (value === DELETE_FILE) {\n            // Deleting a non-existent file from a tree leads to an \"GitRPC::BadObjectState\" error,\n            // so we only attempt to delete the file if it exists.\n            try {\n                // https://developer.github.com/v3/repos/contents/#get-contents\n                await octokit.request(\"HEAD /repos/{owner}/{repo}/contents/:path\", {\n                    owner: ownerOrFork,\n                    repo,\n                    ref: latestCommitSha,\n                    path,\n                });\n                tree.push({\n                    path,\n                    mode: \"100644\",\n                    sha: null,\n                });\n                continue;\n            }\n            catch (error) {\n                continue;\n            }\n        }\n        // When passed a function, retrieve the content of the file, pass it\n        // to the function, then return the result\n        if (typeof value === \"function\") {\n            let result;\n            try {\n                const { data: file } = await octokit.request(\"GET /repos/{owner}/{repo}/contents/:path\", {\n                    owner: ownerOrFork,\n                    repo,\n                    ref: latestCommitSha,\n                    path,\n                });\n                result = await value(Object.assign(file, { exists: true }));\n                if (result === DELETE_FILE) {\n                    try {\n                        // https://developer.github.com/v3/repos/contents/#get-contents\n                        await octokit.request(\"HEAD /repos/{owner}/{repo}/contents/:path\", {\n                            owner: ownerOrFork,\n                            repo,\n                            ref: latestCommitSha,\n                            path,\n                        });\n                        tree.push({\n                            path,\n                            mode: \"100644\",\n                            sha: null,\n                        });\n                        continue;\n                    }\n                    catch (error) {\n                        // istanbul ignore next\n                        continue;\n                    }\n                }\n            }\n            catch (error) {\n                // @ts-ignore\n                // istanbul ignore if\n                if (error.status !== 404)\n                    throw error;\n                // @ts-ignore\n                result = await value({ exists: false });\n            }\n            if (result === null ||\n                typeof result === \"undefined\" ||\n                typeof result === \"symbol\") {\n                continue;\n            }\n            tree.push(\n            // @ts-expect-error - Argument result can never be of type Symbol at this branch\n            // because the above condition will catch it and move on to the next iteration cycle\n            await valueToTreeObject(octokit, ownerOrFork, repo, path, result));\n            continue;\n        }\n        // @ts-expect-error - Argument value can never be of type Symbol at this branch\n        // because the above condition will catch it and initiate a file deletion operation\n        tree.push(await valueToTreeObject(octokit, ownerOrFork, repo, path, value));\n        continue;\n    }\n    tree = tree.filter(Boolean);\n    if (tree.length === 0) {\n        return null;\n    }\n    // https://developer.github.com/v3/git/trees/#create-a-tree\n    const { data: { sha: newTreeSha }, } = await octokit.request(\"POST /repos/{owner}/{repo}/git/trees\", {\n        owner: ownerOrFork,\n        repo,\n        base_tree: latestCommitTreeSha,\n        tree,\n    });\n    return newTreeSha;\n}\n","export async function createCommit(state, treeCreated, changes) {\n    const { octokit, repo, ownerOrFork, latestCommitSha } = state;\n    const message = treeCreated\n        ? changes.commit\n        : typeof changes.emptyCommit === \"string\"\n            ? changes.emptyCommit\n            : changes.commit;\n    const commit = {\n        message,\n        author: changes.author,\n        committer: changes.committer,\n        tree: state.latestCommitTreeSha,\n        parents: [latestCommitSha],\n    };\n    // https://developer.github.com/v3/git/commits/#create-a-commit\n    const { data: latestCommit } = await octokit.request(\"POST /repos/{owner}/{repo}/git/commits\", {\n        owner: ownerOrFork,\n        repo,\n        ...commit,\n        signature: changes.signature\n            ? await changes.signature(commit)\n            : undefined,\n    });\n    return latestCommit.sha;\n}\n","import { createTree } from \"./create-tree\";\nimport { createCommit } from \"./create-commit\";\nexport async function composeCreatePullRequest(octokit, { owner, repo, title, body, base, head, createWhenEmpty, changes: changesOption, draft = false, labels = [], forceFork = false, update = false, }) {\n    if (head === base) {\n        throw new Error('[octokit-plugin-create-pull-request] \"head\" cannot be the same value as \"base\"');\n    }\n    const changes = Array.isArray(changesOption)\n        ? changesOption\n        : [changesOption];\n    if (changes.length === 0)\n        throw new Error('[octokit-plugin-create-pull-request] \"changes\" cannot be an empty array');\n    const state = { octokit, owner, repo };\n    // https://developer.github.com/v3/repos/#get-a-repository\n    const { data: repository, headers } = await octokit.request(\"GET /repos/{owner}/{repo}\", {\n        owner,\n        repo,\n    });\n    const isUser = !!headers[\"x-oauth-scopes\"];\n    if (!repository.permissions) {\n        throw new Error(\"[octokit-plugin-create-pull-request] Missing authentication\");\n    }\n    if (!base) {\n        base = repository.default_branch;\n    }\n    state.ownerOrFork = owner;\n    if (forceFork || (isUser && !repository.permissions.push)) {\n        // https://developer.github.com/v3/users/#get-the-authenticated-user\n        const user = await octokit.request(\"GET /user\");\n        // https://developer.github.com/v3/repos/forks/#list-forks\n        const forks = await octokit.request(\"GET /repos/{owner}/{repo}/forks\", {\n            owner,\n            repo,\n        });\n        const hasFork = forks.data.find(\n        /* istanbul ignore next - fork owner can be null, but we don't test that */\n        (fork) => fork.owner && fork.owner.login === user.data.login);\n        if (!hasFork) {\n            // https://developer.github.com/v3/repos/forks/#create-a-fork\n            await octokit.request(\"POST /repos/{owner}/{repo}/forks\", {\n                owner,\n                repo,\n            });\n        }\n        state.ownerOrFork = user.data.login;\n    }\n    // https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository\n    const { data: [latestCommit], } = await octokit.request(\"GET /repos/{owner}/{repo}/commits\", {\n        owner,\n        repo,\n        sha: base,\n        per_page: 1,\n    });\n    state.latestCommitSha = latestCommit.sha;\n    state.latestCommitTreeSha = latestCommit.commit.tree.sha;\n    const baseCommitTreeSha = latestCommit.commit.tree.sha;\n    for (const change of changes) {\n        let treeCreated = false;\n        if (change.files && Object.keys(change.files).length) {\n            const latestCommitTreeSha = await createTree(state, change);\n            if (latestCommitTreeSha) {\n                state.latestCommitTreeSha = latestCommitTreeSha;\n                treeCreated = true;\n            }\n        }\n        if (treeCreated || change.emptyCommit !== false) {\n            state.latestCommitSha = await createCommit(state, treeCreated, change);\n        }\n    }\n    const hasNoChanges = baseCommitTreeSha === state.latestCommitTreeSha;\n    if (hasNoChanges && createWhenEmpty === false) {\n        return null;\n    }\n    const branchInfo = await octokit.graphql(`\n    query ($owner: String!, $repo: String!, $head: String!) {\n      repository(name: $repo, owner: $owner) {\n        ref(qualifiedName: $head) {\n          associatedPullRequests(first: 1, states: OPEN) {\n            edges {\n              node {\n                id\n                number\n                url\n              }\n            }\n          }\n        }\n      }\n    }`, {\n        owner: state.ownerOrFork,\n        repo,\n        head,\n    });\n    const branchExists = !!branchInfo.repository.ref;\n    const existingPullRequest = branchInfo.repository.ref?.associatedPullRequests?.edges?.[0]?.node;\n    if (existingPullRequest && !update) {\n        throw new Error(`[octokit-plugin-create-pull-request] Pull request already exists: ${existingPullRequest.url}. Set update=true to enable updating`);\n    }\n    if (branchExists) {\n        // https://docs.github.com/en/rest/git/refs#update-a-reference\n        await octokit.request(\"PATCH /repos/{owner}/{repo}/git/refs/{ref}\", {\n            owner: state.ownerOrFork,\n            repo,\n            sha: state.latestCommitSha,\n            ref: `heads/${head}`,\n            force: true,\n        });\n    }\n    else {\n        // https://developer.github.com/v3/git/refs/#create-a-reference\n        await octokit.request(\"POST /repos/{owner}/{repo}/git/refs\", {\n            owner: state.ownerOrFork,\n            repo,\n            sha: state.latestCommitSha,\n            ref: `refs/heads/${head}`,\n        });\n    }\n    const pullRequestOptions = {\n        owner,\n        repo,\n        head: `${state.ownerOrFork}:${head}`,\n        base,\n        title,\n        body,\n        draft,\n    };\n    let res;\n    if (existingPullRequest) {\n        // https://docs.github.com/en/rest/pulls/pulls#update-a-pull-request\n        res = await octokit.request(\"PATCH /repos/{owner}/{repo}/pulls/{pull_number}\", {\n            pull_number: existingPullRequest.number,\n            ...pullRequestOptions,\n        });\n    }\n    else {\n        // https://developer.github.com/v3/pulls/#create-a-pull-request\n        res = await octokit.request(\"POST /repos/{owner}/{repo}/pulls\", pullRequestOptions);\n    }\n    if (labels.length) {\n        try {\n            const labelRes = await octokit.request(\"POST /repos/{owner}/{repo}/issues/{number}/labels\", {\n                owner,\n                repo,\n                number: res.data.number,\n                labels,\n            });\n            // istanbul ignore if\n            if (labelRes.data.length > labels.length) {\n                octokit.log.warn(\"The pull request already contains more labels than the ones provided. This could be due to the presence of previous labels.\");\n            }\n        }\n        catch (error) {\n            // @ts-ignore\n            // istanbul ignore if\n            if (error.status === 403) {\n                octokit.log.warn(\"You do not have permissions to apply labels to this pull request. However, the pull request has been successfully created without the requested labels.\");\n                return res;\n            }\n            // @ts-ignore\n            if (error.status !== 403)\n                throw error;\n        }\n    }\n    return res;\n}\n","export const VERSION = \"5.1.1\";\n","import { composeCreatePullRequest } from \"./compose-create-pull-request\";\nimport { VERSION } from \"./version\";\nexport { DELETE_FILE } from \"./constants\";\n/**\n * @param octokit Octokit instance\n */\nexport function createPullRequest(octokit) {\n    return {\n        createPullRequest: composeCreatePullRequest.bind(null, octokit),\n    };\n}\nexport { composeCreatePullRequest } from \"./compose-create-pull-request\";\ncreatePullRequest.VERSION = VERSION;\n"],"names":[],"mappings":"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"}