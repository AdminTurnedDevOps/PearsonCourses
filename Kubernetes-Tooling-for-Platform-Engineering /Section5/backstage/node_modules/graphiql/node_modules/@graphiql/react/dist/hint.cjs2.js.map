{"version":3,"file":"hint.cjs2.js","sources":["../../codemirror-graphql/esm/utils/hintList.js","../../codemirror-graphql/esm/variables/hint.js"],"sourcesContent":["export default function hintList(cursor, token, list) {\n    const hints = filterAndSortList(list, normalizeText(token.string));\n    if (!hints) {\n        return;\n    }\n    const tokenStart = token.type !== null && /\"|\\w/.test(token.string[0])\n        ? token.start\n        : token.end;\n    return {\n        list: hints,\n        from: { line: cursor.line, ch: tokenStart },\n        to: { line: cursor.line, ch: token.end },\n    };\n}\nfunction filterAndSortList(list, text) {\n    if (!text) {\n        return filterNonEmpty(list, entry => !entry.isDeprecated);\n    }\n    const byProximity = list.map(entry => ({\n        proximity: getProximity(normalizeText(entry.text), text),\n        entry,\n    }));\n    const conciseMatches = filterNonEmpty(filterNonEmpty(byProximity, pair => pair.proximity <= 2), pair => !pair.entry.isDeprecated);\n    const sortedMatches = conciseMatches.sort((a, b) => (a.entry.isDeprecated ? 1 : 0) - (b.entry.isDeprecated ? 1 : 0) ||\n        a.proximity - b.proximity ||\n        a.entry.text.length - b.entry.text.length);\n    return sortedMatches.map(pair => pair.entry);\n}\nfunction filterNonEmpty(array, predicate) {\n    const filtered = array.filter(predicate);\n    return filtered.length === 0 ? array : filtered;\n}\nfunction normalizeText(text) {\n    return text.toLowerCase().replaceAll(/\\W/g, '');\n}\nfunction getProximity(suggestion, text) {\n    let proximity = lexicalDistance(text, suggestion);\n    if (suggestion.length > text.length) {\n        proximity -= suggestion.length - text.length - 1;\n        proximity += suggestion.indexOf(text) === 0 ? 0 : 0.5;\n    }\n    return proximity;\n}\nfunction lexicalDistance(a, b) {\n    let i;\n    let j;\n    const d = [];\n    const aLength = a.length;\n    const bLength = b.length;\n    for (i = 0; i <= aLength; i++) {\n        d[i] = [i];\n    }\n    for (j = 1; j <= bLength; j++) {\n        d[0][j] = j;\n    }\n    for (i = 1; i <= aLength; i++) {\n        for (j = 1; j <= bLength; j++) {\n            const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n            d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);\n            if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n                d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);\n            }\n        }\n    }\n    return d[aLength][bLength];\n}\n//# sourceMappingURL=hintList.js.map","import CodeMirror from 'codemirror';\nimport { getNullableType, getNamedType, GraphQLEnumType, GraphQLInputObjectType, GraphQLList, GraphQLBoolean, } from 'graphql';\nimport forEachState from '../utils/forEachState';\nimport hintList from '../utils/hintList';\nCodeMirror.registerHelper('hint', 'graphql-variables', (editor, options) => {\n    const cur = editor.getCursor();\n    const token = editor.getTokenAt(cur);\n    const results = getVariablesHint(cur, token, options);\n    if ((results === null || results === void 0 ? void 0 : results.list) && results.list.length > 0) {\n        results.from = CodeMirror.Pos(results.from.line, results.from.ch);\n        results.to = CodeMirror.Pos(results.to.line, results.to.ch);\n        CodeMirror.signal(editor, 'hasCompletion', editor, results, token);\n    }\n    return results;\n});\nfunction getVariablesHint(cur, token, options) {\n    const state = token.state.kind === 'Invalid' ? token.state.prevState : token.state;\n    const { kind, step } = state;\n    if (kind === 'Document' && step === 0) {\n        return hintList(cur, token, [{ text: '{' }]);\n    }\n    const { variableToType } = options;\n    if (!variableToType) {\n        return;\n    }\n    const typeInfo = getTypeInfo(variableToType, token.state);\n    if (kind === 'Document' || (kind === 'Variable' && step === 0)) {\n        const variableNames = Object.keys(variableToType);\n        return hintList(cur, token, variableNames.map(name => ({\n            text: `\"${name}\": `,\n            type: variableToType[name],\n        })));\n    }\n    if ((kind === 'ObjectValue' || (kind === 'ObjectField' && step === 0)) &&\n        typeInfo.fields) {\n        const inputFields = Object.keys(typeInfo.fields).map(fieldName => typeInfo.fields[fieldName]);\n        return hintList(cur, token, inputFields.map(field => ({\n            text: `\"${field.name}\": `,\n            type: field.type,\n            description: field.description,\n        })));\n    }\n    if (kind === 'StringValue' ||\n        kind === 'NumberValue' ||\n        kind === 'BooleanValue' ||\n        kind === 'NullValue' ||\n        (kind === 'ListValue' && step === 1) ||\n        (kind === 'ObjectField' && step === 2) ||\n        (kind === 'Variable' && step === 2)) {\n        const namedInputType = typeInfo.type\n            ? getNamedType(typeInfo.type)\n            : undefined;\n        if (namedInputType instanceof GraphQLInputObjectType) {\n            return hintList(cur, token, [{ text: '{' }]);\n        }\n        if (namedInputType instanceof GraphQLEnumType) {\n            const values = namedInputType.getValues();\n            return hintList(cur, token, values.map(value => ({\n                text: `\"${value.name}\"`,\n                type: namedInputType,\n                description: value.description,\n            })));\n        }\n        if (namedInputType === GraphQLBoolean) {\n            return hintList(cur, token, [\n                { text: 'true', type: GraphQLBoolean, description: 'Not false.' },\n                { text: 'false', type: GraphQLBoolean, description: 'Not true.' },\n            ]);\n        }\n    }\n}\nfunction getTypeInfo(variableToType, tokenState) {\n    const info = {\n        type: null,\n        fields: null,\n    };\n    forEachState(tokenState, state => {\n        switch (state.kind) {\n            case 'Variable': {\n                info.type = variableToType[state.name];\n                break;\n            }\n            case 'ListValue': {\n                const nullableType = info.type ? getNullableType(info.type) : undefined;\n                info.type =\n                    nullableType instanceof GraphQLList ? nullableType.ofType : null;\n                break;\n            }\n            case 'ObjectValue': {\n                const objectType = info.type ? getNamedType(info.type) : undefined;\n                info.fields =\n                    objectType instanceof GraphQLInputObjectType\n                        ? objectType.getFields()\n                        : null;\n                break;\n            }\n            case 'ObjectField': {\n                const objectField = state.name && info.fields ? info.fields[state.name] : null;\n                info.type = objectField === null || objectField === void 0 ? void 0 : objectField.type;\n                break;\n            }\n        }\n    });\n    return info;\n}\n//# sourceMappingURL=hint.js.map"],"names":["hintList","cursor","token","list","hints","filterAndSortList","normalizeText","tokenStart","__name","text","filterNonEmpty","entry","byProximity","getProximity","pair","a","b","array","predicate","filtered","suggestion","proximity","lexicalDistance","i","j","d","aLength","bLength","cost","CodeMirror","editor","options","cur","results","getVariablesHint","state","kind","step","variableToType","typeInfo","getTypeInfo","variableNames","name","inputFields","fieldName","field","namedInputType","getNamedType","GraphQLInputObjectType","GraphQLEnumType","values","value","GraphQLBoolean","tokenState","info","forEachState","nullableType","getNullableType","GraphQLList","objectType","objectField"],"mappings":"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"}