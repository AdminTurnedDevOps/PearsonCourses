{"version":3,"file":"hint.es2.js","sources":["../../codemirror-graphql/esm/utils/hintList.js","../../codemirror-graphql/esm/variables/hint.js"],"sourcesContent":["export default function hintList(cursor, token, list) {\n    const hints = filterAndSortList(list, normalizeText(token.string));\n    if (!hints) {\n        return;\n    }\n    const tokenStart = token.type !== null && /\"|\\w/.test(token.string[0])\n        ? token.start\n        : token.end;\n    return {\n        list: hints,\n        from: { line: cursor.line, ch: tokenStart },\n        to: { line: cursor.line, ch: token.end },\n    };\n}\nfunction filterAndSortList(list, text) {\n    if (!text) {\n        return filterNonEmpty(list, entry => !entry.isDeprecated);\n    }\n    const byProximity = list.map(entry => ({\n        proximity: getProximity(normalizeText(entry.text), text),\n        entry,\n    }));\n    const conciseMatches = filterNonEmpty(filterNonEmpty(byProximity, pair => pair.proximity <= 2), pair => !pair.entry.isDeprecated);\n    const sortedMatches = conciseMatches.sort((a, b) => (a.entry.isDeprecated ? 1 : 0) - (b.entry.isDeprecated ? 1 : 0) ||\n        a.proximity - b.proximity ||\n        a.entry.text.length - b.entry.text.length);\n    return sortedMatches.map(pair => pair.entry);\n}\nfunction filterNonEmpty(array, predicate) {\n    const filtered = array.filter(predicate);\n    return filtered.length === 0 ? array : filtered;\n}\nfunction normalizeText(text) {\n    return text.toLowerCase().replaceAll(/\\W/g, '');\n}\nfunction getProximity(suggestion, text) {\n    let proximity = lexicalDistance(text, suggestion);\n    if (suggestion.length > text.length) {\n        proximity -= suggestion.length - text.length - 1;\n        proximity += suggestion.indexOf(text) === 0 ? 0 : 0.5;\n    }\n    return proximity;\n}\nfunction lexicalDistance(a, b) {\n    let i;\n    let j;\n    const d = [];\n    const aLength = a.length;\n    const bLength = b.length;\n    for (i = 0; i <= aLength; i++) {\n        d[i] = [i];\n    }\n    for (j = 1; j <= bLength; j++) {\n        d[0][j] = j;\n    }\n    for (i = 1; i <= aLength; i++) {\n        for (j = 1; j <= bLength; j++) {\n            const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n            d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);\n            if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n                d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);\n            }\n        }\n    }\n    return d[aLength][bLength];\n}\n//# sourceMappingURL=hintList.js.map","import CodeMirror from 'codemirror';\nimport { getNullableType, getNamedType, GraphQLEnumType, GraphQLInputObjectType, GraphQLList, GraphQLBoolean, } from 'graphql';\nimport forEachState from '../utils/forEachState';\nimport hintList from '../utils/hintList';\nCodeMirror.registerHelper('hint', 'graphql-variables', (editor, options) => {\n    const cur = editor.getCursor();\n    const token = editor.getTokenAt(cur);\n    const results = getVariablesHint(cur, token, options);\n    if ((results === null || results === void 0 ? void 0 : results.list) && results.list.length > 0) {\n        results.from = CodeMirror.Pos(results.from.line, results.from.ch);\n        results.to = CodeMirror.Pos(results.to.line, results.to.ch);\n        CodeMirror.signal(editor, 'hasCompletion', editor, results, token);\n    }\n    return results;\n});\nfunction getVariablesHint(cur, token, options) {\n    const state = token.state.kind === 'Invalid' ? token.state.prevState : token.state;\n    const { kind, step } = state;\n    if (kind === 'Document' && step === 0) {\n        return hintList(cur, token, [{ text: '{' }]);\n    }\n    const { variableToType } = options;\n    if (!variableToType) {\n        return;\n    }\n    const typeInfo = getTypeInfo(variableToType, token.state);\n    if (kind === 'Document' || (kind === 'Variable' && step === 0)) {\n        const variableNames = Object.keys(variableToType);\n        return hintList(cur, token, variableNames.map(name => ({\n            text: `\"${name}\": `,\n            type: variableToType[name],\n        })));\n    }\n    if ((kind === 'ObjectValue' || (kind === 'ObjectField' && step === 0)) &&\n        typeInfo.fields) {\n        const inputFields = Object.keys(typeInfo.fields).map(fieldName => typeInfo.fields[fieldName]);\n        return hintList(cur, token, inputFields.map(field => ({\n            text: `\"${field.name}\": `,\n            type: field.type,\n            description: field.description,\n        })));\n    }\n    if (kind === 'StringValue' ||\n        kind === 'NumberValue' ||\n        kind === 'BooleanValue' ||\n        kind === 'NullValue' ||\n        (kind === 'ListValue' && step === 1) ||\n        (kind === 'ObjectField' && step === 2) ||\n        (kind === 'Variable' && step === 2)) {\n        const namedInputType = typeInfo.type\n            ? getNamedType(typeInfo.type)\n            : undefined;\n        if (namedInputType instanceof GraphQLInputObjectType) {\n            return hintList(cur, token, [{ text: '{' }]);\n        }\n        if (namedInputType instanceof GraphQLEnumType) {\n            const values = namedInputType.getValues();\n            return hintList(cur, token, values.map(value => ({\n                text: `\"${value.name}\"`,\n                type: namedInputType,\n                description: value.description,\n            })));\n        }\n        if (namedInputType === GraphQLBoolean) {\n            return hintList(cur, token, [\n                { text: 'true', type: GraphQLBoolean, description: 'Not false.' },\n                { text: 'false', type: GraphQLBoolean, description: 'Not true.' },\n            ]);\n        }\n    }\n}\nfunction getTypeInfo(variableToType, tokenState) {\n    const info = {\n        type: null,\n        fields: null,\n    };\n    forEachState(tokenState, state => {\n        switch (state.kind) {\n            case 'Variable': {\n                info.type = variableToType[state.name];\n                break;\n            }\n            case 'ListValue': {\n                const nullableType = info.type ? getNullableType(info.type) : undefined;\n                info.type =\n                    nullableType instanceof GraphQLList ? nullableType.ofType : null;\n                break;\n            }\n            case 'ObjectValue': {\n                const objectType = info.type ? getNamedType(info.type) : undefined;\n                info.fields =\n                    objectType instanceof GraphQLInputObjectType\n                        ? objectType.getFields()\n                        : null;\n                break;\n            }\n            case 'ObjectField': {\n                const objectField = state.name && info.fields ? info.fields[state.name] : null;\n                info.type = objectField === null || objectField === void 0 ? void 0 : objectField.type;\n                break;\n            }\n        }\n    });\n    return info;\n}\n//# sourceMappingURL=hint.js.map"],"names":["hintList","cursor","token","list","hints","filterAndSortList","normalizeText","tokenStart","__name","text","filterNonEmpty","entry","byProximity","getProximity","pair","a","b","array","predicate","filtered","suggestion","proximity","lexicalDistance","i","j","d","aLength","bLength","cost","CodeMirror","editor","options","cur","results","getVariablesHint","state","kind","step","variableToType","typeInfo","getTypeInfo","variableNames","name","inputFields","fieldName","field","namedInputType","getNamedType","GraphQLInputObjectType","GraphQLEnumType","values","value","GraphQLBoolean","tokenState","info","forEachState","nullableType","getNullableType","GraphQLList","objectType","objectField"],"mappings":"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"}