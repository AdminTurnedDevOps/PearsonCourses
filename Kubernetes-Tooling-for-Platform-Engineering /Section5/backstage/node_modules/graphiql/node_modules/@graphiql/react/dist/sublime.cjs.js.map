{"version":3,"file":"sublime.cjs.js","sources":["../../../node_modules/codemirror/keymap/sublime.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// A rough approximation of Sublime Text's keybindings\n// Depends on addon/search/searchcursor.js and optionally addon/dialog/dialogs.js\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../lib/codemirror\"), require(\"../addon/search/searchcursor\"), require(\"../addon/edit/matchbrackets\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../lib/codemirror\", \"../addon/search/searchcursor\", \"../addon/edit/matchbrackets\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var cmds = CodeMirror.commands;\n  var Pos = CodeMirror.Pos;\n\n  // This is not exactly Sublime's algorithm. I couldn't make heads or tails of that.\n  function findPosSubword(doc, start, dir) {\n    if (dir < 0 && start.ch == 0) return doc.clipPos(Pos(start.line - 1));\n    var line = doc.getLine(start.line);\n    if (dir > 0 && start.ch >= line.length) return doc.clipPos(Pos(start.line + 1, 0));\n    var state = \"start\", type, startPos = start.ch;\n    for (var pos = startPos, e = dir < 0 ? 0 : line.length, i = 0; pos != e; pos += dir, i++) {\n      var next = line.charAt(dir < 0 ? pos - 1 : pos);\n      var cat = next != \"_\" && CodeMirror.isWordChar(next) ? \"w\" : \"o\";\n      if (cat == \"w\" && next.toUpperCase() == next) cat = \"W\";\n      if (state == \"start\") {\n        if (cat != \"o\") { state = \"in\"; type = cat; }\n        else startPos = pos + dir\n      } else if (state == \"in\") {\n        if (type != cat) {\n          if (type == \"w\" && cat == \"W\" && dir < 0) pos--;\n          if (type == \"W\" && cat == \"w\" && dir > 0) { // From uppercase to lowercase\n            if (pos == startPos + 1) { type = \"w\"; continue; }\n            else pos--;\n          }\n          break;\n        }\n      }\n    }\n    return Pos(start.line, pos);\n  }\n\n  function moveSubword(cm, dir) {\n    cm.extendSelectionsBy(function(range) {\n      if (cm.display.shift || cm.doc.extend || range.empty())\n        return findPosSubword(cm.doc, range.head, dir);\n      else\n        return dir < 0 ? range.from() : range.to();\n    });\n  }\n\n  cmds.goSubwordLeft = function(cm) { moveSubword(cm, -1); };\n  cmds.goSubwordRight = function(cm) { moveSubword(cm, 1); };\n\n  cmds.scrollLineUp = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleBottomLine = cm.lineAtHeight(info.top + info.clientHeight, \"local\");\n      if (cm.getCursor().line >= visibleBottomLine)\n        cm.execCommand(\"goLineUp\");\n    }\n    cm.scrollTo(null, info.top - cm.defaultTextHeight());\n  };\n  cmds.scrollLineDown = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleTopLine = cm.lineAtHeight(info.top, \"local\")+1;\n      if (cm.getCursor().line <= visibleTopLine)\n        cm.execCommand(\"goLineDown\");\n    }\n    cm.scrollTo(null, info.top + cm.defaultTextHeight());\n  };\n\n  cmds.splitSelectionByLine = function(cm) {\n    var ranges = cm.listSelections(), lineRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      for (var line = from.line; line <= to.line; ++line)\n        if (!(to.line > from.line && line == to.line && to.ch == 0))\n          lineRanges.push({anchor: line == from.line ? from : Pos(line, 0),\n                           head: line == to.line ? to : Pos(line)});\n    }\n    cm.setSelections(lineRanges, 0);\n  };\n\n  cmds.singleSelectionTop = function(cm) {\n    var range = cm.listSelections()[0];\n    cm.setSelection(range.anchor, range.head, {scroll: false});\n  };\n\n  cmds.selectLine = function(cm) {\n    var ranges = cm.listSelections(), extended = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      extended.push({anchor: Pos(range.from().line, 0),\n                     head: Pos(range.to().line + 1, 0)});\n    }\n    cm.setSelections(extended);\n  };\n\n  function insertLine(cm, above) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    cm.operation(function() {\n      var len = cm.listSelections().length, newSelection = [], last = -1;\n      for (var i = 0; i < len; i++) {\n        var head = cm.listSelections()[i].head;\n        if (head.line <= last) continue;\n        var at = Pos(head.line + (above ? 0 : 1), 0);\n        cm.replaceRange(\"\\n\", at, null, \"+insertLine\");\n        cm.indentLine(at.line, null, true);\n        newSelection.push({head: at, anchor: at});\n        last = head.line + 1;\n      }\n      cm.setSelections(newSelection);\n    });\n    cm.execCommand(\"indentAuto\");\n  }\n\n  cmds.insertLineAfter = function(cm) { return insertLine(cm, false); };\n\n  cmds.insertLineBefore = function(cm) { return insertLine(cm, true); };\n\n  function wordAt(cm, pos) {\n    var start = pos.ch, end = start, line = cm.getLine(pos.line);\n    while (start && CodeMirror.isWordChar(line.charAt(start - 1))) --start;\n    while (end < line.length && CodeMirror.isWordChar(line.charAt(end))) ++end;\n    return {from: Pos(pos.line, start), to: Pos(pos.line, end), word: line.slice(start, end)};\n  }\n\n  cmds.selectNextOccurrence = function(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    var fullWord = cm.state.sublimeFindFullWord == cm.doc.sel;\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      cm.setSelection(word.from, word.to);\n      fullWord = true;\n    } else {\n      var text = cm.getRange(from, to);\n      var query = fullWord ? new RegExp(\"\\\\b\" + text + \"\\\\b\") : text;\n      var cur = cm.getSearchCursor(query, to);\n      var found = cur.findNext();\n      if (!found) {\n        cur = cm.getSearchCursor(query, Pos(cm.firstLine(), 0));\n        found = cur.findNext();\n      }\n      if (!found || isSelectedRange(cm.listSelections(), cur.from(), cur.to())) return\n      cm.addSelection(cur.from(), cur.to());\n    }\n    if (fullWord)\n      cm.state.sublimeFindFullWord = cm.doc.sel;\n  };\n\n  cmds.skipAndSelectNextOccurrence = function(cm) {\n    var prevAnchor = cm.getCursor(\"anchor\"), prevHead = cm.getCursor(\"head\");\n    cmds.selectNextOccurrence(cm);\n    if (CodeMirror.cmpPos(prevAnchor, prevHead) != 0) {\n      cm.doc.setSelections(cm.doc.listSelections()\n          .filter(function (sel) {\n            return sel.anchor != prevAnchor || sel.head != prevHead;\n          }));\n    }\n  }\n\n  function addCursorToSelection(cm, dir) {\n    var ranges = cm.listSelections(), newRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      var newAnchor = cm.findPosV(\n          range.anchor, dir, \"line\", range.anchor.goalColumn);\n      var newHead = cm.findPosV(\n          range.head, dir, \"line\", range.head.goalColumn);\n      newAnchor.goalColumn = range.anchor.goalColumn != null ?\n          range.anchor.goalColumn : cm.cursorCoords(range.anchor, \"div\").left;\n      newHead.goalColumn = range.head.goalColumn != null ?\n          range.head.goalColumn : cm.cursorCoords(range.head, \"div\").left;\n      var newRange = {anchor: newAnchor, head: newHead};\n      newRanges.push(range);\n      newRanges.push(newRange);\n    }\n    cm.setSelections(newRanges);\n  }\n  cmds.addCursorToPrevLine = function(cm) { addCursorToSelection(cm, -1); };\n  cmds.addCursorToNextLine = function(cm) { addCursorToSelection(cm, 1); };\n\n  function isSelectedRange(ranges, from, to) {\n    for (var i = 0; i < ranges.length; i++)\n      if (CodeMirror.cmpPos(ranges[i].from(), from) == 0 &&\n          CodeMirror.cmpPos(ranges[i].to(), to) == 0) return true\n    return false\n  }\n\n  var mirror = \"(){}[]\";\n  function selectBetweenBrackets(cm) {\n    var ranges = cm.listSelections(), newRanges = []\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], pos = range.head, opening = cm.scanForBracket(pos, -1);\n      if (!opening) return false;\n      for (;;) {\n        var closing = cm.scanForBracket(pos, 1);\n        if (!closing) return false;\n        if (closing.ch == mirror.charAt(mirror.indexOf(opening.ch) + 1)) {\n          var startPos = Pos(opening.pos.line, opening.pos.ch + 1);\n          if (CodeMirror.cmpPos(startPos, range.from()) == 0 &&\n              CodeMirror.cmpPos(closing.pos, range.to()) == 0) {\n            opening = cm.scanForBracket(opening.pos, -1);\n            if (!opening) return false;\n          } else {\n            newRanges.push({anchor: startPos, head: closing.pos});\n            break;\n          }\n        }\n        pos = Pos(closing.pos.line, closing.pos.ch + 1);\n      }\n    }\n    cm.setSelections(newRanges);\n    return true;\n  }\n\n  cmds.selectScope = function(cm) {\n    selectBetweenBrackets(cm) || cm.execCommand(\"selectAll\");\n  };\n  cmds.selectBetweenBrackets = function(cm) {\n    if (!selectBetweenBrackets(cm)) return CodeMirror.Pass;\n  };\n\n  function puncType(type) {\n    return !type ? null : /\\bpunctuation\\b/.test(type) ? type : undefined\n  }\n\n  cmds.goToBracket = function(cm) {\n    cm.extendSelectionsBy(function(range) {\n      var next = cm.scanForBracket(range.head, 1, puncType(cm.getTokenTypeAt(range.head)));\n      if (next && CodeMirror.cmpPos(next.pos, range.head) != 0) return next.pos;\n      var prev = cm.scanForBracket(range.head, -1, puncType(cm.getTokenTypeAt(Pos(range.head.line, range.head.ch + 1))));\n      return prev && Pos(prev.pos.line, prev.pos.ch + 1) || range.head;\n    });\n  };\n\n  cmds.swapLineUp = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.firstLine() - 1, newSels = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from().line - 1, to = range.to().line;\n      newSels.push({anchor: Pos(range.anchor.line - 1, range.anchor.ch),\n                    head: Pos(range.head.line - 1, range.head.ch)});\n      if (range.to().ch == 0 && !range.empty()) --to;\n      if (from > at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = 0; i < linesToMove.length; i += 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        if (to > cm.lastLine())\n          cm.replaceRange(\"\\n\" + line, Pos(cm.lastLine()), null, \"+swapLine\");\n        else\n          cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.setSelections(newSels);\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.swapLineDown = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.lastLine() + 1;\n    for (var i = ranges.length - 1; i >= 0; i--) {\n      var range = ranges[i], from = range.to().line + 1, to = range.from().line;\n      if (range.to().ch == 0 && !range.empty()) from--;\n      if (from < at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = linesToMove.length - 2; i >= 0; i -= 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        if (from == cm.lastLine())\n          cm.replaceRange(\"\", Pos(from - 1), Pos(from), \"+swapLine\");\n        else\n          cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.toggleCommentIndented = function(cm) {\n    cm.toggleComment({ indent: true });\n  }\n\n  cmds.joinLines = function(cm) {\n    var ranges = cm.listSelections(), joined = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from();\n      var start = from.line, end = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == end)\n        end = ranges[++i].to().line;\n      joined.push({start: start, end: end, anchor: !range.empty() && from});\n    }\n    cm.operation(function() {\n      var offset = 0, ranges = [];\n      for (var i = 0; i < joined.length; i++) {\n        var obj = joined[i];\n        var anchor = obj.anchor && Pos(obj.anchor.line - offset, obj.anchor.ch), head;\n        for (var line = obj.start; line <= obj.end; line++) {\n          var actual = line - offset;\n          if (line == obj.end) head = Pos(actual, cm.getLine(actual).length + 1);\n          if (actual < cm.lastLine()) {\n            cm.replaceRange(\" \", Pos(actual), Pos(actual + 1, /^\\s*/.exec(cm.getLine(actual + 1))[0].length));\n            ++offset;\n          }\n        }\n        ranges.push({anchor: anchor || head, head: head});\n      }\n      cm.setSelections(ranges, 0);\n    });\n  };\n\n  cmds.duplicateLine = function(cm) {\n    cm.operation(function() {\n      var rangeCount = cm.listSelections().length;\n      for (var i = 0; i < rangeCount; i++) {\n        var range = cm.listSelections()[i];\n        if (range.empty())\n          cm.replaceRange(cm.getLine(range.head.line) + \"\\n\", Pos(range.head.line, 0));\n        else\n          cm.replaceRange(cm.getRange(range.from(), range.to()), range.from());\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n\n  function sortLines(cm, caseSensitive, direction) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), toSort = [], selected;\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      if (range.empty()) continue;\n      var from = range.from().line, to = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == to)\n        to = ranges[++i].to().line;\n      if (!ranges[i].to().ch) to--;\n      toSort.push(from, to);\n    }\n    if (toSort.length) selected = true;\n    else toSort.push(cm.firstLine(), cm.lastLine());\n\n    cm.operation(function() {\n      var ranges = [];\n      for (var i = 0; i < toSort.length; i += 2) {\n        var from = toSort[i], to = toSort[i + 1];\n        var start = Pos(from, 0), end = Pos(to);\n        var lines = cm.getRange(start, end, false);\n        if (caseSensitive)\n          lines.sort(function(a, b) { return a < b ? -direction : a == b ? 0 : direction; });\n        else\n          lines.sort(function(a, b) {\n            var au = a.toUpperCase(), bu = b.toUpperCase();\n            if (au != bu) { a = au; b = bu; }\n            return a < b ? -direction : a == b ? 0 : direction;\n          });\n        cm.replaceRange(lines, start, end);\n        if (selected) ranges.push({anchor: start, head: Pos(to + 1, 0)});\n      }\n      if (selected) cm.setSelections(ranges, 0);\n    });\n  }\n\n  cmds.sortLines = function(cm) { sortLines(cm, true, 1); };\n  cmds.reverseSortLines = function(cm) { sortLines(cm, true, -1); };\n  cmds.sortLinesInsensitive = function(cm) { sortLines(cm, false, 1); };\n  cmds.reverseSortLinesInsensitive = function(cm) { sortLines(cm, false, -1); };\n\n  cmds.nextBookmark = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      var current = marks.shift();\n      var found = current.find();\n      if (found) {\n        marks.push(current);\n        return cm.setSelection(found.from, found.to);\n      }\n    }\n  };\n\n  cmds.prevBookmark = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      marks.unshift(marks.pop());\n      var found = marks[marks.length - 1].find();\n      if (!found)\n        marks.pop();\n      else\n        return cm.setSelection(found.from, found.to);\n    }\n  };\n\n  cmds.toggleBookmark = function(cm) {\n    var ranges = cm.listSelections();\n    var marks = cm.state.sublimeBookmarks || (cm.state.sublimeBookmarks = []);\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      var found = ranges[i].empty() ? cm.findMarksAt(from) : cm.findMarks(from, to);\n      for (var j = 0; j < found.length; j++) {\n        if (found[j].sublimeBookmark) {\n          found[j].clear();\n          for (var k = 0; k < marks.length; k++)\n            if (marks[k] == found[j])\n              marks.splice(k--, 1);\n          break;\n        }\n      }\n      if (j == found.length)\n        marks.push(cm.markText(from, to, {sublimeBookmark: true, clearWhenEmpty: false}));\n    }\n  };\n\n  cmds.clearBookmarks = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) for (var i = 0; i < marks.length; i++) marks[i].clear();\n    marks.length = 0;\n  };\n\n  cmds.selectBookmarks = function(cm) {\n    var marks = cm.state.sublimeBookmarks, ranges = [];\n    if (marks) for (var i = 0; i < marks.length; i++) {\n      var found = marks[i].find();\n      if (!found)\n        marks.splice(i--, 0);\n      else\n        ranges.push({anchor: found.from, head: found.to});\n    }\n    if (ranges.length)\n      cm.setSelections(ranges, 0);\n  };\n\n  function modifyWordOrSelection(cm, mod) {\n    cm.operation(function() {\n      var ranges = cm.listSelections(), indices = [], replacements = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        if (range.empty()) { indices.push(i); replacements.push(\"\"); }\n        else replacements.push(mod(cm.getRange(range.from(), range.to())));\n      }\n      cm.replaceSelections(replacements, \"around\", \"case\");\n      for (var i = indices.length - 1, at; i >= 0; i--) {\n        var range = ranges[indices[i]];\n        if (at && CodeMirror.cmpPos(range.head, at) > 0) continue;\n        var word = wordAt(cm, range.head);\n        at = word.from;\n        cm.replaceRange(mod(word.word), word.from, word.to);\n      }\n    });\n  }\n\n  cmds.smartBackspace = function(cm) {\n    if (cm.somethingSelected()) return CodeMirror.Pass;\n\n    cm.operation(function() {\n      var cursors = cm.listSelections();\n      var indentUnit = cm.getOption(\"indentUnit\");\n\n      for (var i = cursors.length - 1; i >= 0; i--) {\n        var cursor = cursors[i].head;\n        var toStartOfLine = cm.getRange({line: cursor.line, ch: 0}, cursor);\n        var column = CodeMirror.countColumn(toStartOfLine, null, cm.getOption(\"tabSize\"));\n\n        // Delete by one character by default\n        var deletePos = cm.findPosH(cursor, -1, \"char\", false);\n\n        if (toStartOfLine && !/\\S/.test(toStartOfLine) && column % indentUnit == 0) {\n          var prevIndent = new Pos(cursor.line,\n            CodeMirror.findColumn(toStartOfLine, column - indentUnit, indentUnit));\n\n          // Smart delete only if we found a valid prevIndent location\n          if (prevIndent.ch != cursor.ch) deletePos = prevIndent;\n        }\n\n        cm.replaceRange(\"\", deletePos, cursor, \"+delete\");\n      }\n    });\n  };\n\n  cmds.delLineRight = function(cm) {\n    cm.operation(function() {\n      var ranges = cm.listSelections();\n      for (var i = ranges.length - 1; i >= 0; i--)\n        cm.replaceRange(\"\", ranges[i].anchor, Pos(ranges[i].to().line), \"+delete\");\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.upcaseAtCursor = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toUpperCase(); });\n  };\n  cmds.downcaseAtCursor = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toLowerCase(); });\n  };\n\n  cmds.setSublimeMark = function(cm) {\n    if (cm.state.sublimeMark) cm.state.sublimeMark.clear();\n    cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n  };\n  cmds.selectToSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) cm.setSelection(cm.getCursor(), found);\n  };\n  cmds.deleteToSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      var from = cm.getCursor(), to = found;\n      if (CodeMirror.cmpPos(from, to) > 0) { var tmp = to; to = from; from = tmp; }\n      cm.state.sublimeKilled = cm.getRange(from, to);\n      cm.replaceRange(\"\", from, to);\n    }\n  };\n  cmds.swapWithSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      cm.state.sublimeMark.clear();\n      cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n      cm.setCursor(found);\n    }\n  };\n  cmds.sublimeYank = function(cm) {\n    if (cm.state.sublimeKilled != null)\n      cm.replaceSelection(cm.state.sublimeKilled, null, \"paste\");\n  };\n\n  cmds.showInCenter = function(cm) {\n    var pos = cm.cursorCoords(null, \"local\");\n    cm.scrollTo(null, (pos.top + pos.bottom) / 2 - cm.getScrollInfo().clientHeight / 2);\n  };\n\n  function getTarget(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      from = word.from;\n      to = word.to;\n    }\n    return {from: from, to: to, query: cm.getRange(from, to), word: word};\n  }\n\n  function findAndGoTo(cm, forward) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var query = target.query;\n    var cur = cm.getSearchCursor(query, forward ? target.to : target.from);\n\n    if (forward ? cur.findNext() : cur.findPrevious()) {\n      cm.setSelection(cur.from(), cur.to());\n    } else {\n      cur = cm.getSearchCursor(query, forward ? Pos(cm.firstLine(), 0)\n                                              : cm.clipPos(Pos(cm.lastLine())));\n      if (forward ? cur.findNext() : cur.findPrevious())\n        cm.setSelection(cur.from(), cur.to());\n      else if (target.word)\n        cm.setSelection(target.from, target.to);\n    }\n  };\n  cmds.findUnder = function(cm) { findAndGoTo(cm, true); };\n  cmds.findUnderPrevious = function(cm) { findAndGoTo(cm,false); };\n  cmds.findAllUnder = function(cm) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var cur = cm.getSearchCursor(target.query);\n    var matches = [];\n    var primaryIndex = -1;\n    while (cur.findNext()) {\n      matches.push({anchor: cur.from(), head: cur.to()});\n      if (cur.from().line <= target.from.line && cur.from().ch <= target.from.ch)\n        primaryIndex++;\n    }\n    cm.setSelections(matches, primaryIndex);\n  };\n\n\n  var keyMap = CodeMirror.keyMap;\n  keyMap.macSublime = {\n    \"Cmd-Left\": \"goLineStartSmart\",\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-Left\": \"goSubwordLeft\",\n    \"Ctrl-Right\": \"goSubwordRight\",\n    \"Ctrl-Alt-Up\": \"scrollLineUp\",\n    \"Ctrl-Alt-Down\": \"scrollLineDown\",\n    \"Cmd-L\": \"selectLine\",\n    \"Shift-Cmd-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Cmd-Enter\": \"insertLineAfter\",\n    \"Shift-Cmd-Enter\": \"insertLineBefore\",\n    \"Cmd-D\": \"selectNextOccurrence\",\n    \"Shift-Cmd-Space\": \"selectScope\",\n    \"Shift-Cmd-M\": \"selectBetweenBrackets\",\n    \"Cmd-M\": \"goToBracket\",\n    \"Cmd-Ctrl-Up\": \"swapLineUp\",\n    \"Cmd-Ctrl-Down\": \"swapLineDown\",\n    \"Cmd-/\": \"toggleCommentIndented\",\n    \"Cmd-J\": \"joinLines\",\n    \"Shift-Cmd-D\": \"duplicateLine\",\n    \"F5\": \"sortLines\",\n    \"Shift-F5\": \"reverseSortLines\",\n    \"Cmd-F5\": \"sortLinesInsensitive\",\n    \"Shift-Cmd-F5\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Cmd-F2\": \"toggleBookmark\",\n    \"Shift-Cmd-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Cmd-K Cmd-D\": \"skipAndSelectNextOccurrence\",\n    \"Cmd-K Cmd-K\": \"delLineRight\",\n    \"Cmd-K Cmd-U\": \"upcaseAtCursor\",\n    \"Cmd-K Cmd-L\": \"downcaseAtCursor\",\n    \"Cmd-K Cmd-Space\": \"setSublimeMark\",\n    \"Cmd-K Cmd-A\": \"selectToSublimeMark\",\n    \"Cmd-K Cmd-W\": \"deleteToSublimeMark\",\n    \"Cmd-K Cmd-X\": \"swapWithSublimeMark\",\n    \"Cmd-K Cmd-Y\": \"sublimeYank\",\n    \"Cmd-K Cmd-C\": \"showInCenter\",\n    \"Cmd-K Cmd-G\": \"clearBookmarks\",\n    \"Cmd-K Cmd-Backspace\": \"delLineLeft\",\n    \"Cmd-K Cmd-1\": \"foldAll\",\n    \"Cmd-K Cmd-0\": \"unfoldAll\",\n    \"Cmd-K Cmd-J\": \"unfoldAll\",\n    \"Ctrl-Shift-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Shift-Down\": \"addCursorToNextLine\",\n    \"Cmd-F3\": \"findUnder\",\n    \"Shift-Cmd-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Cmd-[\": \"fold\",\n    \"Shift-Cmd-]\": \"unfold\",\n    \"Cmd-I\": \"findIncremental\",\n    \"Shift-Cmd-I\": \"findIncrementalReverse\",\n    \"Cmd-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"macDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.macSublime);\n\n  keyMap.pcSublime = {\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-T\": \"transposeChars\",\n    \"Alt-Left\": \"goSubwordLeft\",\n    \"Alt-Right\": \"goSubwordRight\",\n    \"Ctrl-Up\": \"scrollLineUp\",\n    \"Ctrl-Down\": \"scrollLineDown\",\n    \"Ctrl-L\": \"selectLine\",\n    \"Shift-Ctrl-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Ctrl-Enter\": \"insertLineAfter\",\n    \"Shift-Ctrl-Enter\": \"insertLineBefore\",\n    \"Ctrl-D\": \"selectNextOccurrence\",\n    \"Shift-Ctrl-Space\": \"selectScope\",\n    \"Shift-Ctrl-M\": \"selectBetweenBrackets\",\n    \"Ctrl-M\": \"goToBracket\",\n    \"Shift-Ctrl-Up\": \"swapLineUp\",\n    \"Shift-Ctrl-Down\": \"swapLineDown\",\n    \"Ctrl-/\": \"toggleCommentIndented\",\n    \"Ctrl-J\": \"joinLines\",\n    \"Shift-Ctrl-D\": \"duplicateLine\",\n    \"F9\": \"sortLines\",\n    \"Shift-F9\": \"reverseSortLines\",\n    \"Ctrl-F9\": \"sortLinesInsensitive\",\n    \"Shift-Ctrl-F9\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Ctrl-F2\": \"toggleBookmark\",\n    \"Shift-Ctrl-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Ctrl-K Ctrl-D\": \"skipAndSelectNextOccurrence\",\n    \"Ctrl-K Ctrl-K\": \"delLineRight\",\n    \"Ctrl-K Ctrl-U\": \"upcaseAtCursor\",\n    \"Ctrl-K Ctrl-L\": \"downcaseAtCursor\",\n    \"Ctrl-K Ctrl-Space\": \"setSublimeMark\",\n    \"Ctrl-K Ctrl-A\": \"selectToSublimeMark\",\n    \"Ctrl-K Ctrl-W\": \"deleteToSublimeMark\",\n    \"Ctrl-K Ctrl-X\": \"swapWithSublimeMark\",\n    \"Ctrl-K Ctrl-Y\": \"sublimeYank\",\n    \"Ctrl-K Ctrl-C\": \"showInCenter\",\n    \"Ctrl-K Ctrl-G\": \"clearBookmarks\",\n    \"Ctrl-K Ctrl-Backspace\": \"delLineLeft\",\n    \"Ctrl-K Ctrl-1\": \"foldAll\",\n    \"Ctrl-K Ctrl-0\": \"unfoldAll\",\n    \"Ctrl-K Ctrl-J\": \"unfoldAll\",\n    \"Ctrl-Alt-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Alt-Down\": \"addCursorToNextLine\",\n    \"Ctrl-F3\": \"findUnder\",\n    \"Shift-Ctrl-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Ctrl-[\": \"fold\",\n    \"Shift-Ctrl-]\": \"unfold\",\n    \"Ctrl-I\": \"findIncremental\",\n    \"Shift-Ctrl-I\": \"findIncrementalReverse\",\n    \"Ctrl-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"pcDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.pcSublime);\n\n  var mac = keyMap.default == keyMap.macDefault;\n  keyMap.sublime = mac ? keyMap.macSublime : keyMap.pcSublime;\n});\n"],"names":["mod","require$$0","require$$1","require$$2","CodeMirror","cmds","Pos","findPosSubword","doc","start","dir","line","state","type","startPos","pos","e","i","next","cat","__name","moveSubword","cm","range","info","visibleBottomLine","visibleTopLine","ranges","lineRanges","from","to","extended","insertLine","above","len","newSelection","last","head","at","wordAt","end","fullWord","word","text","query","cur","found","isSelectedRange","prevAnchor","prevHead","sel","addCursorToSelection","newRanges","newAnchor","newHead","newRange","mirror","selectBetweenBrackets","opening","closing","puncType","prev","linesToMove","newSels","joined","offset","obj","anchor","actual","rangeCount","sortLines","caseSensitive","direction","toSort","selected","lines","a","b","au","bu","marks","current","j","k","modifyWordOrSelection","indices","replacements","cursors","indentUnit","cursor","toStartOfLine","column","deletePos","prevIndent","str","tmp","getTarget","findAndGoTo","forward","target","matches","primaryIndex","keyMap","mac"],"mappings":"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","x_google_ignoreList":[0]}