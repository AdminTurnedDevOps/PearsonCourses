{"version":3,"file":"search.es.js","sources":["../../../node_modules/codemirror/addon/search/search.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Define search commands. Depends on dialog.js or another\n// implementation of the openDialog method.\n\n// Replace works a little oddly -- it will do the replace on the next\n// Ctrl-G (or whatever is bound to findNext) press. You prevent a\n// replace by making sure the match is no longer selected when hitting\n// Ctrl-G.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"./searchcursor\"), require(\"../dialog/dialog\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"./searchcursor\", \"../dialog/dialog\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  // default search panel location\n  CodeMirror.defineOption(\"search\", {bottom: false});\n\n  function searchOverlay(query, caseInsensitive) {\n    if (typeof query == \"string\")\n      query = new RegExp(query.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\"), caseInsensitive ? \"gi\" : \"g\");\n    else if (!query.global)\n      query = new RegExp(query.source, query.ignoreCase ? \"gi\" : \"g\");\n\n    return {token: function(stream) {\n      query.lastIndex = stream.pos;\n      var match = query.exec(stream.string);\n      if (match && match.index == stream.pos) {\n        stream.pos += match[0].length || 1;\n        return \"searching\";\n      } else if (match) {\n        stream.pos = match.index;\n      } else {\n        stream.skipToEnd();\n      }\n    }};\n  }\n\n  function SearchState() {\n    this.posFrom = this.posTo = this.lastQuery = this.query = null;\n    this.overlay = null;\n  }\n\n  function getSearchState(cm) {\n    return cm.state.search || (cm.state.search = new SearchState());\n  }\n\n  function queryCaseInsensitive(query) {\n    return typeof query == \"string\" && query == query.toLowerCase();\n  }\n\n  function getSearchCursor(cm, query, pos) {\n    // Heuristic: if the query string is all lowercase, do a case insensitive search.\n    return cm.getSearchCursor(query, pos, {caseFold: queryCaseInsensitive(query), multiline: true});\n  }\n\n  function persistentDialog(cm, text, deflt, onEnter, onKeyDown) {\n    cm.openDialog(text, onEnter, {\n      value: deflt,\n      selectValueOnOpen: true,\n      closeOnEnter: false,\n      onClose: function() { clearSearch(cm); },\n      onKeyDown: onKeyDown,\n      bottom: cm.options.search.bottom\n    });\n  }\n\n  function dialog(cm, text, shortText, deflt, f) {\n    if (cm.openDialog) cm.openDialog(text, f, {value: deflt, selectValueOnOpen: true, bottom: cm.options.search.bottom});\n    else f(prompt(shortText, deflt));\n  }\n\n  function confirmDialog(cm, text, shortText, fs) {\n    if (cm.openConfirm) cm.openConfirm(text, fs);\n    else if (confirm(shortText)) fs[0]();\n  }\n\n  function parseString(string) {\n    return string.replace(/\\\\([nrt\\\\])/g, function(match, ch) {\n      if (ch == \"n\") return \"\\n\"\n      if (ch == \"r\") return \"\\r\"\n      if (ch == \"t\") return \"\\t\"\n      if (ch == \"\\\\\") return \"\\\\\"\n      return match\n    })\n  }\n\n  function parseQuery(query) {\n    var isRE = query.match(/^\\/(.*)\\/([a-z]*)$/);\n    if (isRE) {\n      try { query = new RegExp(isRE[1], isRE[2].indexOf(\"i\") == -1 ? \"\" : \"i\"); }\n      catch(e) {} // Not a regular expression after all, do a string search\n    } else {\n      query = parseString(query)\n    }\n    if (typeof query == \"string\" ? query == \"\" : query.test(\"\"))\n      query = /x^/;\n    return query;\n  }\n\n  function startSearch(cm, state, query) {\n    state.queryText = query;\n    state.query = parseQuery(query);\n    cm.removeOverlay(state.overlay, queryCaseInsensitive(state.query));\n    state.overlay = searchOverlay(state.query, queryCaseInsensitive(state.query));\n    cm.addOverlay(state.overlay);\n    if (cm.showMatchesOnScrollbar) {\n      if (state.annotate) { state.annotate.clear(); state.annotate = null; }\n      state.annotate = cm.showMatchesOnScrollbar(state.query, queryCaseInsensitive(state.query));\n    }\n  }\n\n  function doSearch(cm, rev, persistent, immediate) {\n    var state = getSearchState(cm);\n    if (state.query) return findNext(cm, rev);\n    var q = cm.getSelection() || state.lastQuery;\n    if (q instanceof RegExp && q.source == \"x^\") q = null\n    if (persistent && cm.openDialog) {\n      var hiding = null\n      var searchNext = function(query, event) {\n        CodeMirror.e_stop(event);\n        if (!query) return;\n        if (query != state.queryText) {\n          startSearch(cm, state, query);\n          state.posFrom = state.posTo = cm.getCursor();\n        }\n        if (hiding) hiding.style.opacity = 1\n        findNext(cm, event.shiftKey, function(_, to) {\n          var dialog\n          if (to.line < 3 && document.querySelector &&\n              (dialog = cm.display.wrapper.querySelector(\".CodeMirror-dialog\")) &&\n              dialog.getBoundingClientRect().bottom - 4 > cm.cursorCoords(to, \"window\").top)\n            (hiding = dialog).style.opacity = .4\n        })\n      };\n      persistentDialog(cm, getQueryDialog(cm), q, searchNext, function(event, query) {\n        var keyName = CodeMirror.keyName(event)\n        var extra = cm.getOption('extraKeys'), cmd = (extra && extra[keyName]) || CodeMirror.keyMap[cm.getOption(\"keyMap\")][keyName]\n        if (cmd == \"findNext\" || cmd == \"findPrev\" ||\n          cmd == \"findPersistentNext\" || cmd == \"findPersistentPrev\") {\n          CodeMirror.e_stop(event);\n          startSearch(cm, getSearchState(cm), query);\n          cm.execCommand(cmd);\n        } else if (cmd == \"find\" || cmd == \"findPersistent\") {\n          CodeMirror.e_stop(event);\n          searchNext(query, event);\n        }\n      });\n      if (immediate && q) {\n        startSearch(cm, state, q);\n        findNext(cm, rev);\n      }\n    } else {\n      dialog(cm, getQueryDialog(cm), \"Search for:\", q, function(query) {\n        if (query && !state.query) cm.operation(function() {\n          startSearch(cm, state, query);\n          state.posFrom = state.posTo = cm.getCursor();\n          findNext(cm, rev);\n        });\n      });\n    }\n  }\n\n  function findNext(cm, rev, callback) {cm.operation(function() {\n    var state = getSearchState(cm);\n    var cursor = getSearchCursor(cm, state.query, rev ? state.posFrom : state.posTo);\n    if (!cursor.find(rev)) {\n      cursor = getSearchCursor(cm, state.query, rev ? CodeMirror.Pos(cm.lastLine()) : CodeMirror.Pos(cm.firstLine(), 0));\n      if (!cursor.find(rev)) return;\n    }\n    cm.setSelection(cursor.from(), cursor.to());\n    cm.scrollIntoView({from: cursor.from(), to: cursor.to()}, 20);\n    state.posFrom = cursor.from(); state.posTo = cursor.to();\n    if (callback) callback(cursor.from(), cursor.to())\n  });}\n\n  function clearSearch(cm) {cm.operation(function() {\n    var state = getSearchState(cm);\n    state.lastQuery = state.query;\n    if (!state.query) return;\n    state.query = state.queryText = null;\n    cm.removeOverlay(state.overlay);\n    if (state.annotate) { state.annotate.clear(); state.annotate = null; }\n  });}\n\n  function el(tag, attrs) {\n    var element = tag ? document.createElement(tag) : document.createDocumentFragment();\n    for (var key in attrs) {\n      element[key] = attrs[key];\n    }\n    for (var i = 2; i < arguments.length; i++) {\n      var child = arguments[i]\n      element.appendChild(typeof child == \"string\" ? document.createTextNode(child) : child);\n    }\n    return element;\n  }\n\n  function getQueryDialog(cm)  {\n    return el(\"\", null,\n              el(\"span\", {className: \"CodeMirror-search-label\"}, cm.phrase(\"Search:\")), \" \",\n              el(\"input\", {type: \"text\", \"style\": \"width: 10em\", className: \"CodeMirror-search-field\"}), \" \",\n              el(\"span\", {style: \"color: #888\", className: \"CodeMirror-search-hint\"},\n                 cm.phrase(\"(Use /re/ syntax for regexp search)\")));\n  }\n  function getReplaceQueryDialog(cm) {\n    return el(\"\", null, \" \",\n              el(\"input\", {type: \"text\", \"style\": \"width: 10em\", className: \"CodeMirror-search-field\"}), \" \",\n              el(\"span\", {style: \"color: #888\", className: \"CodeMirror-search-hint\"},\n                 cm.phrase(\"(Use /re/ syntax for regexp search)\")));\n  }\n  function getReplacementQueryDialog(cm) {\n    return el(\"\", null,\n              el(\"span\", {className: \"CodeMirror-search-label\"}, cm.phrase(\"With:\")), \" \",\n              el(\"input\", {type: \"text\", \"style\": \"width: 10em\", className: \"CodeMirror-search-field\"}));\n  }\n  function getDoReplaceConfirm(cm) {\n    return el(\"\", null,\n              el(\"span\", {className: \"CodeMirror-search-label\"}, cm.phrase(\"Replace?\")), \" \",\n              el(\"button\", {}, cm.phrase(\"Yes\")), \" \",\n              el(\"button\", {}, cm.phrase(\"No\")), \" \",\n              el(\"button\", {}, cm.phrase(\"All\")), \" \",\n              el(\"button\", {}, cm.phrase(\"Stop\")));\n  }\n\n  function replaceAll(cm, query, text) {\n    cm.operation(function() {\n      for (var cursor = getSearchCursor(cm, query); cursor.findNext();) {\n        if (typeof query != \"string\") {\n          var match = cm.getRange(cursor.from(), cursor.to()).match(query);\n          cursor.replace(text.replace(/\\$(\\d)/g, function(_, i) {return match[i];}));\n        } else cursor.replace(text);\n      }\n    });\n  }\n\n  function replace(cm, all) {\n    if (cm.getOption(\"readOnly\")) return;\n    var query = cm.getSelection() || getSearchState(cm).lastQuery;\n    var dialogText = all ? cm.phrase(\"Replace all:\") : cm.phrase(\"Replace:\")\n    var fragment = el(\"\", null,\n                      el(\"span\", {className: \"CodeMirror-search-label\"}, dialogText),\n                      getReplaceQueryDialog(cm))\n    dialog(cm, fragment, dialogText, query, function(query) {\n      if (!query) return;\n      query = parseQuery(query);\n      dialog(cm, getReplacementQueryDialog(cm), cm.phrase(\"Replace with:\"), \"\", function(text) {\n        text = parseString(text)\n        if (all) {\n          replaceAll(cm, query, text)\n        } else {\n          clearSearch(cm);\n          var cursor = getSearchCursor(cm, query, cm.getCursor(\"from\"));\n          var advance = function() {\n            var start = cursor.from(), match;\n            if (!(match = cursor.findNext())) {\n              cursor = getSearchCursor(cm, query);\n              if (!(match = cursor.findNext()) ||\n                  (start && cursor.from().line == start.line && cursor.from().ch == start.ch)) return;\n            }\n            cm.setSelection(cursor.from(), cursor.to());\n            cm.scrollIntoView({from: cursor.from(), to: cursor.to()});\n            confirmDialog(cm, getDoReplaceConfirm(cm), cm.phrase(\"Replace?\"),\n                          [function() {doReplace(match);}, advance,\n                           function() {replaceAll(cm, query, text)}]);\n          };\n          var doReplace = function(match) {\n            cursor.replace(typeof query == \"string\" ? text :\n                           text.replace(/\\$(\\d)/g, function(_, i) {return match[i];}));\n            advance();\n          };\n          advance();\n        }\n      });\n    });\n  }\n\n  CodeMirror.commands.find = function(cm) {clearSearch(cm); doSearch(cm);};\n  CodeMirror.commands.findPersistent = function(cm) {clearSearch(cm); doSearch(cm, false, true);};\n  CodeMirror.commands.findPersistentNext = function(cm) {doSearch(cm, false, true, true);};\n  CodeMirror.commands.findPersistentPrev = function(cm) {doSearch(cm, true, true, true);};\n  CodeMirror.commands.findNext = doSearch;\n  CodeMirror.commands.findPrev = function(cm) {doSearch(cm, true);};\n  CodeMirror.commands.clearSearch = clearSearch;\n  CodeMirror.commands.replace = replace;\n  CodeMirror.commands.replaceAll = function(cm) {replace(cm, true);};\n});\n"],"names":["mod","require$$0","require$$1","require$$2","CodeMirror","searchOverlay","query","caseInsensitive","stream","match","__name","SearchState","getSearchState","cm","queryCaseInsensitive","getSearchCursor","pos","persistentDialog","text","deflt","onEnter","onKeyDown","clearSearch","dialog","shortText","f","confirmDialog","fs","parseString","string","ch","parseQuery","isRE","startSearch","state","doSearch","rev","persistent","immediate","findNext","q","hiding","searchNext","event","_","to","getQueryDialog","keyName","extra","cmd","callback","cursor","el","tag","attrs","element","key","i","child","getReplaceQueryDialog","getReplacementQueryDialog","getDoReplaceConfirm","replaceAll","replace","all","dialogText","fragment","advance","start","doReplace"],"mappings":"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","x_google_ignoreList":[0]}