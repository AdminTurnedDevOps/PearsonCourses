{"version":3,"file":"SchemaReference.cjs.js","sources":["../../codemirror-graphql/esm/utils/getTypeInfo.js","../../codemirror-graphql/esm/utils/SchemaReference.js"],"sourcesContent":["import { isCompositeType, getNullableType, getNamedType, GraphQLEnumType, GraphQLInputObjectType, GraphQLList, SchemaMetaFieldDef, TypeMetaFieldDef, TypeNameMetaFieldDef, } from 'graphql';\nimport forEachState from './forEachState';\nexport default function getTypeInfo(schema, tokenState) {\n    const info = {\n        schema,\n        type: null,\n        parentType: null,\n        inputType: null,\n        directiveDef: null,\n        fieldDef: null,\n        argDef: null,\n        argDefs: null,\n        objectFieldDefs: null,\n    };\n    forEachState(tokenState, (state) => {\n        var _a, _b;\n        switch (state.kind) {\n            case 'Query':\n            case 'ShortQuery':\n                info.type = schema.getQueryType();\n                break;\n            case 'Mutation':\n                info.type = schema.getMutationType();\n                break;\n            case 'Subscription':\n                info.type = schema.getSubscriptionType();\n                break;\n            case 'InlineFragment':\n            case 'FragmentDefinition':\n                if (state.type) {\n                    info.type = schema.getType(state.type);\n                }\n                break;\n            case 'Field':\n            case 'AliasedField':\n                info.fieldDef =\n                    info.type && state.name\n                        ? getFieldDef(schema, info.parentType, state.name)\n                        : null;\n                info.type = (_a = info.fieldDef) === null || _a === void 0 ? void 0 : _a.type;\n                break;\n            case 'SelectionSet':\n                info.parentType = info.type ? getNamedType(info.type) : null;\n                break;\n            case 'Directive':\n                info.directiveDef = state.name ? schema.getDirective(state.name) : null;\n                break;\n            case 'Arguments':\n                const parentDef = state.prevState\n                    ? state.prevState.kind === 'Field'\n                        ? info.fieldDef\n                        : state.prevState.kind === 'Directive'\n                            ? info.directiveDef\n                            : state.prevState.kind === 'AliasedField'\n                                ? state.prevState.name &&\n                                    getFieldDef(schema, info.parentType, state.prevState.name)\n                                : null\n                    : null;\n                info.argDefs = parentDef ? parentDef.args : null;\n                break;\n            case 'Argument':\n                info.argDef = null;\n                if (info.argDefs) {\n                    for (let i = 0; i < info.argDefs.length; i++) {\n                        if (info.argDefs[i].name === state.name) {\n                            info.argDef = info.argDefs[i];\n                            break;\n                        }\n                    }\n                }\n                info.inputType = (_b = info.argDef) === null || _b === void 0 ? void 0 : _b.type;\n                break;\n            case 'EnumValue':\n                const enumType = info.inputType ? getNamedType(info.inputType) : null;\n                info.enumValue =\n                    enumType instanceof GraphQLEnumType\n                        ? find(enumType.getValues(), val => val.value === state.name)\n                        : null;\n                break;\n            case 'ListValue':\n                const nullableType = info.inputType\n                    ? getNullableType(info.inputType)\n                    : null;\n                info.inputType =\n                    nullableType instanceof GraphQLList ? nullableType.ofType : null;\n                break;\n            case 'ObjectValue':\n                const objectType = info.inputType ? getNamedType(info.inputType) : null;\n                info.objectFieldDefs =\n                    objectType instanceof GraphQLInputObjectType\n                        ? objectType.getFields()\n                        : null;\n                break;\n            case 'ObjectField':\n                const objectField = state.name && info.objectFieldDefs\n                    ? info.objectFieldDefs[state.name]\n                    : null;\n                info.inputType = objectField === null || objectField === void 0 ? void 0 : objectField.type;\n                break;\n            case 'NamedType':\n                info.type = state.name ? schema.getType(state.name) : null;\n                break;\n        }\n    });\n    return info;\n}\nfunction getFieldDef(schema, type, fieldName) {\n    if (fieldName === SchemaMetaFieldDef.name && schema.getQueryType() === type) {\n        return SchemaMetaFieldDef;\n    }\n    if (fieldName === TypeMetaFieldDef.name && schema.getQueryType() === type) {\n        return TypeMetaFieldDef;\n    }\n    if (fieldName === TypeNameMetaFieldDef.name && isCompositeType(type)) {\n        return TypeNameMetaFieldDef;\n    }\n    if (type && type.getFields) {\n        return type.getFields()[fieldName];\n    }\n}\nfunction find(array, predicate) {\n    for (let i = 0; i < array.length; i++) {\n        if (predicate(array[i])) {\n            return array[i];\n        }\n    }\n}\n//# sourceMappingURL=getTypeInfo.js.map","import { getNamedType } from 'graphql';\nexport function getFieldReference(typeInfo) {\n    return {\n        kind: 'Field',\n        schema: typeInfo.schema,\n        field: typeInfo.fieldDef,\n        type: isMetaField(typeInfo.fieldDef) ? null : typeInfo.parentType,\n    };\n}\nexport function getDirectiveReference(typeInfo) {\n    return {\n        kind: 'Directive',\n        schema: typeInfo.schema,\n        directive: typeInfo.directiveDef,\n    };\n}\nexport function getArgumentReference(typeInfo) {\n    return typeInfo.directiveDef\n        ? {\n            kind: 'Argument',\n            schema: typeInfo.schema,\n            argument: typeInfo.argDef,\n            directive: typeInfo.directiveDef,\n        }\n        : {\n            kind: 'Argument',\n            schema: typeInfo.schema,\n            argument: typeInfo.argDef,\n            field: typeInfo.fieldDef,\n            type: isMetaField(typeInfo.fieldDef) ? null : typeInfo.parentType,\n        };\n}\nexport function getEnumValueReference(typeInfo) {\n    return {\n        kind: 'EnumValue',\n        value: typeInfo.enumValue || undefined,\n        type: typeInfo.inputType\n            ? getNamedType(typeInfo.inputType)\n            : undefined,\n    };\n}\nexport function getTypeReference(typeInfo, type) {\n    return {\n        kind: 'Type',\n        schema: typeInfo.schema,\n        type: type || typeInfo.type,\n    };\n}\nfunction isMetaField(fieldDef) {\n    return fieldDef.name.slice(0, 2) === '__';\n}\n//# sourceMappingURL=SchemaReference.js.map"],"names":["getTypeInfo","schema","tokenState","info","forEachState","state","_a","_b","getFieldDef","getNamedType","parentDef","i","enumType","GraphQLEnumType","find","val","nullableType","getNullableType","GraphQLList","objectType","GraphQLInputObjectType","objectField","__name","type","fieldName","SchemaMetaFieldDef","TypeMetaFieldDef","TypeNameMetaFieldDef","isCompositeType","array","predicate","getFieldReference","typeInfo","isMetaField","getDirectiveReference","getArgumentReference","getEnumValueReference","getTypeReference","fieldDef"],"mappings":"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"}