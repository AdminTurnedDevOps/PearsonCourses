"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"validate",{enumerable:!0,get:function(){return validate}});let validate=function validate24(data,{instancePath="",parentData,parentDataProperty,rootData=data}={}){let vErrors=null,errors=0;if(data&&"object"==typeof data&&!Array.isArray(data)){if(void 0===data.verbs){let err0={instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty:"verbs"}};null===vErrors?vErrors=[err0]:vErrors.push(err0),errors++}if(void 0===data.nonResourceURLs){let err1={instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty:"nonResourceURLs"}};null===vErrors?vErrors=[err1]:vErrors.push(err1),errors++}void 0===data.nonResourceURLs||validate21(data.nonResourceURLs,{instancePath:instancePath+"/nonResourceURLs",parentData:data,parentDataProperty:"nonResourceURLs",rootData})||(errors=(vErrors=null===vErrors?validate21.errors:vErrors.concat(validate21.errors)).length),void 0===data.verbs||validate21(data.verbs,{instancePath:instancePath+"/verbs",parentData:data,parentDataProperty:"verbs",rootData})||(errors=(vErrors=null===vErrors?validate21.errors:vErrors.concat(validate21.errors)).length)}else{let err2={instancePath,schemaPath:"#/type",keyword:"type",params:{type:"object"}};null===vErrors?vErrors=[err2]:vErrors.push(err2),errors++}return validate24.errors=vErrors,0===errors};function validate22(data,{instancePath="",parentData,parentDataProperty,rootData=data}={}){let vErrors=null,errors=0;if("string"!=typeof data){let err0={instancePath,schemaPath:"#/type",keyword:"type",params:{type:"string"}};null===vErrors?vErrors=[err0]:vErrors.push(err0),errors++}return validate22.errors=vErrors,0===errors}function validate21(data,{instancePath="",parentData,parentDataProperty,rootData=data}={}){let vErrors=null,errors=0;if(Array.isArray(data)){let len0=data.length;for(let i0=0;i0<len0;i0++)validate22(data[i0],{instancePath:instancePath+"/"+i0,parentData:data,parentDataProperty:i0,rootData})||(errors=(vErrors=null===vErrors?validate22.errors:vErrors.concat(validate22.errors)).length)}else{let err0={instancePath,schemaPath:"#/type",keyword:"type",params:{type:"array"}};null===vErrors?vErrors=[err0]:vErrors.push(err0),errors++}return validate21.errors=vErrors,0===errors}