import{formats}from"@kubernetes-models/validate";export const validate=function validate21(data,{instancePath="",parentData,parentDataProperty,rootData=data}={}){let vErrors=null,errors=0;if(data&&"object"==typeof data&&!Array.isArray(data))void 0===data.defaultMode||validate22(data.defaultMode,{instancePath:instancePath+"/defaultMode",parentData:data,parentDataProperty:"defaultMode",rootData})||(errors=(vErrors=null===vErrors?validate22.errors:vErrors.concat(validate22.errors)).length),void 0===data.sources||validate24(data.sources,{instancePath:instancePath+"/sources",parentData:data,parentDataProperty:"sources",rootData})||(errors=(vErrors=null===vErrors?validate24.errors:vErrors.concat(validate24.errors)).length);else{let err0={instancePath,schemaPath:"#/type",keyword:"type",params:{type:"object"}};null===vErrors?vErrors=[err0]:vErrors.push(err0),errors++}return validate21.errors=vErrors,0===errors};let formats0=formats.int32;function validate22(data,{instancePath="",parentData,parentDataProperty,rootData=data}={}){let vErrors=null,errors=0;if(!("number"==typeof data&&!(data%1)&&!isNaN(data)&&isFinite(data))&&null!==data){let err0={instancePath,schemaPath:"#/type",keyword:"type",params:{type:"integer"}};null===vErrors?vErrors=[err0]:vErrors.push(err0),errors++}if("number"==typeof data&&isFinite(data)&&!formats0.validate(data)){let err1={instancePath,schemaPath:"#/format",keyword:"format",params:{format:"int32"}};null===vErrors?vErrors=[err1]:vErrors.push(err1),errors++}return validate22.errors=vErrors,0===errors}import{validate as validate26}from"./IoK8sApiCoreV1VolumeProjection.mjs";function validate25(data,{instancePath="",parentData,parentDataProperty,rootData=data}={}){let vErrors=null,errors=0;return validate26(data,{instancePath,parentData,parentDataProperty,rootData})||(errors=(vErrors=null===vErrors?validate26.errors:vErrors.concat(validate26.errors)).length),validate25.errors=vErrors,0===errors}function validate24(data,{instancePath="",parentData,parentDataProperty,rootData=data}={}){let vErrors=null,errors=0;if(!Array.isArray(data)&&null!==data){let err0={instancePath,schemaPath:"#/type",keyword:"type",params:{type:"array"}};null===vErrors?vErrors=[err0]:vErrors.push(err0),errors++}if(Array.isArray(data)){let len0=data.length;for(let i0=0;i0<len0;i0++)validate25(data[i0],{instancePath:instancePath+"/"+i0,parentData:data,parentDataProperty:i0,rootData})||(errors=(vErrors=null===vErrors?validate25.errors:vErrors.concat(validate25.errors)).length)}return validate24.errors=vErrors,0===errors}