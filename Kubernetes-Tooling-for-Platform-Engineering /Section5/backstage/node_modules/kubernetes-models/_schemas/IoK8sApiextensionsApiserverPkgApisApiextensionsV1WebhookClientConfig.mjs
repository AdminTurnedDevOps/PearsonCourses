import{formats}from"@kubernetes-models/validate";export const validate=function validate21(data,{instancePath="",parentData,parentDataProperty,rootData=data}={}){let vErrors=null,errors=0;if(data&&"object"==typeof data&&!Array.isArray(data))void 0===data.caBundle||validate22(data.caBundle,{instancePath:instancePath+"/caBundle",parentData:data,parentDataProperty:"caBundle",rootData})||(errors=(vErrors=null===vErrors?validate22.errors:vErrors.concat(validate22.errors)).length),void 0===data.service||validate24(data.service,{instancePath:instancePath+"/service",parentData:data,parentDataProperty:"service",rootData})||(errors=(vErrors=null===vErrors?validate24.errors:vErrors.concat(validate24.errors)).length),void 0===data.url||validate28(data.url,{instancePath:instancePath+"/url",parentData:data,parentDataProperty:"url",rootData})||(errors=(vErrors=null===vErrors?validate28.errors:vErrors.concat(validate28.errors)).length);else{let err0={instancePath,schemaPath:"#/type",keyword:"type",params:{type:"object"}};null===vErrors?vErrors=[err0]:vErrors.push(err0),errors++}return validate21.errors=vErrors,0===errors};let formats0=formats.byte;function validate22(data,{instancePath="",parentData,parentDataProperty,rootData=data}={}){let vErrors=null,errors=0;if("string"!=typeof data&&null!==data){let err0={instancePath,schemaPath:"#/type",keyword:"type",params:{type:"string"}};null===vErrors?vErrors=[err0]:vErrors.push(err0),errors++}if("string"==typeof data&&!formats0.validate(data)){let err1={instancePath,schemaPath:"#/format",keyword:"format",params:{format:"byte"}};null===vErrors?vErrors=[err1]:vErrors.push(err1),errors++}return validate22.errors=vErrors,0===errors}import{validate as validate25}from"./IoK8sApiextensionsApiserverPkgApisApiextensionsV1ServiceReference.mjs";function validate24(data,{instancePath="",parentData,parentDataProperty,rootData=data}={}){let vErrors=null,errors=0;return null===data||validate25(data,{instancePath,parentData,parentDataProperty,rootData})||(errors=(vErrors=null===vErrors?validate25.errors:vErrors.concat(validate25.errors)).length),validate24.errors=vErrors,0===errors}function validate28(data,{instancePath="",parentData,parentDataProperty,rootData=data}={}){let vErrors=null,errors=0;if("string"!=typeof data&&null!==data){let err0={instancePath,schemaPath:"#/type",keyword:"type",params:{type:"string"}};null===vErrors?vErrors=[err0]:vErrors.push(err0),errors++}return validate28.errors=vErrors,0===errors}