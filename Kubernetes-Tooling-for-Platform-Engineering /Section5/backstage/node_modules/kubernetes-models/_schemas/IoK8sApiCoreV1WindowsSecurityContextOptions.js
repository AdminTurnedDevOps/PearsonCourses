"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"validate",{enumerable:!0,get:function(){return validate}});let validate=function validate22(data,{instancePath="",parentData,parentDataProperty,rootData=data}={}){let vErrors=null,errors=0;if(data&&"object"==typeof data&&!Array.isArray(data))void 0===data.gmsaCredentialSpec||validate21(data.gmsaCredentialSpec,{instancePath:instancePath+"/gmsaCredentialSpec",parentData:data,parentDataProperty:"gmsaCredentialSpec",rootData})||(errors=(vErrors=null===vErrors?validate21.errors:vErrors.concat(validate21.errors)).length),void 0===data.gmsaCredentialSpecName||validate21(data.gmsaCredentialSpecName,{instancePath:instancePath+"/gmsaCredentialSpecName",parentData:data,parentDataProperty:"gmsaCredentialSpecName",rootData})||(errors=(vErrors=null===vErrors?validate21.errors:vErrors.concat(validate21.errors)).length),void 0===data.hostProcess||validate25(data.hostProcess,{instancePath:instancePath+"/hostProcess",parentData:data,parentDataProperty:"hostProcess",rootData})||(errors=(vErrors=null===vErrors?validate25.errors:vErrors.concat(validate25.errors)).length),void 0===data.runAsUserName||validate21(data.runAsUserName,{instancePath:instancePath+"/runAsUserName",parentData:data,parentDataProperty:"runAsUserName",rootData})||(errors=(vErrors=null===vErrors?validate21.errors:vErrors.concat(validate21.errors)).length);else{let err0={instancePath,schemaPath:"#/type",keyword:"type",params:{type:"object"}};null===vErrors?vErrors=[err0]:vErrors.push(err0),errors++}return validate22.errors=vErrors,0===errors};function validate21(data,{instancePath="",parentData,parentDataProperty,rootData=data}={}){let vErrors=null,errors=0;if("string"!=typeof data&&null!==data){let err0={instancePath,schemaPath:"#/type",keyword:"type",params:{type:"string"}};null===vErrors?vErrors=[err0]:vErrors.push(err0),errors++}return validate21.errors=vErrors,0===errors}function validate25(data,{instancePath="",parentData,parentDataProperty,rootData=data}={}){let vErrors=null,errors=0;if("boolean"!=typeof data&&null!==data){let err0={instancePath,schemaPath:"#/type",keyword:"type",params:{type:"boolean"}};null===vErrors?vErrors=[err0]:vErrors.push(err0),errors++}return validate25.errors=vErrors,0===errors}