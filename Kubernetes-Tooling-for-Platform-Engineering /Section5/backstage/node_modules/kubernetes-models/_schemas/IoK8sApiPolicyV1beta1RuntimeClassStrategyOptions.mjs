export const validate=function validate21(data,{instancePath="",parentData,parentDataProperty,rootData=data}={}){let vErrors=null,errors=0;if(data&&"object"==typeof data&&!Array.isArray(data)){if(void 0===data.allowedRuntimeClassNames){let err0={instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty:"allowedRuntimeClassNames"}};null===vErrors?vErrors=[err0]:vErrors.push(err0),errors++}void 0===data.allowedRuntimeClassNames||validate22(data.allowedRuntimeClassNames,{instancePath:instancePath+"/allowedRuntimeClassNames",parentData:data,parentDataProperty:"allowedRuntimeClassNames",rootData})||(errors=(vErrors=null===vErrors?validate22.errors:vErrors.concat(validate22.errors)).length),void 0===data.defaultRuntimeClassName||validate26(data.defaultRuntimeClassName,{instancePath:instancePath+"/defaultRuntimeClassName",parentData:data,parentDataProperty:"defaultRuntimeClassName",rootData})||(errors=(vErrors=null===vErrors?validate26.errors:vErrors.concat(validate26.errors)).length)}else{let err1={instancePath,schemaPath:"#/type",keyword:"type",params:{type:"object"}};null===vErrors?vErrors=[err1]:vErrors.push(err1),errors++}return validate21.errors=vErrors,0===errors};function validate23(data,{instancePath="",parentData,parentDataProperty,rootData=data}={}){let vErrors=null,errors=0;if("string"!=typeof data){let err0={instancePath,schemaPath:"#/type",keyword:"type",params:{type:"string"}};null===vErrors?vErrors=[err0]:vErrors.push(err0),errors++}return validate23.errors=vErrors,0===errors}function validate22(data,{instancePath="",parentData,parentDataProperty,rootData=data}={}){let vErrors=null,errors=0;if(Array.isArray(data)){let len0=data.length;for(let i0=0;i0<len0;i0++)validate23(data[i0],{instancePath:instancePath+"/"+i0,parentData:data,parentDataProperty:i0,rootData})||(errors=(vErrors=null===vErrors?validate23.errors:vErrors.concat(validate23.errors)).length)}else{let err0={instancePath,schemaPath:"#/type",keyword:"type",params:{type:"array"}};null===vErrors?vErrors=[err0]:vErrors.push(err0),errors++}return validate22.errors=vErrors,0===errors}function validate26(data,{instancePath="",parentData,parentDataProperty,rootData=data}={}){let vErrors=null,errors=0;if("string"!=typeof data&&null!==data){let err0={instancePath,schemaPath:"#/type",keyword:"type",params:{type:"string"}};null===vErrors?vErrors=[err0]:vErrors.push(err0),errors++}return validate26.errors=vErrors,0===errors}