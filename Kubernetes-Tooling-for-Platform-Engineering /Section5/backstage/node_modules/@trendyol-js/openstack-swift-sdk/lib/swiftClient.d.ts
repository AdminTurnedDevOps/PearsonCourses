/// <reference types="node" />
import { SwiftClientConfiguration } from "./swiftClientConfiguration";
import { ContainerMetaResponse, DownloadResponse, ListObjectResponse, NotFound, ObjectMetaResponse, UploadOptions, UploadResponse } from "./types";
import { Readable as ReadableStream } from "stream";
export declare class SwiftClient {
    private configuration;
    private authService;
    private readonly client;
    constructor(configuration: SwiftClientConfiguration);
    private buildHeaders;
    download(container: string, path: string): Promise<NotFound | DownloadResponse>;
    private buildFullPath;
    getContainerMetadata(container: string): Promise<NotFound | ContainerMetaResponse>;
    getMetadata(container: string, path: string): Promise<NotFound | ObjectMetaResponse>;
    list(container: string, prefix: string, limit: number, after?: string): Promise<ListObjectResponse[]>;
    upload(container: string, path: string, stream: ReadableStream, options?: UploadOptions): Promise<UploadResponse>;
    copy(container: string, path: string, destinationContainer: string, destinationPath: string): Promise<boolean>;
    delete(container: string, path: string): Promise<boolean>;
    private convertHeaderObjectToArray;
}
