import _ = require("lodash");
import { MaybePromise } from "./type-utils";
export declare function filter<T>(array: T[], test: (t: T) => MaybePromise<boolean>): Promise<T[]>;
export declare function objectAllPromise<V>(obj: _.Dictionary<MaybePromise<V>>): Promise<_.Dictionary<V>>;
export type Deferred<T> = Promise<T> & {
    resolve(value: T): void;
    reject(e: Error): void;
};
export declare function getDeferred<T>(): Deferred<T>;
//# sourceMappingURL=promise.d.ts.map